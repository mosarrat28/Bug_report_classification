TIM_Id,Subject,Severity,Description,Initiation_Date
ProjectA - TIM - 2115,Build 5.3: Unitialized Variables,3,Filename: sts_df.c Function: TSdf_Undervolt_Condition Line # : 2693 Variables buv_state_a and buv_state_b may not be properly initialized via the if/else if conditional statements. An else clause should be added to ensure variable initializations.,3/25/07
ProjectA - TIM - 2114,Build 5.3 FSW: Typecast Mismatch in Memory Deallocation,3,"File: inflateData.c Function: huft_free Line #: 474 The statement free((char *)p) is an incorrect memory deallocation for the huft struct variable p. Depending on compiler and system memory recovery, this could result in memory issues or reduced performance.",3/20/07
ProjectA - TIM - 2113,Build 5.3 FSW: Parameter Type Mismatch,3,"File: ProjectAmain.c Function: inflateTable Line: 703 The FlexeLint message: “Symbol 'inflateData(unsigned long *, unsigned char *, unsigned long *)' has arg. type conflict (arg. no. 2 -- ptrs to incompatible types) with line 703, file ./main/ProjectAmain.c” describes a parameter type mismatch in the following function call: ""if( inflateData ( eepromPtr,(u_dword *)destPtr, &tblSize) )"". The function call's unsigned double word pointer typecast does not match the expected prototype's unsigned character pointer. Depending on compiler, this could lead to pointer errors.",3/19/07
ProjectA - TIM - 2112,Build 5.3 FSW: Unchecked Return Status,3,"File: acprocesscommands.c Function: AC_GenerateSMResponse Line: 1416 The u_word variable SB_ReturnStatus is assigned a value, but not checked for an error / nominal return status. If an error code is returned, this module will not respond to the off-nominal condition.",3/19/07
ProjectA - TIM - 2111,Build 5.3 FSW: Typecast Mismatch in Memory Deallocation,3,"File: inflateData.c Function: huft_free Line #: 474 The statement free((char *)p) is an incorrect memory deallocation for the huft struct variable p. Depending on compiler and system memory recovery, this could result in memory issues or reduced performance.",3/18/07
ProjectA - TIM - 2110,"Uninitialized variable ""Status"" in acnavigate.c",3,"In the function ac_CalculateSunFrame, the return value Status is not set until the error cases at lines 751 and 780. When the error condition is encountered the value STATUS_ERROR (0) is assigned to Status. Since Status is a local variable it will contain an undefined (possibly random) value until this error condition occurs, when Status is set to STATUS_ERROR. In subsequent processing the return value is only tested against STATUS_ERROR, thus as long as the initial value happens to be non-zero the function will perform as expected. If the value at the address of Status happens to be zero then the function will incorrectly report failure.",10/12/06
ProjectA - TIM - 2109,L3-SFS-925 no traceability links from L4,3,"According to the project DOORS database snapshot provided to the IV&V team, L3-SFS-925 has no incoming links; however, the requirement has specific FSW implications. Referenced Requirements [L2-FPR-39] The FP system design shall preclude the collision of overlapping fault responses and shall be free of deadlocks. Definition: A deadlock is the condition where two processes cannot proceed because they both simultaneously require the exclusive use of shared resources held by one another. Child of L2-FPR-29: [L3-SFS-925] The Spacecraft FP responses shall be configured to use the system design such that no deadlock occurs (e.g. aborting VML commanding, command timing to dedicated components, etc.) and preclude the collisions of overlapping FP responses.",6/26/06
ProjectA - TIM - 2108,L3-SFS-919 incomplete traceability links from L4,3,"According to the project DOORS database snapshot provided to the IV&V team, L3-SFS-919 only has links from the L4 SuROM SRS. Since this requirement is levying functionality on the entire FP system, the L4 OBC, ACS, and UPL requirements need to respond to L3-SFS-919. Therefore, L3-SFS-919 is not satisfied by the currently linked requirements. Referenced Requirements: [L3-SFS-919] The Spacecraft FP shall be designed to autonomously recognize sets of symptoms stemming from any single failure or fault. Children of L3-SFS-919: [L4-SROSU-17] Flight Software shall trap the processor interrupts and make an Exception Log entry: [L4-SROSU-19] Machine Check Interrupt [L4-SROSU-20] Data Storage Interrupt [L4-SROSU-21] Instruction Storage Interrupt [L4-SROSU-23] Alignment Interrupt [L4-SROSU-28] On RESET, the Flight Software shall examine the Sanity Codes in SuROM memory. If the Sanity Codes in SRAM do not match the hard-coded pattern in SuROM, it is assumed that the OBC has lost power. In that event the exception log shall be initialized. [L4-SROSU-29] Flight Software shall determine whether a processor mode transition was due to a Command, POWER_ON or External Hardware Reset command. [L4-SROSU-30] Flight Software shall store RAD6000 processor exception data in a log. [L4-SROSU-31] The Flight Software exception log shall fill each entry until it reaches the last entry (23); all subsequent entries are written in the same location. [L4-SROSU-32] If sufficient RAD6000 and LIO processing resources are operable, restart operations shall progress to completion in SuROM Diagnostic (Monitor) Mode or Normal Mode. [L4-SROSU-33] Unless physically unavoidable, errors detected during startup processes shall not cause the restart processes to terminate before reaching their commanded termination location. [L4-SROSU-34] Machine error interrupt services shall leave the processor in a known repeatable state. No service routine will be designed to skip command execution.",6/26/06
ProjectA - TIM - 2107,L3-SFS-1028 no traceability links from L4,3,"According to the project DOORS database snapshot provided to the IV&V team, L3-SFS-1028 has no incoming links; however, the requirement has specific FSW implications. Referenced Requirement: [L3-SFS-1028] Spacecraft supplied critical temperature sensor inputs to software thermal control shall be actively redundant. Definition: A critical temperature sensor is defined as one which is required to keep some spacecraft device within its thermal operational limits (where no thermal functional or hardware redundancy exists)",6/26/06
ProjectA - TIM - 2104,L3-SFS-904 and L3-SFS-974 no traceability links from L4,3,"According to the project DOORS database snapshot provided to the IV&V team, neither L3-SFS-904 nor L3-SFS-974 has an incoming link, yet both requirements seem to have flight software implications. Referenced Requirements: [L3-SFS-904] No single fault in the Flight System shall preclude use of and entry to Safe Mode from any other mission mode. [L3-SFS-974] The Spacecraft FSW shall be designed to accommodate processor resets during the mission-critical event of launch and solar array deployment.",6/26/06
ProjectA - TIM - 2102,L3-SFS-887 incomplete traceability to the L4 requirements,3,"According to the project DOORS database snapshot provided to the IV&V team, the only incoming link for L2-FPR-105 is from L3-SFS-887. L3-SFS-887 has incoming links from L4-ACS-204 and L4-ACS-232, and an internal link from L3-SFS-1008, which is Engine-specific. Although, L3-SFS-887 implies applicability to all “flight system processors”, its incoming links are specific to ACS and Engine. Therefore, L3-SFS-887 is missing links from the L4 OBC, UPL, and possibly ACE requirements. Consequently, the traceability for L2-FPR-105 from L2-to-L3-to-L4 is incomplete as well. Referenced Requirements: [L2-FPR-105] No single failure of a science instrument shall cause permanent loss of data of the other science instrument data. Child of L2-FPR-105: [L3-SFS-887] The Flight System shall have Fault Containment Regions (FCR) around each of the following flight system sections: [HW] CEU, ACE, ACE peripherals (reaction wheel, gyro, thruster, sun sensor, SADE/SADA) , SDST, PDU/HVEA, EngCntrl, EngCntrl peripherals (PPU, thruster, gimbal assembly, XFA), and Instruments (FC, VIR, GRaND) - [SW] flight system processors. Related to L3-SFS-887: [L3-SFS-2580] A FCR is a region (component or specific zone) of the Flight System defined for the purpose of fault analysis to ensure redundancy and cross strapping are applied in a way that allow the SFT requirements to be met. Child of L3-SFS-887: [L4-ACS-232] A failure of an ACS component shall not propagate to any other component or subsystem on the spacecraft. [L4-ACS-204] Fault detection and correction (FDC) logic shall be implemented in the ACS software for the star trackers, the IRU, the RWAs, the CSS, the SADs / POTs, and the RCS thrusters. A violation of any of these component FDC tests, if enabled, shall result in a Telemetry Monitor (TMON) flag being set to TRUE, which will signal the Fault Protection (FP) system to initiate the appropriate corrective action. [L3-SFS-1008] Spacecraft Engine failures shall not propagate to other Spacecraft subsystems. Child of L3-SFS-1008: NONE",6/26/06
ProjectA - TIM - 2101,L3-SFS-2725 and L3-SFS-886 incomplete traceability to L4 requirements,3,"According to the project DOORS database snapshot provided to the IV&V team, the only incoming link for L2-FPR-106 is from L3-SFS-2725, which only has an incoming link from L3-SFS-886. Although L3-SFS-886 has flight software implications, there are no incoming links from the L4 requirements documents. Since L3-SFS-2725 is more specific than its child, L3-SFS-886, the traceability for both requirements is incomplete. Referenced Requirements: [L2-FPR-106] To meet minimum mission requirements, no single failure of the Flight System shall cause the loss of more than one science instrument. Child of L2-FPR-106: [L3-SFS-2725] No single failure of the Flight System shall cause the loss of more than one Science instrument. Child of L3-SFS-2725: [L3-SFS-886] The Flight System subsystems shall be single fault tolerant.",6/26/06
ProjectA - TIM - 2099,L2-PRD-712 inconsistent with L3-SFS-1985,3,"According to the project DOORS database snapshot provided to the IV&V team, L2-PRD-712 has a link from L3-SFS-1985. L2-PRD-712 requires the functionality ""to estimate the inertial attitude of the spacecraft +Z axis, with a pointing knowledge error of better than 0.250 mrad per axis; whereas, L3-SFS-1985 specifies the capability to ""estimate…the inertial attitude of either imaging camera's mounting reference, with a real-time pointing knowledge error of better than 0.9 mrad (0.052 deg) per axis."" It appears the parent and child requirements are inconsistent. However, possibly these two requirements have different contexts, since the child is written specific to the imaging camera; whereas, the parent is applicable to the entire spacecraft +Z axis. If L2-PRD-712 is not applicable to L3-SFS-1985, then the trace is invalid. Referenced Requirements: [L2-PRD-712] Allocation: The Spacecraft System shall be able to estimate the inertial attitude of the spacecraft +Z axis, with a pointing knowledge error of better than 0.250 mrad per axis (3 sigma, zero-to-peak). Child of L2-PRD-712: [L3-SFS-1985] The Spacecraft System shall be able to estimate, record, and telemeter the inertial attitude of either imaging camera's mounting reference, with a real-time pointing knowledge error of better than 0.9 mrad (0.052 deg) per axis (3 sigma, zero-to-peak). Note: The knowledge error is defined as the difference between the estimated and actual pointing.",6/26/06
ProjectA - TIM - 2098,Build 5.1 OBC Code: Symbol 'tbl_ptr' and 'sm_cond_commit_crc' not initialized,3,"Based upon IV&V verification, variable 'tbl_ptr' and 'sm_cond_commit_crc' appears to have been used before they were initialized. The variables should be initialized to some known state before being used. FlexeLint Message # 530: Symbol 'tbl_ptr' (line 733) not initialized Symbol 'sm_cond_commit_crc' (line 1709) not initialized FlexeLint Message # 530 Description: An auto variable was used before it was initialized. Source Code References: File - sm_tbl.c Line # 985: sm_table_cntrl.checksum = SM_compute_dword_checksum ( tbl_ptr, sm_table_cntrl.wsize >> 1 ) ; Line # 1920: totDesc.crc = sm_cond_commit_crc;",12/21/05
ProjectA - TIM - 2097,Build 5.1 OBC Code: loss of sign in assigning an integer to an unsigned long,3,"Based upon IV&V verification it appears as though there is a possible loss of sign when assigning an integer to an unsigned long. ""bufSize"" is an unsigned double word. ""size"" is an integer. ""size"" is assigned the value of ""bufSize"" minus one, which is fine. If ""bufSize"" holds the lowest possible value of zero, then ""size"" would then be assigned the value of negative one. Based upon the following if conditional, ""bufSize"" can then be reassigned the value of ""size"". If in fact ""size"" holds the value of negative one, then the sign would be lost when assigning the value to ""bufSize"". FlexeLint Message #732: Loss of sign (assignment) (int to unsigned long) FlexeLint Message #732 Description: An assignment (or implied assignment, see Context) is made from a signed quantity to an unsigned quantity. Also, it could not be determined that the signed quantity had no sign. For example: u = n; /* Info 732 */ u = 4; /* OK */ where u is unsigned and n is not, warrants a message only for the first assignment, even though the constant 4 is nominally a signed int. Make sure that this is not an error (that the assigned value is never negative) and then use a cast (to unsigned) to remove the message. sm_tbl.c (Lines 2578 - 2589): /* Decrement size */ size -= bufSize; /* Determine the next bufSize */ if( size < AS_EEPROM_PAGE_SIZE ) { bufSize = size; } else { bufSize = AS_EEPROM_PAGE_SIZE; }",12/21/05
ProjectA - TIM - 2096,OBC Build 5.1 Code: Unusual pointer cast,3,"In sm_main.c there is an unusual pointer cast on line 744 in the call to SM_tbl_load. line 744: if ( do_load == TRUE ) { SM_tbl_load ( ( sm_tbl_load_fmt * ) sm_cmd_pkt ) ; } The variable sm_cmd_pkt is defined as type sm_cmd_pkt_fmt. where sm_cmd_pkt_fmt is defined as: typedef struct { seds_packet_header_type hdr ; cmd_sec_header_type sec_hdr ; u_word data_load [ SM_MAX_PKT_WSIZE ] ; } sm_cmd_pkt_fmt ; Function SM_tbl_load accepts a paramter of type sm_tbl_load_fmt, which is defined as: typedef struct { seds_packet_header_type hdr ; cmd_sec_header_type sec_hdr ; u_word offset ; u_word num_words ; u_word spare ; u_word load_data [ SM_MAX_DATA_WSIZE ] ; } sm_tbl_load_fmt ; This type of pointer casting with the 'C' language is legal, but is unusual. It is difficult to assess via manual code inspection, whether this unusual casting will result in a software error. This particular issue was flagged by the FlexeLint tool. There are similar unusual pointer casts on lines 307, 311, 315, 319, 323, 338, and 508 of sm_main.c.",12/21/05
ProjectA - TIM - 2095,OBC Build 5.1 Code: Unusual pointer cast,3,"In scstate.c there is an unusual pointer cast on line 604. line 604: cmd_ptr = ( sc_rts_command_header_type *)&rts_buffers[rts_num][cmd_offset]; The variable cmd_ptr is defined as: sc_rts_command_header_type *cmd_ptr; where sc_rts_command_header_type is defined as: typedef struct { sc_rel_time_tag_type time_tag; seds_packet_header_type header; cmd_sec_header_type sec_hdr; } sc_rts_command_header_type; Variable rts_buffers is defined as: u_word rts_buffers[ SC_NUMBER_OF_RTS ][ SC_RTS_BUFF_SIZE ] = { ... This type of pointer casting with the 'C' language is legal, but is unusual. It is difficult to assess via manual code inspection. This particular issue was flagged by the FlexeLint tool.",12/21/05
ProjectA - TIM - 2094,OBC Build 5.1 Code: Unusual pointer cast,3,"In ts_tlm.c there is an unusual pointer cast on lines 933 and 937. if ( ( ( packet_header_type * ) &( tlm_packet_Ptr->pri_header ) )->sec_hdr_flag) { line 933: mon_point_val = TSt_mon_stripper ( ( packet_offset_type * ) tlm_packet_Ptr->data); } else { line 937: mon_point_val = TSt_mon_stripper ( ( packet_offset_type * ) ( ( ts_tlm_packet_type_no_sec_hdr * )( tlm_packet_Ptr ) )->data); } The variable mon_point_val is defined as: mon_point_val_type mon_point_val; where mon_point_val_type is a dword. Variable tlm_packet_Ptr is defined to be of type ts_tlm_packet_type: typedef struct { seds_packet_header_type pri_header; time_code_sec_hdr_type sec_header; u_word data [MAX_PACKET_DATA_LEN]; } ts_tlm_packet_type; ts_tlm_packet_type_no_sec_hdr is defined as: typedef struct { seds_packet_header_type pri_header; u_word data [MAX_PACKET_DATA_LEN]; } ts_tlm_packet_type_no_sec_hdr; packet_offset_type is defined as: typedef u_byte packet_offset_type; This type of pointer casting with the 'C' language is legal, but is unusual. It is difficult to assess via manual code inspection. This particular issue was flagged by the FlexeLint tool.",12/21/05
ProjectA - TIM - 2093,UPL Build 5.1 Code: 'WORDS_PER_MONITOR' macro usage inconsistent with description,3,"The file tspk.h line 62 defines MAX_MONITOR_POINTS as ‘48’. Line 68 defines WORDS_PER_MONITOR as ((MAX_MONITOR_POINTS+15)/16). The comment on line 67 indicates the purpose of WORDS_PER_MONITOR is to “Add 1 when MAX_MONITOR_POINTS is not evenly divisible by 16.” Since the value assigned to MAX_MONITOR POINTS is evenly divisible by 16, this suggests the UPLC FSW should never use WORDS_PER_MONITOR. However, the WORDS_PER_MONITOR macro is used by the files ts_cmd.c and ts_tlm.c in several cases. Assuming the comment on line 67 is being interpreted correctly, the multiple usages of WORDS_PER_MONITOR seem contrary to the intended purpose of this macro. Referenced Source Code: File - tspkt.h: 57: /* Defines the number of telemetry monitors. 58: 59: This define is used to size the support types and structures for the 60: Telemetry and Statistics Task. */ 61: 62: #define MAX_MONITOR_POINTS 48 63: 64: /* ts_monitors_fmt is a bit array type used throughout the TS code. 65: It is sized one bit for each monitor point. 66: 67: Add 1 when MAX_MONITOR_POINTS is not evenly divisible by 16 */ 68: #define WORDS_PER_MONITOR ((MAX_MONITOR_POINTS+15)/16)",12/19/05
ProjectA - TIM - 2092,OBC Build 5.1 Code: possible data overrun for function 'memcpy',3,"The file vm_memory_adapt.c defines the function ‘memcpy_d32_safe’ on lines 600-637, which is a modified version of the standard library function ‘memcpy’. Line 402 of the file vm_if_cmd.c contains a call to ‘memcpy_d32_safe’ in which the source data type is bigger than the target data type. This could potentially cause a data overrun. In addition, the standard library function ‘memcpy’ is redefined in terms of the function ‘memcpy_d32_safe’ by several source code files. However, line 634 within the definition of ‘memcpy_d32_safe’ contains a call to ‘memcpy’. Build 5.1 FlexeLint Message: Apparent data overrun for function 'memcpy(void *, const void *, unsigned int)', argument 3 (size=264) exceeds argument 1 (size=256) [Reference: file vm_if_cmd.c: line 402] FlexeLint Message ID #419 Referenced Source Code: File - ../vm/src/vm_memory_adapt.c: 600: void *memcpy_d32_safe(void *dest_ptr, const void *source_ptr, size_t len) 601: { 602: boolean dest_within_dram; 603: boolean source_within_dram; 604: 605: unsigned int size; 606: unsigned int remaining_bytes; 607: unsigned int max_shiftable_size; 608: 609: uint8_t *dest_d8_ptr; 610: const uint8_t *source_d8_ptr; 611: 612: dest_within_dram = within_dram(dest_ptr); 613: source_within_dram = within_dram(source_ptr); 614: 615: if (dest_within_dram || source_within_dram) 616: { 617: source_d8_ptr = source_ptr; 618: dest_d8_ptr = dest_ptr; 619: remaining_bytes = len; 620: 621: while (remaining_bytes > 0) 622: { 623: max_shiftable_size = COPY_BUFFER_SIZE - CHUNK_SIZE; 624: size = min(remaining_bytes, max_shiftable_size); 625: 626: copy_d32_safe(size, source_d8_ptr, dest_d8_ptr); 627: 628: remaining_bytes = remaining_bytes - size; 629: source_d8_ptr = source_d8_ptr + size; 630: dest_d8_ptr = dest_d8_ptr + size; 631: } 632: } 633: else 634: memcpy(dest_ptr, source_ptr, len); 635: 636: return dest_ptr; 637: } File - ../vm/src/vm_if_cmd.c: 381: SBret_status vm_send_seqcmd_tlm(vm_cmd_pkt_fmt *ccsds_cmd) : 401: /* Fill data section with the CCSDS CMD sent to S/C by VMLFC */ 402: memcpy_d32_safe(&vm_tlm_send.data_seq_load, ccsds_cmd, sizeof(vm_cmd_pkt_fmt));",12/19/05
ProjectA - TIM - 2090,OBC Build 5.1 Code: variable 'vm_10Hz_frame_delay’ tested against out-of-range value,3,"The file vm_main.c line 254 tests the variable ‘vm_10Hz_frame_delay’, defined as unsigned short (16 bits), against the constant ‘VM_18HRS_COMP’, defined as ‘68400’ (17 bits). Build 5.1 FlexeLint Message: Constant out of range for operator '>=' FlexeLint Message ID #650 Referenced Source Code: File - ../vm/src/vm_main.c: 135: #define VM_18HRS_COMP 68400 /* Roll-over number - 18 Hours (Secs) */ : 153: u_word vm_10Hz_frame_delay; /* Dynamic cntr */ : 253: /* Reset Major Frame Rate Cntr after 18 Hrs */ 254: if( vm_10Hz_frame_delay >= VM_18HRS_COMP) { 255: vm_10Hz_frame_delay = 0; 256: } File - ../packets/fdstypes.h 22: typedef unsigned short u_word; /* 16 bits unsigned */",12/19/05
ProjectA - TIM - 2087,OBC Build 5.1 Code: function 'check_to_report_tag' missing return value,3,"The file vm_if_cmd.c defines the function ‘check_to_report_tag’ on lines 296-375. This function specifies a return value of type ‘vm_cmd_opcode_type’. However, if the condition on line 310 is satisfied, the function exits without a return value on line 311. This becomes a problem on line 183 within the same file, when the function ‘cmd_send’ calls ‘vm_cmd_opcode_type’ and assigns the undefined return value to another variable. Build 5.1 FlexeLint Message: function 'check_to_report_tag(int, const unsigned char *)' should return a value (see line 296) FlexeLint Message ID #533 Referenced Source Code: File - ../vm/src/vm_if_cmd.c: 151: int cmd_send(int source, const uint8_t *cmd_ptr) : 182: /* Check to report TAGs */ 183: tag_opcode = check_to_report_tag(source, cmd_ptr); 184: /* Send S/C SEQ Command to SW Bus which will */ 185: /* route it to the specified task */ 186: /* The SWBus will provide a dispatch status only */ 187: /* Yet, send only valid commands */ 188: if((vm_extract_ccsds_part.hdr.packet_id & CMD_VALID) 189: && (tag_opcode == NOT_A_TAG)) : 296: vm_cmd_opcode_type check_to_report_tag(int cmd_source_id, const uint8_t *cmd_ptr) 297: { 298: 299: const uint8_t *parm_ptr; 300: vm_cmd_opcode_type opcode; 301: char function_name[VM_NUM_SYMBOL_CHARS]; 302: char return_value[VM_NUM_CMD_RETURN_STRING_CHARS]; 303: Event_Message_ID evr_info; 304: u_dword evr_id; 305: 306: 307: memset(function_name, 0, VM_NUM_SYMBOL_CHARS); 308: memcpy_d32_safe(&opcode, cmd_ptr, sizeof(opcode)); 309: 310: if (cmd_source_id < 0 || cmd_source_id >= VM_NUM_ENGINES) 311: return;",12/19/05
ProjectA - TIM - 2085,Build 5.1.1 OBC Code: Version Conflict of eepromImage.bld Referenced by Build 5.1 SMD,4,"The project has produced OBC Software Media Descriptions (SMDs) Revisions C, F, G, K, and L to support the OBC Builds 3.0, 4.0, 5.0, 5.1, and 5.1 respectively, which represents all builds delivered to the NASA IV&V Facility. All of these SMDs contain a Section 6.2.1: Build Procedure for RAD6000. Step 2 of this procedure requires the use of the “build” file, ‘eepromImage.bld’, which serves as the parent “make-like” file for building the RAD6000 version of the OBC FSW, by defining a set of global preprocessor directives and specifying the module-level .bld files responsible for building the individual OBC FSW modules. Revision C of the SMD indicates version 1.8 of the file eepromImage.bld is applicable to the Build 3.0 OBC code, which has evolved to version 1.12 in the Revision K of the SMD applicable to the Build 5.1 OBC code. Between the Build 3.0 and 5.1 releases of the OBC code, the substantive changes to eepromImage.bld have been limited to the VM-related module. Revision L of the SMD applicable to the Build 5.1.1 OBC code cites version 1.12 of eepromImage.bld as being a changed version for this file; however, the Revision K SMD applicable to the Build 5.1 code also cites version 1.12 as the latest version of this file. Therefore, either Revision K or L of the OBC SMD is inaccurately reflecting the applicable version of eepromImage.bld. This problem could be dismissed as a typographical error, except the version of the eepromImage.bld file provided with the Build 5.1.1 code is significantly different from the version provided with the Build 5.1 code. The Build 5.1.1. version of eepromImage.bld has been reduced to only three lines, none of which contain the global preprocessor directive definitions or the module-level .bld files responsible for building the individual OBC FSW modules. Referenced Files: File – Build 3.0 eepromImage.bld: #!build default: object_file :c_option=slashcomment :ppc_cputype=rsc :c_mode=ansi :target=/project/ProjectAsvr/green/vxwppc.bld :sourcedirs=/export/home/ProjectA/wind/radbuild22/target/h :defines=CPU=RSC :defines=_GREEN_TOOL :defines=DAVES_TEST :defines=_VXWORKS_PPC_ :defines=_OV4_ :defines=HS_TS_TOOL_SET :defines=GOODS_EXCLUDE_DOPPLER=1 :defines=REDUCED_DRAG_TABLES=1 :defines=GOODS_PRAGMA_PACK4=1 :defines=GOODS_PROP_STATE_ONLY :defines=OV4_RAD6K :defines=LIO_BLD :defines=_EMBED_ :ada_compiler.name=cxvxppc :c_compiler.name=ccomppc :linker.args=@VM_Relocate.lnk ../s1/s1.bld subproject ../s2/s2.bld subproject ../s3/s3.bld subproject ../tg/tg.bld subproject ../lio/lio.bld subproject ../ac/ac.bld subproject ../au/au.bld subproject ../at/at.bld subproject ../an/an.bld subproject ../ds/ds.bld subproject ../xb/xb_edu.bld subproject ../di/di.bld subproject ../main/main.bld subproject ../sb/sb.bld subproject ../sc/sc.bld subproject ../sm/sm.bld subproject ../tc/tc.bld subproject ../to/to.bld subproject ../tp/tp.bld subproject ../hs/hs.bld subproject ../ts/ts.bld subproject ../ms/ms.bld subproject ../cs/cs.bld subproject #../vm/vm.bld # subproject File – Build 5.1 eepromImage.bld: #!build default: object_file :c_option=slashcomment :ppc_cputype=rsc :c_mode=ansi :target=/project/ProjectAsvr/green/vxwppc.bld :sourcedirs=/export/home/ProjectA/wind/radbuild50/target/h :defines=CPU=RSC :defines=_GREEN_TOOL :defines=DAVES_TEST :defines=_VXWORKS_PPC_ :defines=_OV4_ :defines=HS_TS_TOOL_SET :defines=GOODS_EXCLUDE_DOPPLER=1 :defines=REDUCED_DRAG_TABLES=1 :defines=GOODS_PRAGMA_PACK4=1 :defines=GOODS_PROP_STATE_ONLY :defines=OV4_RAD6K :defines=LIO_BLD :defines=_EMBED_ :defines=VM_PRESENT :ada_compiler.name=cxvxppc :c_compiler.name=ccomppc ../s1/s1.bld subproject ../s2/s2.bld subproject ../s3/s3.bld subproject ../tg/tg.bld subproject ../lio/lio.bld subproject ../ac/ac.bld subproject ../au/au.bld subproject ../at/at.bld subproject ../an/an.bld subproject ../ds/ds.bld subproject ../xb/xb_edu.bld subproject ../di/di.bld subproject ../main/main.bld subproject ../sb/sb.bld subproject ../sc/sc.bld subproject ../sm/sm.bld subproject ../tc/tc.bld subproject ../to/to.bld subproject ../tp/tp.bld subproject ../hs/hs.bld subproject ../ts/ts.bld subproject ../ms/ms.bld subproject ../cs/cs.bld subproject ../vm/vm.bld subproject File – Build 5.1.1 eepromImage.bld: #!build default: program",12/19/05
ProjectA - TIM - 2084,Build 5.1 OBC Code: Possible use of null pointer,4,"Based upon IV&V verification, it appears as though a null pointer is being used within an assignment statement. This issue exists at line 356 and at line 357 within file ta_main.c. ""rt_frame_pointer"" is set equal to NULL. Within the switch for (TA_state), if ""TA_state"" equals ""TA_OUTPUT_RVCDU_ONLY"" then the following code is processed where ""rt_frame_pointer"" is still null and is used within an assignment statement: #ifdef OV4_RAD6K // // Re-init the function_code and packet_length because they may have been // altered by the logic in the TA_OUTPUT_RVCDU_AND_PVCDU state. // rt_frame_pointer->sxCmd.sec_hdr.function_code = eHSS_CMD_REQ; rt_frame_pointer->sxCmd.hdr.packet_length = TA_S2_RVCDU_PKT_LEN; FlexeLint Message # 613: Possible use of null pointer 'rt_frame_pointer' in left argument to operator '->' [Reference: file tamain.c: line 319] FlexeLint Message # 613 Description: From information gleaned from earlier statements, it is possible that a null pointer (a pointer whose value is 0) can be used in a context where null pointers are inappropriate. Such contexts include: Unary *, pointer increment (++) or decrement(--), addition of pointer to numeric, and subtraction of two pointers. In the case of binary operators, one of the words 'left' or 'right' is used to designate which operand is null. Symbol identifies the pointer variable that may be NULL. See also messages 413 and 794. Source Code References: File - ta_main.c Line # 319: rt_frame_pointer = NULL; output_pvcdu = FALSE; // // State Machine processing while Process == TRUE // while (Process == TRUE) { switch (TA_state) { case TA_OUTPUT_RVCDU: /*D100-010*/ rt_frame_pointer = get_real_time_vcdu(); if (rt_frame_pointer != NULL) { fill_in_vcdu_count(rt_frame_pointer); TA_state = TA_OUTPUT_RVCDU_ONLY; } else TA_state = TA_EXIT; break; case TA_OUTPUT_PVCDU: /*D100-010*/ output_pvcdu = ds_GetPVCDU(&addr_word_cnt, TA_TASK_ID); if (output_pvcdu) /*D100-010*/ TA_state = TA_OUTPUT_PVCDU_ONLY; /*D100-010*/ else /*D100-010*/ TA_state = TA_OUTPUT_RVCDU; /*D100-010*/ break; case TA_OUTPUT_RVCDU_ONLY: #ifdef OV4_RAD6K // // Re-init the function_code and packet_length because they may have been // altered by the logic in the TA_OUTPUT_RVCDU_AND_PVCDU state. // rt_frame_pointer->sxCmd.sec_hdr.function_code = eHSS_CMD_REQ; rt_frame_pointer->sxCmd.hdr.packet_length = TA_S2_RVCDU_PKT_LEN;",12/9/05
ProjectA - TIM - 2083,Requirement XB007 Is Not Verified By Script xb_write_test.scr.,3,"L4-SROBC-57 / XB007 - The OBC C&DH software shall accept and execute a XB_WRITE command which transfers the specified single data message within the command packet (up to 32 words) from the 1553 Bus Controller to the specified Remote Terminal and Subaddress. Issue: The 10-12-05 DOORS data base shows that XB007 is tested by Procedure S912-TP4925 (an RTM procedure not made available to IV&V) using xb_write_test.scr. This script is found in the B5.1 script file and the script header indicates that XB007 is linked. It appears there are several problems with this test: (1) it does not transfer ""up to 32 words"" and (2) there is no verification that an RT could accept the transfer because a false RT and subaddress was specified (this test just shows that a message was sent by the BC). Unless this script is modified for ProjectA under the RTM procedure, it does not fully test the requirement.",12/2/05
ProjectA - TIM - 2082,Requirement XB006 Is Not Verified By Script xb_select_bus_test.scr.,3,"L4-SROBC-56 / XB006 - The OBC C&DH software shall provide a command to select the 1553 preferred bus side (A or B) for a single RT. The 10-12-05 DOORS data base shows that XB006 is tested by Procedure S912-TP4925 (an RTM procedure not made available to IV&V) using xb_select_bus_test.scr. This script is found in the B5.1 script file and the script header indicates that XB006 is linked. The ProjectA FSW CDR (May 26-28 2004) shows that there are nine 1553 RTs for the ProjectA spacecraft. The script only shows that commands are sent to four RTs. Unless this script is modified for ProjectA under the RTM procedure, it does not fully test the requirement.",12/2/05
ProjectA - TIM - 2081,HSS1 Requirements S1002 and S1003 Are Not Linked To The Assigned Test Script,3,"The 10-12-05 DOORS data base shows that S1002 (L4-SROBC-66) and S1003 (L4-SROBC-67) are linked to script s1_critical_vcdu_test.scr. The associated test procedure is S912-TP4925 (an RTM procedure not made available to IV&V). This test script is found in the B5.1 data drop and does not show that these two requirements are linked. Unless this script is modified for RTM testing, S1002 and S1003 will not be verified by the test program.",11/30/05
ProjectA - TIM - 2080,Build 5.1 OBC Code: Symbol not referenced,4,"Based upon IV&V verification, The static function ""HS_FDC_G3_Handler"" at line 1778 of file hs_main.c was not referenced in the module after having been declared and defined within hs_main.c. FlexeLint Message # 528: Symbol 'packet_buffer' (line 629, file xbm_out.c) not referenced FlexeLint Message # 528 Description: The named static variable or static function was not referenced in the module after having been declared. Source Code References: File - hs_main.c: 1778: static void HS_FDC_G3_Handler ( int cmdSet )",11/30/05
ProjectA - TIM - 2079,Uplink HLP Requirements Should be Verified by Test rather than Analysis as specified in DOORS DB,2,"The 10-12-05 DOORS DB contains many Uplink requirements with are listed as verification by analysis and contain a note in the ""test script"" column that states ""Delete: Not a Software Requirement."" A list of these requirements is presented in the attachment to this TIM. The ""test script"" column annotation is confusing because the ""Type"" column states ""Requirement"" which accords with IV&V's assessment of these items. These items are related to the implementation of HLP commands and IV&V notes that the FSW User Manual has many references to HLP command processing in the Uplink firmware. Since most of the requirements in question are related to receiving, translating, validating, and routing commands via the Uplink interface to Hardware Logic Pulses, the IV&V team believes that Test is the most appropriate verification method, or possibly Inspection if the hardware response can not be easily verified. Furthermore it is noted that some of these items are tied to ""parent"" L4 requirements such as the relationship between L4-SRUP-56 and the subsequent ""children"" L4-SRUP-57, L4-SRUP-58, and L4-SRUP-59. In this example L4-SRUP-56 is verified by test and the latter cite analysis as the verification method. L4-SRUP-56 - The Uplink FSW shall write the HLP command field from the following Standard PCC commands to the HLP hardware if it is non-zero: L4-SRUP-57 - PCC HLP Function: ACE LVPS Power Control A-On / B-Off L4-SRUP-58 - PCC HLP Function: ACE HLP Code Enable L4-SRUP-59 - PCC HLP Function: ACE Safe Hold On",11/22/05
ProjectA - TIM - 2078,Build 5.1 OBC Code: Confusing Combination of Operators; Possible Algorithm Implementation Error,5,"Issue: Possible algorithm implementation error, which the IV&V team could not confirm or refute for the cascade filter in aucfilter.c. Filter State Translation logic was added to this function since build 3.0, lines 63 - 73. FlexeLint Message #68: Operator '/' followed by operator '*' is confusing. Use parentheses. FlexeLint Message #64 Description: Some combinations of operators seem to be confusing. For example: a = b / c * d; To reduce confusion we recommend using parentheses to make the association of these operators explicit. For example: a = (b / c) * d; Code analysis: line 68 U = U / ( 1 + pFilter->A[i][0] + pFilter->A[i][1] ) * ( 1 + pFilter->B[i][0] + pFilter->B[i][1] ); As the lint message indicates this code is confusing and the user may believe that the two parenthesized quantities are in the denominator; however, due to the precedence of operators the second quantity is in the numerator.",11/17/05
ProjectA - TIM - 2077,Uplink Build 5.1 Code: Unusual pointer cast,3,"In uplflog.c there is an unusual pointer cast on line 232: line 232: pkt_size = ( ((UL_FAULT_LOG_ENTRY *)new_event)->hdr.packet_length + 1 )/2 + sizeof(seds_packet_header_type); The variables pkt_size and new_event are defined as type u_word. The data type seds_packet_header_type is defined as: typedef struct { u_word packet_id; /* packet id */ bit_field seq_flags:2; /* packet sequence flags */ bit_field seq_count:14; /* packet sequence count */ u_word packet_length; /* packet data bytes -1 */ } seds_packet_header_type; The data type UL_FAULT_LOG_ENTRY is defined as: typedef struct { seds_packet_header_type hdr; time_code_sec_hdr_type event_time; u_word pad; Event_Message_ID event_id; u_word params[16]; } UL_FAULT_LOG_ENTRY; This type of pointer casting with the 'C' language is legal, but is unusual. It is difficult to assess via manual code inspection. This particular issue was flagged by the FlexeLint tool.",11/16/05
ProjectA - TIM - 2076,Uplink Build 5.1 Code: Unusual pointer cast,3,"In ul2ul.c there is an unusual pointer cast on line 149: line 149: pktPtr = (seds_packet_header_type *)&rxFrameBuffer[rxRcvdBuffer][CMD_PTR]; The variable pktPtr is defined as type seds_packet_header_type. where seds_packet_header_type is defined as: typedef struct { u_word packet_id; /* packet id */ bit_field seq_flags:2; /* packet sequence flags */ bit_field seq_count:14; /* packet sequence count */ u_word packet_length; /* packet data bytes -1 */ } seds_packet_header_type; The array rxFrameBuffer is defined as: u_word rxFrameBuffer[2][(UU_FRAME_LEN/2)]; This type of pointer casting with the 'C' language is legal, but is unusual. It is difficult to assess via manual code inspection. This particular issue was flagged by the FlexeLint tool. There are similar unusual pointer casts on lines 200, 274, and 379 of ul2ul.c.",11/16/05
ProjectA - TIM - 2075,Uplink Build 5.1 Code: Too few initializers for table,4,In tmon_rts.c there are eight (8) entries in the rts_buffers table that appear to have too few initializers. The entries in the table are as follows: line 240 (RTS number 7) line 272 (RTS number 8) line 304 (RTS number 9) line 336 (RTS number 10) line 368 (RTS number 11) line 400 (RTS number 12) line 432 (RTS number 13) line 703 (RTS number 21) The rts_buffers table is defined as: u_word rts_buffers[ SC_NUMBER_OF_RTS ][ SC_RTS_BUFF_SIZE ],11/15/05
ProjectA - TIM - 2074,Uplink Build 5.1 Code: Unusual pointer cast,3,"In sm_main.c there is an unusual pointer cast on line 302 in the call to SM_tbl_load. line 302: if ( do_load == TRUE ) { SM_tbl_load ( ( sm_tbl_load_fmt * ) sm_cmd_pkt ) ; } The variable sm_cmd_pkt is defined as type sm_cmd_pkt_fmt. where sm_cmd_pkt_fmt is defined as: typedef struct { seds_packet_header_type hdr ; cmd_sec_header_type sec_hdr ; u_word data_load [ SM_MAX_PKT_WSIZE ] ; } sm_cmd_pkt_fmt ; Function SM_tbl_load accepts a paramter of type sm_tbl_load_fmt which is defined as: typedef struct { seds_packet_header_type hdr ; cmd_sec_header_type sec_hdr ; u_word offset ; u_word num_words ; u_word spare ; u_word load_data [ SM_MAX_DATA_WSIZE ] ; } sm_tbl_load_fmt ; This type of pointer casting with the 'C' language is legal, but is unusual. It is difficult to assess via manual code inspection. This particular issue was flagged by the FlexeLint tool. There are similar unusual pointer casts on lines 307, 311, 315, 319, 323, 338, and 508 of sm_main.c.",11/15/05
ProjectA - TIM - 2073,Uplink Build 5.1 Code: Unusual pointer cast,3,"In scstate.c there is an unusual pointer cast on line 423. line 423: cmd_ptr = ( sc_rts_command_header_type *)&rts_buffer_0[cmd_offset]; The variable cmd_ptr is defined as: sc_rts_command_header_type *cmd_ptr; where sc_rts_command_header_type is defined as: typedef struct { sc_rel_time_tag_type time_tag; seds_packet_header_type header; cmd_sec_header_type sec_hdr; } sc_rts_command_header_type; Variable rts_buffer_0 is defined as: u_word rts_buffer_0[SC_RTS_BUFF_SIZE]; This type of pointer casting with the 'C' language is legal, but is unusual. It is difficult to assess via manual code inspection. This particular issue was flagged by the FlexeLint tool.",11/15/05
ProjectA - TIM - 2071,Uplink Build 5.1 Code: Unusual pointer cast,3,"In ts_tlm.c there is an unusual pointer cast on line 880. line 880: if ( whichPkt == OBC ) mon_point_val = TSt_mon_stripper ( ( packet_offset_type * ) ( ( ts_tlm_packet_type_no_sec_hdr * )( tlm_packet_Ptr ) )->data); The variable mon_point_val is defined as: mon_point_val_type mon_point_val; where mon_point_val_type is a dword. Variable tlm_packet_Ptr is defined to be of type ts_tlm_packet_type: typedef struct { seds_packet_header_type pri_header; time_code_sec_hdr_type sec_header; u_word data [MAX_PACKET_DATA_LEN]; } ts_tlm_packet_type; ts_tlm_packet_type_no_sec_hdr is defined as: typedef struct { seds_packet_header_type pri_header; u_word data [MAX_PACKET_DATA_LEN]; } ts_tlm_packet_type_no_sec_hdr; packet_offset_type is defined as: typedef u_word packet_offset_type; This type of pointer casting with the 'C' language is legal, but is unusual. It is difficult to assess via manual code inspection. This particular issue was flagged by the FlexeLint tool.",11/14/05
ProjectA - TIM - 2070,Uplink Build 5.1 Code: Switch statement has no default case,3,"In file ts_tlm.c function TSt_exec_scs, the switch statement below does not provide a default case statement: switch ( curr_threshold ) { ...",11/14/05
ProjectA - TIM - 2069,Uplink Build 5.1 Code: Switch statement has no default case,3,"In file ts_tlm.c function TSt_mon_stripper, the switch statement below does not provide a default case statement: switch ( ts_curr_monitor_Ptr->data_size ) { ...",11/14/05
ProjectA - TIM - 2067,Uplink Build 5.1 Code: Unusual pointer cast,3,"In ts_task.c there are two unusual pointer casts. They can be found on lines 127 and 135. line 127: packet_Ptr = (ts_tlm_packet_type *) statusBuffer; The variable statusBuffer is defined as: u_word statusBuffer[ UU_STATUS_LEN / 2]; line 135: packet_Ptr = (ts_tlm_packet_type *) TSStatBuffer; The variable TSStatBuffer is defined as: u_word TSStatBuffer [ TSSTAT_BUFF_LEN ]; The variable packet_Ptr is defined as: ts_tlm_packet_type *packet_Ptr; typedef struct { seds_packet_header_type pri_header; time_code_sec_hdr_type sec_header; u_word data [MAX_PACKET_DATA_LEN]; } ts_tlm_packet_type; This type of pointer casting with the 'C' language is legal, but is unusual. It is difficult to assess via manual code inspection. This particular issue was flagged by the FlexeLint tool.",11/14/05
ProjectA - TIM - 2066,Uplink Build 5.1 Code: Redundant macros,4,"In file ts_limst.c, the following macros are redundantly defined elsewhere: Redundant macro 'CONTINUE' defined identically at line 62, file ts_lim.h Redundant macro 'NO_CONTINUE' defined identically at line 63, file ts_lim.h Redundant macro 'THRESH_ACT' defined identically at line 57, file ts_lim.h Redundant macro 'THRESH_NOT_ACT' defined identically at line 58, file ts_lim.h Redundant macro 'OPER_EQ' defined identically at line 69, file ts_lim.h Redundant macro 'OPER_NE' defined identically at line 68, file ts_lim.h Redundant macro 'OPER_LE' defined identically at line 71, file ts_lim.h Redundant macro 'OPER_GE' defined identically at line 70, file ts_lim.h Redundant macro 'OPER_G' defined identically at line 66, file ts_lim.h Redundant macro 'OPER_L' defined identically at line 67, file ts_lim.h Redundant macro 'NOMASK' defined identically at line 60, file ts_lim.h Redundant macro 'SCS_ACTIVE' defined identically at line 73, file ts_lim.h Redundant macro 'SCS_INACTIVE' defined identically at line 74, file ts_lim.h Redundant macro 'NOPARM' defined identically at line 55, file ts_lim.h Redundant macro 'NOFUNC' defined identically at line 54, file ts_lim.h Redundant macro 'DATA_BYTE' defined identically at line 45, file ts_lim.h Redundant macro 'DATA_U_BYTE' defined identically at line 46, file ts_lim.h Redundant macro 'DATA_WORD' defined identically at line 47, file ts_lim.h Redundant macro 'DATA_U_WORD' defined identically at line 48, file ts_lim.h Redundant macro 'DATA_DWORD' defined identically at line 49, file ts_lim.h",11/14/05
ProjectA - TIM - 2065,Uplink Build 5.1 Code: Possible Out-of-Bounds Pointer,2,"In file ts_cmd.c on lines 190 and 272, function TSc_monitor_reset, there are possible uses of an out of bounds pointer (cntrl_byte) because of pointer arithmetic: line 190 and 272: cntrl_byte += sizeof(threshold_data_type); The pointer cntrl_byte is defined to be of type thresh_ctrl_byte_type shown below: typedef struct { bit_field threshold_active : 1; bit_field continue_flag : 1; bit_field operator : 3; bit_field stored_comm_seq_active : 1; bit_field reserved : 2; } thresh_ctrl_byte_type; The threshold_data_type is shown below: typedef struct { thresh_ctrl_byte_type thresh_ctrl_byte; bit_field stored_comm_seq_id : 8 ; mon_point_val_type threshold_limit; /* dword */ u_dword failure_minimum; } threshold_data_type; It appears that cntrl_byte on lines 190 and 272 could be 10 bytes beyond the end of data based on definitions above.",11/14/05
ProjectA - TIM - 2063,OBC Build 5.1 Code: Converting enumeration to integer,4,"In file s1task.c in function 's1_init', lines 409 and 414, the variables 'rc' and 's1Fd' is compared with enumerated values. The variables 'rc' and s1Fd' are defined to be of type int. While it is technically okay to compare an enumerated type with an integer (since that is what enumerated types are), it would make sense logically to declare 'rc' and 's1Fd' as enumerated type TerrorCODE.",11/11/05
ProjectA - TIM - 2062,OBC Build 5.1 Code: Unusual pointer cast,3,"In S1task.c there are two unusual pointer casts. They can be found on lines 220 and 274. line 220: packet_header = (sx_hss_cmd_fmt *)packet_buffer; The variable packet_buffer is defined as: static u_word packet_buffer[SX_MAX_PKT_WSIZE]; line 274: s1_command_exec((sx_hss_cmd_fmt *) &event_buff); The variable event_buff is declared to be of S1_EventBufferType as it is shown below: typedef struct { seds_packet_header_type sx_hdr; cmd_sec_header_type sec_hdr; sx_cmd_args hss_cmd; u_word response_sid; u_word wordCount; seds_packet_header_type evntbuf_pkthdr; u_byte packet_data[EVENT_BUFFER_BSIZE]; } S1_EventBufferType; This type of pointer casting with the 'C' language is legal, but is unusual. It is difficult to assess via manual code inspection. This particular issue was flagged by the FlexeLint tool.",11/11/05
ProjectA - TIM - 2058,"Build 5.1 OBC Code: Variable ""pUTgtInr"" may not have been initialized",2,"Issue: Based upon IV&V verification, the variable ""pUTgtInr"" (line #574) will be used before it is assigned a value in the function ""AC_ChangeTarget"" of the file ""accommandattitude.c"" under these conditions: if ( pTgt->InrTgtSelect <= RaDecTarget )and if (pAcGlobal->ModeRequested != TargetInertial) or if (pTgt->InrTgtSelect == NadirTarget) and (pAcGlobal->ModeRequested != AsteroidNadirPointing) or if (pTgt->InrTgtSelect == TrackingTarget) and (pAcGlobal->ModeRequested != AsteroidTgtTracking) or if (pTgt->InrTgtSelect == DvEngineTarget) and (pAcGlobal->ModeRequested != DeltaVEngine) or if (pTgt->InrTgtSelect == DvRcsTarget) and (pAcGlobal->ModeRequested != DeltaVRCS) pUTgtInr declaration: 347 vector_type uTgtBdyOld, *pUTgtInrOld, uTgtBdy, uTgtInr, *pUTgtInr, uSunBdy; pUTgtInr is used in this assignment. 574 pAcGlobal->Control.pInrTgtUnitV = pUTgtInr; FlexeLint Message #644: Variable 'pUTgtInr' (defined line 347) may not have been initialized FlexeLint Message #644 Description: An auto variable was not necessarily assigned A value before use.",11/11/05
ProjectA - TIM - 2057,OBC Build 5.1 Code: Unusual pointer cast,3,"In S1cmd.c there are a number of unusual pointer casts. They can be found on lines 514, 526, 532, 533, 541, 564, and 565. An example from line 514 is as follows: switch( ((sx_ioctl_fmt*)sxCommand)->function ) { ... This type of pointer casting with the 'C' language is legal, but is unusual. It is difficult to assess via manual code inspection. This particular issue was flagged by the FlexeLint tool.",11/11/05
ProjectA - TIM - 2055,OBC Build 5.1 Code: Structure redeclared differently,4,"The typedef 'sx_qhssDatBuf_fmt' is declared in S1.H, S2.H and S3.H as shown below. From S1: typedef struct { qddBuffer sxBufCtl; u_word cmd[2]; /* Command Words Cmd/Word Count */ qddDMA dataDMA; /* Mode for data x-fer */ int dataContentWords; /* Content Words for data */ u_word *pDataContent; /* Pointer to data */ u_word data[S1_VCDU_WSIZE]; /* Allocate max transfer size */ } sx_qhssDatBuf_fmt; From S2: typedef struct { qddBuffer sxBufCtl; u_word cmd[2]; /* Command Words Cmd/Word Count */ qddDMA dataDMA; /* Mode for data x-fer */ int dataContentWords; /* Content Words for data */ u_word *pDataContent; /* Pointer to data */ u_word data[S2_VCDU_WSIZE]; /* Allocate max transfer size */ } sx_qhssDatBuf_fmt; From S3: typedef struct { qddBuffer sxBufCtl; u_word cmd[2]; /* Command Words Cmd/Word Count */ qddDMA dataDMA; /* Mode for data x-fer */ int dataContentWords; /* Content Words for data */ u_word *pDataContent; /* Pointer to data */ u_word data[S3_DATA_WSIZE]; /* Allocate max transfer size */ } sx_qhssDatBuf_fmt; The only difference is the size of the 'data' element.",11/10/05
ProjectA - TIM - 2053,OBC Build 5.1 Code: Switch statement has no default case,3,"In file ts_tlm.c function TSt_mon_stripper, the switch statement below does not provide a default case statement: switch ( ts_curr_monitor_Ptr->data_size ) { ...",11/10/05
ProjectA - TIM - 2052,OBC Build 5.1 Code: Possible loss of information at initialization,3,"In file ts_limst.c, it appears that entries 164 and 165 of ts_monitor_table contain values where there is a potential for loss of information. The table ts_monitor_table is defined to be of type monitor_record_type which is defined as follows: typedef struct { u_byte monitor_id; u_byte monitor_active; u_byte data_size; u_byte derived_func_active; u_word stream_id; u_word packet_offset; u_dword bit_mask; u_byte derived_func_offset; u_byte der_func_param_list [MAX_DER_FUNC_PARAM]; threshold_data_type threshold_data [MAX_THRESHOLDS]; u_word event_message_max; } monitor_record_type; The potential problem is with the value assigned for the failure minimum in one of the threshold_data array entries. The definition of threshold_data_type is provided below. typedef struct { thresh_ctrl_byte_type thresh_ctrl_byte; u_byte stored_comm_seq_id; mon_point_val_type threshold_limit; u_word failure_minimum; } threshold_data_type; A value of 86400 is provided for the failure_minimum on lines 3343 and 3364 for entries 164 and 165 respectively. The number 86400 is represented by the binary value 10101000110000000 which is 17 bits in length. The failure_minimum is defined to be of type u_word which is 16 bits in length and cannot represent a number as large as 86400.",11/10/05
ProjectA - TIM - 2051,OBC Build 5.1 Code: Redundant macros,4,"In file ts_limst.c, the following macros are redundantly defined elsewhere: Redundant macro 'CONTINUE' defined identically at line 125, file ts_lim.h Redundant macro 'NO_CONTINUE' defined identically at line 126, file ts_lim.h Redundant macro 'THRESH_ACT' defined identically at line 120, file ts_lim.h Redundant macro 'THRESH_NOT_ACT' defined identically at line 121, file ts_lim.h Redundant macro 'OPER_EQ' defined identically at line 132, file ts_lim.h Redundant macro 'OPER_NE' defined identically at line 131, file ts_lim.h Redundant macro 'OPER_LE' defined identically at line 134, file ts_lim.h Redundant macro 'OPER_GE' defined identically at line 133, file ts_lim.h Redundant macro 'OPER_G' defined identically at line 129, file ts_lim.h Redundant macro 'OPER_L' defined identically at line 130, file ts_lim.h Redundant macro 'NOMASK' defined identically at line 123, file ts_lim.h Redundant macro 'SCS_ACTIVE' defined identically at line 136, file ts_lim.h Redundant macro 'SCS_INACTIVE' defined identically at line 137, file ts_lim.h Redundant macro 'NOPARM' defined identically at line 118, file ts_lim.h Redundant macro 'NOFUNC' defined identically at line 117, file ts_lim.h Redundant macro 'DATA_BYTE' defined identically at line 110, file ts_lim.h Redundant macro 'DATA_U_BYTE' defined identically at line 111, file ts_lim.h Redundant macro 'DATA_WORD' defined identically at line 112, file ts_lim.h Redundant macro 'DATA_U_WORD' defined identically at line 113, file ts_lim.h Redundant macro 'DATA_DWORD' defined identically at line 114, file ts_lim.h Redundant macro 'MAX_MONITOR_POINTS' defined identically at line 68, file tspkt.h",11/10/05
ProjectA - TIM - 2050,OBC Build 5.1 Code: Switch statement has no default case,3,"In file ts_cmd.c function TSc_pkt_prcsr, the switch statement below does not provide a default case statement: switch (cmd_packet_Ptr->pri_header.packet_id) { ...",11/10/05
ProjectA - TIM - 2049,OBC Build 5.1 Code: Variable may not have been initialized,4,"In file sts_df.c, variable 'Twta_Pwr_State' (line 1716) may not have been initialized.",11/10/05
ProjectA - TIM - 2048,OBC Build 5.1 Code: Functions are empty,4,"In file sts_df.c, the following functions are empty and perform no action: TSdf_for_TMON_Groups_of_4_htrs TSdf_for_TMON_Groups_of_5_htrs TSdf_for_TMON_Groups_of_6_htrs",11/10/05
ProjectA - TIM - 2047,OBC Build 5.1 Code: Variable may not have been initialized,4,In file sts_df.c. variable 'TempLevelStat' (line 972) may not have been initialized.,11/10/05
ProjectA - TIM - 2046,Six VM Requirements Linked to Test Procedure S912-TP4971 Cannot Be Verified By IV&V,3,"The 10-12-05 DOORS data base indicates that requirements VM005.3 (L4-SRVML-20), VM007.1 (L4-SRVML-24), VM007.2 (L4-SRVML-25), VM007.3 (L4-SRVML-26), VM007.4 (L4-SRVML-27) and VM007.5 (L4-SRVML-28) are linked to Test Procedure S912-TP4971 and to scripts vm_rtm_test.scr and vm_runtest3(). These artifacts were not made available to IV&V, therefore, it is unknown if the tests are adequate to verify the linked requirements or if they have been executed. It is noted that script vm_runtest3() for Build 5.1 links VM001.4, not VM007.4.",11/9/05
ProjectA - TIM - 2045,Seven VM Requirements Linked to B5.0 and B5.1 Scripts Are Not Verified,3,"The 10-12-05 DOORS data base shows: VM002.2 (L4-SRVML-8) and VM004.2 (L4-SRVML-15) are linked to vm_runseqtest1.scr for B5.1. VM004.3 (L4-SRVML-16), VM008.1 (L4-SRVML-31), VM008.2 (L4-SRVML-32), VM008.3 (L4-SRVML-33) are linked to vm_runseqtest2.scr for B5.1. VM004.1 (L4-SRVML-14) is linked to vm_runseqtest1.scr for B5.0. Sub-Issue #1: None of the VM requirements listed above are found linked to specific test steps in the three scripts. Therefore, these requirements were apparently not verified by either the B5.0 or the B5.1 VM tests. In addition, the as-run procedure S912-TP4970, Section 11, Rev-A, does not link any VM requirements to the two test scripts that were run in the B5.1 VM test. IV&V notes that DOORS from the B5.1 data drop does not contain a sheet for VM. Sub-Issue #2: ProjectA Virtual Machine (VM) Task Flight Software Test Procedures S912-TP4970, REVISION – A Section 11.1 shows three VM test scripts: vm_runseqtest1(),vm_runseqtest2() and vm_runseqtest4(). The As-Run version of this procedure shows that only the first two scripts were execxuted with vm_runseqtest4() omitted by redline. The script vm_runseqtest4() is not in the B5.1 script library furnished to IV&V. Sections 8, 9 and 10 are missing from the procedure.",11/9/05
ProjectA - TIM - 2044,"Build 5.1 OBC Code: Enum constant ""ac_mode_::TargetAttSteering"" not used within defaulted switch - case #5",2,"Issue: Based upon IV&V verification, the switch expression ""switch ( pAcGlobal->Mode )"" is an enumerated type and the enumerated constant ""TargetAttSteering"" was not present as a case label in the function ""AC_AC_Select_Mode"" of the file ""acprocesscommands.c"". The control error may need to be verified for the mode ""TargetAttSteering"". FlexeLint Message #788: enum constant 'ac_mode_::TargetAttSteering' not used within defaulted switch FlexeLint Message #788 Description: A switch expression is An enumerated type and at least one of the enumerated constants was not present as a case label. However, unlike Info 787, a default case was provided. This is a mild form of the case reported by Info 787. The user may thus elect to inhibit this mild form while retaining Info 787. Source Code References: File - acprocesscommands.c: 1149: switch ( pAcGlobal->ModeRequested )",11/8/05
ProjectA - TIM - 2043,"Build 5.1 OBC Code: Enum constant ""ac_mode_::TargetAttSteering"" not used within defaulted switch - case #4",2,"Issue: Based upon IV&V verification, the switch expression ""switch ( pAcGlobal->Mode )"" is an enumerated type and the enumerated constant ""TargetAttSteering"" was not present as a case label in the function ""AC_ModeTransition"" of the file ""acmain.c"". The control error may need to be verified for the mode ""TargetAttSteering"". FlexeLint Message #788: enum constant 'ac_mode_::TargetAttSteering' not used within defaulted switch FlexeLint Message #788 Description: A switch expression is An enumerated type and at least one of the enumerated constants was not present as a case label. However, unlike Info 787, a default case was provided. This is a mild form of the case reported by Info 787. The user may thus elect to inhibit this mild form while retaining Info 787. Source Code References: File - acmain.c: 314: switch ( RequestedMode )",11/8/05
ProjectA - TIM - 2042,"The hs_test.scr, Test #3(OBC Health Status Message), Does Not Verify the Linked HS Requirements",3,"Test #3 is linked to the following HS requirements: L4-SROBC-291 / HS005 - Flight Software shall generate an OBC health status telemetry packet consisting of an OBC state (healthy, reset, fault), the status of telemetry monitoring (enabled/disabled), and shall be timestamped. L4-SROBC-292 / HS006 - The Flight Software shall send an OBC health status telemetry packet to the Uplink Card at no less than 2 Hz. A script comment states: “This has to be an implicit verification since there is no direct telemetry.” The script itself does not appear to verify either HS005 or HS006 as there is no check on the content of the packet, or that it is time stamped or that it is sent a no less than 2Hz.",11/3/05
ProjectA - TIM - 2041,"The hs_test.scr, Test #1 (Basic HS Functions), Does Not Fully Verify the Linked OBC Healt & Safety (HS) Requirements",3,"Sub-Issue #1: Requirement L4-SROBC-288 / HS002 - Flight Software associated with the software health monitoring function shall maintain a list of critical software tasks for each software mode and perform a corrective action in the event that one or more of the critical tasks fails to ""check-in"". The term “software mode” is either incorrect or Test #1 is incomplete. Software mode is described in various ProjectA documents and includes Launch Mode, Acquisition/CSP Mode, Target Point Mode, etc. This test does not address these various modes. It is possible that the correct statement is “software group” as the test addresses four “groups”. The list of critical functions is not defined nor is it verified in this test. The term “corrective action is not specific. According to the test a “group flag” is set or the WDT is allowed to expire, depending on the Group Number. Beyond this, there are no other indications of a “corrective action” that is taken. It is noted that TIM 1160 presents an issue concerning the completeness and correctness of HS requirements. Recommendation: Revise HS002 to fully and accurately state the intended requirement. Revise the test as needed to verify the revised requirement. Sub-Issue #2: The test script includes: local NUM_OF_TASKS = 21 ; Verify current task indicator telemetry for i=0 to NUM_OF_TASKS-1 loop The loop executes for 21 tasks yet the list of tasks indicates there are 23 as follows: ; Task IDs (in glorious HRF) task_id[0] = ""AC"" task_id[1] = ""AN"" task_id[2] = ""CS"" task_id[3] = ""DI"" task_id[4] = ""DS"" task_id[5] = ""HS"" task_id[6] = ""TA"" task_id[7] = ""MS"" task_id[8] = ""S1"" task_id[9] = ""S2"" task_id[10] = ""S3"" task_id[11] = ""SB"" task_id[12] = ""SC"" task_id[13] = ""SM"" task_id[14] = ""TC"" task_id[15] = ""TG"" task_id[16] = ""TO"" task_id[17] = ""TP"" task_id[18] = ""XB"" task_id[19] = ""TS"" task_id[20] = ""IT"" task_id[21] = ""VS"" task_id[22] = ""VT"" It is unclear why two tasks are omitted. Recommendation: Change the test to ensure consistency between the listed tasks and the loop control parameter. Sub-Issue #3: The script includes: ; Task groupings are checked in reverse order (4, 3, 2, 1). for i=1 to 3 loop ; Test two tasks in each group for j=0 to 1 loop ; Form the telemetry lookup tlmlu = hs_grouptest_tlmlu[${i}][${j}] reset point event_id ; Disable HS reception of HK packets from the selected task @${hs_grouptest_cmd[${i}][${j}][0]} This logic seems to omit Group 4. According to the FSW Users Manual DI is in group 4; however, it is a “secondary task” and as such does not send its housekeeping telemetry directly to HS. Using the “Disable HS reception of HK packets from the selected task” command would, therefore, not cause an indication that DI was not active. If no action is to be taken for this Group, it is not clear why it is found in this test. Recommendation: Either change the test script logic to include Group 4 or explain why this Group should be omitted. Sub-Issue #4: According to the DOORS data base delivered with B5.1 the HS001 (L4-SROBC-287)requirement is: “Flight Software associated with the software health monitoring function shall periodically (every 2 seconds) request and collect software execution status and housekeeping data from a predetermined list of Flight Software components.” According to hs_test.scr HS001 is stated as: “Flight Software associated with the software health monitoring function shall periodically request and collect software execution status and housekeeping data from a predetermined list of Flight Software components.” The nominal rate of 2 seconds has been omitted and is not verified by this test. Recommendation: Revise the test to show that the nominal rate is 2 seconds.",11/3/05
ProjectA - TIM - 2040,"Inconsistent Definition of Health & Safety Testing in Procedure S912-TP4920, Rev-D, As-Run",4,The DOORS Excel file delivered with the B5.1 data base shows that S912-TP4920 Build 5.1 is the procedure associated with verification of HS requirements. The As-Run version of S912-TP4920 for Build 5.1 is Rev-D. Section 8.1 in Rev-D is titled “Health and Safety Test” yet there is no HS test identified in Section 11. The DOORS Excel file delivered with the B5.1 data base shows that the test script for HS requirements is hs_test.scr. A hand written addendum to the procedure indicates that the script was run and that the test passed. It is noted that the script contains linked HS requirements.,11/3/05
ProjectA - TIM - 2039,Build 5.1 UPL Code: Array 'tlmBuffer' Possibly Out-of-Bounds,4,"The file ul2ul.c line 45 defines the array 'tlmBuffer' as having 'UU_MAX_TLM_LEN/2'. Line 18 of the file def_equ.h sets 'UU_MAX_TLM_LEN' = 446. Therefore, 'tlmBuffer' has 223 elements. Line 17 of the file def_equ.h sets 'UU_TLM_LEN' to a summation that resolves to 536. Then line 243 of ul2ul.c tests whether the array index is less than 'UU_TLM_LEN/2' or 268. If true, the corresponding element of 'tlmBuffer' is initialized to 0. This introduces the possibility that indices of 223 - 267 may be accessed, which would create an out-of-bounds condition. KlocWork Message: ""Buffer overflow, array index of 'tlmBuffer' may be outside the bounds. Array 'tlmBuffer' of size 223 declared at line 45 may use index values 223..267"" Referenced Source Code: File - def_equ.h: 11 #define UU_FRAME_LEN 920 12 #define UU_SYNC_LEN 2 13 #define UU_STATUS_LEN 250 14 #define UU_CMD_LEN 128 15 #define UU_PKT_PTR_LEN 2 16 #define UU_CRC_LEN 2 17 #define UU_TLM_LEN (UU_FRAME_LEN-(UU_SYNC_LEN+UU_STATUS_LEN+UU_CMD_LEN+UU_PKT_PTR_LEN+UU_CRC_LEN)) 18 #define UU_MAX_TLM_LEN 446 File - ul2ul.c: 45 u_word tlmBuffer[UU_MAX_TLM_LEN/2]; : 242 /* If not at the end, clear the last location in the buffer */ 243 if( i < UU_TLM_LEN/2 ) 244 tlmBuffer[i] = 0;",10/31/05
ProjectA - TIM - 2038,Build 5.1 UPL Code: Suspiciously Placed ';' in sm_main.c,3,Lines 510 - 511 of the file sm_main.c contain an 'if' statement with a semicolon immediately after the test condition. KlocWork Message: “Suspiciously placed semicolon” Referenced Source Code: File - sm_main.c: 510 if( sm_tbl_load_cmd->hdr.packet_length >= 511 2* ( sizeof( sm_tbl_load_fmt ) - sizeof( seds_packet_header_type ) - SM_MAX_DATA_WSIZE + sm_tbl_load_cmd->num_words ) - 1 ) ; 512 { 513 do_load = TRUE ; 514 },10/31/05
ProjectA - TIM - 2037,Build 5.1 OBC Code: Function Return in vm_if_cmd.c,4,"Non-void function returns void value and the value is used. vm_sizing.h: 69 typedef uint32_t vm_cmd_opcode_type; vm_if_cmd.c: 296 vm_cmd_opcode_type check_to_report_tag(int cmd_source_id, const uint8_t *cmd_ptr) 297 { 298 299 const uint8_t *parm_ptr; 300 vm_cmd_opcode_type opcode; 301 char function_name[VM_NUM_SYMBOL_CHARS]; 302 char return_value[VM_NUM_CMD_RETURN_STRING_CHARS]; 303 Event_Message_ID evr_info; 304 u_dword evr_id; 305 306 307 memset(function_name, 0, VM_NUM_SYMBOL_CHARS); 308 memcpy_d32_safe(&opcode, cmd_ptr, sizeof(opcode)); 309 310 if (cmd_source_id < 0 || cmd_source_id >= VM_NUM_ENGINES) 311 return; 312 ... 183 tag_opcode = check_to_report_tag(source, cmd_ptr); 184",10/31/05
ProjectA - TIM - 2036,Build 5.1 OBC Code: 'TempLevelStat' Not Initialized in sts_df.c,4,"The file sts_df.c defines the function ‘TSdf_Incmp_SA_Deplt_OT_TWTA_Cy’. This function defines the local variable 'TempLevelStat', which serves as the return value. If the test on line 1008 is satisfied, 'TempLevelStat' will be returned by the function without being initialized. Referenced Source Code: File - sts_df.c: 972 mon_point_val_type TempLevelStat; 973 974 /* Get Last Return Value */ 975 TSs_get_curr_value ( list[ 0 ], &PrevTempLevel); 976 977 /* Get High Trip Threshold (counts) */ 978 TSs_get_curr_value ( list[ 0 ], &ThreshDur); 979 980 /* Extract Analog Data From Temperature */ 981 Temp1 = ((value >> 16) & AnalogMask); 982 Temp2 = (value & AnalogMask); 983 984 /* Set Temperature Level (lower counts = higher temperature) */ 985 if (( Temp1 <= TS_TMON_constant_table[DF_LAUNCH_TEMP_INDEX] ) && 986 ( Temp2 <= TS_TMON_constant_table[DF_LAUNCH_TEMP_INDEX] )) 987 { 988 TempLevel = 1; 989 } 990 else TempLevel = 0; 991 992 993 /* Stay Low if Previously Low */ 994 if (PrevTempLevel < 0) 995 { 996 /* Increment (decrease) counter still low */ 997 if (TempLevel == 0) TempLevelStat = PrevTempLevel - 1; 998 999 /* Tripped high, Now Low */ 1000 else if (TempLevel == 1) TempLevelStat = -1; 1001 } 1002 else if (PrevTempLevel >= ThreshDur) 1003 { 1004 /* Should have tripped, if hot continue counting */ 1005 if (TempLevel == 1) TempLevelStat = PrevTempLevel + 1; 1006 1007 /* Tripped high, response providing lower temp */ 1008 else TempLevel = -1; 1009 } 1010 else 1011 { 1012 /* Count if high */ 1013 if (TempLevel == 1) TempLevelStat = PrevTempLevel + 1; 1014 1015 /* Clear if cool */ 1016 else TempLevelStat = 0; 1017 } 1018 return (TempLevelStat);",10/31/05
ProjectA - TIM - 2035,Build 5.1 OBC Code: ‘strikeTwo’ Not Initialized in patch_man.c,3,"The file patch_man.c declares the local variable ‘strikeTwo’. Several tests are performed as part of the CRC verification process. The response for several of these tests is to assign ‘strikeTwo’ a value of ‘TRUE’. However, multiple paths appear to exist that can lead to ‘strikeTwo’ being undefined for the test on line 296. Referenced Source Code: File - ../RAD6000/eepromImage/patch_man.c 110: void patch_man() 111: { 112: 113: generalDescType * priPatchPtr; 114: generalDescType * bakPatchPtr; 115: generalDescType localDescr; 116: generalDescType * patchPtr; 117: unsigned long patchMapEntry, tempCrc; 118: unsigned long * cleaning_up; 119: boolean strikeTwo; 120: eDescStatus descStatus; 121: patchStatType * patchStatus; : 261: /* If CRC does not compare, turn off the bit in the map table */ 262: if ( tempCrc != patchTabPtr->patchTab[i*j].crc ) 263: { 264: if( eDESC_BOTH == descStatus ) 265: { 266: patchTabPtr = (patchTblType *)bakPatchPtr; 267: } 268: else 269: { 270: strikeTwo = TRUE; 271: } 272: } /* END: if ( tempCrc != patchTabPtr->patchTab[i*j].crc ) */ 273: } 274: else /* crc failed*/ 275: { 276: if( eDESC_BOTH == descStatus ) 277: { 278: patchTabPtr = (patchTblType *)bakPatchPtr; 279: 280: tempCrc = paCalcCrc ((u_dword *)patchTabPtr->patchTab[i*j].startAddr, 281: patchTabPtr->patchTab[i*j].byteCount ); 282: 283: /* Verify CRC */ 284: if ( tempCrc != patchPtr[i*j].crc ) 285: { 286: strikeTwo = TRUE; 287: } 288: } 289: else /* !!!! Backup failed, REBOOT !!!! */ 290: { 291: strikeTwo = TRUE; 292: } /* END: if( eDESC_BOTH == descStatus ) */ 293: } /* END: if( paCalcCrc(... */ 294: 295: /* move the patch and check the crc in sram */ 296: if ( !strikeTwo )",10/31/05
ProjectA - TIM - 2034,Build 5.1 OBC Code: Array 'Fdc' Possibly Out-of-Bounds in acprocessiru.c,2,"Buffer overflow, array index of 'Fdc' may be outside the bounds. Array 'Fdc' of size 2 declared at acjettable.h:44 may use index value 2. acsdefines.h: 210 #define NUM_OF_IRU (3) /* Number Of Inertial Reference Units (A & B) */ acjettable.h: 37 struct { 38 39 ac_component_fdc_table_type ControlSet; /* RCS set FDC Parameters */ 40 41 ac_fdc_test_table_type PowerTest; /* RCS Power Test Parameters */ 42 ac_fdc_test_table_type RateNullTest; /* RCS Rate Null Test Parameters */ 43 44 } Fdc[2]; acprocessiru.c: 393 for ( i=0; i<NUM_OF_IRU; i++ ) 394 { 395 for ( j=0; j<2; j++ ) 396 { 397 if ( pIru->RawDeltaCount[i][j] < AcIruTable.DelThetaCountLoLmt || 398 pIru->RawDeltaCount[i][j] > AcIruTable.DelThetaCountHiLmt ) 399 { 400 /* 401 ** Set telemetry bit and increment failure counter 402 */ 403 pIru->TestFailTlm[i][j].SensedRateTest = 1; 404 FailCntrPp( pAcGlobal->Counter.Entry, &pIru->Fdc.SensedRateTest[i][j] ); 405 406 /* 407 ** If gyro is in use, test is enabled (Weight > 0), 408 ** redundant axis is consistent (rate nulling mode),and failure is persistent, 409 ** perform corrective actions 410 */ 411 if ( pIru->Flags.FDCEnable == TRUE && 412 AcIruTable.Fdc.ComponentFdc[i].Enable == TRUE && 413 AcIruTable.Fdc.SensedRateTest[i].Weight > 0 ) 414 { 415 if ( pAcGlobal->Mode == RateNulling ) 416 { 417 if ( pIru->Fdc.SensedRateTest[i][j].FailCntr > AcIruTable.RateNullSatCount ) 418 { 419 if ( pIru->Select[i].Use == TRUE && 420 pIru->Consistent[i][j] == FALSE ) 421 SetFlag( &pAcGlobal->Tmon.IruDataFault, i ); 422 423 else if ( pAcGlobal->Jet.GndCmd.Packed.FdcEnable == TRUE && 424 AcJetTable.Fdc[i].ControlSet.Enable == TRUE && 425 pIru->Consistent[i][j] == TRUE )",10/31/05
ProjectA - TIM - 2033,Build 5.1 OBC Code: Array 'v' Possibly Out-of-Bounds in accommandattitude.c,3,"Buffer overflow, array index of 'v' may be outside the bounds. Array 'v' of size 3 declared at acstypes.h:19 may use index value 3. This will happen every time because i will always be 3 due to the for loops on lines 231 and 241. acstypes.h: 19 typedef struct { real_type v[3]; } vector_type; /* sVector */ accommandattitude.c: 231 for (i=0; i<3; i++) 232 OmegaPs.v[i] = 2.0*Qdelta.q[i]/AC_CYCLE_TIME; 233 234 if (pSlew->Mode == SlewInProgress) 235 { /* Slew through power steering frame */ 236 if ( QoQ(pControl->QInrToPs, pSlew->QRefToBdyCmd, A_B, 237 &pControl->QInrToBdyCmd) == STATUS_ERROR ) 238 pControl->Mode.Flags.Status = STATUS_ERROR; 239 240 QoV (pSlew->QRefToBdyCmd, OmegaPs, A_B, &pControl->OmegaCmdBdy); 241 for (i=0; i<3; i++) 242 pControl->OmegaCmdBdy.v[i] += pSlew->OmegaCmdBdy.v[i]; 243 244 if (AC_SlewPropagate(pAcGlobal) == STATUS_ERROR) 245 pControl->Mode.Flags.Status = STATUS_ERROR; 246 247 pControl->TorqueCmdBdy = pSlew->TorqueCmdBdy; 248 } 249 else 250 { 251 pControl->QInrToBdyCmd = pControl->QInrToPs; 252 if ( TargetInertialSpinDownFlag == TRUE ) 253 { 254 ZEROVECTOR(pControl->OmegaCmdBdy); 255 if ( pAcGlobal->Mode == TargetInertial && 256 pControl->GndCmd.InertialTrgtMode == SunTarget && 257 pAttitude->OmegaEstBdy.v[i] > 0.0 ) {} 258 else",10/31/05
ProjectA - TIM - 2032,Uplink Test Scripts Linked to Requirements in DOORS DB but not Executed in Test Procedures,2,"The following uplink test scripts are listed in the 10-12-05 DOORS DB as the verification script for over 89 uplink requirements. These scripts are not called out in any of the Test Procedures through B5.1 and therefore were not run through B5.1. Hence, these 89+ requirements have not been verified. Test Script Number of Requirements ul_ccw_csw_test 1 ul_gsc_command_test.scr 4 + 1 partial ul_hlp_command_test.scr 2 + 1 partial ul_hss1_test.scr 18 + 1 partial ul_local_pcc_fc_test.scr 1 + 1 partial ul_master_clock_test.scr 4 ul_ngsc_command_test.scr 3 ul_pcc_command_test.scr 4 + 1 partial ul_rxs_cmd.scr 1 + 1 partial ul_standard_pcc_fc_test.scr 1 + 1 partial ul_sc_cmd_test.scr 11 ul_scsa_test.scr 5 ul_sync_search.scr 1 ul_telemetry_gatherer_test.scr 14 ul_transfer_frame_test.scr 8 ul_watchdog_monitor_test.scr 2 ul_rtm_test 122",10/27/05
ProjectA - TIM - 2031,Incomplete Verification of Linked ACS SRS Requirements by ProjectA_acs_b50_test_main.scr,2,"A. This TIM presents the issues identified through analysis of the following artifacts: 1. ProjectA_acs_b50_test_main.scr. 2. Excel-RTM with Build5(1).1 update.xls (includes ACS SRS requirements) 3. ProjectA OBC ACS Flight Test Procedures, S912-TP4930, REVISION B B. Specific Requirement Verification Sub-Issues The ACS test procedure nor the test script maps individual ACS SRS requirements to specific test points: according to Item #2 above, 71 SRS requirements are mapped to the entire test script and there is no further linking of requirements to test points in the script. Due to this characteristic there is little guidance as to where a specific requirement is verified in the test scripts. IV&V analysis results of ProjectA_acs_b50_test_main.scr, to evaluate whether the script adequately verified the linked ACS SRS requirements, are presented in the attachment to this TIM. It is noted that TIM 1463 addresses IV&V’s findings concerning the ProjectA_acs_fsw_build40_performance_test_main() script’s adequacy to verify the linked ACS SRS requirements.",10/18/05
ProjectA - TIM - 2030,Incomplete Verification of Linked ACS SRS Requirements by ProjectA_acs_b51_test_main.scr,2,"A. This TIM presents the issues identified through analysis of the following artifacts: 1. ProjectA_acs_b51_test_main.scr. 2. Excel-RTM with Build5(1).1 update.xls (includes ACS SRS requirements) 3. ProjectA OBC ACS Flight Test Procedures, S912-TP4930, REVISION C B. Test to Requirement Link Consistency Sub-Issue ProjectA OBC ACS Flight Test Procedures, S912-TP4930, REVISION C, indicates that 70 ACS requirements are linked to the ProjectA_acs_b51_test_main.scr (Section 11.1, ACS Mode Test). ProjectA_acs_b51_test_main.scr indicates there are 74 ACS requirements linked to this script. Excel-RTM with Build5(1).1 update.xls (includes ACS SRS requirements) indicates there are five ACS requirements linked to this script. For the analysis results shown in Section C, the IV&V team assumed that Reference #2 above provides the correct requirements to test script linkages. C. Specific Requirement Verification Sub-Issues Neither the ACS test procedure nor the test script maps individual ACS SRS requirements to specific test points: according to Item #2 above, five SRS requirements are mapped to the entire test script and there is no further linking of requirements to test points in the script. Due to this characteristic there is little guidance as to where a specific requirement is verified in the test scripts. IV&V analysis of ProjectA_acs_b51_test_main.scr, to evaluate whether the script adequately verified the linked ACS SRS requirements, shows the following results: ACS-AC099 L4-SROAC-149 - ACS FSW shall manage and unload accumulated reaction wheel momentum when reaction wheels are used. Sub-Issue #1: The test uses the ac_momcmd and ac_enable_momadj commands. The Command Dictionary shows another related command, ac_enable_auto_momadj, which is not used in the test and is not well defined in the Dictionary. If the intent of this requirement is to include autonomous control over momentum, it is not clear if the test verified the complete scope of the requirement. ACS-AC100 L4-SROAC-150 - Momentum management performance failures shall be detected. Sub-Issue #2: No momentum management performance failures were introduced in this test. The SRS should specifically identify the failures. ACS-AN006 L4-SROAC-168 - AN software shall accept AN task commands which initialize, activate, inhibit, or otherwise control the individual AN task software processes. These commands are: • Initialize, • Enable/Disable telemetry packet generation, • DRAM table management commands, • Reset Telemetry Statistics. Sub-Issue #3: No specific test for this requirement could be located. It is noted that the Initialize command is found in the ProjectA_acs_rtm_test.scr. The SRS should identify specific commands from the Command Dictionary and not use generic descriptions of them. ACS-AC105 L4-SROAC-170 - The ACS software shall support telemetry required to report onboard RCS and Engine thruster activity to the MOS. Sub-Issue #4: No specific test for this requirement could be located. It is possible that this data was made available in the collected telemetry but the script does not specifically state the extent of data evaluated in real time or in post test analysis. ACS-AC104 4-SROAC-12 - The ACS software shall be able to record onboard RCS and Engine thruster activity at a varying and settable precision, and report this activity to the ground segment. Sub-Issue #5: No specific test for this requirement could be located. It is possible that this data was made available in the collected telemetry but the script does not specifically state the extent of data evaluated in real time or in post test analysis.",10/18/05
ProjectA - TIM - 2029,Build 5.1 OBC Code may not satisfy L4-SROAC-12,3,"OBC Build 5.1 does not appear to satisfy the intent of the following requirement: L4-SROAC-12 The ACS software shall be able to record onboard RCS and Engine thruster activity at a varying and settable precision, and report this activity to the ground segment. No functionality for variable precision could be identified. Refer to AcTelemetryGeneration.",10/14/05
ProjectA - TIM - 2028,Build 5.1 OBC Code may not satisfy L4-SROAC-20,3,"OBC Build 5.1 does not appear to satisfy the intent of the following requirement: L4-SROAC-20 The AC software shall be able to accept and process up to one command per AC control cycle (200 msec). AC_ProcessCommands calls AC_ProcessACSCommands in a loop while (ProcessCommandPID == TRUE) where ProcessCommandPID is set false if (SB_Status != SB_NO_MESSAGE). This appears to process all available commands rather than ""up to one command."" Analysis did not attempt to verify whether the software bus limits command issuance to 1 command per control cycle.",10/14/05
ProjectA - TIM - 2027,Build 5.1 OBC Code may not satisfy L4-SROAC-9,3,"OBC Build 5.1 does not appear to satisfy the intent of the following requirement: L4-SROAC-9 - ACS FSW fault detection and correction shall incorporate ""Limits Data"", which is checksum protected and configurable from the ground, and against which measured and processed data are compared. The FDC limits for CSS are defined in Accstable.c This table does not contain a checksum, nor could a checksum operation be found for this table. Similarly, FDC limits for pointing and rate errors are defined in acstable.c with no checksums defined.",10/14/05
ProjectA - TIM - 2026,Incomplete Verification of Linked ACS Requirements by Script ProjectA_acs_rtm_test(),2,"A. This TIM presents the issues identified through analysis of the following artifacts: 1. script ProjectA_acs_rtm_test() provided with the TRR #1 data package 2. Excel-RTM with Build5(1).1 update.xls (includes ACS SRS requirements) B. Sub-Issues The ACS test procedure does not map individual ACS SRS requirements to specific test points: 16 SRS requirements are mapped to the entire test script and there is no further linking of requirements to test points in the script. Due to this characteristic there is little guidance as to where a specific requirement is verified in the test scripts. IV&V analysis of script ProjectA_acs_rtm_test() shows that of the 16 linked ACS requirements the script adequately verified five as follows: L4-SROAC-3 / AC001 - During each 5 Hz cycle, the ACS software shall generate a FDIR status packet to identify which faults failed their FDIR checks and which did not. Sub-Issue 1: There is no evidence that a FDIR status packet was generated each 5Hz cycle. No faults were introduced in this test. L4-SROAC-4 / AC002 - The ACS software shall provide a latched FDIR status telemetry that reflects the FDIR status since last reset or until cleared by ground command. Sub-Issue 2: No specific test for this requirement could be located. L4-SROAC-10 / AC008 - The AD software shall calculate and validate residuals against specific (table) values. Sub–Issue 3: No specific test for this requirement could be located. L4-SROAC-11 / AC103 - The AC software shall record the maximum persistent test failure count for each FDC test (i.e. test fails for 3 cycles, persistence is 5 cycles; AC telemeters 3 for this test until a higher persistence count is reached or cleared by ground command). Sub-Issue 4: No FDC type testing was performed by this script. L4-SROAC-171 / AC106 - The AC software shall record the total test failure count for each FDC test. Sub-Issue 5: No faults were introduced in this test. L4-SROAC-21 / AC015 - The AC software shall reject any command not recognizable as an AC command and generate a message for each rejected command. Sub-Issue 6: No non-ACS commands were issued during this test. L4-SROAC-23 / AC017 - The ACS software shall implement a No-Operation command to increment the command counter. Comment: OK. L4-SROAC-83 / AC055 - By default, in Launch Mode, the ACS software shall generate zero wheel torque commands. Comment: OK. L4-SROAC-84 / AC056 - In Launch Mode, the ACS software shall allow ground commanding of wheel speed or wheel torque. Comment: OK. L4-SROAC-87 / AC058 - In Launch Mode, the ACS software shall allow ground commanding of thruster commands. Comment: OK. L4-SROAC-105 / AC070 - The software shall reject any valid command of an invalid mode, or mode transition, and remain in the current mode. Sub-Issue 7: Several illegal commands were issued and rejected in this test. This small set does not span the space of ACS modes and illegal mode transition commands that could be issues in each mode. As such this requirement is not fully verified. L4-SROAC-106 / AC071 - A transition to another mode during a slew shall be postponed until the slew is complete. Sub-Issue 8: The test did not attempt to transition to another mode during a slew. L4-SROAC-114 / AC077 - Transition from any non-Launch Mode to Launch Mode shall be disallowed. Sub-Issue 9: The test only attempted to Launch Mode from Sun Target Mode. No other non-launch modes were attempted. L4-SROAC-135 / AC090 - The software shall allow ground commanding of the RWA torques and wheel speeds, RCS thrusters, Engine thrusters and gimbals, and SAD in Launch Mode. Sub-Issue 10: No commanding of Engine thrusters or gimbals was performed in this test. L4-SROAC-136 / AC091 - Close loop Attitude Control Commands shall not be generated in Launch Mode. Comment: OK. L4-SROAC-137 / AC092 - Attitude, rate and momentum errors shall be set to zero in Launch Mode. Sub-Issue 11: No specific test for this requirement could be located.",10/9/05
ProjectA - TIM - 2025,OBC Build 5 Test Script for Test #7 Does Not Verify Requirement L4-SROBC-281 (TS019).,3,"SRS Requirement: L4-SROBC-281 / TS019. Flight Software shall accept and execute a RESET_TS_HOUSEKEEPING command that resets all housekeeping data normally reported in the real-time telemetry stream. Issue: Build 5 Test Script, Test 7, issues the command ts_reset_monitor_point. According to the Command Dictionary: ""This command resets the statistics and diagnostics (current threshold)"". In the B5 code (ts_cmd.c) this command seems to be equivalent to ts_stats_reset. The B5 code (ts_cmd.c) shows a ts_hk_reset command that resets the HK data (counters). It is noted that the Command Dictionary does not define the ts_hk_reset command. Based on this information, it appears that: (1) there is no RESET_TS_HOUSEKEEPING command, (2) TS019 seems to refer to the ts_hk_reset command and not to the ts_reset_monitor_point command used in Test #7 and (3) the Command Dictionary may be out of date. Therefore, Test 7 does not appear to verify the ""intent"" of TS019.",9/19/05
ProjectA - TIM - 2024,Build 5.0 OBC Code: Unreachable Code in xos_vrtl.c line 160,3,"Code is unreachable, at line number 160. This happens because the function xpfr always returns 0. xos_vrtl.c: 151 num &= INTMASK; 152 len = xpfr((int) num, ptr); 153 if (!len) { 154 width = 4; 155 pad = '0'; 156 base = 16; 157 adj = """"; 158 goto share; 159 } 160 break;... 461 int xpfr() 462 { 463 return 0; 464 }",9/15/05
ProjectA - TIM - 2023,Build 5.0 OBC Code: Function Return in xbm_std.c,3,"Non-void function XB_bcp_synch on line 324 of xbm_std.c. does not return a value. Most likely this function has not been implemented yet; however, it is worth documenting because the function will return essentially a random value until it is implemented. xbm_std.c: 322 work_unit *XB_bcp_synch(void) 323 { 324 }",9/15/05
ProjectA - TIM - 2020,Build 5.0 OBC FSW Code Analysis: Memory Error in vxColor2.c,3,"A potential memory leak exists in vxColor2.c. Dynamic memory stored in variable 'pdB' and allocated through function 'calloc' at line 745, will be lost at line 754. Also there are 8 similar errors on lines 760, 766, 772, 778, 784, 795, 802, 811. vxColor2.c: 745 if ((pdB = calloc (1, sizeof (DATA_BASE))) == NULL) 746 return NULL; 747 748 /* semaphores creation */ 749 750 /* binary semaphore for sync. to avoid nodes keep running */ 751 752 pdB->cT.controlerFlushSem = semBCreate (SEM_Q_FIFO, SEM_EMPTY); 753 if (pdB->cT.controlerFlushSem == NULL) 754 return NULL;",9/15/05
ProjectA - TIM - 2019,Build 5.0 OBC Code: Array Out-of-Bounds in vxColor.c line 665,3,"Buffer overflow, array index of 'name' may be outside the bounds. Array 'name' of size 8 declared at line 646 may use index values 0..15 vxColor.c: 634 /******************************************************************************* 635 * 636 * nodeCreate - node creation 637 * 638 */ 639 640 int nodeCreate 641 ( 642 int nodeId 643 ) 644 { 645 646 char name[8]; 647 GNODE * pNode; 648 649 /* checks if that node id is already in use in the graph */ 650 651 if ( nodeChecks (nodeId) != -1 ) 652 { 653 printf(""Node id %d already used in current graph.\n"", nodeId); 654 return -1; 655 } 656 657 /* check if the authorized maximum number of node is reached */ 658 659 if (dB.nNum == GRAPHMAXNODE-1) 660 { 661 printf(""GRAPHMAXNODE reached!\n""); 662 return -1; 663 } 664 665 sprintf(name, ""tNode%d"", nodeId); 666 pNode = &(dB.nArray[dB.nNum]); 667 dB.nNum++; 668 669 /* spawn nodeJob with lower priority (200) than the default (100) */ 670 671 dB.nArray[dB.nNum-1].tnid.tid = 672 taskSpawn (name, 200, VX_SUPERVISOR_MODE, 10000, (FUNCPTR) nodeJob , 673 nodeId, (int) pNode, 0, 0, 0, 0, 0, 0, 0, 0); 674 return 0; 675 } 676",9/15/05
ProjectA - TIM - 2018,Build 5.0 OBC Code: Array Out-of-Bounds in vm_time.c,3,"There is a possibility of buffer overflow for the index of array 'vm_time_events'. The index 'i' may be outside the bounds of the array. Array 'vm_time_events' is defined to be of size 14, is declared at line 43 and may use index value 14 at line 292. This can happen when vm_time_top_event_index is equal to VM_MAX_NUM_EVENTS-1 because vm_time_events[i+1] will be pointing to vm_time_events[VM_MAX_NUM_EVENTS] which is out of bounds. Tracing the function 'copy_event', this position which is out of bounds is then written. vm_sizing.h: 99 #define VM_MAX_ENGINE 12... 107 #define VM_NUM_ENGINES VM_MAX_ENGINE 108 #define VM_NUM_ENGINES_PLUS_HIDDEN (VM_NUM_ENGINES + 2) vm_time.h: 43 #define VM_MAX_NUM_EVENTS VM_NUM_ENGINES_PLUS_HIDDEN vm_time.c: 43 struct vm_event_type vm_time_events[VM_MAX_NUM_EVENTS];... 289 if (vm_time_top_event_index < VM_MAX_NUM_EVENTS) 290 { 291 for (i = vm_time_top_event_index; i >= position; i--) 292 copy_event(&(vm_time_events[i]),&(vm_time_events[i+1])); 293 294 copy_event(new_event_ptr,&(vm_time_events[position])); 295 296 vm_time_top_event_index++; 297 298 if (vm_time_event_is_overdue(new_event_ptr)) 299 vm_time_top_overdue_event_index++; 300 }... 171 static void copy_event(const struct vm_event_type *source_ptr, 172 struct vm_event_type *dest_ptr) 173 { 174 dest_ptr->engine_index = source_ptr->engine_index; 175 dest_ptr->value.low = source_ptr->value.low; 176 dest_ptr->value.high = source_ptr->value.high; 177 }",9/15/05
ProjectA - TIM - 2016,Build 5.0 OBC Code: Null Pointer Dereference in vm_opcode.c,3,"The dereferenced pointer 'source_ptr' in file vm_opcode.c might be null. Dereferenced object 'source_ptr' can contain null by passing argument 4 to function 'normalize' at line 718 where null value comes from function 'vm_operand_storage' at line 713 A similar error occurs on line 719 vm_opcode.c: 713 source_ptr = vm_operand_storage(source_opd_ptr); 714 dest_ptr = vm_operand_storage(dest_opd_ptr); 715 716 if (num > 0 && source_bit >= 0 && dest_bit >= 0) 717 { 718 normalize(source_opd_ptr->kind, (unsigned int)num, (unsigned int)source_bit, source_ptr, buffer); 719 shift_copy(dest_opd_ptr->kind, (unsigned int)num, (unsigned int)dest_bit, buffer, dest_ptr); 720 }",9/15/05
ProjectA - TIM - 2015,Build 5.0 OBC Code: Non void function does not return value in vm_memory_adapt.c,4,"The function, 'memset_d32_safe', in the file, vm_memory_adapt.c, does not return a value, but it is prototyped to return a value of void *. The function is also not called anywhere within the OBC FSW. Referenced Source Code: File - ../RAD6000/vm/src/vm_memory_adapt.c: 369 void *memset_d32_safe(void *dest_ptr, int value, size_t len) 370 { 371 uint32_t temp_uint32[VM_COMMAND_NUM_STRING_CHARS / 4]; 372 unsigned char *temp_bytes; 373 int index; 374 375 // copy bytes to temp storage so we can work with it 376 memcpy_d32_safe(temp_uint32, dest_ptr, len); 377 378 // get a byte oriented pointer to the beginning of the storage 379 temp_bytes = (unsigned char *)temp_uint32; 380 381 for ( index = 0; index < len; index++ ) 382 { 383 // set the value of temp storage to the value passed in 384 temp_bytes[index] = (unsigned char)value; 385 } 386 387 // copy everything back to its original location 388 memcpy_d32_safe(dest_ptr, temp_uint32, len); 389 } 390",9/15/05
ProjectA - TIM - 2014,Build 5.0 OBC Code: Array Out-of-Bounds in vm_if_tlm.c,3,"There is a possibility for buffer overflow in function 'store_time' in vm_if_tlm.c at line 919. The array index 'start_time' may be outside the bounds. Array 'start_time' of size 12 declared at vmpkt.h:182 may use index value -1. This can happen because engine_tlm_index can return -1 and the return value is not being checked before accessing the arrays on lines 919, 934, 949, and 964. vm_if_tlm.c: 902 index = engine_tlm_index(tlm_id); /* Test for global variables */ 903 value = time_ptr->seconds; 904 905 switch (tlm_id) 906 { 907 case VM_01_START_TIME_TLM_ID: 908 case VM_02_START_TIME_TLM_ID: 909 case VM_03_START_TIME_TLM_ID: 910 case VM_04_START_TIME_TLM_ID: 911 case VM_05_START_TIME_TLM_ID: 912 case VM_06_START_TIME_TLM_ID: 913 case VM_07_START_TIME_TLM_ID: 914 case VM_08_START_TIME_TLM_ID: 915 case VM_09_START_TIME_TLM_ID: 916 case VM_10_START_TIME_TLM_ID: 917 case VM_11_START_TIME_TLM_ID: 918 case VM_12_START_TIME_TLM_ID: 919 vm_if_tlm_current_vm_snapshot.start_time[index] = value; 920 break; 921 922 case VM_01_NEXT_LOCAL_EVENT_TIME_TLM_ID: 923 case VM_02_NEXT_LOCAL_EVENT_TIME_TLM_ID: 924 case VM_03_NEXT_LOCAL_EVENT_TIME_TLM_ID: 925 case VM_04_NEXT_LOCAL_EVENT_TIME_TLM_ID: 926 case VM_05_NEXT_LOCAL_EVENT_TIME_TLM_ID: 927 case VM_06_NEXT_LOCAL_EVENT_TIME_TLM_ID: 928 case VM_07_NEXT_LOCAL_EVENT_TIME_TLM_ID: 929 case VM_08_NEXT_LOCAL_EVENT_TIME_TLM_ID: 930 case VM_09_NEXT_LOCAL_EVENT_TIME_TLM_ID: 931 case VM_10_NEXT_LOCAL_EVENT_TIME_TLM_ID: 932 case VM_11_NEXT_LOCAL_EVENT_TIME_TLM_ID: 933 case VM_12_NEXT_LOCAL_EVENT_TIME_TLM_ID: 934 vm_if_tlm_current_vm_snapshot.next_local_event_time[index] = value; 935 break; 936 937 case VM_01_LAST_LOCAL_EVENT_TIME_TLM_ID: 938 case VM_02_LAST_LOCAL_EVENT_TIME_TLM_ID: 939 case VM_03_LAST_LOCAL_EVENT_TIME_TLM_ID: 940 case VM_04_LAST_LOCAL_EVENT_TIME_TLM_ID: 941 case VM_05_LAST_LOCAL_EVENT_TIME_TLM_ID: 942 case VM_06_LAST_LOCAL_EVENT_TIME_TLM_ID: 943 case VM_07_LAST_LOCAL_EVENT_TIME_TLM_ID: 944 case VM_08_LAST_LOCAL_EVENT_TIME_TLM_ID: 945 case VM_09_LAST_LOCAL_EVENT_TIME_TLM_ID: 946 case VM_10_LAST_LOCAL_EVENT_TIME_TLM_ID: 947 case VM_11_LAST_LOCAL_EVENT_TIME_TLM_ID: 948 case VM_12_LAST_LOCAL_EVENT_TIME_TLM_ID: 949 vm_if_tlm_current_vm_snapshot.last_local_event_time[index] = value; 950 break; 951 952 case VM_01_LOAD_TIME_TLM_ID: 953 case VM_02_LOAD_TIME_TLM_ID: 954 case VM_03_LOAD_TIME_TLM_ID: 955 case VM_04_LOAD_TIME_TLM_ID: 956 case VM_05_LOAD_TIME_TLM_ID: 957 case VM_06_LOAD_TIME_TLM_ID: 958 case VM_07_LOAD_TIME_TLM_ID: 959 case VM_08_LOAD_TIME_TLM_ID: 960 case VM_09_LOAD_TIME_TLM_ID: 961 case VM_10_LOAD_TIME_TLM_ID: 962 case VM_11_LOAD_TIME_TLM_ID: 963 case VM_12_LOAD_TIME_TLM_ID: 964 vm_if_tlm_current_vm_snapshot.load_time[index] = value; 965 break; 966",9/15/05
ProjectA - TIM - 2013,Build 5.0 OBC Code: Array Out-of-Bounds in vm_if_tlm.c,3,"In function store_string of file vm_if_tlm.c there is a possibility that the array index of 'file_loaded' may be outside the bounds. Array 'file_loaded' of size 12 declared at vmpkt.h:159 may use index value -1. Also there is one similar error on line 570. This can happen because index can be returned as VM_INVALID_INDEX on line 535; however, no checks are made throughout the rest of the code to ensure that index != VM_INVALID_INDEX or -1 before using it to index arrays. Arrays are being accessed by index on lines 567, 570, and line 602. vm_common_types.h: 27 #define VM_INVALID_INDEX -1 vm_if_tlm.c: 530 if ((( tlm_id >= GV_STR_MIN_1 ) && ( tlm_id <= GV_STR_MAX_1 )) || 531 (( tlm_id >= GV_STR_MIN_2 ) && ( tlm_id <= GV_STR_MAX_2 )) || 532 (( tlm_id >= GV_STR_MIN_3 ) && ( tlm_id <= GV_STR_MAX_3 ))) 533 { 534 index = gv_index(tlm_id); 535 if (index != VM_INVALID_INDEX) 536 { 537 strcpy(VmGvTable.gv_string[index], str); 538 } 539 } 540 541 switch (tlm_id) 542 { 543 case VM_01_FILE_LOADED_TLM_ID: 544 case VM_02_FILE_LOADED_TLM_ID: 545 case VM_03_FILE_LOADED_TLM_ID: 546 case VM_04_FILE_LOADED_TLM_ID: 547 case VM_05_FILE_LOADED_TLM_ID: 548 case VM_06_FILE_LOADED_TLM_ID: 549 case VM_07_FILE_LOADED_TLM_ID: 550 case VM_08_FILE_LOADED_TLM_ID: 551 case VM_09_FILE_LOADED_TLM_ID: 552 case VM_10_FILE_LOADED_TLM_ID: 553 case VM_11_FILE_LOADED_TLM_ID: 554 case VM_12_FILE_LOADED_TLM_ID: 555 556 memcpy(rd_value, str, NUM_FILE_CHARS); 557 strncpy(func_name, rd_value, NUM_FILE_CHARS); 558 len = strlen(str); 559 560 if ( func_name[0] != FIRST_FILE_CHAR ){ 561 strncpy(func_name, ""d:/NONE"", NUM_FILE_CHARS); 562 563 /* VML telemetry special case: */ 564 /* Because we are sending this string TLM point as an Evnt Msg */ 565 /* stuff this tlm point with a fake info containing the length of file string passed */ 566 567 vm_if_tlm_current_vm_snapshot.file_loaded[index] = NO_FILE_LOAD; 568 569 } else { 570 vm_if_tlm_current_vm_snapshot.file_loaded[index] = len; 571 572 } 573 Event_Message (evr_info, func_name[3], func_name[4], func_name[5], func_name[6]); 574 575 break; 576 577 case VM_01_CURRENT_FUNCTION_NAME_TLM_ID: 578 case VM_02_CURRENT_FUNCTION_NAME_TLM_ID: 579 case VM_03_CURRENT_FUNCTION_NAME_TLM_ID: 580 case VM_04_CURRENT_FUNCTION_NAME_TLM_ID: 581 case VM_05_CURRENT_FUNCTION_NAME_TLM_ID: 582 case VM_06_CURRENT_FUNCTION_NAME_TLM_ID: 583 case VM_07_CURRENT_FUNCTION_NAME_TLM_ID: 584 case VM_08_CURRENT_FUNCTION_NAME_TLM_ID: 585 case VM_09_CURRENT_FUNCTION_NAME_TLM_ID: 586 case VM_10_CURRENT_FUNCTION_NAME_TLM_ID: 587 case VM_11_CURRENT_FUNCTION_NAME_TLM_ID: 588 case VM_12_CURRENT_FUNCTION_NAME_TLM_ID: 589 590 memcpy(rd_value, str, NUM_FUNC_CHARS); 591 strncpy(func_name, rd_value, NUM_FUNC_CHARS); 592 len = strlen(str); 593 594 if ( len <= 0 ){ 595 strncpy(func_name, ""NONE"", NUM_FILE_CHARS); 596 } 597 598 /* VML telemetry special case: */ 599 /* Because we are sending this string TLM point as an Evnt Msg */ 600 /* stuff this tlm point with a fake info containing the lentgh of the function string passed */ 601 602 vm_if_tlm_current_vm_snapshot.current_function_name[index] = len; 603 604 Event_Message (evr_info, func_name[0], func_name[1], func_name[2], func_name[3]); 605 606 break; 607 608 609 default: 610 break; 611 } 612",9/15/05
ProjectA - TIM - 2011,Build 5.0 OBC Code: Non-Initialized Data in vm_if_cmd.c,4,"In file vm_if_cmd.c, variable 'SBreturn_VmlCmdSend' might be used uninitialized in function cmd_send on line 144. vm_if_cmd.c: 110 SBret_status SBreturn_VmlCmdSend; 138 if((vm_extract_ccsds_part.hdr.packet_id & CMD_VALID) 139 && (tag_opcode == NOT_A_TAG)) { 140 SBreturn_VmlCmdSend = SBsend_copy (&vm_extract_ccsds_part); 141 } 142 143 144 if( SBreturn_VmlCmdSend != SB_NORMAL ) 145 { ...",9/15/05
ProjectA - TIM - 2008,Build 5.0 OBC Code: Null Pointer Dereference in vm_command.c line 383,3,"The dereferenced pointer 'state_def_ptr' might be null. Dereferenced object 'state_def_ptr' can contain null on line 383 where null value comes from function 'look_up_state' at line 376 vm_command.c: 376 state_def_ptr = look_up_state(opcode, parm_def_ptr->parm_number, NULL); 377 parm_def_ptr->state_def_ptr = state_def_ptr; 378 379 next_state_def_ptr = look_up_state(opcode, parm_def_ptr->parm_number, state_def_ptr); 380 381 while (next_state_def_ptr != NULL) 382 { 383 state_def_ptr->next_state_def_ptr = next_state_def_ptr; 384 state_def_ptr = next_state_def_ptr; 385 next_state_def_ptr = look_up_state(opcode, parm_def_ptr->parm_number, next_state_def_ptr); 386 } 387",9/15/05
ProjectA - TIM - 2007,Build 5.0 OBC Code: Non-Initialized Data in tyCoDrv.c line 335,4,"The variable 'status' might be used uninitialized in tyCoDrv.c at line 335. This can happen if any of the following cases occur FIOASYNCGETLCR, FIOASYNCSETLCR, FIOASYNCGETMCR, FIOASYNCSETMCR, FIOASYNCGETMSR, FIOASYNCSETBRR, or FIOASYNCGETBRR. tyCoDrv.c: 252 STATUS status;... 296 case FIOASYNCGETLCR: 297 298 * ((int *) arg) = * _UART_LCR; 299 break; 300 301 case FIOASYNCSETLCR: 302 303 * _UART_LCR = arg; 304 break; 305 306 case FIOASYNCGETMCR: 307 308 * ((int *) arg) = * _UART_MCR; 309 break; 310 311 case FIOASYNCSETMCR: 312 313 * _UART_MCR = arg; 314 break; 315 316 case FIOASYNCGETMSR: 317 318 * ((int *) arg) = * _UART_MSR; 319 break; 320 321 case FIOASYNCSETBRR: 322 323 * _UART_BRR = arg; 324 break; 325 326 case FIOASYNCGETBRR: 327 328 * ((int *) arg) = * _UART_BRR; 329 break; 330 ... 335 return (status);",9/15/05
ProjectA - TIM - 2006,"Build 5.0 OBC Code: Missing default and unused return value for function, TSs_get_curr_value",3,"The file, ts_stat.c, defines the function, TSs_get_curr_value, which returns a boolean if monitor_id < 256. Although apparently unlikely, if monitor_id > 255, the function does not return a value. However, regardless of whether the function returns a value, none of the calls to this function use the return value (Note: see referenced source code from file, sts_df.c). These problems would probably only represent maintenance problems if the return value is truly not needed. However, according to the comments provided by lines 126 - 139 of the file, sts_df.c, the function, TSs_get_curr_value, should return “true if the monitor point has been previously read; if the monitor has not yet been read, the derived function will be expected to generate some sort of average or assumed value.” Therefore, the implementation appears to be either incomplete or incorrect. Referenced Source Code: File - ../RAD6000/ts/src/ts_stat.c: 148 boolean TSs_get_curr_value ( u_word monitor_id, mon_point_val_type *current_value ) 149 { 150 if ( monitor_id < ts_total_monitor_points ) 151 { 152 *current_value = ts_statistics_table[ monitor_id ].current_reading.monitor_reading; 153 154 /* if monitor has been processed at least once */ 155 if ( ts_statistics_table[ monitor_id ].monitor_count ) 156 { 157 return ( TRUE ); 158 } 159 else 160 { 161 return ( FALSE ); 162 } 163 } 164 } /* end of TSs_get_curr_value */ File - ../RAD6000/ts/src/sts_df.c: 126 ** iv. The externally defined TSs_get_curr_value function returns 127 ** current monitor data from the statistics table. This function 128 ** requires two parameters: a valid monitor_id and an address to 129 ** store the monitor value. The function is of type boolean and 130 ** returns true if the monitor point has been previously read; if 131 ** the monitor has not yet been read, the derived function will 132 ** be expected to generate some sort of average or assumed 133 ** value: 134 ** 135 ** if (TSs_curr_value (parms [0], &value)) 136 ** regular processing 137 ** else 138 ** assumed value/error processing 139 */ : 142 extern boolean TSs_get_curr_value ( u_word monitor_id, mon_point_val_type *current_value ); : 502 TSs_get_curr_value ( list[ 0 ], &and0 ); : 507 TSs_get_curr_value ( list[ 1 ], &and1 ); : 512 TSs_get_curr_value ( list[ 2 ], &and2 ); : 517 TSs_get_curr_value ( list[ 3 ], &and3 ); : 522 TSs_get_curr_value ( list[ 4 ], &and4 ); : 566 TSs_get_curr_value ( list[ 0 ], &or0 ); : 571 TSs_get_curr_value ( list[ 1 ], &or1 ); : 576 TSs_get_curr_value ( list[ 2 ], &or2 ); : 581 TSs_get_curr_value ( list[ 3 ], &or3 ); : 586 TSs_get_curr_value ( list[ 4 ], &or4 ); : 629 TSs_get_curr_value ( list[ 0 ], &xor0 ); : 634 TSs_get_curr_value ( list[ 1 ], &xor1 ); : 639 TSs_get_curr_value ( list[ 2 ], &xor2 ); : 644 TSs_get_curr_value ( list[ 3 ], &xor3 ); : 649 TSs_get_curr_value ( list[ 4 ], &xor4 ); : 691 TSs_get_curr_value ( list[ 0 ], &param0 ); : 695 TSs_get_curr_value ( list[ 1 ], &param1 ); : 699 TSs_get_curr_value ( list[ 2 ], &param2 ); : 703 TSs_get_curr_value ( list[ 3 ], &param3 ); : 707 TSs_get_curr_value ( list[ 4 ], &param4 ); : 753 TSs_get_curr_value ( list[ 0 ], &sep3_mon_point_val); : 1022 TSs_get_curr_value ( list[ 0 ], &SDST_Tlm ); : 1289 TSs_get_curr_value ( list[ 0 ], &A_TWTA_value ); 1290 TSs_get_curr_value ( list[ 1 ], &B_TWTA_value ); : 1348 TSs_get_curr_value ( list[ 0 ], &A_TWTA_value ); 1349 TSs_get_curr_value ( list[ 1 ], &B_TWTA_value ); : 1419 TSs_get_curr_value ( list[ 0 ], &Twta1_Pri_value); 1420 TSs_get_curr_value ( list[ 1 ], &Twta2_Pri_value); 1421 TSs_get_curr_value ( list[ 2 ], &Twta1_Red_value); : 1483 TSs_get_curr_value ( list[ 0 ], &SADE_1_value); : 1606 TSs_get_curr_value ( list[ 0 ], &rate_null_timeout); : 1802 TSs_get_curr_value ( list[ 0 ], &SPC_Pressure ); : 1861 TSs_get_curr_value ( list[ 0 ], &eclEnginee_flag ); 1862 TSs_get_curr_value ( list[ 1 ], &AC_Mode_stat ); 1863 TSs_get_curr_value ( list[ 2 ], &AC_Slew_stat ); : 1919 TSs_get_curr_value ( list[ 0 ], &SA_voltage ); : 1973 TSs_get_curr_value ( list[ 0 ], &spc_voltage); : 2034 TSs_get_curr_value ( list[ 0 ], &batt_charge_state ); : 2093 TSs_get_curr_value ( list[ 0 ], &temp1); 2094 TSs_get_curr_value ( list[ 1 ], &temp2); 2095 TSs_get_curr_value ( list[ 2 ], &temp3); 2096 TSs_get_curr_value ( list[ 3 ], &temp4); 2097 TSs_get_curr_value ( list[ 4 ], &temp5); : 2155 TSs_get_curr_value ( list[ 0 ], &value ); : 2212 TSs_get_curr_value ( list[ 0 ], &spc_pressure ); 2213 TSs_get_curr_value ( list[ 1 ], &spc_batt_volt); : 2315 TSs_get_curr_value ( list[ 0 ], &rt_unit_1 ); 2316 TSs_get_curr_value ( list[ 1 ], &rt_unit_2 ); 2317 TSs_get_curr_value ( list[ 2 ], &rt_unit_3 ); 2318 TSs_get_curr_value ( list[ 3 ], &rt_unit_4 ); 2319 TSs_get_curr_value ( list[ 4 ], &rt_unit_5 ); : 2377 TSs_get_curr_value ( list[ 0 ], &fc1_1553_status ); 2378 TSs_get_curr_value ( list[ 1 ], &fc2_1553_status ); 2379 TSs_get_curr_value ( list[ 2 ], &vir_1553_status ); : 2426 TSs_get_curr_value ( list[ 0 ], &status_1 ); 2427 TSs_get_curr_value ( list[ 1 ], &status_2 ); 2428 TSs_get_curr_value ( list[ 2 ], &status_3 ); : 2775 TSs_get_curr_value ( list[ 0 ], &WTS_PosTlms ); : 2863 TSs_get_curr_value ( list[ 0 ], &crit_status_data ); : 2925 TSs_get_curr_value ( list[ 0 ], &twta_state ); : 3009 TSs_get_curr_value ( list[ 0 ], &wts_group2 ); : 3095 TSs_get_curr_value ( list[ 0 ], &wts_group1 ); 3096 TSs_get_curr_value ( list[ 1 ], &wts_group2 ); 3097 TSs_get_curr_value ( list[ 2 ], &antenna );",9/15/05
ProjectA - TIM - 2005,Build 5.0 OBC Code: Non-Initialized Data in sysLib.c,4,The local variable 'mappedAdrsSpace' in file sysLib.c at line 917 is used uninitialized. sysLib.c: 908 unsigned int mappedAdrsSpace; 909 unsigned int segVal; 910 unsigned int ioccConfig; 911 STATUS rc; 912 913 segVal = mfsr (SR_PIO); 914 ioccConfig = * IOCC_CONFIG; 915 916 917 if (mappedAdrsSpace == adrsSpace),9/15/05
ProjectA - TIM - 2004,"Build 5.0 OBC Code: Uninitialized local vars, 'x' and 'y'., in sts_df.c",3,"The file, sts_df.c, defines the function, TSdf_ST_Component_Errors, which defines the local variables, 'x' and 'y'. These variables are never initialized; however, lines 2555 - 2556 perform bit-shift operations based on the values assigned to these variables. Referenced Source Code: File - ../RAD6000/ts/src/sts_df.c: 2546 mon_point_val_type TSdf_ST_Component_Errors ( mon_point_val_type value, u_byte list[] ) : 2551 mon_point_val_type x, y; : 2554 // get bit value from Jonathan 2555 tracker1 = (( value >> x ) & mask); 2556 tracker2 = (( value >> y ) & mask);",9/15/05
ProjectA - TIM - 2003,Build 5.0 OBC Code: Function Return in sts_df.c line 1772,3,"Non-void function on line 1748 does not return value. It appears that this function has not been implemented, however we felt that it was worth noting because this function is being used in the TSdf_offset_table. There are numerous functions in this file similar to this on lines 2258, 2285, 2523, 2604, 2632, 2659, 2687, 2715, 2743, 3211, 3237, 3263, 3289, and 3315. All of these functions will return random values until implemented. sts_df.c: 1748 //***************************************************************** 1749 // 1750 // Function name: TSdf_Spare 1751 // 1752 // Purpose: Derived function number 20 1753 // 1754 // Input: 1755 // value - monitor point's value 1756 // list[0] - not used 1757 // list[1] - not used 1758 // list[2] - not used 1759 // list[3] - not used 1760 // list[4] - not used 1761 // 1762 // Return Value: 1763 // 1 - if 1764 // 0 - if 1765 // 1766 // PDL: 1767 // 1768 //******************************************************************/ 1769 mon_point_val_type TSdf_Spare ( mon_point_val_type value, u_byte list[] ) 1770 { 1771 ; 1772 }... 211 der_func_ptr TSdf_offset_table[ ] = 212 {... 233 TSdf_Spare, // 20",9/15/05
ProjectA - TIM - 2002,"Build 5.0 OBC FSW CA: Uninitialized local vars, 'w', 'x', 'y', 'z', and 'a', in sts_df.c - case #2",3,"The file, sts_df.c, defines the function, TSdf_Cmd_Loss_Seq_2, which defines the local variables, 'w', 'x', 'y', 'z', and 'a'. These variables are never initialized; however, lines 1688 - 1696 perform bit-shift operations based on the values assigned to these variables. Referenced Source Code: File - ../RAD6000/ts/src/sts_df.c: 1677 mon_point_val_type TSdf_Cmd_Loss_Seq_2 ( mon_point_val_type value, u_byte list[] ) : 1686 int a, w, x, y, z; 1687 1688 cmd5 = (( value >> w ) & mask); 1689 cmd6 = (( value >> w ) & mask); 1690 cmd7 = (( value >> x ) & mask); 1691 cmd8 = (( value >> y ) & mask); 1692 cmd9 = (( value >> z ) & mask); 1693 cmd10 = (( value >> a ) & mask); 1694 cmd11 = (( value >> a ) & mask); 1695 cmd12 = (( value >> a ) & mask); 1696 cmd13 = (( value >> a ) & mask);",9/15/05
ProjectA - TIM - 2001,"Build 5.0 OBC Code: Uninitialized local vars, 'w', 'x', 'y', 'z', and 'a', in sts_df.c - case #1",3,"The file, sts_df.c, defines the function, TSdf_Cmd_Loss_Seq_1, which defines the local variables, 'w', 'x', 'y', 'z', and 'a'. These variables are never initialized; however, lines 1608 - 1612 perform bit-shift operations based on the values assigned to these variables. Referenced Source Code: File - ../RAD6000/ts/src/sts_df.c: 1595 mon_point_val_type TSdf_Cmd_Loss_Seq_1 ( mon_point_val_type value, u_byte list[] ) : 1604 int a, w, x, y, z; 1605 1606 TSs_get_curr_value ( list[ 0 ], &rate_null_timeout); 1607 1608 cmd1 = (( value >> w ) & mask); 1609 cmd2 = (( value >> x ) & mask); 1610 cmd3 = (( value >> y ) & mask); 1611 cmd4 = (( value >> z ) & mask); 1612 cmd13 = (( value >> a ) & mask);",9/15/05
ProjectA - TIM - 2000,"Build 5.0 OBC Code: Uninitialized var, 'Twta_Pwr_State', in sts_df.c",3,"The file sts_df.c defines the function, TSdf_TWTA_Power_State, which defines the local variable, Twta_Pwr_State. This variable is set to either 0, 1, or 2 depending on the conditions established by lines 1432 - 1447. Although the function may never be called in a case when the primary and redundant power states for both TWTA components are all 0, (i.e. off), function, TSdf_TWTA_Power_State, does not seem to preclude this case from occurring. If this case does occur, the variable Twta_Pwr_State will be uninitialized. Referenced Source Code: File - ../RAD6000/ts/src/sts_df.c: 1412 mon_point_val_type TSdf_TWTA_Power_State ( mon_point_val_type value, u_byte list[] ) : 1416 mon_point_val_type Twta_Pwr_State;... 1432 if ( (Twta1_Pri == Twta1_Red) && (Twta1_Pri == 1) ) 1433 { 1434 Twta_Pwr_State = 1; 1435 } 1436 else if ( (Twta2_Pri == Twta2_Red) && (Twta2_Pri == 1) ) 1437 { 1438 Twta_Pwr_State = 1; 1439 } 1440 else if ( (Twta1_Pri == 1) || (Twta1_Red == 1) ) 1441 { 1442 if ( (Twta2_Pri == 1) || (Twta2_Red == 1) ) 1443 { 1444 Twta_Pwr_State = 2; 1445 } 1446 else Twta_Pwr_State = 0; 1447 } 1448 1449 return Twta_Pwr_State ;",9/15/05
ProjectA - TIM - 1999,Build 5.0 OBC Code: Unreachable Code in sm_main.c line 1001,3,"The code on line 1001 is unreachable. It appears that the code is supposed to be after the case statement. sm_main.c: 624 switch ( sm_cmd_pkt->sec_hdr.function_code ) 625 {... 991 default: 992 /* sb_rtn_stat = eventf ( SM_TASK_ID, ""XSM101"" */ /*D100-021*/ 993 /* ""Invalid function code: %X"", */ /*D100-021*/ 994 /* sm_cmd_pkt->sec_hdr.function_code ) ; */ /*D100-021*/ 995 Event_Message ( SM_INVALID_CMD, /*D100-021*/ 996 sm_cmd_pkt->sec_hdr.function_code ); /*D100-021*/ 997 998 sm_hk_msg.fast.tot_err_cnt++ ; 999 break ; 1000 1001 taskDelay (1); /* allow lower priority tasks to get some time */ 1002 } /* End switch */",9/15/05
ProjectA - TIM - 1998,Build 5.0 OBC Code: Array Out-of-Bounds in sbrecv.c,3,"Suspicious dereference of pointer 'dd' before NULL check at line 114. This is compiler specific but the check for NULL could actually occur after the dereference. sbrecv.c: 114 if (dd->curr_buff == 0 || dd == NULL ) { 115 /* SBerror error={99 ,pd->current_buff->stream_id, 116 pd->queue_id, pd->task_id}; drw */ 117 SBerror error; 118 error.type = 99; 119 error.stream_id = pd->current_buff->stream_id ; 120 error.pipeline_id = pd->queue_id; 121 error.task_id = pd->task_id; 122 123 SBevent_handler(&error); 124 return; 125 }",9/15/05
ProjectA - TIM - 1997,Build 5.0 OBC Code: Array Out-of-Bounds in s3task.c,3,"Buffer overflow, array index of 'GRaND_tlm_buf' may be outside the bounds on line 1166 of s3task.c. Array 'GRaND_tlm_buf' of size 2048 declared at line 171 may use index value 2048 This can happen because GRaND_tlm_buf_count is allowed to be equal to GRAND_TLM_BUFF_LENGTH because the condition statement on line 1051 only prevents it from being greater than GRAND_TLM_BUFF_LENGTH. Then the while loop will increment GRaND_tlm_buf_process_count until it is GRaND_tlm_buf_count, so it could end up equal to GRAND_TLM_BUFF_LENGTH-1. Then on line 1166 the array is accessed at GRaND_tlm_buf_process_count+1 which would allow it to access the array at position GRAND_TLM_BUF_LENGTH which is out of bounds. grpkt.h: 68 #define GRAND_TLM_BUFF_LENGTH 2048 s3task.c: 1051 if ( GRaND_tlm_buf_count > GRAND_TLM_BUFF_LENGTH ) 1052 { 1053 /* the buffer has overflowed */ 1054 /* drop everything and try to restart */ 1055 /* likely, data pointers are corrupted */ 1056 1057 Event_Message ( S3_BUFFER_ERROR , GRaND_tlm_buf_count, 0 ); 1058 grand_s3_tlm.total_dropped_bytes += GRaND_tlm_buf_count - 1059 GRaND_tlm_buf_process_count; 1060 grand_s3_tlm.dropped_bytes += GRaND_tlm_buf_count - 1061 GRaND_tlm_buf_process_count; 1062 1063 /* empty buffer and drop through loop */ 1064 1065 GRaND_tlm_buf_process_count = 0; 1066 GRaND_tlm_buf_count = 0; 1067 GRaND_tlm_buf_sync_hi_position = 0; 1068 }... 1072 while ( GRaND_tlm_buf_process_count < GRaND_tlm_buf_count ) 1073 {... 1163 GRaND_tlm_data_count += (u_word) GRaND_tlm_buf[GRaND_tlm_buf_process_count]; 1164 /* set up a pointer to the message data */ 1165 1166 GRaND_tlm_buf_data_ptr = &GRaND_tlm_buf[GRaND_tlm_buf_process_count + 1];",9/15/05
ProjectA - TIM - 1995,Build 5.0 OBC Code: Non void function does not return value in rtos.c,3,"Non-void function 'rtos_stat_cycle_end' in rtos.c does not return a value. It appears that the function has not been implemented yet. The function will return an unpredictable value. It does not appear however, that the return value is being used. It is called by functions 'vm_tick_task' and 'vm_manager_task'. rtos.c: 305 306 rtos_stat_type rtos_stat_cycle_end(rtos_stat_type stat) 307 { 308 } 309",9/15/05
ProjectA - TIM - 1994,Build 5.0 OBC Code: Non void function does not return value in rtos.c,3,"Non-void function 'rtos_stat_create' in rtos.c does not return a value. It appears that this function has not been implemented yet; however, the return value of the function is being used by 'vm_initialize' in vm.c. Currently the function will return essentially an unpredictable value. rtos.c: 284 rtos_stat_type rtos_stat_create(const char *tag, const double max_cycle_length_sec, 285 const double default_sample_period_sec) 286 { 287 } vm.c: 1767 vm_manager_stat = rtos_stat_create(""vm_mngr"", MANAGER_MAX_CYCLE_LENGTH, 1768 DEFAULT_CPDU_SAMPLE_PERIOD); 1769 1770 vm_tick_stat = rtos_stat_create(""vm_tick"", VM_SECONDS_PER_TICK, 1771 DEFAULT_CPDU_SAMPLE_PERIOD);",9/15/05
ProjectA - TIM - 1993,Build 5.0 OBC Code: Non-Initialized Data in ppcRxSocket.c line 172,3,'rsZeroCnt' might be used uninitialized in this function. ppcRxSocket.c: 130 int rsZeroCnt;... 172 else if ( rs == 0 && rsZeroCnt++ == 50),9/15/05
ProjectA - TIM - 1992,Build 5.0 OBC Code: Array Out-of-Bounds in makeLoadScript.c,4,"There is a possibility of buffer overflow, the array index of 'msg' may be outside the bounds. Array 'msg' of size 100 declared at line 248 may use index values 0..346. makeLoadScript.c: 248 char msg[100]; 249 ... 57 typedef struct binInfoStruct 58 { 59 char fileName[120]; 60 char length[16]; 61 char crc[16]; 62 } binInfo; 63 ... 57 typedef struct binInfoStruct 58 { 59 char fileName[120]; 60 char length[16]; 61 char crc[16]; 62 } binInfo;... 253 sprintf (msg, 254 ""start AppsImageLoader (%s, %s, %s, %s, %s, %s) until 2\n\nend\n"", 255 &info->vxBin.fileName, 256 &info->vxBin.length, 257 &info->vxBin.crc, 258 &info->vxDescBin.fileName, 259 &info->vxDescBin.length, 260 &info->vxDescBin.crc);",9/15/05
ProjectA - TIM - 1991,Build 5.0 OBC Code: Unreachable Code in dsmain.c line 433,4,"The code on line 433 is unreachable because bulk_memory_ok is always equal to false. This is probably because of the line on 406 is commented out. dsmain.c: 379 boolean bulk_memory_ok = FALSE; 380 381 /* 382 * figure out if this is a warm or cold boot 383 */ 384 init_message = SBpend_on_init(); 385 /* 386 ** Create the binary sem used for mutial exclusive access to the ds_output_ready_table 387 */ 388 SemDsOutputReadyTableAccess = semMCreate(SEM_Q_PRIORITY | SEM_DELETE_SAFE | SEM_INVERSION_SAFE); 389 if (SemDsOutputReadyTableAccess == NULL) 390 /* SBret = eventf(DS_TASK_ID, ""SDS100 Create SemDsOutputReadyTableAccess failed""); */ /*D100-014*/ 391 Event_Message ( DS_CREATE_SEMAPHORE_FAIL ); /*D100-014*/ 392 393 /* initialize everytime */ 394 ds_dump_control_table.dump_in_progress = FALSE; 395 ds_backup_limiter = 0; 396 DS_init_output_chan(); /* AW 050699 */ 397 /* 398 ** The following line is added for OV4. AW020499 399 */ 400 /* get the address of the backup structure in bulk memory */ 401 ds_backup_structure_ptr = (backup_structure_type *)ds_segment_table.segment[ds_segment_table.backup_seg_index].start_segment; 402 403 /* check to see if bulk memory needs to be reformatted */ 404 /* Force initialize DRAM card everytime-- Need to detect OV4-defined COLD and WARM boot here (counters) */ 405 /* instead of detecting ""bulk_memory_ok""-- TQD */ 406 //bulk_memory_ok = DS_32bitCmp(ds_bulk_memory_pattern, ds_backup_structure_ptr->bulk_memory_pattern,BULK_MEMORY_PATTERN_SIZE); 407 408 if (bulk_memory_ok == FALSE) {",9/15/05
ProjectA - TIM - 1990,Build 5.0 OBC Code: Non-Initialized Data in di_cmd.c,3,"In file di_cmd.c 'nFailures' might be used uninitialized in this function on line 1464. di_cmd.c: 1402 long nFailures; 1403 1404 1405 #if VERBOSITY > 0 1406 TransmitString(""\r\nTMR Error Test\r\n""); 1407 #endif 1408 1409 /* 1410 * check for disallowed modes 1411 * 1412 */ 1413 1414 if( ( diTlm.di_MapMode != eDI_MAP_MODE_HERITAGE ) && ( diTlm.di_MapMode != eDI_MAP_MODE_OVERLAY ) ) 1415 { 1416 diTlm.di_CmdsRej++; 1417 localErrors++; 1418 diTlm.di_LastErrorCode = eDI_TMR_WRONG_MODE; 1419 } 1420 else 1421 { 1422 /* 1423 * loop through the address range, testing all three banks of 1424 * RAM for TMR errors. 1425 */ 1426 nFailures = 0; 1427 for (address = StartAddress; address < StartAddress + (Size * sizeof(u_dword)); address += sizeof(u_dword)) 1428 { 1429 1430 #if VERBOSITY > 0 1431 TransmitString(""\r\nTesting TMR at address 0x""); 1432 TransmitLongString(address); 1433 TransmitString(""\r\n""); 1434 #endif 1435 1436 errors = TMRTestMMAddress(address, 0x80000000); 1437 1438 if ( errors ) 1439 { 1440 1441 nFailures++; 1442 1443 } 1444 1445 #if VERBOSIT > 0 1446 TransmitString("" Bank A Errors : Total : 0x""); 1447 TransmitLongString(errors); 1448 TransmitString("" Upper : 0x""); 1449 TransmitLongString(UpperErrors); 1450 TransmitString("" Lower : 0x""); 1451 TransmitLongString(LowerErrors); 1452 TransmitString(""\r\n""); 1453 #endif 1454 1455 } 1456 } 1457 1458 if (localErrors) 1459 { 1460 return localErrors; 1461 } 1462 else 1463 { 1464 return nFailures; 1465 } 1466",9/15/05
ProjectA - TIM - 1989,Build 5.0 OBC Code: Non-Initialized Data in di_cmd.c,3,"In file di_cmd.c 'localErrors' is used uninitialized on line 1417. di_cmd.c: 1399 u_dword LowerErrors; 1400 u_dword UpperErrors; 1401 u_dword localErrors; 1402 long nFailures; 1403 1404 1405 #if VERBOSITY > 0 1406 TransmitString(""\r\nTMR Error Test\r\n""); 1407 #endif 1408 1409 /* 1410 * check for disallowed modes 1411 * 1412 */ 1413 1414 if( ( diTlm.di_MapMode != eDI_MAP_MODE_HERITAGE ) && ( diTlm.di_MapMode != eDI_MAP_MODE_OVERLAY ) ) 1415 { 1416 diTlm.di_CmdsRej++; 1417 localErrors++;",9/15/05
ProjectA - TIM - 1988,Build 5.0 OBC Code: Memory Leak in bcdd.c,3,"There is a possible memory leak in file bcdd.c at line 930. Dynamic memory stored in 'minor_c' allocated through function 'malloc' at line 910 can be lost at line 930. Also there are 3 similar errors on lines 941, 948, 957. bcdd.c: 908 int *minor_c, largest = 0, mcc; 909 910 minor_c = (int *) malloc(sizeof (ULONG) * mc_num); 911 if (!minor_c) 912 { 913 sendBCErrQ (LMC_MALLOC_ERR, 0); 914 return(ERROR); 915 } 916 917 /* initialize counts */ 918 for (j = 0; j < mc_num; j++) minor_c[j] = 0; 919 920 /* loop through all channel defs. */ 921 922 while (ch_p->chnl_id != -1) 923 { 924 925 ch_cnt++; 926 /* validate channel_id and ensure that max channel is not exceeded */ 927 if ( ( ch_cnt > max_chs) || (ch_p->chnl_id > max_chs ) ) 928 { 929 sendBCErrQ( MAXCH_ERR, 0); 930 return(ERROR); 931 }",9/15/05
ProjectA - TIM - 1987,Build 5.0 OBC Code: Unreachable Code in bcdd.c,3,"The code inside of the while loop below (from file bcdd.c, function bcMsgHdlr) is unreachable because init_mc is always TRUE. bcdd.c: 444 init_mc = TRUE; /* init. minor cycle flags */ 445 mci = 0; 446 aper.cnt = 0; /* clear aper out count A17 */ 447 448 /* while minor cycle execution time does not exceed minor cycle timer */ 449 while (TRUE) 450 { 451 #if TIME_PROC 452 /* lock = intLock(); */ 453 /* get start time */ 454 pre = RTCLread(); 455 if (pre <= iac) 456 { 457 wrk_time[widx] = 0xDEADBEEF; 458 } 459 else { 460 wrk_time[widx] = 0x20000000 + ((pre - iac) / 64); 461 } 462 widx++; 463 widx &= 0x7f; 464 #endif 465 466 cbp = (cmdblk_t *) MAKE_RADR (start_cb->br_adr); 467 468 sync_rts = tvw_rts = curr_rts; /* set bits only for active RTs A26 */ 469 470 /* process each cmd. block from the minor cycle just completed */ 471 while ((cbp != end_cb) && !init_mc) 472 { 473 474 if (!(cbp->desc & RT2RT_CB)) /* nothing to process for RT - RT */ 475 {",9/15/05
ProjectA - TIM - 1986,Build 5.0 OBC Code: Unreachable Code in auetoq.c line 101,3,"The code on line 101 is unreachable because ExecutionStatus is always equal to STATUS_OK. auetoq.c: 58 status_type ExecutionStatus = STATUS_OK; 59 vector_type CosHalfTheta, SinHalfTheta ; 60 u_word n[3], i; 61 62 for ( i = 0; i < 3; i++ ) 63 { 64 CosHalfTheta.v[i] = cos(0.5*Euler->v[i]); 65 SinHalfTheta.v[i] = sin(0.5*Euler->v[i]); 66 } 67 68 /* 69 ** Rotation Sequence ... 70 */ 71 n[0] = 0; 72 n[1] = 1; 73 n[2] = 2; 74 75 if ( ExecutionStatus == STATUS_OK )",9/15/05
ProjectA - TIM - 1985,Build 5.0 OBC Code: Array Out-of-Bounds in an_tbl_manager.c line 209,2,"Buffer overflow, array index of 'wk_tbl_status' may be outside the bounds. Array 'wk_tbl_status' of size 20 declared at an_dram_table.h:92 may use index value 20. Also there are 2 similar errors on lines 212, 234. This can happen because AN_DRAM_ASTEROID_TABLE_NUM is equal to 20 and the conditional statement is using tbl_ptr->index<=AN_DRAM_ATEROID_TABLE_NUM. an_dram_table.h: 24 #define MAX_AN_TABLE 20... 92 work_table_type wk_tbl_status[MAX_AN_TABLE]; /* status flag for work table*/ 93 load_table_type ld_tbl_status[MAX_AN_TABLE]; /* status flag for load table*/... 36 #define AN_DRAM_ASTEROID_TABLE_NUM 20 an_tbl_manager.c: 204 if (( tbl_ptr->tbl_id == AN_DRAM_EPHEM_TABLE_ID && tbl_ptr->index <= AN_DRAM_EPHEM_TABLE_NUM ) || 205 ( tbl_ptr->tbl_id == AN_DRAM_PLANET_TABLE_ID && tbl_ptr->index <= AN_DRAM_PLANET_TABLE_NUM ) || 206 ( tbl_ptr->tbl_id == AN_DRAM_ASTEROID_TABLE_ID && tbl_ptr->index <= AN_DRAM_ASTEROID_TABLE_NUM ) || 207 ( tbl_ptr->tbl_id == AN_DRAM_THRUST_TABLE_ID && tbl_ptr->index <= AN_DRAM_THRUSTER_TABLE_NUM ) ) 208 { 209 if ( tbl_ptr->wk_tbl_status[tbl_ptr->index].copy_complete == 1 ) 210 {",9/15/05
ProjectA - TIM - 1984,Build 5.0 OBC Code: Non-Initialized Data in ambiTestFns.c,3,"The local variable 'pui_pioAddr32' in file ambiTestFns.c is used uninitialized in function ambiPioDump at line 975. ambiTestFns.c: 936 volatile UINT *pui_pioAddr32;... 975 i = 0x20; printf(""RMW0:\t0x%8x\n"",*(pui_pioAddr32 + i)); 976 i = 0x22; printf(""RMW1:\t0x%8x\n"",*(pui_pioAddr32 + i)); 977 i = 0x24; printf(""RMW2:\t0x%8x\n"",*(pui_pioAddr32 + i)); 978 i = 0x26; printf(""RMW3:\t0x%8x\n"",*(pui_pioAddr32 + i)); 979 i = 0x28; printf(""RMW4:\t0x%8x\n"",*(pui_pioAddr32 + i)); 980 i = 0x2a; printf(""RMW5:\t0x%8x\n"",*(pui_pioAddr32 + i)); 981 i = 0x2c; printf(""RMW6:\t0x%8x\n"",*(pui_pioAddr32 + i)); 982 i = 0x2e; printf(""RMW7:\t0x%8x\n"",*(pui_pioAddr32 + i)); 983 i = 0x30; printf(""RMW8:\t0x%8x\n"",*(pui_pioAddr32 + i)); 984 i = 0x32; printf(""RMW9:\t0x%8x\n"",*(pui_pioAddr32 + i)); 985 i = 0x34; printf(""RMWA:\t0x%8x\n"",*(pui_pioAddr32 + i)); 986 i = 0x36; printf(""RMWB:\t0x%8x\n"",*(pui_pioAddr32 + i)); 987 i = 0x38; printf(""RMWC:\t0x%8x\n"",*(pui_pioAddr32 + i)); 988 i = 0x3a; printf(""RMWD:\t0x%8x\n"",*(pui_pioAddr32 + i)); 989 i = 0x3c; printf(""RMWE:\t0x%8x\n"",*(pui_pioAddr32 + i)); 990 i = 0x3e; printf(""RMWf:\t0x%8x\n"",*(pui_pioAddr32 + i));",9/15/05
ProjectA - TIM - 1983,Build 5.0 OBC Code: Logical in ambiTM.c,4,"The statement on line 629 of file ambiTM.c has no effect. It appears that the line is supposed to be flag_error_received = YES. ambiTM.c: 626 if(ERROR == my_status) 627 { 628 tmErrLog(ambiSel, TM_SEMTAKE3_ERR, errno); 629 flag_error_received == YES; 630 }",9/15/05
ProjectA - TIM - 1982,Build 5.0 OBC Code: Array Out-of-Bounds in ambiTM.c,3,"There is potential for buffer overflow in file ambiTM.c at line 223, the array index of 'ambi_data' may be outside the bounds. Array 'ambi_data' of size 2 declared at ambiDrv.h:24 may use index value 2. Also there is one similar error on line 231. ambiDrv.h: 8 #define MAX_NUMBER_OF_AMBIS 2 /* 4 uses all RSC seg registers.*/... 24 ambi_structure ambi_data[MAX_NUMBER_OF_AMBIS]; ambiTM.c: 222 else if (ambiSel == 2) 223 ambi_data[ambiSel].ui_SlaveHndlrId = taskSpawn(""tmSlaveIntNotifyTask2"", 224 15, 225 NO_OPTIONS, 226 STACK_SIZE, 227 (FUNCPTR)tmSlaveIntNotifyTask2, 228 0,0,0,0,0,0,0,0,0,0); 229 230 else if (ambiSel == 3) 231 ambi_data[ambiSel].ui_SlaveHndlrId = taskSpawn(""tmSlaveIntNotifyTask3"", 232 15, 233 NO_OPTIONS, 234 STACK_SIZE, 235 (FUNCPTR)tmSlaveIntNotifyTask3, 236 0,0,0,0,0,0,0,0,0,0);",9/15/05
ProjectA - TIM - 1981,Build 5.0 OBC Code: Array Out-of-Bounds in ambiTM.c,3,"There is potential buffer overflow at line 1136 of file ambiTM.c. The array index of 'ambi_data' may be outside the bounds. Array 'ambi_data' of size 2 declared at ambiDrv.h:24 may use index value 3. Also there are 2 similar errors on lines 1144, 1149. ambiDrv.h: 8 #define MAX_NUMBER_OF_AMBIS 2 /* 4 uses all RSC seg registers.*/... 24 ambi_structure ambi_data[MAX_NUMBER_OF_AMBIS]; ambiTM.c: 1128 void tmSlaveIntNotifyTask3(void) 1129 { 1130 STATUS my_status = ERROR; 1131 UCHAR uc_slave_status; 1132 UCHAR ambiSel = 3; 1133 1134 while(TRUE) /* Repeat this loop until the task is deleted. */ 1135 { 1136 my_status = semTake(ambi_data[ambiSel].semTMSlaveTask, WAIT_FOREVER); 1137 1138 if(my_status == ERROR) 1139 tmErrLog(ambiSel, TM_SEMTAKE6_ERR, errno); 1140 1141 /****************************************************************/ 1142 /* Call user-defined slave handler function...pass SLAVE_STATUS */ 1143 /****************************************************************/ 1144 if(ambi_data[ambiSel].pfunc_slave_Hndlr == NULL) 1145 {} 1146 1147 else 1148 { 1149 my_status = ambi_data[ambiSel].pfunc_slave_Hndlr(); 1150 if (my_status != OK) 1151 { 1152 tmErrLog(ambiSel, TM_SLAVE_INT_HNDLR_ERR, errno); 1153 } 1154 1155 } /* end of else */ 1156 } /* end of while loop */ 1157 } /* end of handler */",9/15/05
ProjectA - TIM - 1980,Build 5.0 OBC Code: Array Out-of-Bounds in ambiTM.c,3,"There is potential for buffer overflow on line 1105 of file ambiTM.c. The array index of 'ambi_data' may be outside the bounds. Array 'ambi_data' of size 2 declared at ambiDrv.h:24 may use index value 2. Also there are 2 similar errors on lines 1113, 1117. ambiDrv.h: 8 #define MAX_NUMBER_OF_AMBIS 2 /* 4 uses all RSC seg registers.*/... 24 ambi_structure ambi_data[MAX_NUMBER_OF_AMBIS]; ambiTM.c: 1097 void tmSlaveIntNotifyTask2(void) 1098 { 1099 STATUS my_status = ERROR; 1100 UCHAR uc_slave_status; 1101 UCHAR ambiSel = 2; 1102 1103 while(TRUE) /* Repeat this loop until the task is deleted. */ 1104 { 1105 my_status = semTake(ambi_data[ambiSel].semTMSlaveTask, WAIT_FOREVER); 1106 1107 if(my_status == ERROR) 1108 tmErrLog(ambiSel, TM_SEMTAKE6_ERR, errno); 1109 1110 /****************************************************************/ 1111 /* Call user-defined slave handler function...pass SLAVE_STATUS */ 1112 /****************************************************************/ 1113 if(ambi_data[ambiSel].pfunc_slave_Hndlr == NULL) 1114 {} 1115 else 1116 { 1117 my_status = ambi_data[ambiSel].pfunc_slave_Hndlr(); 1118 if (my_status != OK) 1119 tmErrLog(ambiSel, TM_SLAVE_INT_HNDLR_ERR, errno); 1120 1121 } /* end of else */ 1122 } /* end of while loop */ 1123 } /* end of handler */",9/15/05
ProjectA - TIM - 1979,Build 5.0 OBC Code: Array Out-of-Bounds in ambiPID.c,3,"Buffer overflow on line 732 of file ambiPID.c, array index of 'ambi_data' may be outside the bounds. Array 'ambi_data' of size 2 declared at ambiDrv.h:24 may use index value 3. Also there is one similar error on line 737. ambiDrv.h: 8 #define MAX_NUMBER_OF_AMBIS 2 /* 4 uses all RSC seg registers.*/... 24 ambi_structure ambi_data[MAX_NUMBER_OF_AMBIS]; ambiPID.c: 722 void ambiPIDNotifyTask3(void) 723 { 724 STATUS my_status = ERROR; 725 UCHAR ambiSel = 3; 726 727 while(TRUE) /* Repeat this loop until the task is deleted. */ 728 { 729 /******************************************************/ 730 /***** Wait to be called by the interrupt handler *****/ 731 /******************************************************/ 732 my_status = semTake(ambi_data[ambiSel].semPIDIntTask, WAIT_FOREVER); 733 734 if(my_status == ERROR) 735 tmErrLog(0, PID_SEMTAKE_ERROR, errno); 736 737 my_status = ambi_data[ambiSel].pfunc_pid_Hndlr(); 738 739 if (my_status != OK) 740 tmErrLog(ambiSel, PID_HNDLR_ERROR, errno); 741 742 } /* end of while loop */ 743 } /* end of task */ 744",9/15/05
ProjectA - TIM - 1978,Build 5.0 OBC Code: Array Out-of-Bounds in ambiPID.c,3,"There is potential buffer overflow at line 706 of file ambiPID.c The array index of 'ambi_data' may be outside the bounds. Array 'ambi_data' of size 2 declared at ambiDrv.h:24 may use index value 2. Also there is one similar error on line 711. ambiDrv.h: 8 #define MAX_NUMBER_OF_AMBIS 2 /* 4 uses all RSC seg registers.*/... 24 ambi_structure ambi_data[MAX_NUMBER_OF_AMBIS]; ambiPID.c: 696 void ambiPIDNotifyTask2(void) 697 { 698 STATUS my_status = ERROR; 699 UCHAR ambiSel = 2; 700 701 while(TRUE) /* Repeat this loop until the task is deleted. */ 702 { 703 /******************************************************/ 704 /***** Wait to be called by the interrupt handler *****/ 705 /******************************************************/ 706 my_status = semTake(ambi_data[ambiSel].semPIDIntTask, WAIT_FOREVER); 707 708 if(my_status == ERROR) 709 tmErrLog(0, PID_SEMTAKE_ERROR, errno); 710 711 my_status = ambi_data[ambiSel].pfunc_pid_Hndlr(); 712 713 if (my_status != OK) 714 tmErrLog(ambiSel, PID_HNDLR_ERROR, errno); 715 716 } /* end of while loop */ 717 } /* end of task */ 718",9/15/05
ProjectA - TIM - 1977,Build 5.0 OBC Code: Array Out-of-Bounds in ambiPID.c,3,"Potential buffer overflow at line 118 in file ambiPID.c. The array index of 'ambi_data' may be outside the bounds. Array 'ambi_data' of size 2 declared at ambiDrv.h:24 may use index value 2. Also there is one similar error on line 126. ambiDrv.h: 8 #define MAX_NUMBER_OF_AMBIS 2 /* 4 uses all RSC seg registers.*/... 24 ambi_structure ambi_data[MAX_NUMBER_OF_AMBIS]; ambiPID.c: 117 else if (ambiSel == 2) 118 ambi_data[ambiSel].ui_pidHndlrId = taskSpawn(""ambiPIDNotifyTask2"", 119 15, 120 NO_OPTIONS, 121 STACK_SIZE, 122 (FUNCPTR)ambiPIDNotifyTask2, 123 0,0,0,0,0,0,0,0,0,0); 124 125 else if (ambiSel == 3) 126 ambi_data[ambiSel].ui_pidHndlrId = taskSpawn(""ambiPIDNotifyTask3"", 127 15, 128 NO_OPTIONS, 129 STACK_SIZE, 130 (FUNCPTR)ambiPIDNotifyTask3, 131 0,0,0,0,0,0,0,0,0,0);",9/15/05
ProjectA - TIM - 1976,Build 5.0 OBC Code: Non-Initialized Data in ambiDMA.c,4,"The variable 'flag_dma_error' in file ambiDMA.c might be used uninitialized in function 'ambDma' at line 269. Also flag_dma_error is only ever set to YES in this function. ambiDMA.c: 95 UCHAR flag_dma_error; 96 UINT ui_temp=0; 97 UINT **pci_temp_addr; 98 UINT temp; 99 100 volatile UINT *pui_dma_pci_addr; /* DMA-Control Registers */ 101 volatile UINT *pui_dma_amb_addr; 102 volatile UINT *pui_dma_word_cnt; 103 volatile USHORT *pus_amb_config; /* AMB Configuration Register */ 104 volatile UINT *pui_ambi_reg; /* ambiSel offset */ 105 volatile UCHAR *puc_amb_timeout; /* 0x86 AMB Global Timeout Reg */ 106 volatile UCHAR *puc_amb_pciwait; /* 0x87 AMB PCI Mastership wait */ 107 volatile UCHAR *puc_pci_liolat; /* 0x0d PCI PIO Latency Timer Reg*/ 108 109 /******************************************/ 110 /* If service not installed, return error */ 111 /******************************************/ 112 if(ambi_data[ambiSel].ambEnabled == NO) 113 return(ERROR); 114 115 /****************************************************************************/ 116 /* All LIO setup is done in ambEnable() */ 117 /****************************************************************************/ 118 119 120 121 /******************************************/ 122 /* Print out values passed to routine */ 123 /******************************************/ 124 #if DEBUG_DMA 125 printf(""0x%8x\t&pci addr\n"" ,&amb_address); 126 printf(""0x%8x\t&amb addr\n"" ,&pci_address); 127 printf(""0x%8x\t pci addr\n"" ,amb_address); 128 printf(""0x%8x\t amb addr\n"" ,pci_address); 129 printf(""0x%8x\t*pci addr\n"" ,*pci_address); 130 printf(""0x%8x\t*amb addr\n"" ,*amb_address); 131 printf(""0x%8x\tcount \n"" ,ui_byte_count); 132 printf(""0x%8x\tcmd \n"" ,uc_xfer_type); 133 printf(""0x%8x\tuc_timeout\n"",uc_timeout); 134 printf(""0x%8x\tambiSel \n"" ,ambiSel); 135 #endif 136 137 /******************************************/ 138 /* Make pointers to AMBI registers */ 139 /******************************************/ 140 pui_ambi_reg = (volatile UINT *)ambiGetOffset(ambiSel); 141 142 if(pui_ambi_reg == NULL) 143 return(ERROR); 144 145 pui_dma_pci_addr = (UINT *)(((UINT)pui_ambi_reg)|((UINT)DMA_PCI_ADDR)); 146 pui_dma_amb_addr = (UINT *)(((UINT)pui_ambi_reg)|((UINT)DMA_AMB_ADDR)); 147 pui_dma_word_cnt = (UINT *)(((UINT)pui_ambi_reg)|((UINT)DMA_WORD_CNT)); 148 pus_amb_config = (USHORT *)(((UINT)pui_ambi_reg)|((UINT)AMB_CONFIG)); 149 puc_amb_timeout = (UCHAR *)(((UINT)pui_ambi_reg)|((UINT)AMB_GLOBAL_TIMEOUT)); 150 puc_amb_pciwait = (UCHAR *)(((UINT)pui_ambi_reg)|((UINT)AMB_PCI_MASTERSHIP)); 151 puc_pci_liolat = (UCHAR *)(((UINT)pui_ambi_reg)|((UINT)PCI_LIO_LATENCY)); 152 153 154 /*******************************************************/ 155 /* AMBI-DMA setup is done in ambEnable() */ 156 /*******************************************************/ 157 158 159 160 /*******************************************************/ 161 /* Do the DMA if one is not already in progress.... */ 162 /*******************************************************/ 163 if (ui_byte_count > 0x400000) /* check word count <= 4MB */ 164 { 165 tmErrLog(ambiSel, AMB_WORDCNT, errno); 166 #if DEBUG_DMA 167 printf(""4MB maximum AMB DMA exceeded!\n""); 168 #endif 169 return(ERROR); 170 } 171 #if DEBUG_DMA 172 printf(""Taking semDMAbusy\n""); /* bdb */ 173 #endif 174 175 /****************************************************/ 176 /* Take semaphore before allowing DMA xfer */ 177 /****************************************************/ 178 my_status = semTake(ambi_data[ambiSel].semDMAbusy, WAIT_FOREVER); 179 if (my_status == OK) 180 { 181 #if DEBUG_DMA 182 printf(""Beginning AMB DMA .... resource is available...\n""); 183 #endif 184 } 185 else 186 { 187 tmErrLog(ambiSel, AMB_SEMTAKE_BUSY, errno); 188 #if DEBUG_DMA 189 printf(""Error during semTake of semDMAbusy for ambDma\n""); 190 #endif 191 flag_dma_error = YES; 192 } 193 194 #if DEBUG_DMA 195 printf(""Setup DMA \n""); /* bdb */ 196 #endif 197 198 199 /****************************************************/ 200 /* Setup DMA */ 201 /****************************************************/ 202 203 *pui_dma_pci_addr = (UINT)*pci_address; /* set PCI src/dst addr */ 204 /* set AMB src/dst addr - segment register nibble */ 205 #if DEBUG_DMA 206 printf(""Wrote pci addr = 0x%8x\n"",*pci_address); /* bdb */ 207 #endif 208 209 *amb_address = (UINT *)((int)*amb_address & 0x0fffffff); 210 211 *pui_dma_amb_addr = (UINT)*amb_address; 212 213 #if DEBUG_DMA 214 printf(""wrote amb addr = 0x%8x \n"",*amb_address); /* bdb */ 215 #endif 216 217 /* word count in 2:23 (<< 8) and convert bytes to 32-bit words (>>2) ; xfer type in bit 31 */ 218 *pui_dma_word_cnt = (ui_byte_count << 6) + (uc_xfer_type & 0x1); 219 #if DEBUG_DMA 220 printf(""wrote word cnt = 0x%8x\n"",ui_byte_count ); /* bdb */ 221 #endif 222 223 /* taskDelay(6);*/ 224 225 #if DEBUG_DMA 226 printf(""Wait DMA complete\n""); /* bdb */ 227 #endif 228 229 230 /***********************************************************/ 231 /**** Wait for Acknowledge from Slave ****/ 232 /**** by waiting for semDMAOpComplete ****/ 233 /***********************************************************/ 234 235 my_status = semTake(ambi_data[ambiSel].semDMAOpComplete, uc_timeout); 236 if(ERROR == my_status) 237 { 238 tmErrLog(ambiSel, AMB_SEMTAKE_OP, errno); 239 #if DEBUG_DMA 240 printf(""ERROR taking semDMAOpComplete semaphore \n""); 241 #endif 242 flag_dma_error = YES; 243 } 244 245 if (OK == my_status) 246 { 247 #if DEBUG_DMA 248 printf(""<----- TOOK semDMAOpComplete\n""); 249 #endif 250 } 251 252 /*************************************/ 253 /* give up control of AMB/DMA access */ 254 /*************************************/ 255 my_status = semGive(ambi_data[ambiSel].semDMAbusy); 256 if(ERROR == my_status) 257 { 258 tmErrLog(ambiSel, AMB_SEMGIVE_ERR, errno); 259 #if DEBUG_DMA 260 printf(""ERROR giving semDMAbusy semaphore \n""); 261 #endif 262 flag_dma_error = YES; 263 } 264 265 else { 266 #if DEBUG_DMA 267 printf(""-----> GAVE semDMAbusy\n""); 268 #endif 269 if(flag_dma_error == YES) 270 { 271 return(ERROR); 272 } 273 else 274 { 275 return(OK); 276 } 277 } 278",9/15/05
ProjectA - TIM - 1975,Build 5.0 OBC Code: Logical in ambiAMBI.c,3,There is a suspicious assignment statement in condition on lines 45 and 51. It looks like the statements are supposed to be if(action == SET) and if(action == CLR). ambiAMBI.c: 45 if(action = SET) { 46 count = intLock(); 47 *pus_amb_config |= uc_mask; 48 intUnlock(count); 49 } 50 51 if(action = CLR) { 52 count = intLock(); 53 *pus_amb_config &= ~uc_mask; 54 intUnlock(count);,9/15/05
ProjectA - TIM - 1974,Build 5.0 OBC Code: Array Out-of-Bounds in ambiAMB.c,3,"There is the potential for buffer overflow at line 1281 of ambiAMB.c. The array index of 'ambi_data' may be outside the bounds. Array 'ambi_data' of size 2 declared at ambiDrv.h:24 may use index value 3. Also there are 2 similar errors on lines 1286, 1288. ambiDrv.h: 8 #define MAX_NUMBER_OF_AMBIS 2 /* 4 uses all RSC seg registers.*/... 24 ambi_structure ambi_data[MAX_NUMBER_OF_AMBIS]; ambiAMB.c: 1272 ****************************************************************************/ 1273 void ambGCQNotifyTask3(void) 1274 { 1275 STATUS my_status = ERROR; 1276 UCHAR uc_slave_status; 1277 UCHAR ambiSel = 3; 1278 1279 while(TRUE) /* Repeat this loop until the task is deleted. */ 1280 { 1281 my_status = semTake(ambi_data[ambiSel].semGCQreceived, WAIT_FOREVER); 1282 1283 if(my_status == ERROR) 1284 tmErrLog(ambiSel, GCQ_SEMTAKE_ERR, errno); 1285 1286 if(ambi_data[ambiSel].pfunc_gcq_Hndlr != NULL) 1287 { 1288 my_status = ambi_data[ambiSel].pfunc_gcq_Hndlr(); 1289 1290 if (my_status != OK) 1291 tmErrLog(ambiSel, GCQ_SLAVE_INT_HNDLR_ERR, errno); 1292 } /* end if */ 1293 } /* end of while loop */ 1294 } /* end of handler */",9/15/05
ProjectA - TIM - 1973,Build 5.0 OBC Code: Array Out-of-Bounds in ambiAMB.c,3,"There is potential buffer overflow at line 1255 of file ambiAMB.c. The array index of 'ambi_data' may be outside the bounds. Array 'ambi_data' of size 2 declared at ambiDrv.h:24 may use index value 2. Also there are 2 similar errors on lines 1260, 1262. ambiDrv.h: 8 #define MAX_NUMBER_OF_AMBIS 2 /* 4 uses all RSC seg registers.*/... 24 ambi_structure ambi_data[MAX_NUMBER_OF_AMBIS]; ambiAMB.c: 1247 void ambGCQNotifyTask2(void) 1248 { 1249 STATUS my_status = ERROR; 1250 UCHAR uc_slave_status; 1251 UCHAR ambiSel = 2; 1252 1253 while(TRUE) /* Repeat this loop until the task is deleted. */ 1254 { 1255 my_status = semTake(ambi_data[ambiSel].semGCQreceived, WAIT_FOREVER); 1256 1257 if(my_status == ERROR) 1258 tmErrLog(ambiSel, GCQ_SEMTAKE_ERR, errno); 1259 1260 if(ambi_data[ambiSel].pfunc_gcq_Hndlr != NULL) 1261 { 1262 my_status = ambi_data[ambiSel].pfunc_gcq_Hndlr(); 1263 1264 if (my_status != OK) 1265 tmErrLog(ambiSel, GCQ_SLAVE_INT_HNDLR_ERR, errno); 1266 } /* end if */ 1267 } /* end of while loop */ 1268 } /* end of handler */",9/15/05
ProjectA - TIM - 1972,Build 5.0 OBC Code: Unreachable Code in admain.c line 302,3,"The code on line 302 is unreachable because the variable AdTable.UseStaBoresightMeasurement is always TRUE. admain.c: 298 if ( pAcGlobal->Sta[0].DataValid == TRUE && 299 pAcGlobal->Sta[1].DataValid == TRUE && 300 AdTable.UseStaBoresightMeasurement == FALSE ) 301 302 NumOfUpdateAxes = 2 ; Preceding code comment /* Determine If Star Tracker Boresight Measurement Is Used For Update ... Note: By default UseStaBoresightMeasurement == TRUE and thus the ST boresight measurement is used. If this flag is reset to FALSE by the ground segment, then it is possible to not use needed measurement information. For example, if both star trackers are valid and one star tracker's residual exceeds the threshold as determined by the residual edit test. In this case, the ST which fails the residual edit test does not perform an update, and the good ST performs an update with only two axes instead of three as needed when only one ST is valid. */",9/15/05
ProjectA - TIM - 1971,Build 5.0 OBC Code: Null Pointer Dereference in QDDhiapi.c line 2552,3,"The dereferenced pointer 'element' is null. Dereferenced object 'element' contains null on line 2552 where null value comes from check in condition ( (void* )0) == (void* )element is true at line 2549 QDDhiapi.c: 2549 if (NULL == (void *)element) { 2550 RecordEVENT(QddElogId, END_qhssPopQueue, MANY_QHSS_CHAN, 2551 (unsigned int)QDD_NULL_POINTER, 0) 2552 *element = item; 2553 if (!in_isr) 2554 intUnlock(LockKey); /* unlock interrupts */ 2555 return(QDD_NULL_POINTER); 2556 } /* end if NULL == element */",9/15/05
ProjectA - TIM - 1970,Build 5.0 OBC Code: Array Out-of-Bounds in QDD_all_tests.c,3,There is potential buffer overflow in file QDD_all_tests.c at line 3444. The array index of 'QDD_TEST_Xfer_data' may be outside the bounds. Array 'QDD_TEST_Xfer_data' of size 2026 declared at line 55 may use index value 3999. QDD_all_tests.c: 55 unsigned short QDD_TEST_Xfer_data[2026];... 3444 Buffer6->QDD_TEST_Xfer_data[3999] = 0xACED;,9/15/05
ProjectA - TIM - 1969,OBC SRS Requirement L4 SROBC-293 (HS007) Is Unclear and Potentially Incorrect,2,"SRS Requirement. L4 SROBC-293. The Flight Software shall accept and execute commands to change the OBC state. Issue: L4 SROBC-291 states, ""Flight Software shall generate an OBC health status telemetry packet consisting of an OBC state (healthy, reset, fault), the status of telemetry monitoring (enabled/disabled), and shall be timestamped. ProjectA SE-001 ProjectA System State and Subsystem Mode Definitions, Section 4.0 states, ""The system state concept is useful for understanding FS functional transitions, effects, and configurations; however, the FSW is not implemented in that manner. The FSW does not maintain state knowledge at the system level and there are no system level commands to achieve state transitions. Rather, the system state is defined by the combined subsystem modes, and state transitions are achieved through subsystem configuration commands"". Given these conflicting statements, it is unclear how HS can ""change the OBC state"" when: (1) L4 SROBC-291 seems to identify ""state"" as (healthy, reset, fault)- it is noted that this usage of the term ""state"" may not be what is intended for the term ""system state"", (2) ProjectA SE-001 indicates that ""state"" knowledge is not maintained and there are no commands to achieve state transitions, (3) The CDR material, page 375, states that HS resets OBC (if this is correct, then there can be a state change to State=Boot) and (4) the ProjectA Command Dictionary does not appear to define any commands routed to HS that direct OBC state changes. Based on this information the L4 requirement seems unclear, inconsistent and potentially incorrect. IV&V notes that TIM-1160 addresses the issue of incomplete and/or incorrect HS requirements.",9/12/05
ProjectA - TIM - 1968,Missing ACS Test Scripts in Build 5.0,4,"The AN Task Continuity Test defined in test procedure S912-TP4930 Rev B for Build 5.0 calls the script ProjectA_an_continuity_test. This script calls the following scripts, which were not included in the build 5 test scripts: ProjectA_an_tbl_load_verify ProjectA_an_tbl_read_en ProjectA_an_dram_table_address",9/12/05
ProjectA - TIM - 1967,"OBC Build 5 Test Script , Test #7, Does Not Verify Requirement TS025",3,"Requirement: L4-SROBC-283 / TS025 - The Flight Software shall reset the persistence (consecutive threshold count) of a telemetry monitor when it is enabled. Issue: Script TS_test.scr links TS025 to Test #7. This test does not issue a ts:enable_monitor_point command; therefore, it appears that TS025 is not verified by Test #7.",9/6/05
ProjectA - TIM - 1966,"OBC Build 5 Test Script , Test #7, Does Not Fully Verify Requirement L4-SROBC-282 (TS024)",3,"OBC SRS Requirement: L4-SROBC-282 (TS024). The Flight Software shall reset the persistence (consecutive threshold counts) of an individual telemetry monitor or all telemetry monitors by command. Issue: Eight TMONs were reset in this test. However, the persistence data was not dumped before the ts:reset_persist_mask command was issued so it is unclear if this test actually verified the requirement for all 8 TMONs in that the script only dumped data after the command.",9/6/05
ProjectA - TIM - 1965,Requirement TS027 in the OBC C&DH SRS is Incorrect in that it does not agree with the current FP implementation,2,"OBC SRS, Rev C: TS0027. The Flight Software shall reset all persistence counts and inhibit all telemetry monitor evaluation when issuing a stored command execution request. Issue: This requirement seems to precede the decision made in late 2004 to go to Watch Mode when an RTS is initiated so that telemetry monitoring can continue. Test #1 in the Build 5 TS script (TS_Test.scr) seems to indicate that this change was made in that Watch Mode is enabled when a threshold is tripped. In addition, OBC Interoffice Memo, Response to TMON Interaction, indicates that this change was made. Given this, it appears that TS027 should be revised and a complete set of Watch Mode requirements added to the OBC SRS. It is noted that the Interoffice Memo implies TS requirements that are not present in the OBC SRS, Rev-C.",9/2/05
ProjectA - TIM - 1964,B5.0 VM Test Analysis: Possible Extraneous Test Scripts,3,"The current test scripts released for functional testing of the Virtual Machine in Build 5.0 contains scripts “vm_runseqtest1()”, “vm_runseqtest2()”, “vm_runseqtest3()” and ""vm_setup()"". The test scripts “vm_runseqtest2()” and “vm_runseqtest3()” are not called in Section 11.1 Virtual Machine Test of the S912-TP4970 document. Both scripts are designed to test the requirement VM001.4 (L4-SRVML-5 ) – “On-Board Block Execution Capabilities”. Requirement VM001.4 (L4-SRVML-5 ) is also tested by script “vm_setup()” which is called in “vm_runseqtest1()”. The 8/10/05 DOORS database has requirement L4-SRVML-5 linked to “vm_runseqtest2.scr”. There appears to be a disconnect between the VM Test Procedure and the L4 V&V Matrix in DOORS. If scripts “vm_runseqtest2()” and “vm_runseqtest3()” will be executed in a future build then they should stay in the build, otherwise it is recommended that they be removed.",8/16/05
ProjectA - TIM - 1963,B5.0 VM Test Analysis: Requirements Conflict Between Test Procedure and Test Script,4,"There is a conflict between the list of requirements in Test #2, Section 11.1 Virtual Machine Test of the S912-TP4970 document and the header of Test #2 in script ""vm_runseqtest1()"". The requirements listed in the S912-TP4970 document are VM002 (L4-SRVML-6), VM004 (L4-SRVML-13) and VM005 (L4-SRVML-17). These are considered requirements descriptions in DOORS. The requirements listed in the header of Test #2 of the test script are VM002.1 (L4-SRVML-7), VM005.1 (L4-SRVML-18) and VM005.2 (L4-SRVML-19). The requirements in the test script should also be listed in the S912-TP4970 document. It appears that VM004.1 is verified by the Test #2 of the test script and is also listed in the test script header. However, the requirement is only listed in the S912-TP4970 document and not in the Test #2 header of the test script. VM002.1 (L4-SRVML-7) - VM Task Time Management - VM Task shall provide interface for time synchroniz! ation between VM Engines and spacecraft. VM004.1 (L4-SRVML-14) - VM Command Interface - VM Task shall provide capability to interface with the Flight Software through Command interface. VM005.1 (L4-SRVML-18) - VM Sequence Loading - VM Task shall provide capability for VMLFC to accept sequence loads without interrupting a thread of execution. VM005.2 (L4-SRVML-19) - VM Sequence Memory - VM Task shall provide capability for VMLFC to read a sequence from a file buffer and to notify Ground System on anomalies on that read.",8/16/05
ProjectA - TIM - 1962,B5.0 VM Test Analysis: Possible Incomplete Testing of Requirement in Test Script,2,"Requirement VM002.3 is tested in Test #1 of script “vm_runseqtest1()”. However it does not appear to completely test the requirement. The script exercises the ability of the VM task to accept a command, but does not exercise the other part of the requirement, which is to also reject a command. VM002.3 (L4-SRVML-9) - “VM Task Health & Safety - VM Task shall provide proper interface to accept and reject commands and housekeeping packet generation”",8/16/05
ProjectA - TIM - 1961,B5.0 VM Test Analysis: Requirements Conflict Between Test Procedure and Test Script,4,"There is a conflict between the list of requirements in Test #3, Section 11.1 Virtual Machine Test of the S912-TP4970 document and the header of Test #3 in script “vm_runseqtest1()”. The requirements listed in the S912-TP4970 document are VM001 (L4-SRVML-1 ) and VM003 (L4-SRVML-10). These are considered requirements descriptions in DOORS. The requirements listed in the header of Test #3 of the test script are VM001.3 (L4-SRVML-4 ) and VM003.2 (L4-SRVML-12). The requirements in the test script should also be listed in the S912-TP4970 document. VM001.3 (L4-SRVML-4 ) - Sequence Variables - Through VM Task interface, VML Flight Component shall provide global variables with read/write accessibility to active sequences and spacecraft subsystems. VM003.2 (L4-SRVML-12) - VM Global Variable Telemetry - VM Task shall provide interface storage and transmission of the VMLFC global variables in sequences/blocks being executed.",8/16/05
ProjectA - TIM - 1960,B5.0 VM Test Analysis: Requirements Conflict Between Test Procedure and Test Script,4,"The requirements that are listed in Test #1, Section 11.1 Virtual Machine Test of the S912-TP4970 document conflict with the list of requirements in the header of Test #1 in script “vm_runseqtest1()”. The requirements listed in the S912-TP4970 document are VM001 (L4-SRVML-1), VM002 (L4-SRVML-6), VM003 (L4-SRVML-10) and VM006 (L4-SRVML-21). These are considered requirements descriptions in DOORS. The requirements listed in the header of Test #1 of the test script are VM001.1 (L4-SRVML-2), VM001.2 (L4-SRVML-3), VM002.3 (L4-SRVML-9), VM003.1 (L4-SRVML-11) and VM006.1 (L4-SRVML-22). The requirements in the test script should also be listed in the S912-TP4970 document. VM001.1 (L4-SRVML-2) - Sequence Execution Capabilities - VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 10 (ten) Virtual Machines, capable of executing on-board blocks and sequences. VM001.2 (L4-SRVML-3) - Initial State - Upon Start up of VM Task, VML Flight Component shall default engine states to “unloaded” and “inactive”. VM002.3 (L4-SRVML-9) - VM Task Health & Safety - VM Task shall provide proper interface to accept and reject commands and housekeeping packet generation. VM003.1 (L4-SRVML-11) - VML Channeled Telemetry - VM Task shall provide interface for VML internal Telemetry storage and transmission via Software Bus. VM006.1 (L4-SRVML-22) - VM Event Handler - VM Task shall provide interface for VMLFC internal Event Reports to be logged into Event Handler task with logging capabilities.",8/16/05
ProjectA - TIM - 1959,B5.0 VM Test Analysis: Requirement Conflict Between SRS and Test Script,2,"Test #1 in Section 11.1 Virtual Machine Test of the S912-TP4970 document shows that the script “vm_runseqtest1()” is called. The “vm_runseqtest1()” script verifies requirement VM0001.1 (L4-SRVML-2) which indicates that ""The VMLFC shall be configured with 10 (ten) Virtual Machines, capable of executing on-board blocks and sequences."" The test script tests the VM configuration limits by verifying that VM 0 and VM 13 are out of range. This indicates that there are twelve (12) Virtual Machines. So, there is a conflict with what is being tested and the requirement VM001.1 (L4-SRVML-2) in the DOORS link to the OBC VM SRS (L4-Contractor1-S912-SRS4970). TIM 1158 already contains an issue concerning 10 versus 12 VMs. However this TIM is written to identify the issue as it relates to the VM testing. VM0001.1 (L4-SRVML-2) – “VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 10 (ten) Virtual Machines, capable of executing on-board blocks and sequences”.",8/16/05
ProjectA - TIM - 1958,B5.0 VM Test Analysis: Incorrect Reference to C&DH in VM Test Procedure,5,The ProjectA Virtual Machine (VM) Task Flight Software Test Procedures S912-TP4970 document refers to the OBC C&DH Flight Software in Sections 1 through 4 instead of the VM Flight Software.,8/16/05
ProjectA - TIM - 1957,B5.0 OBC C&DH TA: Requirements Missing from Test Scripts,4,"The ProjectA_tp_unit_test()test script does not list the mapped DOORS requirements in it's headers: TCS001, TCS002, TCS003, TCS011, TCS021, TCS022, TCS023, TCS041, TCS043, TCS044, TCS061, TCS081, TCS082, TCS101, and TCS102. TCS001 (L4-SROBC-231) - Thermal Control Software shall utilize control algorithms to support the Thermal Control requirements as specified in the Spacecraft Bus Thermal Control System Design Note. TCS002 (L4-SROBC-232) - Thermal Control Software shall have access to and control over heater and sensor interfaces to control the specified spacecraft components in the Spacecraft Bus Thermal Control System Design Note. TCS003 (L4-SROBC-233) - Thermal Control Software shall maintain operating temperature ranges for operating spacecraft components as specified in the Spacecraft Bus Thermal Control System Design Note. TCS011 (L4-SROBC-235) - Thermal Control Software shall accommodate 4 temperature sensor types. TCS021 (L4-SROBC-237) - Thermal Control Software shall provide heater commands to control the temperature of a heated unit by maintaining the units temperature above and/or below a prescribed absolute reference reading. TCS022 (L4-SROBC-238) - Thermal Control Software shall provide temperature level control logic that maintains the heater status where required to determine if a heater string is to be ""On"" or ""Off"". This method of heater control sets an enabled heater string state to ""On"" if the value of the sensed temperature is less than or equal to a specified ""On"" limit and sets it to ""Off"" if the value is greater than or equal to a specified ""Off"" limit. TCS023 (L4-SROBC-239) - Thermal Control Software shall be capable of performing at least a minimum and a future control law parameter (e.g., temperature ranges, limits, etc.) under specified conditions. TCS041 (L4-SROBC-241) - Thermal Control Software shall not activate a heater string if the control activation/deactivation flag for the string indicates the 'de-active' state. TCS043 (L4-SROBC-242) - Thermal Control Software shall provide control of the on/off state for each of up to 64 heater switch pairs (primary and secondary). TCS044 (L4-SROBC-243) - Thermal Control Software shall provide the capability to support ground commanded on/off control of heaters for which software control has been disabled such that single command can turn on or off any heater. TCS061 (L4-SROBC-245) - Heater switch commands shall be limited to 10 as default value per TP cycle. TCS081 (L4-SROBC-247) - Thermal Control Software shall provide data defining the actual states of activation/deactivation flags for each heater switch to the Telemetry Control application for Downlink. TCS082 (L4-SROBC-248) - Thermal Control Software shall provide for Housekeeping Telemetry. TCS101 (L4-SROBC-250) - Thermal Control Software shall provide sensor sampling and control response rates at 1 Hz for all applicable heater units. TCS102 (L4-SROBC-251) - Thermal Control Software shall be capable of performing the temperature reading processing for all thermal data points at 1 Hz.",8/15/05
ProjectA - TIM - 1956,B5.0 OBC C&DH TA: Requirements Missing from Test Scripts,4,"This test script ds_reset_command_counters() does not list the DS021 mapped DOORS requirements in the header: DS021 (L4-SROBC-163) - The OBC-C&DH software shall accept and execute a RESET_DS_HOUSEKEEPING command, which resets housekeeping data that is normally reported in the real-time telemetry stream.",8/15/05
ProjectA - TIM - 1955,B5.0 OBC C&DH TA: Requirements Missing from Test Procedures and Test Script,3,"Section 11.16 Software Manager (SM) Test of the C&DH Test Procedures S912-TP4920 calls test script “sm_misc_b50_test”. However the requirements linked to “sm_misc_b50_test” in the DOORS V&V Matrix are not listed in Section 11.16 Software Manager (SM) Test of the C&DH Test Procedures (S912-TP4920) or in the test script itself. The requirements linked in the DOORS V&V matrix are SM038, SM039, SM033, SM040, SM049, SM013, SM015, SM042, SM017, SM019, SM020, and SM043. These requirements should be listed in the Test Procedure and the test script to mirror the links from the OBC C&DH SRS (L4-Contractor1-S912-SRS4920) to the test script. SM038 (L4-SROBC-173) - Flight Software shall maintain counters for error-free Software Manager commands received and processed. SM039 (L4-SROBC-174) - Flight Software shall maintain counters for Software Manager commands that were not processed due to error conditions, and generate event messages for error conditions. SM033 (L4-SROBC-175) - Flight Software shall accept and execute a Reset Counters command that resets command and error counters. SM040 (L4-SROBC-176) - Flight Software shall maintain a ""Working Buffer"" within Software Manager that is used for temporary storage of uplinked data, and is addressable in certain commands as an offset to a virtual address base of F0000000 hexadecimal. SM049 (L4-SROBC-178) - Flight Software shall implement an Enable command with time out timer and Disable command for any memory access to EEPROM, which includes memory load, memory copy, or table commands. SM013 (L4-SROBC-196) - Flight Software shall accept and execute a LOAD_TABLE command to load between 1 and 121 words of table data at a specified word offset from the beginning of the currently selected table. SM015 (L4-SROBC-199) - Flight Software shall accept and execute a DUMP_TABLE command, specifying an offset into the table to start dumping, the number of words to dump from the offset, and the number of copies to dump. SM042 (L4-SROBC-200) - Flight Software shall reject a Table Dump command if a table load/edit session has not been initiated, a dump is already active, or the specified dump range extends beyond the size of the table. SM017 (L4-SROBC-203) - Flight Software shall maintain running calculations of essential variables (i.e., checksum) to be used for verification of a good table load prior to table use. SM019 (L4-SROBC-204) - Flight Software shall initialize and maintain an 8-bit EXCLUSIVE-OR checksum for the currently selected table. SM020 (L4-SROBC-205) - Flight Software shall initialize and maintain a SESSION_WORD_COUNT for the total number of words loaded for the currently selected table. SM043 (L4-SROBC-207) - Flight Software shall accept and execute a COMMIT_TABLE command that immediately makes the new or edited version of the table available for use.",8/15/05
ProjectA - TIM - 1954,B5.0 OBC C&DH TA: Requirements Missing from Test Procedures,3,"Section 11.16 Software Manager (SM) Test of the C&DH Test Procedures S912-TP4920 calls test script “sm_mem_test”. However the requirements linked to “sm_mem_test” in the DOORS V&V Matrix are not listed in the test procedure. The requirements are SM002, SM005, SM006, SM007, SM034, SM036, SM008, SM009, and SM037. These requirements should be listed in the Test Procedure to mirror the test script and the DOORS link to the OBC C&DH SRS (L4-Contractor1-S912-SRS4920). SM002 (L4-SROBC-181) - Flight Software shall accept and execute a Load Memory command to load SRAM, DRAM, EEPROM, and Working Buffer Flight Computer memory locations. SM005 (L4-SROBC-182) - Flight Software shall reject any LOAD_MEMORY command that specifies an odd memory address, an invalid number of words to load, or a memory address that is out of addressable range. SM006 (L4-SROBC-186) - Flight Software shall accept and execute a DUMP_MEMORY command to dump the contents of SRAM, DRAM, EEPROM or Working Buffer memory, specifying the start address, number of words to dump, and number of copies to dump. SM007 (L4-SROBC-187) - Flight Software shall reject a dump command if a dump is already in progress, the dump address is not an even four-byte address, or the dump range is out of addressable memory. SM008 (L4-SROBC-191) - Flight Software shall accept and execute a COPY_MEMORY command to copy the contents of SRAM, DRAM, EEPROM, or Working Buffer memory from one contiguous area to another SRAM, DRAM, EEPROM, or Working Buffer area on the same processor, without regard to memory overlaps. SM009 (L4-SROBC-192) - Flight Software shall reject any COPY_MEMORY command if: a specified memory address is not an even address, a specified memory address is out of addressable range, or the specified number of words to copy is too large. SM034 (L4-SROBC-188) - Flight Software shall accept and execute an Abort Memory Dump command. SM036 (L4-SROBC-189) - Flight Software shall accept and execute a Dump Memory in Event command, that returns in an event message the data resident in a limited number of memory locations. SM037 (L4-SROBC-226) - Flight Software shall accept and execute commands that can write to and read from any single specified memory address.",8/15/05
ProjectA - TIM - 1953,B5.0 OBC C&DH TA: Requirements Missing from Test Procedures,3,"Section 11.14 DRAM Diagnostics (DI) Test of the C&DH Test Procedures S912-TP4920 calls test script “di_test_new”. In the DOORS V&V Matrix, requirements DI001, DI002, DI003, DI004, and DI005 are linked to ""di_test_new"". Section 11.14 DRAM Diagnostics (DI) Test of the C&DH Test Procedures S912-TP4920 does not list the above mentioned requirements. These requirements should be listed in the Test Procedure to mirror the test script and the DOORS link to the OBC C&DH SRS (L4-Contractor1-S912-SRS4920). DI001 (L4-SROBC-37) - Flight Software shall include commandable, background real-time hardware diagnostics for Flight Computer Input / Output Interfaces. DI002 (L4-SROBC-38) - Flight Software hardware diagnostics shall accept commands to activate background or foreground hardware testing. DI003 (L4-SROBC-39) - The results of Hardware Diagnostics tests conducted during start-up shall be stored in fixed memory locations that will not be modified by processor resets. DI004 (L4-SROBC-40) - The results of the Hardware Diagnostics tests conducted during nominal operations shall be inserted into the designated portion of telemetry streams. DI005 (L4-SROBC-325) - An enable command shall be implemented requiring each Hardware Diagnostics test to be started within .5 second of the enable command.",8/15/05
ProjectA - TIM - 1952,B5.0 OBC C&DH TA: Requirements Missing from Test Procedures,3,"Section 11.13 GraND Interface (S3) Test of the C&DH Test Procedures S912-TP4920 calls “s3_GRaND_interface()”. However, requirements S3001, S3002, S3003, S3004, S3005, S3006, S3006.1, S3006.2, S3009, S3009.1, and S3009.2 are linked to test script “s3_test()” in the DOORS V&V Matrix. The test procedure does not list the requirements mentioned above. In addition, it appears that the requirements should be linked to test script “s3_GRaND_interface()”, instead of ""s3_test()"". S3001 (L4-SROBC-79) - S3 task shall accept and execute a RESET_TLM command, which resets its housekeeping telemetry. S3002 (L4-SROBC-80) - S3 task shall send its housekeeping telemetry to the Software Bus upon receiving a command from the Software Bus. S3003 (L4-SROBC-81) - S3 task shall be able to forward any commands destined to the MUC or to the MUC instruments (via MUC) that it receives from the Software Bus. S3004 (L4-SROBC-82) - S3 task shall be able to generate and send FIFO reset commands to the MUC to reset any one of the following Gamma Ray and Neutron Detector (GRAND) FIFOs: GRAND TLM, GRAND CMD, and TEST. S3005 (L4-SROBC-83) - S3 task shall forward the spacecraft Time Code message it received from the Software Bus to MUC, which in turn forwards it to GRAND, based on the op-code and slave address. S3006 (L4-SROBC-84) - S3 task shall read MUC Instrument Interface Status in a single HSS3 data block. S3006.1 (L4-SROBC-85) - S3 task shall maintain Housekeeping telemetry for the MUC Instrument Interface Status, updating the telemetry after each reading of the MUC Instrument Interface Status. S3006.2 (L4-SROBC-86) - S3 task shall maintain counts of those MUC Instrument failure statuses that are cleared on read. S3009 (L4-SROBC-87) - S3 task shall read Gamma Ray and Neutron Detector (GRAND) telemetry, MUC GRAND TLM FIFO, with a minimum frequency of 1 Hz to prevent overflow. S3009.1 (L4-SROBC-88) - S3 task shall calculate a CRC for each GRAND message and compare it against the CRC appended to the end of the message, discarding the message if the CRC does not match and updating a bad message counter. S3009.2 (L4-SROBC-89) - S3 task shall process a GRAND message that passes a CRC check by removing the sync codes (2 bytes) and the length field (2 bytes), and sending the CCSDS telemetry packet to the Software Bus.",8/15/05
ProjectA - TIM - 1951,B5.0 OBC C&DH TA: Requirements Missing from Test Procedures,3,"In Section 11.11 Memory Scrub (MS/IT) Test of the C&DH Test Procedure S912-TP4920 the script “ms_b50_changes_test()” is called. According to the test script and the DOORS V&V Matrix ""ms_b50_changes_test"" is designed to verify requirements MS001, MS007, and MS009. However, there are no requirements listed in the Requirement ID column of the Test Procedure. MS001 (L4-SROBC-295) - Flight Software shall provide background memory scrubbing of the SRAM in the Flight Computer. MS007 (L4-SROBC-300) - Flight Software shall provide a command to disable the scrubbing of SRAM and DRAM. MS009 (L4-SROBC-302) - Flight software shall provide a command to reset housekeeping telemetry associated with the SRAM and performance monitoring functions.",8/15/05
ProjectA - TIM - 1950,B5.0 OBC C&DH TA: Requirements Missing from Test Procedures,3,"In Section 11.9 Time Code (TC) Test of the C&DH Test Procedures S912-TP4920 there is no requirement listed in the Requirement ID column. However, the script “tc_jam_seconds_and_reset_counters_test()” is linked to the the OBC C&DH SRS (L4-Contractor1-S912-SRS4920) requirements TC001 and TS001 in the DOORS V&V Matrix. TC001 (L4-SROBC-99) - Flight Software shall accept and execute a JAM_SECONDS command to jam the seconds field of the spacecraft clock. The JAM_SECONDS command, received from the ground, sets the seconds field of the spacecraft clock to the value in the command. TS001 (L4-SROBC-254) - Flight Software shall provide a table driven telemetry monitoring function capable of extracting data from any valid combination of CCSDS telemetry packets and constructing the required monitor point.",8/15/05
ProjectA - TIM - 1949,B5.0 OBC C&DH TA: Requirements Missing from Test Procedures,4,"In Section 11.2 Stored Command Test of the C&DH Test Procedures S912-TP4920, Test #6 appears to be missing a reference to the requirement SC020. The requirement in the OBC C&DH SRS (L4-Contractor1-S912-SRS4920) is linked to the SC_test_rts test script in the DOORS V&V Matrix. SC020 (L4-SROBC-125) - Flight Software shall reset SC counters upon receipt of Reset Counters command.",8/15/05
ProjectA - TIM - 1948,B5.0 OBC C&DH TA: Possible Incorrect Mapping of DOORS Requirements to Test Script,3,"It appears that the following requirements from the OBC C&DH SRS (L4-Contractor1-S912-SRS4920 are mapped to the “sm_misc_b50_test()” script in the DOORS database, but should be mapped to the script “sm_mem_test()” instead: SM019 (L4-SROBC-204) – “Flight Software shall initialize and maintain an 8-bit EXCLUSIVE-OR checksum for the currently selected table”. This requirement appears to be tested in the script “sm_mem_test()”. SM039 (L4-SROBC-174) - Flight Software shall maintain counters for Software Manager commands that were not processed due to error conditions, and generate event messages for error conditions. SM013 (L4-SROBC-196) - Flight Software shall accept and execute a LOAD_TABLE command to load between 1 and 121 words of table data at a specified word offset from the beginning of the currently selected table. SM042 (L4-SROBC-200) - Flight Software shall reject a Table Dump command if a table load/edit session has not been initiated, a dump is already active, or the specified dump range extends beyond the size of the table.",8/12/05
ProjectA - TIM - 1947,B5.0 OBC C&DH TA: Unclear Testing of Requirements in Test Scipt,3,"It is not clear as to where in the script “sm_mem_test()” that the following requirements are tested: SM003 and SM041. The issue in both requirements is the term “NON_INTERRUPTABLE”. There is no reference in the test script to non interruptable load memory commands. However, there are load memory commands that are tested. SM003 - Flight Software shall accept and execute a NON_INTERRUPTABLE_LOAD_MEMORY command that disables interrupts during the load of between 1 and 6 (16-bit) words into processor SRAM. SM041 - Flight Software shall reject any NON_INTERRUPTABLE_LOAD_MEMORY command that specifies an invalid number of words to load, or a memory address that is out of addressable SRAM range.",8/12/05
ProjectA - TIM - 1946,B5.0 OBC C&DH TA: Requirements Missing from Test Procedures,4,"In Section 11.12 Software Bus (SB) Test of the C&DH Test Procedure S912-TP4920 the script “sb_req_test()” is called. The script verifies requirements SB001, SB003, SB004, SB005, SB006 and SB010. However, the requirements listed in the Requirement ID column of the Test Procedure are SB001, SB002, SB003 and SB004. The requirements that are mapped to the script in the DOORS link to the OBC C&DH SRS (L4-Contractor1-S912-SRS4920) are SB001, SB003, SB004, SB005, SB006 and SB010. which are the same as the requirements listed in the test script. SB001 (L4-SROBC-42) - The C&DH OBC SB software shall validate packet integrity for all packets by verifying that the packet size is less than or equal to an expected value, and the CCSDS primary header represents a valid ProjectA telemetry or command packet. SB003 (L4-SROBC-43) - The C&DH OBC SB software shall accept and execute the command, RESET_SB_HOUSEKEEPING, which resets housekeeping data normally reported in the real-time telemetry stream. SB004 (L4-SROBC-44) - The C&DH OBC SB software shall accept and execute a command to enable or disable a SB packet destination. SB005 (L4-SROBC-45) - The C&DH OBC SB software shall have a feature that monitors CCSDS packet sequence numbers, detecting and indicating sequence gaps. SB006 (L4-SROBC-46) - The C&DH OBC SB software shall accept and execute a command to enable or disable the monitoring of CCSDS packet sequence numbers. SB010 (L4-SROBC-48) - The C&DH OBC software shall monitor CPU utilization and telemeter for ground analysis.",8/12/05
ProjectA - TIM - 1945,B5.0 OBC C&DH TA: Missing DOORS Requirement to Test Script Mapping,3,The requirement TS015 – “Flight Software shall accumulate statistics for each monitor point” is missing from the DOORS C&DH SRS. The requirement is listed in the C&DH Test Procedure document and the test script “ts_test()”.,8/12/05
ProjectA - TIM - 1944,B5.0 OBC C&DH TA: Possible Missing Requirement in Test Procedure,3,"Requirement TS001 is documented in the test script ts_test(), however it is not listed in the C&DH Test Procedure document (S912-TP4920 ). The requirement is mapped to the script “tc_jam_seconds_and_reset_counters_test()” in the DOORS C&DH SRS. This mapping is in conflict with the listing of the requirement in script ts_test(). TS001 (L4-SROBC-254) - Flight Software shall provide a table driven telemetry monitoring function capable of extracting data from any valid combination of CCSDS telemetry packets and constructing the required monitor point.",8/12/05
ProjectA - TIM - 1943,B5.0 OBC C&DH TA: Missing DOORS Requirement to Test Script Mapping,3,"As part of Section 11.4 Data Storage of the C&DH Test Procedure S912-TP4920, the “ds_time_based_filter_test()” script is called to verify requirement DS006. However, the DOORS link to the OBC C&DH SRS (L4-Contractor1-S912-SRS4920) does not contain a mapping of the test script “ds_time_based_filter_test()” to requirement DS006.",8/12/05
ProjectA - TIM - 1942,B5.0 OBC C&DH TA: Requirement Missing from Data Storage (DS) Test Procedure,4,"As part of Section 11.4 Data Storage of the C&DH Test Plan S912-TP4920, the “ds_start_playback_test()” script is called to verify requirements DS011 and DS012. However, the requirement DS012 is not mapped to a step in Section 11.4. It seems that it should be listed with DS011 in Step 26. DS011 (L4-SROBC-150) - The OBC-C&DH software shall accept and execute a START_RECORDER_PLAYBACK command which starts an initial playback of the specified DATASET for the specified Virtual Recorder. DS012 (L4-SROBC-151) - The OBC-C&DH software shall accept and execute a STOP_RECORDER_PLAYBACK command, which aborts the playback and/or retransmissions of the specified Virtual Recorders. Note that this command performs different functions when the Virtual Recorder is in CONTINUOUS_PLAYBACK mode.",8/12/05
ProjectA - TIM - 1941,B5.0 OBC C&DH TA: Requirements Missing from Test Scripts,4,The sm_mem_test() test script does not list the mapped DOORS requirement SM037 in it's header. SM037 (L4-SROBC-226) - Flight Software shall accept and execute commands that can write to and read from any single specified memory address.,8/12/05
ProjectA - TIM - 1940,L4 UPL RTA: [L3-SFS-777] incomplete traceability,3,"[L3-SFS-777] addresses the reception and installation of configuration files and tables. According to the 7/5//2005 DOORS database, [L3-SFS-777] has incoming links from the L4 OBC C&DH requirements. However, there have been no requirements from the L4 UPL requirements linked to [L3-SFS-777]. Referenced Requirements; [L3-SFS-777] The Flight Software shall have the capability to receive and install configuration files and tables to respond to changes in spacecraft and instrument hardware and operations. Linked to [L3-SFS-777]: [L4-SROBC-215] Flight Software shall retain telemetry pertaining to a table commit command until another table select command or reset table operations command has been issued. [L4-SROBC-216] Flight Software shall accept and execute an RESET_TABLE_OPERATIONS command that terminates the current table load/edit session without affecting the onboard versions of the currently selected table, regardless of whether a table has been selected. [L4-SROBC-214] The execution of a table commit operation shall disable subsequent commit operation to that table until the table is again selected. [L4-SROBC-213] Flight Software shall maintain a ground-definable jam-loadable flag for each table. When true (that is, jammable), the Flight Software immediately commits table changes to memory. When false (that is, non-jammable), the Flight Software ""handshakes"" with the table's assigned application task indicating that a table is ready to commit. The application task indicates back to Software Manager when commitment may take place. [L4-SROBC-212] Flight Software shall maintain a ground-definable checksum flag for each table. When true, the Flight Software calculates and stores the table checksum upon commitment of any uploaded change to the table. The Software Manager task indicates to the Checksum task to disable checksum checking a table undergoing commitment. [L4-SROBC-209] If the specified Checksum and the on-board Checksum are equal, Flight Software shall immediately make the new or edited versions of the table available for use (COMMIT). [L4-SROBC-208] Flight Software shall accept and execute a COMMIT_TABLE_WITH_CHECKSUM command that compares the on-board Checksum with the expected Checksum specified in the command and performs the following based on the comparison results: [L4-SROBC-207] Flight Software shall accept and execute a COMMIT_TABLE command that immediately makes the new or edited version of the table available for use. [L4-SROBC-205] Flight Software shall initialize and maintain a SESSION_WORD_COUNT for the total number of words loaded for the currently selected table. [L4-SROBC-204] Flight Software shall initialize and maintain an 8-bit EXCLUSIVE-OR checksum for the currently selected table. [L4-SROBC-203] Flight Software shall maintain running calculations of essential variables (i.e., checksum) to be used for verification of a good table load prior to table use. [L4-SROBC-201] Flight Software shall accept and execute an Abort Table Dump command. [L4-SROBC-199] Flight Software shall accept and execute a DUMP_TABLE command, specifying an offset into the table to start dumping, the number of words to dump from the offset, and the number of copies to dump. [L4-SROBC-196] Flight Software shall accept and execute a LOAD_TABLE command to load between 1 and 121 words of table data at a specified word offset from the beginning of the currently selected table. [L4-SROBC-194] Flight Software shall accept and execute a SELECT_TABLE command, which initializes a table load/edit ""session"" to load or dump data for a specified table. Command parameters include: - table id to load or dump; - table image source used to initialize the Working Buffer on which to overlay a load or from which to dump (including initial table from EEPROM, active table from SRAM or DRAM, or null/zero-fill); - table load commit operation (including dump-only (table is dumped directly from the source address and not from Working Buffer), replace initial table in EEPROM, or replace active table in SRAM or DRAM). [L4-SROBC-136] The OBC-C&DH software shall accept and execute a SWAP_FILTER factor command, which will swap filter factors for the 2 specified application id's for the filter table currently in use. [L4-SROBC-135] The OBC-C&DH software shall accept and execute a JAM_FILTER factor command, which given the application id of a packet will modify the filter factors for the filter table currently in use. [L4-SROBC-134] The OBC-C&DH software shall accept and execute a CHANGE_FILTER_TABLE command, which immediately begins filtering telemetry packets according to the parameters stored in the specified filter table. Recommendations: Minimally, L4 UPL SM-related requirements should be linked to [L3-SFS-777] that address reception and installation of configuration files and tables.",8/11/05
ProjectA - TIM - 1939,B5.0 OBC C&DH TA: Requirements Missing from Test Procedures,4,"It appears that the requirements in the DOORS link to the OBC C&DH SRS (L4-Contractor1-S912-SRS4920) that map to the test script “cs_test()” are not listed in Section 11.17 Checksum (CS) Test of the C&DH Test Procedure S912-TP4920. The requirements (CS001, CS002, CS003, CS004, CS004.1, CS004.2, CS004.3, CS005, CS005.1, CS005.2, CS005.3, CS005.4, CS006 and CS007) appear to be verified by the script “cs_test()”. These requirements should be listed in the Test Procedure to mirror the test script and the DOORS link to the OBC C&DH SRS (L4-Contractor1-S912-SRS4920). CS001 (L4-SROBC-305) - The OBC flight software shall provide a mechanism to verify the contents of key static memory areas to support single event upset detection in EEPROM and SRAM (code and static table data). CS002 (L4-SROBC-306) - On initialization, the OBC flight software shall construct a Master Checksum Verification List which contains information required to detect changes in memory areas targeted for validation. CS003 (L4-SROBC-307) - The OBC flight software shall generate an event message for each occurrence of a memory checksum error. CS004 (L4-SROBC-308) - The OBC flight software shall provide a command to re-compute checksums for each of the following memory types: CS004.1 (L4-SROBC-309) - EEPROM CS004.2 (L4-SROBC-310) - Code segments in RAM CS004.3 (L4-SROBC-311) - All static tables in RAM CS005 (L4-SROBC-312) - The OBC flight software shall provide a command to enable or disable the checksumming of the following memory types: CS005.1 (L4-SROBC-313) - All memory areas CS005.2 (L4-SROBC-314) - EEPROM CS005.3 (L4-SROBC-315) - Code segments in SRAM CS005.4 (L4-SROBC-316) - Static tables in SRAM. CS006 (L4-SROBC-317) - The OBC flight software shall provide a handshake mechanism with the software manager task for loading static tables without generating false checksum errors. CS007 (L4-SROBC-318) - The OBC flight software shall provide a command to Reset Counters that resets telemetered command and error counters and data.",8/11/05
ProjectA - TIM - 1938,B5.0 OBC C&DH TA: Requirements Verified by Design,3,"The following OBC C&DH requirements were verified by design. The methodology employed and documentation were not provided to the IV&V Team: 1) Test script SC_test_rts()indicates that requirement SC010 was verified by design. 2) Test #1 of Section 11.2 Stored Command Test of the C&DH Test Plan S912-TP4920 indicates that requirement SC015 was verified by design. 3) The test script “ts_test()” indicates that the requirements TC007 and TS002 were verified by design. Requirement SC010 (L4-SROBC-110) - Flight Software shall provide a Relative Time Sequence (RTS) stored command load and execution capability to support continuous spacecraft and instrument mission operations. Requirement SC015 (L4-SROBC-120)- RTSs shall be DISABLED upon a COLD_RESTART with the exception of RTS #1 (the Start-Up RTS). Requirement TC002 (L4-SROBC-100) - Flight Software shall send the time of the next 1 Hz pulse to the Framing Camera/VIR instrument via the 1553 bus, prior to the 1553 slot allocated to this function (currently at 0 milliseconds). Requirement TC007 (L4-SROBC-104) - In the event that the 1 Hz pulse from the uplink card is unavailable, the Flight Software shall provide a backup interrupt to schedule software operations.",8/11/05
ProjectA - TIM - 1937,B5.0 OBC C&DH TA: Unexecuted Test Procedures,3,The following test procedures and corresponding test scripts were not executed according to the As Run Test Procedures S912-TP4920: Section 11.15 Operating System (OS) os_eeprom_table_load() Section 11.8 Small Deep Space Transponder (SDST) sdst_test() sdst_fp_control() Section 11.7 Power Distribution (PDU) Test pdu_tlm_test() pdu_switch_test() Section 11.5 TP Heater Command Test tp_htr_cmd_test() tp_heater_cmd_verify() The test scripts are also not mapped to requirements in the DOORS OBC C&DH database. It appears that these test procedures and scripts are not required for the ProjectA Project.,8/11/05
ProjectA - TIM - 1936,B5.0 OBC C&DH TA: Possible Extraneous Test Scripts,3,"The following test scripts are included in the Build 5 test scripts tar file, but are not mapped to requirements in the DOORS OBC C&DH SRS (L4-Contractor1-S912-SRS4920): to_time_based_filter() to_change_rate_test() ds_dram_paging_test() ds_seq_num_based_filter_test() ds_change_rate_test() xb_b50_changes_test() s3_GRaND_interface() The test scripts are also not called in the OBC C&DH Test Procedure, thus it appears that these test scripts are not applicable to the ProjectA Project.",8/11/05
ProjectA - TIM - 1935,L3 RTA: Excessive internal tracing of the L3 SC&FSRD requirements,3,"There are several instances in the L3 SC&FSRD where there are L3 requirements linked to other L3 requirements. This is acceptable when L3 requirements are effectively decomposed at the same level. However, there are cases where this pattern of internal tracing continues for up to nine levels, before finally being resolved to the L4 requirements. The following traceability relationshEngine illustrate the most extreme example of this problem: 1. [L3-SFS-473] has a link from [L3-SFS-147] 2. [L3-SFS-147] has a link from [L3-SFS-489] 3. [L3-SFS-489] has a link from [L3-SFS-2478] 4. [L3-SFS-2478] has a link from [L3-SFS-1018] 5. [L3-SFS-1018] has a link from [L3-SFS-20] 6. [L3-SFS-20] has links from [L3-SFS-703] and [L3-SFS-704] 7. [L3-SFS-703] and [L3-SFS-704] have a link from [L3-SFS-897] 8. [L3-SFS-897] has a link from [L3-SFS-909] 9. [L3-SFS-909] has a link from [L4-SROAC-16], [L4-SROAC-15], [L4-SROAC-14], [L4-SROSU-4], [L4-SROBC-3], [L4-SROBC-4], [L4-SROBC-278], and [L4-SRUP-131] After evaluating the requirements at each level subordinate to [L3-SFS-473], the requirements at the top levels seem, at least to some degree, relatable back to [L3-SFS-473]. However, after several levels of implied decomposition, the requirements no longer seem to reflect any functionality directly involved with accomplishing the functionality levied by the top level requirement, (i.e., [L3-SFS-473]). This type of traceability seems of little value and defeats the purpose of requirements traceability. Referenced Requirements: [L3-SFS-473] Each RCS thruster shall be capable of providing steady state thrust from 1.02 to 0.2 N based on an inlet pressure varying from 2.757903 Mpa (400 psi) to 0.552 Mpa (80 psi) with a thrust uncertainty within +/- 8% of the expected value based on inlet pressure and temperature. Linked to [L3-SFS-473]: [L3-SFS-147] The ACS shall monitor the on time of each thruster for use in determining the delivered impulse and relative hydrazine consumption. Linked to [L3-SFS-147]: [L3-SFS-489] Telemetry data necessary for on-ground residual propellant evaluation shall be provided. An established method for residual propellant measurement shall also be provided. It shall be possible to determine the amount of on-board propellant to an accuracy of less than or equal to 2.5 kg during ground processing and all times during the mission. Linked to [L3-SFS-489]: [L3-SFS-2478] The RCS subsystem shall support telemetry including tank pressure and thruster on times to be able to detect an unexpected loss of propellant before loss of more than 5 kg of propellant. Linked to [L3-SFS-2478]: [L3-SFS-1018] The Spacecraft RCS shall be dual fault tolerant to bulk propellant leakage pre-launch (faults are considered here to be realizable configurations of switches and latches by spacecraft movement or procedural mistake). Linked to [L3-SFS-1018]: [L3-SFS-20] The spacecraft shall provide three inhibits (Dual fault tolerant) for all potentially catastrophic events (Category A as defined in EWR-127-1) and two inhibits (Single Fault Tolerant) for potentially critical events (Category B as defined by EWR-127-1) Linked to [L3-SFS-20]: [L3-SFS-703] The Flight Software shall support inhibits as required by the flight system for all catastrophic events (Category A*) which could result in a fatal or disabling injury, total loss of the ProjectA Flight System or major facility damage. The total requirement is three inhibits (dual fault tolerant). Inhibits include Engine, RCS Thrusters, Solar Array Deployment and RF Transmit. [L3-SFS-704] The Flight Software shall support inhibits as required by the flight system for all critical events (Category B*), which could result in serious injury, ProjectA Flight System, damage, or in the unscheduled use of safing procedures. The total requirements is two inhibits (single fault tolerant). Inhibits include Reaction Wheels and IRU. Linked to [L3-SFS-703] and [L3-SFS-704]: [L3-SFS-897] No single fault of the Spacecraft shall allow either solar array to deploy prematurely during launch and separation (before spindown). Linked to [L3-SFS-897]: [L3-SFS-909] The Flight System shall initialize to a safe state following initial powerup, component reset or switch or recovery from Phoenix mode. Safe State: prevent powering previously failed unit, use of actuators while mated, monitor separation and initiate separation sequence and transition to Safe Mode when appropriate. Linked to [L3-SFS-909]: [L4-SROAC-16] After initialization is complete, the ACS software shall respond to ACS Commands. [L4-SROAC-15] When the C&DH software indicates that a power-on or re-boot has occurred, selected ACS FDIR processing shall be initialized as disabled. [L4-SROAC-14] When the C&DH software indicates that a power-on or re-boot has occurred, all AC statistics shall be reset to zero. [L4-SROSU-4] Flight Software shall accept an initialization parameter block via ground command, and/or from Uplink Card directly during OBC cold boot, including Spacecraft ID, VCDU RS Code, VCDU Size, Downlink Card VCDU Rate, Uplink Card VCDU Rate, Time, with no Insert Zone, and RT-Primary, where the Spacecraft ID and RT-Primary values are stored in RAM memory. [L4-SROBC-3] Flight Computer startup applications shall place the spacecraft into a safe system configuration without any ground intervention following power-up or a temporary power bus fault (cold-boot). [L4-SROBC-4] Flight Software shall reset/restart and initialize all Flight Computer hardware components on the processor board to a known state. [L4-SROBC-278] time_of_last_reset [L4-SRUP-131] The Uplink FSW shall disable the processing of HLP commands from the OBC by default (on bootup.)",8/5/05
ProjectA - TIM - 1934,L3 RTA: Nonsensical internal tracing of the L3 SC&FSRD requirements,3,"There are several instances in the L3 SC&FSRD where there are L3 requirements linked to other L3 requirements. This is acceptable when L3 requirements are effectively decomposed at the same level. However, there are cases where traceability paths never terminate at Level 3, due to a previously linked child being reintroduced into the traceability path at a subordinate level. The following traceability relationshEngine illustrate this problem: 1. [L3-SFS-213] is an incoming link to [L3-SFS-218] 2. [L3-SFS-214] is an incoming link to [L3-SFS-213] 3. [L3-SFS-218] is an incoming link to [L3-SFS-214] Since [L3-SFS-218] already exists in the traceability path, this causes continuous repetition of the previously listed traceability sequence. Therefore, the traceability path never terminates. Furthermore, this implies that [L3-SFS-218] serves as both grandparent and child wrt [L3-SFS-214]. This phenomena is not isolated to the traceability branches originating with [L3-SFS-213], [L3-SFS-214], and [L3-SFS-218], but also occurs in traceability branches for [L3-SFS-215], [L3-SFS-216], and [L3-SFS-217]. This is due to all three requirements having [L3-SFS-218] as an incoming link. [L3-SFS-215] happens to also be an incoming link for [L3-SFS-213], which results in the same grandparent/child duplicity identified between [L3-SFS-218] and [L3-SFS-214]. An evaluation of [L3-SFS-213], [L3-SFS-214], [L3-SFS-215], [L3-SFS-216], [L3-SFS-217], and [L3-SFS-218] does reveal a common relationship among all of these requirements. However, this type of traceability seems of little value and defeats the purpose of requirements traceability. Referenced Requirements: Artifact: ProjectA DOORS Database dated 7/5/05 [L3-SFS-213] Capability: The C&DH shall provide a minimum of 8 Gbits of bulk storage. [L3-SFS-214] 1.0 Gbits of storage will be allocated to the Spacecraft for Housekeeping [L3-SFS-215] 0.2 Gbits of storage will be allocated to ACS Parameters including ephemerides and thrust tables. [L3-SFS-216] 0.1 Gbits of storage will be allocated to VML Storage [L3-SFS-217] 2.5 Gbits of storage will be allocated to the Instruments for storage of instrument data and housekeeping. [L3-SFS-218] The total bulk memory requirement with margin is 3.8 Gbits x 1.4 = 5.4 Gbits",8/5/05
ProjectA - TIM - 1933,L4 VML RTA: [L3-SFS-877] intent unclear and incomplete/incorrect traceability,3,"[L3-SFS-877] does not indicate whether it was intended to flow down to the L4 VML requirements or the L4 SCP-related requirements. However, the links to [L3-SFS-877] imply applicability to both. However, given the completely different architecture of VML compared to SCP and that they serve completely different purposes, it seems unlikely [L3-SFS-877] was intended to flow down to both the L4 VML and L4 SCP-related requirements. Ignoring this aspect of [L3-SFS-877], [L4-SRVML-19] may represent a valid link to [L3-SFS-877]; however, [L4-SRVML-19] only specifies the capability to read a sequence from a buffer, but not to provide a list of sequences and their sizes. Furthermore, it is unclear whether any memory dwell packets comprise the sequence attributes referenced by [L3-SFS-877]. If not, the links from [L4-SROBC-222] and [L4-SROBC-223] are invalid. The link from [L4-SROBC-218] implies [L3-SFS-877] levies the capability to perform a CRC; however, this does not appear to be the intent of [L3-SFS-877]. Therefore, this link seems invalid as well. Applicability to SCP sequences also implies [L3-SFS-877] should have flowed down to the L4 UPL SCP-related requirements; however, the [L3-SFS-877] has no incoming links from these requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-877] The Flight Software shall provide the capability to read out a list of the stored sequence and their sizes. Requirements linked to [L3-SFS-877]: [L4-SRVML-19] VM Sequence Memory - VM Task shall provide capability for VMLFC to read a sequence from a file buffer and to notify Ground System on anomalies on that read. [L4-SROBC-181] Flight Software shall accept and execute a Load Memory command to load SRAM, DRAM, EEPROM, and Working Buffer Flight Computer memory locations. [L4-SROBC-186] Flight Software shall accept and execute a DUMP_MEMORY command to dump the contents of SRAM, DRAM, EEPROM or Working Buffer memory, specifying the start address, number of words to dump, and number of copies to dump. [L4-SROBC-218] Flight Software shall accept and execute a COMPUTE_CRC command that computes a CRC for a specified memory range and returns the value in housekeeping telemetry. [L4-SROBC-222] Flight Software shall telemeter, in a single CCSDS packet, the combined MEMORY_DWELL data contents at a rate of no faster than one packet per second. [L4-SROBC-223] The time stamp associated with each MEMORY_DWELL packet shall be the sample time associated with the first data sample of the packet.",7/29/05
ProjectA - TIM - 1932,L4 VML RTA: [L3-SFS-875] intent unclear with respect to [L3-SFS-2340] and possible incomplete traceability,3,"[L3-SFS-875] is nearly the same as [L3-SFS-2340], except [L3-SFS-2340] is also applicable to H/W, but specific to VML sequences. Since [L3-SFS-875] only makes a general reference to ""sequence,"" it is unclear whether it was intended to represent the SCP version of [L3-SFS-2340]. If so, [L3-SFS-875] is missing SCP-specific terminology and the incoming link to [L4-SRVML-5] is incorrect. Otherwise, if [L3-SFS-875] applies to both VML and SCP sequences, then [L3-SFS-2340] remains, at least, partially redundant to [L3-SFS-875]. Furthermore, [L4-SRVML-5] is the only L4 VML requirement linked to [L3-SFS-875]. [L4-SRVML-5] is only general requirement specifying the support of the onboard block library, which is inadequate to satisfy [L3-SFS-875]. Specifically, [L4-SRVML-5] does not address the response to failed sequence load attempts. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-875] If the Flight Software is unable to load a sequence as commanded, the Flight Software shall notify the Ground System of the error. Requirements linked to [L3-SFS-875]: [L4-SRVML-5] On-Board Block Execution Capabilities - VM Task shall be capable, through VMLFC, to support and execute reusable-time-relative sequences (blocks) loaded on-board via VML interface. [L4-SROBC-174] Flight Software shall maintain counters for Software Manager commands that were not processed due to error conditions, and generate event messages for error conditions. [L4-SROBC-182] Flight Software shall reject any LOAD_MEMORY command that specifies an odd memory address, an invalid number of words to load, or a memory address that is out of addressable range. Other L3 requirement(s) applicable to [L3-SFS-875]: [L3-SFS-2340] If the FLight Software or hardware is unable to load a sequence into the Virtual Machine as commanded, the Flight Software shall notify the Ground Segment of the error.",7/29/05
ProjectA - TIM - 1931,L4 VML RTA: [L3-SFS-874] incomplete traceability,3,"[L3-SFS-874] has an incoming link from [L4-SRVML-5] and several links from the L4 UPL and L4 OBC C&DH SCP-related requirements. [L4-SRVML-5] is only a general requirement specifying the capability to load sequences from the onboard block library; whereas, [L3-SFS-874] is specific to loading and deleting sequences and requesting directory listings via memory dumps, although this may not require any VML Task interaction. In which case, the link from [L4-SRVML-5] would be extraneous. [L3-SFS-874] only contains a general reference to the term ""sequence,"" so [L3-SFS-874] does not explicitly indicate whether it was intended to flow down to L4 requirements related to both VML and SCP sequences. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-874] The Flight Software shall provide capabilities to allow the MOS to load and delete sequences and request directory listings, all via memory dump.. Requirements linked to [L3-SFS-874]: [L4-SRVML-5] On-Board Block Execution Capabilities - VM Task shall be capable, through VMLFC, to support and execute reusable-time-relative sequences (blocks) loaded on-board via VML interface. [L4-SRUP-170] The Uplink FSW shall generate Uplink Card Telemetry VCDUs using one or more of the following packets with the following APIDs: [L4-SRUP-172] 0x0FF2 Memory Dump Packet [L4-SRUP-182] Upon receipt of a memory dump command from the ground, the Uplink FSW shall insert a Memory Dump Telemetry Packet into each Uplink Card VCDU until the memory dump is complete. [L4-SRUP-183] The first word in the data section of the Memory Dump Telemetry Packet shall contain the starting address of the memory dump for the packet. [L4-SRUP-298] Flight Software shall accept and execute a SELECT_TABLE command, which initializes a table load/edit ""session"" to load or dump data for a specified table. [L4-SRUP-301] Flight Software shall accept and execute a DUMP_TABLE command, specifying an offset into the table to start dumping, the number of words to dump from the offset, and the number of copies to dump. [L4-SROBC-186] Flight Software shall accept and execute a DUMP_MEMORY command to dump the contents of SRAM, DRAM, EEPROM or Working Buffer memory, specifying the start address, number of words to dump, and number of copies to dump. [L4-SROBC-189] Flight Software shall accept and execute a Dump Memory in Event command, that returns in an event message the data resident in a limited number of memory locations.",7/29/05
ProjectA - TIM - 1930,L4 VML RTA: [L3-SFS-873] intent unclear and incomplete traceability,3,"[L3-SFS-873] has incoming links from [L4-SRVML-20], [L4-SROBC-269], and [L4-SROBC-270]. [L4-SRVML-20] represents a valid link if dumping VM memory buffers is involved with retaining sequence memory following a reset. However, the current links do not establish this relationship. [L4-SROBC-269] and [L4-SROBC-270] seem unrelated to [L3-SFS-873], and as such, represent invalid links. Also, since [L3-SFS-873] only makes a general reference to ""sequence"", it is unclear whether it should have also flowed down to the L4 SCP-related requirements. Therefore, [L3-SFS-873] seems unsatisfied by the linked L-4 requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-873] The Flight Software shall support retention of the current sequence memory content in CEU DRAM following a fault protection initiated reset that does not cycle power. Requirements linked to [L3-SFS-873]: [L4-SRVML-20] VM Memory Buffer - VM Task shall provide capability of dumping information regarding the file buffers residing in DRAM request. [L4-SROBC-269] Flight Software shall accept and execute a WATCH_MODE_ON command that disables the ability of Fault Detection/Correction software to request to execute assigned command sequences in response to detected failures. [L4-SROBC-270] Flight Software shall accept and execute a WATCH_MODE_OFF command that enables the ability of Fault Detection/Correction software to request to execute assigned command sequences in response to detected failures.",7/29/05
ProjectA - TIM - 1929,L4 VML RTA: [L3-SFS-872] incomplete traceability,3,"[L3-SFS-872] has incoming links from [L4-SRVML-20] and [L4-SROBC-224]. Neither of these links address the specified amount of DRAM allocated for sequence and data storage nor the specified amount of SRAM allocated for the VMLFC application code. Although, [L4-SROBC-224] may be applicable to [L3-SFS-872], no other L4 requirements linked to [L3-SFS-872] establish this relationship. Consequently, [L3-SFS-872] seems unsatisfied by the linked L4 requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-872] The spacecraft shall provide 4 Mbytes of sequence and data storage capacity in DRAM for MOS use and 200 Kbytes in SRAM for the VMLFC application code. Requirements linked to [L3-SFS-872]: [L4-SRVML-20] VM Memory Buffer - VM Task shall provide capability of dumping information regarding the file buffers residing in DRAM request. [L4-SROBC-224] Flight Software shall support up to 64 distinct MEMORY_DWELL addresses. Other L4 requirement(s) applicable to [L3-SFS-872]: [L4-SRVML-19] VM Sequence Memory - VM Task shall provide capability for VMLFC to read a sequence from a file buffer and to notify Ground System on anomalies on that read.",7/29/05
ProjectA - TIM - 1928,L4 VML RTA: [L3-SFS-2340] not satisfied by [L4-SRVML-9],3,"The only requirement linked to [L3-SFS-2340] is [L4-SRVML-9], which does not seem to satisfy the parent. This is predominately due to the ambiguity associated with [L4-SRVML-9]*. However, even if the ambiguity is ignored, [L4-SRVML-9] seems to be addressing a slightly different functionality than specified by [L3-SFS-2340]. The parent specifies a response to a failed attempt to execute a commanded VML sequence load, which presumably, would only occur after the VM Task accepts a command to load a VML sequence; whereas, [L4-SRVML-9] seems to specify a response to a command that is accepted or rejected based on whether the command is valid, presumably before the command is ever sent by the VML Task to the VMLFC. (*Note: ProjectA - TIM - 1898 already addresses the ambiguity of [L4-SRVML-9], so this issue is not reiterated here) Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-2340] If the FLight Software or hardware is unable to load a sequence into the Virtual Machine as commanded, the Flight Software shall notify the Ground Segment of the error. Requirements linked to [L3-SFS-2340]: [L4-SRVML-9] VM Task Health & Safety - VM Task shall provide proper interface to accept and reject commands and housekeeping packet generation.",7/29/05
ProjectA - TIM - 1925,L4 VML RTA: [L3-SFS-829] intent unclear and incomplete traceability,3,"[L3-SFS-829] has an incoming link from [L4-SRVML-2] and several links from the L4 OBC C&DH SCP-related requirements. [L4-SRVML-2] does not adequately address [L3-SFS-829]. Specifically, [L4-SRVML-2] does not address the ""autoexecute"" capability. Although the intent of [L3-SFS-829] relative to sequences is not stated directly, usage of the term ""sequence file"" implies an exclusively VML context, (i.e. not allocated to SCP FSW). In fact, of the four instances of the term ""file(s)"" among the seven DOORS modules that constitute the ProjectA L4 FSW SRSs, (i.e., SRSs for OBC C&DH, OBC SuROM, OBC ACS, ACE & Uplink Boot ROM Firmware, UPL, and VML Task), three are applicable to VML and the remaining instance is applicable to VCDUs . Therefore, if [L3-SFS-829] was intended to be limited to the context of VML sequences, then the incoming links from [L4-SROBC-110], [L4-SROBC-111], [L4-SROBC-112], and [L4-SROBC-113] are invalid. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-829] The Flight Software shall provide the capability to load a sequence file and start execution of the first function it contains as a single action (called ""autoexecute""). Requirements linked to [L3-SFS-829]: [L4-SRVML-2] Sequence Execution Capabilities - VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 10 (ten) Virtual Machines, capable of executing on-board blocks and sequences. [L4-SROBC-110] Flight Software shall provide a Relative Time Sequence (RTS) stored command load and execution capability to support continuous spacecraft and instrument mission operations. [L4-SROBC-111] Flight Software shall execute the requested RTS upon receipt of the real-time command (START_RTS directive) from either the ground or another on-board software application. [L4-SROBC-112] Flight Software shall execute commands within the RTS buffer (in position order) as the relative time-tag specified in the RTS command expires.",7/29/05
ProjectA - TIM - 1924,L4 VML RTA: [L3-SFS-826] incomplete traceability,3,"The only requirement linked to [L3-SFS-826] is [L4-SRVML-5], which does not seem to satisfy the parent. Although [L4-SRVML-5] specifies the capability to support the onboard block library, it does not does not seem to imply the capability to support ground modification of the block library. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-826] The Flight Software shall allow the ground to modify or replace the block library. Requirements linked to [L3-SFS-826]: [L4-SRVML-5] On-Board Block Execution Capabilities - VM Task shall be capable, through VMLFC, to support and execute reusable-time-relative sequences (blocks) loaded on-board via VML interface.",7/29/05
ProjectA - TIM - 1923,L4 VML RTA: [L3-SFS-825] intent unclear and incomplete traceability,3,"[L3-SFS-825] has incoming links from [L4-SRVML-5] and [L4-SROBC-110]. [L4-SRVML-5] does not adequately address [L3-SFS-825]. Specifically, [L4-SRVML-5] does not specify the capability to allow onboard blocks to be called by sequences or commands. Although the intent of [L3-SFS-825] relative to sequences is not stated directly, usage of the term ""blocks"" implies an exclusively VML context, (i.e. not allocated to SCP FSW). In fact, the three instances of the term ""blocks"" among the L4 VML requirements represent the only usages relative to sequences among all seven DOORS modules that constitute the ProjectA L4 FSW SRSs, (i.e., SRSs for OBC C&DH, OBC SuROM, OBC ACS, ACE & Uplink Boot ROM Firmware, UPL, and VML Task). Therefore, if [L3-SFS-825] was intended to be limited to the context of VML sequences, then the incoming link from [L4-SROBC-110] is invalid. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-825] The Flight Software shall allow onboard blocks to be called by sequence instruction or command. Requirements linked to [L3-SFS-825]: [L4-SRVML-5] On-Board Block Execution Capabilities - VM Task shall be capable, through VMLFC, to support and execute reusable-time-relative sequences (blocks) loaded on-board via VML interface. [L4-SROBC-110] Flight Software shall provide a Relative Time Sequence (RTS) stored command load and execution capability to support continuous spacecraft and instrument mission operations.",7/29/05
ProjectA - TIM - 1922,L4 VML RTA: [L3-SFS-824] intent unclear and incomplete traceability,3,"[L3-SFS-824] has incoming links from [L4-SRVML-5] and [L4-SROBC-110]. [L4-SRVML-5] does not adequately address [L3-SFS-824]. Specifically, [L4-SRVML-5] does not indicate the minimum number of arguments supported by blocks. Although the intent of [L3-SFS-824] relative to sequences is not stated directly, usage of the term ""block"" implies an exclusively VML context, (i.e. not allocated to SCP FSW). In fact, the three instances of the term ""block"" among the L4 VML requirements represent the only usages relative to sequences among all seven DOORS modules that constitute the ProjectA L4 FSW SRSs, (i.e., SRSs for OBC C&DH, OBC SuROM, OBC ACS, ACE & Uplink Boot ROM Firmware, UPL, and VML Task). Therefore, if [L3-SFS-824] was intended to be limited to the context of VML sequences, then the incoming link from [L4-SROBC-110] is invalid. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-824] The Flight Software shall provide the capability for at least 64 arguments to be passed to a block within the sequence instruction that calls it. Requirements linked to [L3-SFS-824]: [L4-SRVML-5] On-Board Block Execution Capabilities - VM Task shall be capable, through VMLFC, to support and execute reusable-time-relative sequences (blocks) loaded on-board via VML interface. [L4-SROBC-110] Flight Software shall provide a Relative Time Sequence (RTS) stored command load and execution capability to support continuous spacecraft and instrument mission operations.",7/29/05
ProjectA - TIM - 1921,L4 VML RTA: [L3-SFS-823] intent unclear and incomplete traceability,3,"[L3-SFS-823] has an incoming link from [L4-SRVML-5] and several links from the L4 OBC C&DH SCP-related requirements. [L4-SRVML-5] does not adequately address [L3-SFS-823]. Specifically, [L4-SRVML-5] is missing the key term ""parameterized"" and the supporting text that follows [L3-SFS-823] indicating blocks will accept parameters and/or return a value. Although the intent of [L3-SFS-823] relative to sequences is not stated directly, usage of the term ""blocks"" implies an exclusively VML context, (i.e. not allocated to SCP FSW). In fact, the three instances of the term ""blocks"" among the L4 VML requirements represent the only usages among all seven DOORS modules that constitute the ProjectA L4 FSW SRSs, (i.e., SRSs for OBC C&DH, OBC SuROM, OBC ACS, ACE & Uplink Boot ROM Firmware, UPL, and VML Task). Therefore, if [L3-SFS-823] was intended to be limited to the context of VML sequences, then the incoming links from [L4-SROBC-110], [L4-SROBC-111], [L4-SROBC-112], and [L4-SROBC-113] are invalid. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-823] The Flight Software shall support parameterized, reusable relative-time sequences (i.e., blocks). Blocks may accept parameters (a parameterized block), return a value (a block with a returned value), or both (a parameterized block with a returned value). Requirements linked to [L3-SFS-823]: [L4-SRVML-5] On-Board Block Execution Capabilities - VM Task shall be capable, through VMLFC, to support and execute reusable-time-relative sequences (blocks) loaded on-board via VML interface. [L4-SROBC-110] Flight Software shall provide a Relative Time Sequence (RTS) stored command load and execution capability to support continuous spacecraft and instrument mission operations. [L4-SROBC-111] Flight Software shall execute the requested RTS upon receipt of the real-time command (START_RTS directive) from either the ground or another on-board software application. [L4-SROBC-112] Flight Software shall execute commands within the RTS buffer (in position order) as the relative time-tag specified in the RTS command expires. [L4-SROBC-113] Flight Software shall interpret the RTS time-tag as the number of seconds to delay ""relative"" to the previous RTS command execution, or, in the case of the first command in a sequence, the number of seconds to delay after the receipt of the RTS execution request.",7/29/05
ProjectA - TIM - 1920,L4 VML RTA: [L3-SFS-821] intent unclear and incomplete traceability,3,"The only requirement linked to [L3-SFS-821] is [L4-SRVML-4], which does not seem to satisfy the parent. Specifically, [L4-SRVML-4] specifies the support of sequence ""global"" variables, but not sequence ""local"" variables, and also does not specify the ""capability to compute and assign values."" Furthermore, since [L3-SFS-821] only makes a general reference to ""sequence,"" it is unclear whether it should have also flowed down to the L4 SCP-related requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-821] The Flight Software shall provide the capability to compute and assign values to sequence local and sequence global variables. Requirements linked to [L3-SFS-821]: [L4-SRVML-4] Sequence Variables - Through VM Task interface, VML Flight Component shall provide global variables with read/write accessibility to active sequences and spacecraft subsystems.",7/29/05
ProjectA - TIM - 1919,L4 VML RTA: [L3-SFS-819] intent unclear and incomplete traceability,3,"The only requirement linked to [L3-SFS-819] is [L4-SRVML-4], which does not seem to satisfy the parent. Specifically, [L4-SRVML-4] specifies the support of sequence ""global"" variables, but not sequence ""local"" variables. Furthermore, since [L3-SFS-819] only makes a general reference to ""sequence,"" it is unclear whether it should have also flowed down to the L4 SCP-related requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-819] The Flight Software shall provide for sequence local and global variables to be set via sequence instructions. Requirements linked to [L3-SFS-819]: [L4-SRVML-4] Sequence Variables - Through VM Task interface, VML Flight Component shall provide global variables with read/write accessibility to active sequences and spacecraft subsystems.",7/29/05
ProjectA - TIM - 1917,L4 VML RTA: [L3-SFS-817] intent unclear and incomplete traceability,3,"The only requirement linked to [L3-SFS-817] is [L4-SRVML-4], which does not seem to satisfy the parent. Specifically, [L4-SRVML-4] does not specify the data types supported by sequence variables. Aside from [L3-SFS-817] residing under Section 10.6.6.2 Sequence Variables, (i.e., [L3-SFS-815]), [L3-SFS-817] is not written specific to ""sequence"" variables. Conceding [L3-SFS-817] is within the context of sequence variables, still leaves uncertainty over whether [L3-SFS-817] was intended to flow down to both the L4 VML and L4 SCP-related requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-817] The Flight Software shall support variables of the following data types shall be supported: integer, unsigned integer, double, string, command, and time. Requirements linked to [L3-SFS-817]: [L4-SRVML-4] Sequence Variables - Through VM Task interface, VML Flight Component shall provide global variables with read/write accessibility to active sequences and spacecraft subsystems.",7/29/05
ProjectA - TIM - 1916,L4 VML RTA: [L3-SFS-816] intent unclear and incomplete traceability,3,"[L3-SFS-816] has incoming links from [L4-SRVML-4] and [L4-SRVML-12], but these requirements do not satisfy the parent. Specifically, neither L4 requirement addresses the capability to support 200 sequence global variables. Also, since [L3-SFS-816] only makes a general reference to ""sequences,"" it is unclear whether it should have also flowed down to the L4 SCP-related requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-816] The Flight Software shall provide 200 sequence global variables for interaction between sequences and flight software applications. Requirements linked to [L3-SFS-816]: [L4-SRVML-4] Sequence Variables - Through VM Task interface, VML Flight Component shall provide global variables with read/write accessibility to active sequences and spacecraft subsystems. [L4-SRVML-12] VM Global Variable Telemetry - VM Task shall provide interface storage and transmission of the VMLFC global variables in sequences/blocks being executed.",7/29/05
ProjectA - TIM - 1915,L4 VML RTA: [L3-SFS-814] intent unclear and incomplete/incorrect traceability,3,"[L3-SFS-814] has an incoming link from [L4-SRVML-3] and several links from the L4 OBC C&DH and UPL requirements. [L4-SRVML-3] does not seem directly related to [L3-SFS-814]. [L3-SFS-814] addresses the initiation of a sequence; whereas, [L4-SRVML-3] specifies the default engine states of the VMFLC upon startup of the VM Task. Furthermore, since [L3-SFS-814] only makes a general reference to ""sequence,"" it is unclear it was intended to flow down to both the L4 VML and L4 SCP-related requirements. [L2-FGI-151], the only parent of [L3-SFS-814], is specific to VML sequences, which implies [L3-SFS-814] was only intended to flow down to the L4 VML requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-814] The Flight Software shall initiate a sequence upon receipt of a sequence start command. This command will be a command or a sequence instruction. Requirements linked to [L3-SFS-814]: [L4-SRVML-3] Initial State - Upon Start up of VM Task, VML Flight Component shall default engine states to “unloaded” and “inactive”. [L4-SRUP-289] Flight Software shall stop execution of the requested RTS upon receipt of the real-time command STOP_RTS from either the ground or another on-board software application. [L4-SRUP-290] Flight Software shall enable or disable the execution of the requested RTS upon receipt of the real-time commands ENABLE_RTS or DISABLE_RTS from either the ground or another on-board software application. [L4-SRUP-291] Flight Software shall reset command counters upon receipt of Reset Counters command. [L4-SRUP-292] The Flight Software shall pause or restart execution of an RTS on command. [L4-SROBC-111] Flight Software shall execute the requested RTS upon receipt of the real-time command (START_RTS directive) from either the ground or another on-board software application. [L4-SROBC-120] RTSs shall be DISABLED upon a COLD_RESTART with the exception of RTS #1 (the Start-Up RTS). Artifact: DOORS database dated 11/2/04 Parent of [L3-SFS-814]: [L2-FGI-151] 2. The spacecraft shall initiate a VML sequence upon receipt of a sequence start command. This command will be a command or a sequence instruction.",7/29/05
ProjectA - TIM - 1914,L4 VML RTA: [L3-SFS-812] not satisfied by [L4-SRVML-2],3,"The only requirement linked to [L3-SFS-812] is [L4-SRVML-2], which does not seem directly applicable to the parent. Specifically, [L4-SRVML-2] does not address the capability to enable/disable aborts of VM threads of execution Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-812] The Flight Software shall provide the capability to enable or disable aborts on any or all of the virtual machine threads of execution. Requirements linked to [L3-SFS-812]: [L4-SRVML-2] Sequence Execution Capabilities - VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 10 (ten) Virtual Machines, capable of executing on-board blocks and sequences.",7/29/05
ProjectA - TIM - 1912,L4 VML RTA: [L3-SFS-807] intent unclear and incomplete traceability,3,"[L3-SFS-807] has incoming links from [L4-SRVML-2] and [L4-SRVML-5], but these requirements do not satisfy the parent. Specifically, neither L4 requirement addresses the capability to execute 16 relative time sequences per second. Also, since [L3-SFS-807] only makes a general reference to “relative time sequences,” it is unclear whether it should have also flowed down to the L4 SCP-related requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-807] The Flight Software shall be capable of executing 16 or more relative time sequence instructions per second. Requirements linked to [L3-SFS-807]: [L4-SRVML-2] Sequence Execution Capabilities - VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 10 (ten) Virtual Machines, capable of executing on-board blocks and sequences. [L4-SRVML-5] On-Board Block Execution Capabilities - VM Task shall be capable, through VMLFC, to support and execute reusable-time-relative sequences (blocks) loaded on-board via VML interface. [L4-SRUP-288] Uplink RTS' shall dispatch up to 10 commands per second.",7/29/05
ProjectA - TIM - 1911,L4 VML RTA: [L3-SFS-806] intent unclear and incomplete traceability,3,"[L3-SFS-806] has an incoming link from [L4-SRVML-5] and several links from the L4 OBC C&DH and UPL requirements. [L4-SRVML-5] does not satisfy the VML Task allocations from [L3-SFS-806], since it does not specify the capability to execute relative times sequences at a 10 Hz rate. Furthermore, since [L3-SFS-806] only makes a general reference to ""relative time sequences,"" it is unclear that it was intended to flow down to both the L4 VML and L4 SCP-related requirements. [L2-FGI-141], the only parent of [L3-SFS-806], is specific to VML sequences, which implies [L3-SFS-806] was only intended to flow down to the L4 VML requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-806] The Flight Software shall provide the capability to execute consecutive sequence instructions with relative time tags of 0.1 second apart. Requirements linked to [L3-SFS-806]: [L4-SRVML-5] On-Board Block Execution Capabilities - VM Task shall be capable, through VMLFC, to support and execute reusable-time-relative sequences (blocks) loaded on-board via VML interface. [L4-SRUP-276] The Uplink FSW shall provide a Relative Time-tagged (RTS) stored command load and execution capability. [L4-SRUP-278] Flight Software shall execute commands within the RTS buffer (in position order) as the relative time-tag specified in the RTS command expires. [L4-SRUP-279] Flight Software shall interpret the RTS time-tag as the number of seconds to delay ""relative"" to the previous RTS command execution, or, in the case of the first command in a sequence, the number of seconds to delay after the receipt of the RTS execution request. [L4-SRUP-288] Uplink RTS' shall dispatch up to 10 commands per second. [L4-SROBC-110] Flight Software shall provide a Relative Time Sequence (RTS) stored command load and execution capability to support continuous spacecraft and instrument mission operations. [L4-SROBC-112] Flight Software shall execute commands within the RTS buffer (in position order) as the relative time-tag specified in the RTS command expires. [L4-SROBC-113] Flight Software shall interpret the RTS time-tag as the number of seconds to delay ""relative"" to the previous RTS command execution, or, in the case of the first command in a sequence, the number of seconds to delay after the receipt of the RTS execution request. Artifact: DOORS database dated 11/2/04 Parent of [L3-SFS-806]: [L2-FGI-141] 7. The spacecraft shall provide the capability to execute consecutive VML sequence instructions with relative time tags of 0.1 second apart.",7/29/05
ProjectA - TIM - 1910,L4 VML RTA: [L3-SFS-805] intent unclear and incomplete traceability,3,"The only requirement linked to [L3-SFS-805] is [L4-SRVML-2], which does not seem directly applicable to the parent. Specifically, [L4-SRVML-2] does not specify the capability to execute consecutive ATSs at a 10 Hz rate. Furthermore, although ATSs are only used by VMFLC for ProjectA, [L3-SFS-805] does not preclude usage by SCP. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-805] The Flight Software shall provide the capability to execute consecutive sequence instructions with absolute time tags of 0.1 second apart. Requirements linked to [L3-SFS-805]: [L4-SRVML-2] Sequence Execution Capabilities - VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 10 (ten) Virtual Machines, capable of executing on-board blocks and sequences.",7/29/05
ProjectA - TIM - 1909,L4 VML RTA: [L3-SFS-804] intent unclear and incomplete traceability,3,"[L3-SFS-804] has an incoming link from [L4-SRVML-5] and several links from the L4 OBC C&DH and UPL requirements. [L4-SRVML-5] does not satisfy the VML Task allocations from [L3-SFS-804], since it does not specify the capability to execute a relative time sequence with 0.1-second accuracy. Furthermore, since [L3-SFS-804] only makes a general reference to ""relative time sequences,"" it is unclear that it was intended to flow down to both the L4 VML and L4 SCP-related requirements. [L2-FGI-139], the only parent of [L3-SFS-804], is specific to VML sequences, which implies [L3-SFS-804] was only intended to flow down to the L4 VML requirements. . Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-804] The Flight Software shall execute relative-time sequence instructions within 0.1 second, inclusive of the indicated time relative to the preceding instruction. Requirements linked to [L3-SFS-804]: [L4-SRVML-5] On-Board Block Execution Capabilities - VM Task shall be capable, through VMLFC, to support and execute reusable-time-relative sequences (blocks) loaded on-board via VML interface. [L4-SRUP-276] The Uplink FSW shall provide a Relative Time-tagged (RTS) stored command load and execution capability. [L4-SRUP-277] Flight Software shall execute the requested RTS upon receipt of the real-time command (START_RTS directive) from either the ground or another on-board software application. [L4-SRUP-288] Uplink RTS' shall dispatch up to 10 commands per second. [L4-SROBC-110] Flight Software shall provide a Relative Time Sequence (RTS) stored command load and execution capability to support continuous spacecraft and instrument mission operations. [L4-SROBC-111] Flight Software shall execute the requested RTS upon receipt of the real-time command (START_RTS directive) from either the ground or another on-board software application. Artifact: DOORS database dated 11/2/04 Parent of [L3-SFS-804]: [L2-FGI-139] 5. The spacecraft shall execute relative-time VML sequence instructions with 0.1 second accuracy, inclusive of the indicated time relative to the preceding instruction.",7/29/05
ProjectA - TIM - 1908,L4 VML RTA: [L3-SFS-803] intent unclear and incomplete traceability,3,"The only requirement linked to [L3-SFS-803] is [L4-SRVML-2], which does not seem directly applicable to the parent. Specifically, [L4-SRVML-2] does not specify the capability to execute an ATS with 0.1-second accuracy. Furthermore, although ATSs are only used by VMFLC for ProjectA, [L3-SFS-803] does not preclude usage by SCP. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-803] The Flight Software shall execute absolute-time sequence instructions within 0.1 second of the spacecraft clock, inclusive of execution of indicated absolute Flight Software clock time. This value is independent of inaccuracies in Flight Software time. Requirements linked to [L3-SFS-803]: [L4-SRVML-2] Sequence Execution Capabilities - VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 10 (ten) Virtual Machines, capable of executing on-board blocks and sequences.",7/29/05
ProjectA - TIM - 1907,L4 VML RTA: [L3-SFS-802] intent unclear and incomplete traceability,2,"The only requirement linked to [L3-SFS-802] is [L4-SRVML-2], which does not seem directly applicable to the parent. Specifically, [L4-SRVML-2] does not specify the minimum number of concurrent sequence execution. Also, since [L3-SFS-802] only makes a general reference to “sequence,” it is unclear whether it should have also flowed down to the L4 SCP-related requirements. Note that the VML SRS Rev. ""-"" version of L4-SRVML-2 (previously idenitified in RMS as VM001.1) specified that ""The VMLFC shall be configured with 12 (twelve) Virtual Machines, capable of executing on-board blocks and sequences."" This version of the requirement was also presented at the ProjectA Project CDR in Book 2, page 15 of the Flight Software presentation as a Driving Requirement. TIM 1158 documents the inconsistency between the RMS version of the requirement (i.e., 10 Virtual Machines) and the SRS Rev. B version of the requirement (i.e., 12 Virtual Machines). This issue brings into question the correctness of the requirements currently in the DOORS database. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-802] The Flight Software shall provide for at least 12 concurrent threads of sequence execution. Requirements linked to [L3-SFS-802]: [L4-SRVML-2] Sequence Execution Capabilities - VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 10 (ten) Virtual Machines, capable of executing on-board blocks and sequences.",7/29/05
ProjectA - TIM - 1906,L4 VML RTA: [L3-SFS-801] intent unclear and incomplete traceability,3,"The only requirement linked to [L3-SFS-801] is [L4-SRVML-3], which does not seem applicable to the parent. Specifically, [L4-SRVML-3] does not address the capability for sequences to initiate other sequences. Also, since [L3-SFS-801] only makes a general reference to “sequences,” it is unclear whether it should have also flowed down to the L4 SCP-related requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-801] The Flight Software shall provide for initiation of sequences by other sequences. Requirements linked to [L3-SFS-801]: [L4-SRVML-3] Initial State - Upon Start up of VM Task, VML Flight Component shall default engine states to “unloaded” and “inactive”.",7/29/05
ProjectA - TIM - 1905,L4 VML RTA: [L3-SFS-800] not satisfied by [L4-SRVML-2],3,"The only requirement linked to [L3-SFS-800] is [L4-SRVML-2], which does not seem directly applicable to the parent. Specifically, [L4-SRVML-2] does not specify the maximum length of a VML instruction. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-800] The Flight Software shall support VM sequences containing of up to 4000 instructions in length. Requirements linked to [L3-SFS-800]: [L4-SRVML-2] Sequence Execution Capabilities - VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 10 (ten) Virtual Machines, capable of executing on-board blocks and sequences.",7/29/05
ProjectA - TIM - 1904,L4 VML RTA: [L4-SRVML-18] intent unclear with respect to flow-down of [L3-SFS-793],3,"[L4-SRVML-18] is the only L4 VML requirement linked to [L3-SFS-793]. [L4-SRVML-18] addresses the capability to accept sequence loads; however, it is unclear whether the intent of the phrase ""without interrupting a thread of execution"" is the responsibility of the VM task or VMLFC. [L4-SRVML-18] also implies that the VM Task provides the VMLFC with the capability to accept sequence loads. Presumably, the VM Task and VMLFC are separate modules of the FSW; however, it is difficult to conceive how one module could provide another module with the ""capability…to accept."" Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-793] The Flight Software shall accept uplink of sequence loads while an onboard sequence is executing. Requirements linked to [L3-SFS-793]: [L4-SRVML-18] VM Sequence Loading - VM Task shall provide capability for VMLFC to accept sequence loads without interrupting a thread of execution. [L4-SROBC-177] Flight Software shall maintain a special command for VML memory load when the command address matches F1xxyyyy hexadecimal where xx shall be the VM file buffer number, and yyyy shall be the offset address for VM files.",7/29/05
ProjectA - TIM - 1903,L4 VML RTA: [L3-SFS-792] intent unclear and possible incomplete traceability,3,"The intent of [L3-SFS-792] is not entirely clear, making it difficult to assess whether the requirement is satisfied by its incoming links. The intent may be for ground to be able to preempt any running sequence. On the other hand, the intent may be to allow a ground command to run concurrently with any VML and/or SCP running sequence. [L3-SFS-792] has one incoming links from the L4 VML requirements and several incoming links from the L4 UPL requirements associated with SCP. Although the incoming link from [L4-SRVML-2] may be valid, its connection to [L3-SFS-792] does not seem obvious. Also, since [L3-SFS-792] only makes a general reference to “onboard sequence,” it is unclear whether it should have flowed down to the L4 SCP-related requirements and/or the L4 VML requirements. Consequently, links from the L4 SCP-related requirements to [L3-SFS-807] may be missing or the existing links from [L4-SRUP-289], [L4-SRUP-290], [L4-SRUP-291], and [L4-SRUP-292] may be invalid and/or the links from the L4 VML requirements may be missing or the existing link from [L4-SRVML-2] may be invalid. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-792] The Flight Software shall allow execution of uplinked commands while an onboard sequence is executing. Requirements linked to [L3-SFS-792]: [L4-SRVML-2] Sequence Execution Capabilities - VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 10 (ten) Virtual Machines, capable of executing on-board blocks and sequences. [L4-SRUP-289] Flight Software shall stop execution of the requested RTS upon receipt of the real-time command STOP_RTS from either the ground or another on-board software application. [L4-SRUP-290] Flight Software shall enable or disable the execution of the requested RTS upon receipt of the real-time commands ENABLE_RTS or DISABLE_RTS from either the ground or another on-board software application. [L4-SRUP-291] Flight Software shall reset command counters upon receipt of Reset Counters command. [L4-SRUP-292] The Flight Software shall pause or restart execution of an RTS on command.",7/29/05
ProjectA - TIM - 1901,L4 VML RTA: [L3-SFS-768] flow-down and traceability incomplete relative to L4 VML SRS,3,"[L4-SRVML-16] is the only L4 VML linked to [L3-SFS-768]. [L4-SRVML-16] seems to sufficiently address conformance with the ""command"" specifications documented in the CTD; however, there are no L4 VML requirements linked to [L3-SFS-768], nor were any found that address conformance with the ""telemetry"" specifications documented by the CTD. Therefore, [L3-SFS-768] has not been flowed sufficiently to the L4 VML requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-768] The Flight Software shall conform to the Command and Telemetry formats and protocols documented in the command and Telemetry Dictionary (CTD). Requirements linked to [L3-SFS-768]: [L4-SRVML-16] Spacecraft-VMLFC Command Execution - VM Task shall provide command-handling interface capabilities to recognize all commands in Command Database. Other requirements linked to [L3-SFS-747]: [L4-SRUP-119], [L4-SRUP-127], [L4-SRUP-128], [L4-SRUP-130], [L4-SRUP-132], [L4-SRUP-133], [L4-SRUP-134], [L4-SRUP-135], [L4-SRUP-136], [L4-SRUP-137], [L4-SRUP-165], [L4-SRUP-166], [L4-SRUP-167], [L4-SRUP-168], [L4-SRUP-169], [L4-SRUP-170], [L4-SRUP-171], [L4-SRUP-172], [L4-SRUP-173], [L4-SRUP-174], [L4-SRUP-175], [L4-SRUP-179], [L4-SRUP-180], [L4-SRUP-182], [L4-SRUP-183], [L4-SRUP-184], [L4-SRUP-185], [L4-SRUP-186], [L4-SRUP-187], [L4-SRUP-188], [L4-SROBC-42], [L4-SROBC-43], [L4-SROBC-44], [L4-SROBC-45], [L4-SROBC-46], [L4-SROBC-153], [L4-SROBC-169]",7/29/05
ProjectA - TIM - 1900,L4 VML RTA: [L4-SRVML-22] intent unclear with respect to flow-down of [L3-SFS-751],3,"According to the 7/5/05 DOORS database, [L3-SFS-751] has (15) incoming links from the L4 requirements. [L4-SRVML-22], which is the only incoming link from the L4 VML requirements, seems directly applicable to [L3-SFS-751]. However, the wording of [L4-SRVML-22] makes it difficult to assess whether [L3-SFS-751] was sufficiently flowed down to L4 VML requirements. Specifically, the last part of [L4-SRVML-22], which states, ""to be logged into Event Handler task with logging capabilities,"" seems unintelligible. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-751] The Flight Software shall log major events as reported by subsystem tasks for later retransmit Requirements linked to [L3-SFS-751]: [L4-SRVML-22] VM Event Handler - VM Task shall provide interface for VMLFC internal Event Reports to be logged into Event Handler task with logging capabilities. Other requirements linked to [L3-SFS-747]: [L4-SRUP-213], [L4-SRUP-214], [L4-SRUP-215], [L4-SRUP-219], [L4-SRUP-220], [L4-SRUP-221], [L4-SROBC-18], [L4-SROBC-30], [L4-SROBC-31], [L4-SROBC-320], [L4-SROBC-321], [L4-SROBC-322], [L4-SROBC-323], [L4-SROBC-324]",7/29/05
ProjectA - TIM - 1899,L4 VML RTA: [L3-SFS-748] intent unclear and incomplete traceability,3,"The only L4 VML requirement linked to [L3-SFS-748] is [L4-SRVML-15], which does not address the specific types of commands (""relative"" and ""absolute"") as specified by the parent. Also, since [L3-SFS-748] specifies both types of commands, it is unclear whether it was intended to flow down to the L4 SCP-related requirements. If it was, then [L3-SFS-748] seems to be missing a link from L4 OBC C&DH requirements that corresponds to [L4-SRUP-276]. The only incoming links for [L3-SFS-748] from the L4 OBC C&DH are [L4-SROBC-112] and [L4-SROBC-113]. Although these requirements probably represent valid derived links, they are both specific to the processing and handling of RTSs, rather than directly specifying support of the RTSs themselves. Therefore, [L3-SFS-748] does not seemed satisfied by the L4 requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-748] The Flight Software shall support time tagged commands (relative and absolute) for all subsystem functions and instruments Requirements linked to [L3-SFS-748]: [L4-SRVML-15] VM Command Handling - VM Task shall provide command-handling interface capabilities to receive scheduled and unscheduled commands addressed to VMLFC as well as on-board subsystems. [L4-SRVML-27] Absolute Time Command - The Flight Software shall not execute an absolute time command if the desired time is earlier than the current Flight Software time by a threshold interval. The Flight Software shall report this error in telemetry and terminate the sequence. The threshold interval shall be ground-prescribed, but nominally 2 seconds. [L4-SRUP-276] The Uplink FSW shall provide a Relative Time-tagged (RTS) stored command load and execution capability. [L4-SRUP-278] Flight Software shall execute commands within the RTS buffer (in position order) as the relative time-tag specified in the RTS command expires. [L4-SRUP-279] Flight Software shall interpret the RTS time-tag as the number of seconds to delay ""relative"" to the previous RTS command execution, or, in the case of the first command in a sequence, the number of seconds to delay after the receipt of the RTS execution request. [L4-SROBC-110] Flight Software shall provide a Relative Time Sequence (RTS) stored command load and execution capability to support continuous spacecraft and instrument mission operations. [L4-SROBC-112] Flight Software shall execute commands within the RTS buffer (in position order) as the relative time-tag specified in the RTS command expires.",7/29/05
ProjectA - TIM - 1898,L4 VML RTA: [L4-SRVML-9] intent unclear with respect to flow-down of [L3-SFS-747],3,"According to the 7/5/05 DOORS database, (40) L4 requirements are linked to [L3-SFS-747] - (4) of which are from the L4 VML requirements. [L4-SRVML-9] seems like the most applicable requirement linked from the L4 VML requirements to [L3-SFS-747]. However, the wording of [L4-SRVML-9] makes it difficult to determine the intent of this requirement. Also, it is not clear whether maintaining counters, as stipulated by [L3-SFS-747], is consistent with providing ""proper interface to accept and reject commands."" Therefore, [L3-SFS-747] is not clearly flowed down to the L4 VML requirements. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-747] The Flight Software shall provide command accept and reject counters for subsystem tasks and interfaces. Requirements linked to [L3-SFS-747]: [L4-SRVML-9] VM Task Health & Safety - VM Task shall provide proper interface to accept and reject commands and housekeeping packet generation. [L4-SRVML-14] VM Command Interface - VM Task shall provide capability to interface with the Flight Software through Command interface. [L4-SRVML-15] VM Command Handling - VM Task shall provide command-handling interface capabilities to receive scheduled and unscheduled commands addressed to VMLFC as well as on-board subsystems. [L4-SRVML-16] Spacecraft-VMLFC Command Execution - VM Task shall provide command-handling interface capabilities to recognize all commands in Command Database. Other requirements linked to [L3-SFS-747]: [L4-SROAC-21], [L4-SROAC-22], [L4-SROAC-23], [L4-SROAC-25], [L4-SROAC-26], [L4-SROAC-27], [L4-SROAC-29], [L4-SRUP-7], [L4-SRUP-8], [L4-SRUP-25], [L4-SRUP-28], [L4-SRUP-29], [L4-SRUP-121], [L4-SRUP-122], [L4-SRUP-129], [L4-SRUP-148], [L4-SRUP-150], [L4-SRUP-180], [L4-SRUP-295], [L4-SRUP-296], [L4-SRUP-310], [L4-SROBC-42], [L4-SROBC-45], [L4-SROBC-86], [L4-SROBC-114], [L4-SROBC-116], [L4-SROBC-117], [L4-SROBC-118], [L4-SROBC-119], [L4-SROBC-125], [L4-SROBC-172], [L4-SROBC-173], [L4-SROBC-174], [L4-SROBC-175], [L4-SROBC-210], [L4-SROBC-318]",7/29/05
ProjectA - TIM - 1897,L4 VML RTA: [L3-SFS-724] traceability incomplete and incorrect,3,"[L4-SRVML-22] is linked to [L3-SFS-724], but does not seem directly associated with the parent. The remaining links are from [L4-SRVML-7] and [L4-SRVML-8] to [L3-SFS-724]. The link from [L4-SRVML-7] and, to a lesser extent, the link from [L4-SRVML-8] appear valid; however, these requirements do not sufficiently address [L3-SFS-724]. Also, [L3-SFS-24] is the parent of [L3-SFS-724]; however, the parent is more specific than the child, and as written, the two requirements are inconsistent. [L3-SFS-724] specifies controlling Flight System (FS) events to within 5 minutes; whereas, [L3-SFS-24] specifies 5 seconds, but is limited to science phases. Referenced Requirements: Artifact: DOORS database dated 7/5/05 [L3-SFS-724] The Flight Software shall support control the UTC-relative execution time of a Flight System event to within 5 minutes. Parent of [L3-SFS-724]: [L3-SFS-24] The Flight System shall support control of the UTC-relative execution time of a Flight System event to within 5 seconds during science phases. Note: Allocations of this requirement are in the FGICD. Requirements linked to [L3-SFS-724]: [L4-SRVML-7] VM Task Time Management - VM Task shall provide interface for time synchronization between VM Engines and spacecraft. [L4-SRVML-8] VM Re-start Capability - VM Task shall provide proper interface for initializing VML Flight Component Engines and trigger default configuration. [L4-SRVML-22] VM Event Handler - VM Task shall provide interface for VMLFC internal Event Reports to be logged into Event Handler task with logging capabilities.",7/29/05
ProjectA - TIM - 1896,"Uplink Test Script, Requirements not Traced to any Test Scripts",2,"The attached document contains a table of 120 Uplink SRS requirements, which have a verification method of ""Test"" listed in the 07/05/05 DOORS database but are not traced to any test scripts",7/28/05
ProjectA - TIM - 1895,"Uplink Test Script, ul_CTE_ccw_csw_test, Does not Properly Test L4-SRUP-111 or L4-SRUP-116",2,"Requirements L4-SRUP-111 and L4-SRUP-116 are listed in DOORS traced to the test script ul_CTE_ccw_csw_test; however, the requirements do not appear to be tested in this script. The test script does not list these requirements and test steps could not be found that relate to these capabilities. L4-SRUP-111 : SRC-UPC002.7 - Function Code 66 - Action: Initiate a memory dump L4-SRUP-116 : SRC-UPC002.12 - Function Code 6B - Action: Load the specified dataset into the specified location in memory Heading excerpt from test script: ; Title: ul_ccw_csw_test.scr ; ; Purpose: Functional testing script for Uplink/OBC interface. ; Specifically: ; 1) CCW discrete lines from the ULC to the OBC ; (AMBI_PIDS). The CCW values determine how (which ; mode) the OBC boots. ; 2) CSW discrete lines from the OBC to the ULC ; (QHSS_PIDS). The CSW values indicate the ; success/failure of various boot stages of the OBC. ; 3) Watchdog timer expired from the OBC to the ULC ; (LIO_PID(0)). ; 4) Heartbeat from the OBC to the ULC (LIO_PID(1)) ; ; The following requirements are tested: ;",7/28/05
ProjectA - TIM - 1894,"Uplink Test Script, ul_hlp_command_test, Does not Properly Test L4-SRUP-56 or L4-SRUP-104",2,"Requirements L4-SRUP-56 and L4-SRUP-104 are listed in the test script ul_hlp_command_test and DOORS also traces verification to this script; however, the requirements do not appear to be tested properly due to the differences noted below. According to the header in the test script, ul_hlp_command_test.scr, the script has not been updated specifically to verify ProjectA requirements. 1) L4-SRUP-56 : OV4-UPC007 - The Uplink FSW shall write the HLP command field from the following Standard PCC commands to the HLP hardware if it is non-zero: This requirement is followed by the subrequirements L4-SRUP-57 / OV4-UPC007.A1 - to - L4-SRUP-99 / OV4-UPC007.B15, which are a list of commands for which L4-SRUP-56 applies. Excerpt from test script; note the difference in the requirement definition: ; OV4-UPC007 The UPL shall write the HLP command field in a ; Standard PCC command to the HLP hardware if it is ; non-zero. It would be expected that the subrequirements (commands) would all be tested; however, the commands are not tested in this script. 2) L4-SRUP-104 : SRC-UPC002 - The Uplink FSW shall process the function codes in a Local PCC command in accordance with the following: This requirement is followed by the subrequirements L4-SRUP-105 / SRC-UPC002.1- to - L4-SRUP-118 / SRC-UPC002.14, which are a list of commands for which L4-SRUP-104 applies Excerpt from test script; Note that this Definition does not agree with the one in the script and the testing does not appear to cover the new definition ; SRC-UPC002 The UPL shall write the contents of the HLP Extended ; Code Field into a hardware defined I/O address prior ; to writing the HLP command into the HLP Control ; register if the HLP command is HLP_GRPA_2.",7/28/05
ProjectA - TIM - 1893,"Uplink Test Script, ul_ccw_csw_test, Does not Properly Test L4-SRUP-20",2,"Requirement L4-SRUP-20 is listed in the test script ul_ccw_csw_test and DOORS also traces verification to this script; however, it does not appear to be tested. L4-SRUP-20 : OV4-UCP008 - The Uplink FSW shall verify that the primary header contains a valid Application Identifier (APID). The script does not explain how this requirement will be verified nor specific pass/fail criteria for it. It would be expected that the test would cover a variety of valid and invalid APIDs; however, it does not appear that this occurs in this test script.",7/28/05
ProjectA - TIM - 1892,"Uplink Test Script, ul_telemetry_gatherer_test, Needs Updating From SORCE References to ProjectA Values",2,"The script ul_telemetry_gatherer_test.scr needs updating. This script still refers to SORCE values for verification and ProjectA has different values for the following requirements: 1) L4-SRUP-167 : GLX-UTG002 - The Uplink FSW shall initialize the VCDU Release Rate to a default rate of 360 seconds per VCDU upon boot up. corresponding script excerpt ; GLX-UTG002 The UPL shall initialize the VCDU Release Rate to a ; default rate of 5 seconds per VCDU upon boot up. … ; Verify the default VCDU release rate wait ul_vcdu_rate = 5 2) L4-SRUP-168 : GLX-UTG003 - The Uplink FSW shall provide the capability for the ground to load the VCDU Release Rate with integer value within the range of 0-65,535 (seconds per VCDU, where 0 halts transfer to the Downlink Card). corresponding script excerpt ; GLX-UTG003 The UPL shall provide the capability for the ground to ; load the VCDU Release Rate with an odd integer value ; within the range of 1-31 (seconds per VCDU.) 3) L4-SRUP-174 : SRC-UTG003 - The Uplink FSW shall generate VCDU's with a spacecraft ID of CB hex. corresponding script excerpt SRC-UTG003 The UPL shall generate VCDU's with a spacecraft ID of ; 0A3H. 4) L4-SRUP-175 : SRC-UTG004 - The Uplink FSW shall generate VCDU's with a Reed-Solomon code of DDC hex. corresponding script excerpt SRC-UTG004 The UPL shall generate VCDU's with a Reed-Solomon code ; of 0626BH.",7/28/05
ProjectA - TIM - 1891,Unused Uplink Test Scripts,3,"Two uplink test scripts are found in the Build 4.0 and 5.0 folders, which are not listed in either the Build 4.0 or 5.0 Test Procedure or the 07/05/05 DOORS database. The folder is configuration controlled and should not contain items that are not in use. ul_command_processor_test.scr This script has a number of requirements listed in it and some of them are included in the DOORS database; however, the DOORS database does not have links to this script. ul_cop1_checkout.scr This script has one requirement cited in it; however, the requirement is not in the DOORS database.",7/27/05
ProjectA - TIM - 1890,Missing Uplink Test Scripts in Build 4.0 and 5.0,3,"Three scripts are listed in the Build 4 test procedure and have links in the 07/05/05 DOORS database, but were not part of the build 4.0 or 5.0 test script folders. The following scripts are missing; therefore, it is not possible to verify that the linked requirements are tested: ul_sys_tbl_test, ul_scp_tbl_test, ul_tbl_load_abort_test",7/27/05
ProjectA - TIM - 1889,Incomplete Verification of ACS FDC Requirements by the Build 5 ACS Test Procedures,2,"A. This TIM presents the issues identified through analysis of the following artifacts: 1. OBC ACS Flight Software Requirements Specification, S912-SRS4930, DOORS 7-5-05 data base. 2. ProjectA OBC ACS Flight Test Procedures, S912-TP4930, Revision–B, Section 11.2 ACS FDC Test 3. ProjectA_acs_fdc_test_main_scr () (and all scripts invoked by _main.scr) for Build 5.0 4. ProjectA Attitude Control Subsystem Performance Specification, S912-PF4610, Revision-C 5. ACS Flight Software Requirements Specification, S912-SRS4930, Rev-B B. Sub-Issues (Note: the TIM recommendation field provides IV&V suggested resolutions for each of the following sub-issues) Sub-issue #1: The ACS test procedure does not map individual ACS SRS requirements to specific test points: 38 SRS requirements are mapped to the entire test script and there is no further linking of requirements to test points in the script. . Sub-issue #2: Document 4, Section 11.2, row 6, states: (1) “Action: Review event log, note any unexpected event messages, and note any unexpected results and (2) “Expected Results: The basic functionality should be verified against ACS Performance Spec (S912-PF4610)”. The two statements seem inconsistent as the first focuses on the “event log and noting unexpected messages/results” while the second seems to imply “use the unexpected messages/results to verify basic functionality”. Also, it is unclear why the ACS Performance Specification (ACSPS) is referenced as the document for providing the basis for “expected results” as the Requirement ID column only references ACS SRS requirements (it is noted that several of the linked SRS requirements point to the ACSPS for FDIR type requirements). Sub-issue #3: In most cases the procedure and the scripts do not identify specific pass/fail criteria other than the “wait statements” in the script. These are designed to check whether certain events have happened (e.g., a TMON indicates a fault). Based on the scripts, the test conductor is observing screens that contain TLM, etc. and data is collected for post test analysis (e.g., plots); however, there is no indication of how this data is to be screened for pass/fail. Sub-issue #4: Due to Sub-issue #1 there is little guidance as to where a specific requirement is verified in the test scripts. An analysis of the ProjectA_acs_fdc_test_main.scr shows that few of the linked SRS requirements are verified by the script. The attachment to this TIM identifies: (1) the linked SRS requirements from the OBC ACS Flight Software Requirements Specification, S912-SRS4930 Revision-B; (2) the companion SRS requirements from the 7-5-05 DOORS version and (3) a statement as to whether IV&V could find evidence that the linked test actually verifies the requirement. While the Build 5 ACS FDC Test script exercises many functions associated with ACS FDIR related functions, it seems to be insufficiently focused in scope to verify the detailed ACS SRS requirements.",7/27/05
ProjectA - TIM - 1888,Inconsistent specification of the Verification Method for Uplink Software Requirements in DOORS and the Test Scripts,2,"The following requirements list ""Test"" as the verification method in the DOORS database (07/05/05); however, the test scripts state that the requirements are verified through Code Inspection. The IV&V team has no issue with verification by inspection. However, if the intent is to test the functionality specified in the requirements then, either the referenced test scripts will need to be modified to include steps to verify the requirements or new test scripts will need to be created. Note that the four test scripts referenced in this TIM have not been updated specifically for the ProjectA Project. Specifically, test script ul_hss1_test.scr includes references to two requirements from GALEX that are not applicable to ProjectA. 1. Requirements included in ul_hss1_test.scr: L4-SRUP-128 : OV4-UHS002 - The Uplink FSW shall reject any HSS1 message experiencing a hardware error. L4-SRUP-140 : OV4-UHS021 - The Uplink FSW shall log an HSS1 error if a GSC command is requested and none are available for transmission. L4-SRUP-141 : OV4-UHS022 - The Uplink FSW shall reset the Uplink side of the HSS1 interface when signaled by the OBC through a discrete line that a hang condition exists by performing the following actions: L4-SRUP-142 : OV4-UHS022.1 - Drop all GSC commands held by the Uplink L4-SRUP-143 : OV4-UHS022.2 - Abort any HSS1 transmissions in progress L4-SRUP-144 : OV4-UHS022.3 - Clear the GSC command interrupt line; L4-SRUP-145 : OV4-UHS023 - The Uplink FSW shall log the HSS1 interface hang condition as an HSS1 error. L4-SRUP-146 : OV4-UHS024 - The Uplink FSW shall log each dropped GSC command as a GSC command error. 2. Requirements included in ul_scsa_test.scr: L4-SRUP-151 : OV4-USC004 - The Uplink FSW shall maintain an error status describing the reason for the rejection of the last rejected SCSA message. L4-SRUP-152 : OV4-USC006 - The Uplink FSW shall abort and log as an SCSA error any VCDU transmission that has not completed within 100 milliseconds (ms). L4-SRUP-154 : OV4-USC012 - The Uplink FSW shall abort and log as an SCSA error any Downlink command transmission that has not completed within 100 microseconds. L4-SRUP-149 : OV4-USC002 - The Uplink FSW shall log any SCSA message experiencing a hardware error as an SCSA error. L4-SRUP-150 : OV4-USC003 - The Uplink FSW shall maintain a count of rejected SCSA messages. 3. Requirement included in ul_watchdog_monitor_test.scr: L4-SRUP-162 : SRC-UWM001 - The Uplink FSW shall monitor the OBC Watchdog timer at a frequency of once per second. 4. Requirements included in ul_master_clock.scr: L4-SRUP-191 : OV4-UMC003 - The Uplink FSW shall support an open loop mode of operation by loading a specified hardware divider with the number of Master Clock ticks specified to equal one second. L4-SRUP-195 : OV4-UMC016 - The Uplink FSW shall calculate an integer 1 Hz signal timing count, segmenting the count into evenly spaced integer values and applying these to every one of the 2 KHz intervals within one second. Note that L4-SRUP-191 and L4-SRUP-195 are not linked to ul_master_clock.scr in the 07/05/05 DOORS Database.",7/27/05
ProjectA - TIM - 1887,"Uplink Software Test 9, Uplink Telemetry and Status Functional Test, May Not Fully Verify the Linked Uplink SRS Requirements",2,"Uplink Software Test 9, Uplink Telemetry and Status Functional Test, is mapped to a set of Uplink SRS requirements; however, these requirements are not called out in the test script and it did not appear to IV&V that any of these requirements were tested. The test procedure states that this test verifies uplink card functionality for telemetry and status. The test procedure lists the following step: Record the Pass/Fail status for script. Ability to receive telemetry and status from uplink card. (pass or fail) The test script does not refer to the requirements and the script itself is difficult to relate to the requirements. For Example: msg ""Test 2:"" msg ""Enable monitor 0 with UTS disabled,"" msg ""Insure that it doesn't trigger"" The requirements traced to this test script are as follows: L4-SRUP-246 : DWN-TS004 - The Uplink FSW shall leave empty monitors, and responses disabled. L4-SRUP-248 : DWN-TS006 - The Uplink FSW telemetry monitor logic shall provide telemetry indicating current state and evaluation result for each monitor: L4-SRUP-249 : DWN-TS006.1 - State (enable/disable) - enabled default state, command enable/disable. L4-SRUP-250 : DWN-TS006.2 - Last check result (fail/pass) - updated every cycle based on telemetry. L4-SRUP-254 : DWN-TS006.4 - Fail flag status - set if check fails for persistnece, clear by command. L4-SRUP-261 : DWN-TS009 - The Uplink FSW telemetry monitors (individual or all) shall be enabled or disabled by command. L4-SRUP-263 : DWN-TS011 - The Uplink FSW telemetry monitors (individual or all) shall be reset to their default states by command (enabled, persistence reset, flag cleared). L4-SRUP-268 : DWN-TS014.2 - All (enabled) telemetry monitors evaluated. L4-SRUP-269 : DWN-TS014.3 - All (enabled) fault monitors evaluated until a fault is detected and a response is initiated.",7/27/05
ProjectA - TIM - 1886,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.7 and fsw_test_03 inconsistent with RVM,2,"The EngCntrl SRS and fsw_test_03 requirement text for the ""BFAULTPRT"" does not agree with the RVM. The EngCntrl SRS and the test script text discuss the requirement in terms of a BFAULTPRT command, and the RVM discusses an XFAULTPRT command. The command name is different in the versions of the requirement text. Also, the EngCntrl SRS requirement for the ""BFAULTPRT "" is numbered 3.4.7.7, the test script requirement for ""BFAULTPRT"" is numbered 3.4.6.7, and the RVM requirement for the ""XFAULTPRT "" is numbered 3.4.6.7. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.7: BFAULTPRT The BFAULTPRT command is used to enable and disable various fault protection function of the Bootloader Software. Referenced Test Script Requirement 3.4.6.7: BFAULTPRT The BFAULTPRT command is used to enable and disable various fault protection function of the Bootloader Software. Referenced RVM Requirement 3.4.6.7: XFAULTPRT The XFAULTPRT command is used to enable and disable various fault protection function of the Bootloader Software.",7/15/05
ProjectA - TIM - 1885,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.5 and fsw_test_03 inconsistent with RVM,2,"The EngCntrl SRS and fsw_test_03 requirement text for the ""BPEEKMEM"" does not agree with the RVM. The EngCntrl SRS and the test script text discuss the requirement in terms of a BPEEKMEM command, and the RVM discusses an XPEEKMEM command. The command name is different in the versions of the requirement text. Also, the EngCntrl SRS requirement for the ""BPEEKMEM "" is numbered 3.4.7.5, the test script requirement for ""BPEEKMEM"" is numbered 3.4.6.5, and the RVM requirement for the ""XPEEKMEM "" is numbered 3.4.6.5. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.5: BPEEKMEM The BPEEKMEM command is used to specify the start address to be used when the Telemetry Update task reports the memory peek data. Referenced Test Script Requirement 3.4.6.5: BPEEKMEM The BPEEKMEM command is used to specify the start address to be used when the Telemetry Update task reports the memory peek data. Referenced RVM Requirement 3.4.6.5: XPEEKMEM The XPEEKMEM command is used to specify the start address to be used when the Telemetry Update task reports the memory peek data.",7/15/05
ProjectA - TIM - 1884,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.4.3 and fsw_test_03 inconsistent with RVM,2,"The EngCntrl SRS and fsw_test_03 requirement text for the ""Checksum Calculation In Progress Check"" does not agree with the RVM. The EngCntrl SRS and the test script text discuss the requirement in terms of an BPOKEMEM command, and the RVM discusses an XPOKEMEM command. The command name is different in the versions of the requirement text. Also, the EngCntrl SRS requirement for the ""BPOKEMEM"" is numbered 3.4.7.4.3 and the RVM and test script requirement for ""BPOKEMEM"" is numbered 3.4.6.4.3. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.4.3: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a BPOKEMEM command is received and the command will be ignored. Referenced Test Script Requirement 3.4.6.4.3: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a BPOKEMEM command is received and the command will be ignored. Referenced RVM Requirement 3.4.6.4.3: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a XPOKEMEM command is received and the command will be ignored.",7/15/05
ProjectA - TIM - 1883,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.4.1 and fsw_test_03 inconsistent with RVM,2,"The EngCntrl SRS and fsw_test_03 requirement text for the ""Data Type Verification"" does not agree with the RVM. The EngCntrl SRS and the test script text discuss the requirement in terms of an BPOKEMEM command, and the RVM discusses an XPOKEMEM command. The command name is different in the versions of the requirement text. Also, the EngCntrl SRS requirement for the ""BPOKEMEM"" is numbered 3.4.7.4.1 and the RVM and test script requirement for ""BPOKEMEM"" is numbered 3.4.6.4.1. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.4.1: Data Type Verification The Bootloader software shall verify the BPOKEMEM command specifies a valid data type. The Bootloader software shall indicate an INVALID COMMAND PARAMETER error if the data type is not valid and the command will be ignored. Referenced Test Script Requirement 3.4.6.4.1: Data Type Verification The Bootloader software shall verify the BPOKEMEM command specifies a valid data type. The Bootloader software shall indicate an INVALID COMMAND PARAMETER error if the data type is not valid and the command will be ignored. Referenced RVM Requirement 3.4.6.4.1: Data Type Verification The Bootloader software shall verify the XPOKEMEM command specifies a valid data type. The Bootloader software shall indicate an INVALID COMMAND PARAMETER error if the data type is not valid and the command will be ignored.",7/15/05
ProjectA - TIM - 1882,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.4 and fsw_test_03 inconsistent with RVM,2,"The EngCntrl SRS and fsw_test_03 requirement text for the ""BPOKEMEM"" does not agree with the RVM. The EngCntrl SRS and the test script text discuss the requirement in terms of an BPOKEMEM command, and the RVM discusses an XPOKEMEM command. The command name is different in the versions of the requirement text. Also, the EngCntrl SRS requirement for the ""BPOKEMEM"" is numbered 3.4.7.4 and the RVM and test script requirement for ""BPOKEMEM"" is numbered 3.4.6.4. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.4: BPOKEMEM The BPOKEMEM command is used to write a data value into a specified memory location in the CPU address space. Referenced Test Script Requirement 3.4.6.4: BPOKEMEM The BPOKEMEM command is used to write a data value into a specified memory location in the CPU address space. Referenced RVM Requirement 3.4.6.4: BPOKEMEM The XPOKEMEM command is used to write a data value into a specified memory location in the CPU address space.",7/15/05
ProjectA - TIM - 1881,EngCntrl Test Scripts: EngCntrl SRS v1.2 and fsw_test_01 inconsistent with RVM for requirement 3.3.5.4,2,"The EngCntrl SRS and the requirement text included in the RVM and fsw_test_01 for EngCntrl SRS Requirement 3.3.5.4 do not agree . The SRS and the test script text for the ""1553 Command Sub-addresses"" are different than the RVM in that they discuss ""writes to subaddresses 2"" and the RVM discusses ""writes to sub-addresses 2 and 9"". This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.3.5.4: 1553 Command Sub-addresses The Bootloader Software shall configure the 1553 interface to provide 32 word buffers to receive host spacecraft writes to subaddresses 2. Referenced Test Script Requirement 3.3.5.4: 1553 Command Sub-addresses The Bootloader Software shall configure the 1553 interface to provide 32 word buffers to receive host spacecraft writes to sub-addresses 2. Referenced RVM Requirement 3.3.5.4: 1553 Command Sub-addresses The Bootloader Software shall configure the 1553 interface to provide 32 word buffers to receive host spacecraft writes to sub-addresses 2 and 9.",7/13/05
ProjectA - TIM - 1880,"EngCntrl Test Scripts: EngCntrl SRS v1.2 , fsw_test_01, and RVM all inconsistent with each other for requirement 3.3.5.5",2,"The EngCntrl SRS and fsw_test_01 requirement text do not agree with the RVM text for requirement 3.3.5.5. The SRS and fsw_test_01 states the reads are ""from sub-addresses 2 through 8"", but the RVM states the reads are ""from sub-addresses 2 through 9"". All three requirements state that there are eight 32-word buffers; therefore assuming one 32-word buffer is required for each subaddress, it would appear as though the RVM is the correct requirement since subaddresses 2 though 9 would equal eight addresses and subaddresses 2 through 8 would only equal seven addresses. However, the EngCntrl Code and EngCntrl-SC ICD indicate that only seven buffers are used for subaddresses 2 through 8. There appears to be a CM process issue, based on the data that indicates changes were made in 3 different places (SRS, RVM, and Test Scripts) but not roled back into the other sources. This leads to the questions as to whether the approved SRS requirement was implemented and verified. Referenced EngCntrl SRS Requirement 3.3.5.5: 1553 Telemetry Sub-addresses The Bootloader Software shall configure the 1553 interface to support eight 32-word buffers to support host spacecraft reads from sub-addresses 2 through 8. Referenced Test Script Requirement 3.3.5.5: 1553 Telemetry Subaddresses The Bootloader Software shall configure the 1553 interface to support eight 32-word buffers to support host spacecraft reads from subaddresses 2 through 8. RVM Requirement 3.3.5.5: 1553 Telemetry Sub-addresses The Bootloader Software shall configure the 1553 interface to support eight 32-word buffers to support host spacecraft reads from subaddresses 2 through 9. Artifact: ProjectA - Digital Control Interface Unit (EngCntrl) Code File: ..\EngCntrl-fsw-100\src\SH_DEFINE.H 172:#define COMMAND_SUBADDRESS 2 173:#define CIRCULAR_SUBADDRESS 2 174:#define PACKET_0_SUBADDRESS 3 175:#define PACKET_1_SUBADDRESS 4 176:#define PACKET_2_SUBADDRESS 5 177:#define PACKET_3_SUBADDRESS 6 178:#define PACKET_4_SUBADDRESS 7 179:#define PACKET_5_SUBADDRESS 8 180:#define TIME_BROADCAST_SUBADDRESS 24 181:#define DATA_WRAPAROUND_SUBADDRESS 30 File: ..\EngCntrl-fsw-100\src\SH_1553.H 44:#define WORDS_PER_SUBADDRESS 32 85: /* 0400 +200 */ WORD telemetry [2][8][WORDS_PER_SUBADDRESS]; 86: /* 0600 +020 */ WORD data_wrap_around[WORDS_PER_SUBADDRESS]; 87: /* 0620 +020 */ WORD spare_1553 [WORDS_PER_SUBADDRESS]; 88: /* 0640 +020 */ WORD time_broadcast [WORDS_PER_SUBADDRESS]; 89: /* 0660 +1A0 */ WORD spare_region[13][WORDS_PER_SUBADDRESS]; Artifact: ProjectA - Ion Propulsion System (Engine) - Digital Control Interface Unit (EngCntrl) - Spacecraft Interface Control Document (ICD) - DD-510. 5.2.3 1553 Subaddress Utilization The EngCntrl shall utilize the following subaddresses of the 1553 interface: Table 5-3: EngCntrl Subaddress Utilization ------------------------------------------------------------------ Subaddress Transmit Broadcast ------------------------------------------------------------------ 2 Circular Telemetry Buffer (Packet #0 - #5) 3 SOH Telemetry Packet #0 (Static) 4 SOH Telemetry Packet #1 (Static) 5 SOH Telemetry Packet #2 (Static) 6 SOH Telemetry Packet #3 (Static) 7 SOH Telemetry Packet #4 (Static) 8 SOH Telemetry Packet #5 (Static) 24 S/C Time Broadcast 30 Data Wrap Around ------------------------------------------------------------------ Commands for either FSW build shall be received by the EngCntrl via 1553 subaddress 2. The EngCntrl shall reject any command received to any subaddress other than subaddress 2. The spacecraft shall collect telemetry for either FSW build from the EngCntrl via 1553 subaddresses number 2 through subaddress 8. Subaddress number 2 contains a circular buffer of the data contained in subaddress 3 through subaddress 8. The EngCntrl shall reject any request to collect telemetry from any other subaddress. All telemetry collection shall be nondestructive. The circular buffer is updated by the EngCntrl based on the internal EngCntrl timers and may contain partially updated data when read asynchronously to the EngCntrl internal timers.",7/8/05
ProjectA - TIM - 1879,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement numbers inconsistent with RVM and test script numbers,3,"59 Requirement numbers for EngCntrl SRS requirements do not match the RVM and Test Scripts requirement numbers. 38 other requirements have this same issue, but are not included in this TIM because they also have additional issues beyond a numbering issue. Each of the additional 38 requirements with a numbering issue are identified within each individual TIM. See the attached excel file for a complete list of the 59 requirements with a only numbering issue. These inconsistencies lead to a concern about configuration management of the EngCntrl requirements and whether the requirements were finalized prior to completion of the formal verification.",7/8/05
ProjectA - TIM - 1878,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.5.1.1.3 inconsistent with RVM and fsw_test_06,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_06 requirement text. The RVM and test script text for the ""Analog Data Correction"" is different than the SRS in that the RVM and test script refers to the ""EngCntrl Flight Software"", but the SRS refers to the ""Operational Software"". The intent of the requirement is the same; however, the inconsistency leads to the question concerning configuration management and whether the approved SRS requirements were verified. Referenced EngCntrl SRS Requirement 3.5.1.1.3: Analog Data Correction The Operational Software shall adjust all of the analog values read from the Analog Controller of the CPU board using calibration data for the board. Referenced Test Script Requirement 3.5.1.1.3: Analog Data Correction The EngCntrl Flight Software shall adjust all of the analog values read from the Analog Controller of the CPU board using calibration data for the board. Referenced RVM Requirement 3.5.1.1.3: Analog Data Correction The EngCntrl Flight Software shall adjust all of the analog values read from the Analog Controller of the CPU board using calibration data for the board.",7/8/05
ProjectA - TIM - 1875,"EngCntrl Test Scripts: EngCntrl SRS v1.2 requirements refer to ""control cycle"" vs. RVM and Test Scripts refer to ""control loop""",3,"The EngCntrl SRS v1.2 does not agree with the RVM and test script requirement text. The RVM and test script text is different than the SRS in that it specifies a ""control loop"" versus ""control cycle"". This issue is found within 24 requirements (see the attached excel spreadsheet). Also, the following additional editorial issues exist within these same requirements. 1.) within requirement 3.2.2.12 the RVM and test script text is different than the SRS in that it specifies a ""interrupt"" versus ""hardware interrupt"" 2.) within requirement 3.2.2.3 the RVM and test script text is different than the SRS in that it specifies a ""signal 1Hz"" versus ""single 1Hz"". 3.) within requirement 3.2.3.2.1 the RVM and test script text is different than the SRS in that it does not contain the words ""that is"". 4.) EngCntrl SRS requirement for the ""Refresh Watchdog Step"" is numbered 3.2.3.4.2.8 and the RVM and test script requirement for ""Refresh Watchdog Step"" is numbered 3.2.3.4.3.5. 5.) EngCntrl SRS requirement for the ""Idle Process/Wait 1Hz Tick Step"" is numbered 3.2.3.4.2.9 and the RVM and test script requirement for ""Idle Process/Wait 1Hz Tick Step"" is numbered 3.2.3.4.3.6. 6.) EngCntrl SRS requirement for the ""Initialization State"" is numbered 3.2.3.4.2.11 and the RVM and test script requirement for ""Initialization State"" is numbered 3.2.4.2.1.",7/7/05
ProjectA - TIM - 1874,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.9.6.1.3 inconsistent with RVM and fsw_test_29,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_29 requirement text. The RVM and test script text for the ""Pressure Maintenance Faults"" is different than the SRS in that the RVM and test script text contains a ""TBD seconds"" instead of ""10 seconds"". Also, the SRS requirement for the ""Pressure Maintenance Faults"" is numbered 3.9.6.1.3 and the RVM and test script requirement for ""Pressure Maintenance Faults "" is numbered 3.9.5.1.3. This leads to the question as to whether the approved SRS requirement was defined prior to testing and verified during testing. Referenced EngCntrl SRS Requirement 3.9.6.1.3: Pressure Maintenance Faults The Operational software shall determine a leak is detected when leak detection is enabled and a plenum tank pressure cannot be maintained with in 0.2 psi of the required pressure for more than 10 seconds. Referenced Test Script Requirement 3.9.5.1.3: Pressure Maintenance Faults The Operational software shall determine a leak is detected when leak detection is enabled and a plenum tank pressure cannot be maintained with in 0.2 psi of the required pressure for more then TBD seconds. Referenced RVM Requirement 3.9.5.1.3: Pressure Maintenance Faults",7/7/05
ProjectA - TIM - 1873,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.9.6.1.1 inconsistent with RVM and fsw_test_29,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_29 requirement text. The RVM and test script text for the ""Pressure Initialization Faults "" is different than the SRS in that the RVM and test script text contains 2 ""TBD seconds"" instead of ""9000 seconds for the Main Plenum tank and 9000 seconds for the Cathode Plenum tank"". Also, the SRS requirement for the ""Pressure Initialization Faults"" is numbered 3.9.6.1.1 and the RVM and test script requirement for ""Pressure Initialization Faults "" is numbered 3.9.5.1.1. This leads to the question as to whether the approved SRS requirement was defined prior to testing and verified during testing. Referenced EngCntrl SRS Requirement 3.9.6.1.1: Pressure Initialization Faults The Operational software shall determine a plenum tank has failed to initialize when the required pressure has not been achieved within 9000 seconds for the Main Plenum tank and 9000 seconds for the Cathode Plenum tank. Referenced Test Script Requirement 3.9.5.1.1: Pressure Initialization Faults The Operational software shall determine a plenum tank has failed to initialize when the required pressure has not been achieved within TBD seconds for the Main Plenum tank and TBD seconds for the Cathode Plenum tank. Referenced RVM Requirement 3.9.5.1.1: Pressure Initialization Faults The Operational software shall determine a plenum tank has failed to initialize when the required pressure has not been achieved within TBD seconds for the Main Plenum tank and TBD seconds for the Cathode Plenum tank.",7/7/05
ProjectA - TIM - 1872,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.9.5.1 missing from RVM and test scripts,2,"EngCntrl SRS 3.9.5.1 Fault Response is missing from the RVM and test scripts. This leads to the question as to whether the baselined set of requirements were verified. Referenced EngCntrl SRS Requirement 3.9.5.1: Fault Response The EngCntrl Flight software response to memory errors shall be configurable to three levels. A) disabled, B) Report and Clear or C) Report and Reset EngCntrl. The Default response level shall be disabled. A single bit EDAC error will never cause a EngCntrl Reset.",7/7/05
ProjectA - TIM - 1871,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.9.5 inconsistent with RVM and fsw_test_28,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_28 requirement text. The RVM and test script text for the ""Memory Space Errors"" is different than the SRS in that the RVM and test script text does not identify the faults. To ensure that the requirement is fully verified it is essential to identify the actual faults the FSW is monitoring for in the memory. Also, the EngCntrl SRS requirement for the ""Memory Space Errors"" is numbered 3.9.5 and the RVM and test script requirement for ""Memory Space Errors"" is numbered 3.9.4. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.9.5: Memory Space Errors The EngCntrl Flight software shall monitor indications of faults in the memory data and faults in the memory space access. These faults are a) Single Bit EDAC Error, b) Double Bit EDAC Error, c) Illegal CPU Access Error and d) VME Bus Error. Referenced RVM and Test Script Requirement 3.9.4: Memory Space Errors The EngCntrl Flight software shall monitor indications of faults in the memory data and faults in the memory space access.",7/7/05
ProjectA - TIM - 1870,EngCntrl Test Scripts: EngCntrl SRS requirement 3.9.4.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.9.4.2 is missing from the RVM and test scripts. This leads to the question as to whether the baselined set of requirements were verified. Referenced EngCntrl SRS Requirement 3.9.4.2: Error Reporting The EngCntrl Flight software shall indicate an ILLEGAL INTERRUPT error if an illegal interrupt is detected.,7/7/05
ProjectA - TIM - 1869,EngCntrl Test Scripts: EngCntrl SRS requirement 3.9.4.1 is missing from RVM and test scripts,2,"The EngCntrl SRS requirement 3.9.4.1 is missing from the RVM and test scripts. This leads to the question as to whether the baselined set of requirements were verified. Referenced EngCntrl SRS Requirement 3.9.4.1: Fault Response The EngCntrl Flight software response to an illegal interrupt shall be configurable to three levels. A) disabled, B) Report and Clear or C) Report and Reset EngCntrl. The Default response level shall be disabled.",7/7/05
ProjectA - TIM - 1868,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.9.4 inconsistent with RVM and fsw_test_28,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_28 requirement text. The RVM and test script text for the ""Illegal Interrupt Error"" requirement is different than the SRS in that the RVM and test script text define the handling of an Illegal interrupt differently. The SRS version of 3.9.4 does not contain a ""Shall"" statement; however, the RVM and test script version specifically has two specific requirement statements; one of which matches SRS requirement 3.9.4.2 Error Reporting. The second requirement statement included in the RVM and test script is not in the EngCntrl SRS v1.2. Also, the EngCntrl SRS requirement for the ""Illegal Interrupt Error"" is numbered 3.9.4 and the RVM and test script requirement for ""Illegal Interrupt Error"" is numbered 3.9.3. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.9.4: Illegal Interrupt Error All unused interrupt sources are handled by the Illegal Interrupt ISR. The Illegal Interrupt Error ISR does not distinguish between the unused interrupt vectors and the internal 8086 exceptions, except for the Divide By Zero interrupt. Referenced EngCntrl SRS Requirement 3.9.4.2 Error Reporting The EngCntrl Flight software shall indicate an ILLEGAL INTERRUPT error if an illegal interrupt is detected. Referenced Test Script Requirement 3.9.3: Illegal Interrupt Error All unused interrupt sources are handled by the Illegal Interrupt ISR. The EngCntrl Flight software shall indicate an ILLEGAL INTERRUPT error if an illegal interrupt is detected. The EngCntrl Flight software shall then reinforce the interrupt mask setting of the CPU FPGA. Referenced RVM Requirement 3.9.3: Illegal Interrupt Error All unused interrupt sources are handled by the Illegal Interrupt ISR. The EngCntrl Flight software shall indicate an ILLEGAL INTERRUPT error if an illegal interrupt is detected. The EngCntrl Flight software shall then reinforce the interrupt mask setting of the CPU FPGA.",7/7/05
ProjectA - TIM - 1867,EngCntrl Test Scripts: EngCntrl SRS requirement 3.9.3.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.9.3.2 is missing from the RVM and test scripts. This leads to the question as to whether the baselined set of requirements were verified. Referenced EngCntrl SRS Requirement 3.9.3.2: Error Reporting The EngCntrl Flight software shall indicate a DIVIDE BY ZERO error if a Divide By Zero interrupt is received.,7/6/05
ProjectA - TIM - 1866,EngCntrl Test Scripts: EngCntrl SRS requirement 3.9.3.1 is missing from RVM and test scripts,2,"The EngCntrl SRS requirement 3.9.3.1 is missing from the RVM and test scripts. This leads to the question as to whether the baselined set of requirements were verified. Referenced EngCntrl SRS Requirement 3.9.3.1: Fault Response The EngCntrl Flight software response to the divide by zero interrupt shall be configurable to three levels. A) disabled, B) Report and Clear or C) Report and Reset EngCntrl. The Default response level shall be disabled.",7/6/05
ProjectA - TIM - 1865,EngCntrl Test Scripts: EngCntrl SRS requirement 3.9.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.9.3 is missing from the RVM and test scripts. This leads to the question as to whether the baselined set of requirements were verified. Referenced EngCntrl SRS Requirement 3.9.3: Divide By Zero Error The EngCntrl Flight software shall enable the Divide By Zero Interrupt in the 80C86.,7/6/05
ProjectA - TIM - 1864,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.8.3.1 inconsistent with RVM and fsw_test_02,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_02 requirement text. The RVM and test script text for the ""Atomic Operation"" is different than the SRS in that the RVM and test script text include a ""Disable processor interrupt"" step and an ""Enable processor interrupt"" step. Also, only the SRS includes an ""Increment memory scrub address pointer"" step. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.8.3.1: Atomic Operation The Memory Scrub function shall perform each memory check, correct and refresh operation as an atomic operation by masking the processor interrupt. The following steps will be performed: a) Check if done or abort b) Disable write protection (if testing write protected EEPROM) c) Read location to be tested d) Check EDAC status e) Write back read value f) Clear EDAC error interrupt source if error detected g) Enable write protection h) Log EDAC error if detected i) Increment memory scrub address pointer Referenced Test Script Requirement 3.8.3.1-1: Atomic Operation The Memory Scrub function shall perform each memory check correct and refresh operation as an atomic operation by masking the processor interrupt. The following steps will be performed: Referenced Test Script Requirement 3.8.3.1-2: Atomic Operation a) Check if done or abort Referenced Test Script Requirement 3.8.3.1-3: Atomic Operation b) Disable processor interrupt Referenced Test Script Requirement 3.8.3.1-4: Atomic Operation c) Disable write protection (if testing write protected EEPROM) Referenced Test Script Requirement 3.8.3.1-5: Atomic Operation d) Read location to be tested Referenced Test Script Requirement 3.8.3.1-6: Atomic Operation e) Check EDAC status Referenced Test Script Requirement 3.8.3.1-7: Atomic Operation f) Write back read value Referenced Test Script Requirement 3.8.3.1-8: Atomic Operation g) Clear EDAC error interrupt source if error detected Referenced Test Script Requirement 3.8.3.1-9: Atomic Operation h) Enable write protection Referenced Test Script Requirement 3.8.3.1-10: Atomic Operation i) Enable processor interrupt Referenced Test Script Requirement 3.8.3.1-11: Atomic Operation j) Log EDAC error if detected Referenced RVM Requirement 3.8.3.1-1: Atomic Operation The Memory Scrub function shall perform each memory check correct and refresh operation as an atomic operation by masking the processor interrupt. The following steps will be performed: Referenced RVM Requirement 3.8.3.1-2: Atomic Operation a) Check if done or abort Referenced RVM Requirement 3.8.3.1-3: Atomic Operation b) Disable processor interrupt Referenced RVM Requirement 3.8.3.1-4: Atomic Operation c) Disable write protection (if testing write protected EEPROM) Referenced RVM Requirement 3.8.3.1-5: Atomic Operation d) Read location to be tested Referenced RVM Requirement 3.8.3.1-6: Atomic Operation e) Check EDAC status Referenced RVM Requirement 3.8.3.1-7: Atomic Operation f) Write back read value Referenced RVM Requirement 3.8.3.1-8: Atomic Operation g) Clear EDAC error interrupt source if error detected Referenced RVM Requirement 3.8.3.1-9: Atomic Operation h) Enable write protection Referenced RVM Requirement 3.8.3.1-10: Atomic Operation i) Enable processor interrupt Referenced RVM Requirement 3.8.3.1-11: Atomic Operation j) Log EDAC error if detected",7/6/05
ProjectA - TIM - 1863,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.8.3 inconsistent with RVM and fsw_test_02,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_02 requirement text. The RVM and test script text for the ""Memory Scrub"" is different than the SRS in that the RVM and test script text state: ""This function will also refresh the EEPROM contents"", and the SRS states: ""This function will also refresh the EEPROM and SRAM contents."" The EngCntrl V1.2 SRS discusses refreshing the EEPROM and SRAM contents and the RVM and Test Script version of the requirement do not. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.8.3: Memory Scrub The Memory Scrub function is used to check the EEPROM and SRAM space for correctable EDAC errors started at the address defined in the command parameters. This function will also refresh the EEPROM and SRAM contents. Referenced Test Script Requirement 3.8.3: Memory Scrub The Memory Scrub function is used to check the EEPROM and SRAM space for correctable EDAC errors started at the address defined in the command parameters. This function will also refresh the EEPROM contents. Referenced RVM Requirement 3.8.3: Memory Scrub The Memory Scrub function is used to check the EEPROM and SRAM space for correctable EDAC errors started at the address defined in the command parameters. This function will also refresh the EEPROM contents.",7/6/05
ProjectA - TIM - 1862,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.8.2 inconsistent with RVM and fsw_test_02,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_02 requirement text. The RVM and test script text for the ""Checksum Calculation"" is different than the SRS in that the RVM and test script text discuss the requirement in terms of an XCALCKSM and an XSTARTSW command, and the SRS discusses a BCALCKSM and a BSTARTSW command. The command names are different in the versions of the requirement text. No reference to the XSTARTSW or XCALCKSM commands are found in the EngCntrl V1.2 SRS. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.8.2: Checksum Calculation The Checksum Calculation function may be initiated by either a BCALCKSM command or a BSTARTSW command. The function will perform the slightly different steps depending on the requestor. Referenced Test Script Requirement 3.8.2: Checksum Calculation The Checksum Calculation function may be initiated by either a XCALCKSM command or a XSTARTSW command. The function will perform the slightly different steps depending on the requestor. Referenced RVM Requirement 3.8.2: Checksum Calculation The Checksum Calculation function may be initiated by either a XCALCKSM command or a XSTARTSW command. The function will perform the slightly different steps depending on the requestor.",7/6/05
ProjectA - TIM - 1861,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.7.3.8.6.9 inconsistent with RVM and fsw_test_27,3,"The EngCntrl SRS does not agree with the RVM and fsw_test_27 requirement text. The RVM and test script text for the ""Neutralizer Current 5% Error"" is different than the SRS in that the test script text contains additional data for requirement 3.7.3.8.6.10. The intended text for requirement 3.7.3.8.6.9 is present in all three sources. There appears to be an editorial error. This leads to the question about configuration management and whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.7.3.8.6.9: Neutralizer Current 5% Error The Neutralizer Current 5% Error Flag shall be set when the value of the measured Neutralizer Current differs from the value in the currently selected Throttle Table entry by more than 5% Referenced Test Script Requirement 3.7.3.8.6.9: Neutralizer Current 5% Error The Neutralizer Current 5% Error Flag shall be set when the value of the measured Neutralizer Current differs from the value in the currently selected Throttle Table entry by more than 5% 3.7.3.8.6.10 Neutralizer Current 10% Error The Neutralizer Current Referenced RVM Requirement 3.7.3.8.6.9: Neutralizer Current 5% Error The Neutralizer Current 5% Error Flag shall be set when the value of the measured Neutralizer Current differs from the value in the currently selected Throttle Table entry by more than 5% 3.7.3.8.6.10 Neutralizer Current 10% Error The Neutralizer Current",7/5/05
ProjectA - TIM - 1860,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.7.3.3.2.3 inconsistent with RVM and fsw_test_11,3,"The EngCntrl SRS does not agree with the RVM and fsw_test_11 requirement text. The RVM and test script text for the ""Standby Mode"" is different than the SRS in that the SRS provides more detailed information on the Standby Procedures. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.7.3.3.2.3: Open Upstream Latch Valve 2 If the XFS MODE is set for NORMAL (non-single plenum mode), command the Cathode Flow upstream latch valve to OPEN If the XFS MODE is NOT set for NORMAL (non-single plenum mode), command the single plenum latch valve to OPEN If the XFS MODE is set for SINGLE PLENUM MAIN mode, command the cathode flow upstream latch valve to CLOSED If the XFS MODE is set for SINGLE CATHODE MAIN mode, command the main flow upstream latch valve to CLOSED Referenced Test Script Requirement 3.7.3.3.2.3: Open Upstream Latch Valve 2 If the XFS MODE is set for NORMAL (non-single plenum mode) command the Cathode Flow upstream latch valve to OPEN If the XFS MODE is NOT set for NORMAL (non-s ingle plenum mode) command the single plenum latch valve to OPEN Referenced RVM Requirement 3.7.3.3.2.3: Open Upstream Latch Valve 2 If the XFS MODE is set for NORMAL (non-single plenum mode), command the Cathode Flow upstream latch valve to OPEN If the XFS MODE is NOT set for NORMAL (non-single plenum mode), command the single plenum latch valve to OPEN",7/5/05
ProjectA - TIM - 1859,EngCntrl Test Scripts: EngCntrl SRS requirement 3.7.3.8.6.16 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.7.3.8.6.16 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.7.3.8.6.16: Discharge Voltage 10% Error The Discharge Voltage 10% Error Flag shall be set when the value of the measured Discharge Voltage differs from the value in the currently selected Throttle Table entry by more than 10%,7/5/05
ProjectA - TIM - 1858,EngCntrl Test Scripts: EngCntrl SRS requirement 3.7.3.8.6.15 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.7.3.8.6.15 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.7.3.8.6.15: Discharge Voltage 5% Error The Discharge Voltage 5% Error Flag shall be set when the value of the measured Discharge Voltage differs from the value in the currently selected Throttle Table entry by more than 5%,7/5/05
ProjectA - TIM - 1857,EngCntrl Test Scripts: EngCntrl SRS requirement 3.7.3.8.6.14 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.7.3.8.6.14 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.7.3.8.6.14: Discharge Current 10% Error The Discharge Current 10% Error Flag shall be set when the value of the measured Discharge Current differs from the value in the currently selected Throttle Table entry by more than 10%,7/5/05
ProjectA - TIM - 1856,EngCntrl Test Scripts: EngCntrl SRS requirement 3.7.3.8.6.13 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.7.3.8.6.13 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.7.3.8.6.13: Discharge Current 5% Error The Discharge Current 5% Error Flag shall be set when the value of the measured Discharge Current differs from the value in the currently selected Throttle Table entry by more than 5%,7/5/05
ProjectA - TIM - 1855,EngCntrl Test Scripts: EngCntrl SRS requirement 3.7.3.8.6.12 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.7.3.8.6.12 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.7.3.8.6.12: Neutralizer Voltage 10% Error The Neutralizer Voltage 10% Error Flag shall be set when the value of the measured Neutralizer Voltage differs from the value in the currently selected Throttle Table entry by more than 10%,7/5/05
ProjectA - TIM - 1854,EngCntrl Test Scripts: EngCntrl SRS requirement 3.7.3.8.6.11 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.7.3.8.6.11 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.7.3.8.6.11: Neutralizer Voltage 5% Error The Neutralizer Voltage 5% Error Flag shall be set when the value of the measured Neutralizer Voltage differs from the value in the currently selected Throttle Table entry by more than 5%,7/5/05
ProjectA - TIM - 1853,EngCntrl Test Scripts: EngCntrl SRS requirement 3.7.3.8.6.10 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.7.3.8.6.10 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.7.3.8.6.10: Neutralizer Current 10% Error The Neutralizer Current 10% Error Flag shall be set when the value of the measured Neutralizer Current differs from the value in the currently selected Throttle Table entry by more than 10%,7/5/05
ProjectA - TIM - 1852,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.7.3.3 inconsistent with RVM and fsw_test_11,3,"The EngCntrl SRS does not agree with the RVM and fsw_test_11 requirement text. The RVM and test script text for the ""Standby Mode"" is different than the SRS in that the SRS provides more detailed information on the Standby Procedures. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.7.3.3: Standby Mode The Operational software shall perform a Standby Procedure upon transitioning the Engine into the STANDBY mode from the SAFE mode. The Operational software is not required to execute the Standby Procedure when transitioning the Engine into the STANDBY mode from any mode other than SAFE mode. The steps of this procedure may be executed in any order. Referenced Test Script Requirement 3.7.3.3: Standby Mode The Operational software shall perform a Standby Procedure upon transitioning the Engine into the STANDBY mode. Referenced RVM Requirement 3.7.3.3: Standby Mode The Operational software shall perform a Standby Procedure upon transitioning the Engine into the STANDBY mode.",7/1/05
ProjectA - TIM - 1851,EngCntrl Test Scripts: EngCntrl SRS requirement 3.7.3.2.2.6 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.7.3.2.2.6 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.7.3.2.2.6: Close XFS Valves (Step 6) Command all remaining latch valves to be closed (Latch vales 3 through 20). Only two latch valves will be commanded for each 1Hz control cycle. This step will repeat until all required latch valves have been commanded closed.,7/1/05
ProjectA - TIM - 1850,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.7.3.2.2.5 inconsistent with RVM and fsw_test_09,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_09 requirement text. The RVM and test script text for the ""Close XFS Valves (Step 5 )"" is different than the SRS in that the RVM and test script provide more detailed information on commanding the solenoid valves. Also, the SRS requirement title for requirement 3.7.3.2.2.5 is ""Stop Solenoid Valves (Step 5) "", and the RVM and test script requirement title for requirement 3.7.3.2.2.5 is ""Close XFS Valves (Step 5 )"". Also the RVM and test script requirement repeats the statement: ""Command all latch valves to be closed. (Latch Valves 1 through 20)."" This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.7.3.2.2.5: Stop Solenoid Valves (Step 5) Command all solenoid valves to stop cycling (Solenoid valves 1 through 8). Command latch valves 1 and 2 to be closed. Referenced Test Script Requirement 3.7.3.2.2.5: Close XFS Valves (Step 5 ) Command all solenoid valves to stop cycling (Solenoid valves 1 through 8). Command all latch valves to be closed. (Latch Valves 1 through 20). Command all latch valves to be closed. (Latch Valves 1 through 20). Only two latch valves will be commanded for each 1Hz Control Loop. This step will repeat until all latch valves have been commanded closed.",7/1/05
ProjectA - TIM - 1849,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.7.2.2.2 inconsistent with RVM and fsw_test_12,3,"The EngCntrl SRS does not agree with the RVM and fsw_test_12 requirement text. The RVM and test script text for the ""Mode Exit"" is different than the SRS in that the RVM and test script is an incomplete requirement. It appears as though the requirement has been cut off in the middle of the requirement text. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.7.2.2.2: Mode Exit The Operational software shall be able to transition the Engine from STANDBY mode into any other Engine mode. The Operational Software shall transition the Engine from STANDBY mode into XFS INITIALIZE mode when both the Standby Procedure has completed and a XINITXFS command is received. The Operational Software shall transition the Engine from STANDBY mode into XFS ON mode when both the Standby Procedure has completed and a XRUNXFS command is received. The Operational Software shall transition the Engine from STANDBY mode into GRID CLEAR mode when both the Standby Procedure has completed and a XGRIDCLR command is received. The Operational Software shall transition the Engine from STANDBY mode into CATHODE CONDITION mode when both the Standby Procedure has completed and a XCATHCND command is received. The Operational Software shall transition the Engine from STANDBY mode into THRUST mode when both the Standby Procedure has completed and a XTHRSTON command is received. The Operational Software shall transition the Engine from STANDBY mode into SAFE mode when a XSAFESYS command is received. The Operational software shall indicate a STANDBY IN PROGRESS error when a command is received to leave the STANDBY mode and the Standby Procedure has not completed, the only exception to this is for the XSAFESYS command. Referenced Test Script Requirement 3.7.2.2.2: Mode Exit The Operational software shall be able to transition the Engine from STANDBY mode into any other Engine mode. The Operational Software shall transition the Engine from STANDBY mode into XFS Initialize mode when both the Standby Procedure has completed and a XINITX Referenced RVM Requirement 3.7.2.2.2: Mode Exit The Operational software shall be able to transition the Engine from STANDBY mode into any other Engine mode. The Operational Software shall transition the Engine from STANDBY mode into XFS INITIALIZE mode when both the Standby Procedure has completed and a XINITX",7/1/05
ProjectA - TIM - 1848,EngCntrl Test Scripts: EngCntrl SRS requirement 3.6.3.3.6 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.6.3.3.6 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.6.3.3.6: Close XFS Valves (Step 6) Command all remaining latch valves to be closed (Latch vales 3 through 20). Only two latch valves will be commanded for each 1Hz control cycle. This step will repeat until all required latch valves have been commanded closed.,7/1/05
ProjectA - TIM - 1847,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.6.3.3.5 inconsistent with RVM and fsw_test_01,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_01 requirement text. The RVM and test script text for the ""Close XFS Valves (Step 5 )"" is different than the SRS in that the RVM and test script provide more detailed information on commanding the solenoid valves. Also, the SRS requirement title for requirement 3.6.3.3.5 is ""Stop Solenoid Valves (Step 5) "", and the RVM and test script requirement title for requirement 3.6.3.3.5 is ""Close XFS Valves (Step 5 )"". This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.6.3.3.5: Stop Solenoid Valves (Step 5) Command all solenoid valves to stop cycling (Solenoid valves 1 through 8). Command latch valves 1 and 2 to be closed. Referenced Test Script Requirement 3.6.3.3.5: Close XFS Valves (Step 5 ) Command all solenoid valves to stop cycling (Solenoid valves 1 through 8 . Command all latch valves to be closed. (Latch Valves 1 through 20 . Only two latch valves will be commanded for each 1Hz Control Loop. This step will repeat until all latch valves have been commanded closed. Referenced RVM Requirement 3.6.3.3.5: Close XFS Valves (Step 5 ) Command all solenoid valves to stop cycling (Solenoid valves 1 through 8). Command all latch valves to be closed. (Latch Valves 1 through 20). Only two latch valves will be commanded for each 1Hz Control Loop. This step will repeat until all latch valves have been commanded closed.",7/1/05
ProjectA - TIM - 1846,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.6.3 inconsistent with RVM and fsw_test_01,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_01 requirement text. The RVM and test script text for the ""Mode Procedures"" is different than the SRS in that the RVM and test script discuss a 5-step Safe System procedure, and the SRS discusses a 6-step Safe System procedure. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.6.3: Mode Procedures The Safe System procedure executed by the Bootloader Software consists of a 6-step procedure. Each step of the procedure is executed during a single 1Hz control cycle, with step 6 repeating for several cycles prior to completion. Referenced Test Script Requirement 3.6.3: Mode Procedures The Safe System procedure executed by the Bootloader Software consists of a 5-step procedure. Each step of the procedure is executed during a single 1Hz control loop. Note: The following steps define all possible PPU addresses; this is due to the fact that the PPU address is a configurable element in the ProjectA EngCntrl Software. The Bootloader software could be executing this procedure prior to the value of the PPU Address knowledge being acquired via commands from the spacecraft by the EngCntrl Flight Software. Referenced RVM Requirement 3.6.3: Mode Procedures The Safe System procedure executed by the Bootloader Software consists of a 5-step procedure. Each step of the procedure is executed during a single 1Hz control loop. Note: The following steps define all possible PPU addresses; this is due to the fact that the PPU address is a configurable element in the ProjectA EngCntrl Software. The Bootloader software could be executing this procedure prior to the value of the PPU Address knowledge being acquired, via commands from the spacecraft, by the EngCntrl Flight Software.",7/1/05
ProjectA - TIM - 1845,Build 4.0 OBC Code: Body Occultation Thresholds Differ from Design,3,"OBC Bld 4.0 code implements Body Occultation thresholds which differ from those defined in the Design Notes. AcStaTable.h real_type BodyOccultationThr[3][NUM_OF_STA]; real_type SunOccultationThr[NUM_OF_STA]; AcStaTable.c /* Current parameters set to eliminate occultation */ { {-0.06975647374413, -0.06975647374413}, /* BodyOccultationThr[i][j] = cos(94) for 500 km orbit */ {-0.06975647374413, -0.06975647374413}, {-0.06975647374413, -0.06975647374413}}, { 0.88294759285893, /* SunOccultationThr[0] = cos(28) */ 0.88294759285893 }, /* SunOccultationThr[1] = cos(28) */ AcProcessSta.c /* Earth Occultation */ if ( pSta->StaDotBody[i] > AcStaTable.BodyOccultationThr[i][pSta->StaID] && AcTable.DefaultEnabled.OccultLogic ) /* Sun Occultation */ if ( pSta->StaDotSun > AcStaTable.SunOccultationThr[pSta->StaID] && AcTable.DefaultEnabled.OccultLogic ) ProjectA Design Note DN-ProjectA-ACS-011 Table 1. Selectable Star Tracker FDC Parameters ST_FDC_SUN_OCCULTATION_THRESHOLD Threshold for detecting Sun occultation expressed as a dot product 0.866 ST_FDC_EARTH_OCCULTATION_THRESHOLD Threshold for detecting Earth occultation expressed as a dot product 0.819 ST_FDC_MOON_OCCULTATION_THRESHOLD Threshold for detecting Moon occultation expressed as a dot product 0.906 ST_FDC_MARS_OCCULTATION_THRESHOLD Threshold for detecting Mars occultation expressed as a dot product 0.819 ST_FDC_VESTA_OCCULTATION_THRESHOLD Threshold for detecting Vesta occultation expressed as a dot product 0.174 ST_FDC_CERES_OCCULTATION_THRESHOLD Threshold for detecting Ceres occultation expressed as a dot product 0.174",7/1/05
ProjectA - TIM - 1844,Build 4.0 OBC Code: CSS Thresholds Differ from Design,3,"OBC Bld 4.0 code implements CSS threshold limits, which differ from those defined in the Design Notes. FileName: AcProcessCss.c ** CSS Current Test ** ** Verify that the detector outputs are within the valid operating range. ** Note that the pyramid detectors (denoted by i = 0,1) can have +/- current ** values, while the other detectors are limited to values >= 0. */ table_index = i; if ( i >= NUM_OF_CSS ) table_index -= NUM_OF_CSS; if ( pCss->CurrentRaw[i] < AcCssTable.MinDetectorCurrent[table_index]) /* only check underflow */ where accsstable.h real_type MinDetectorCurrent[NUM_OF_CSS]; /* Min value for valid detector */ accsstable.c -0.00125, /* MinDetectorCurrent (Amp) */ ProjectA Design Note DN-ProjectA-ACS-011 Attitude Control Subsystem Fault Detection and Correction Design 1.1 CSS Fault Detection and Correction 1.1.1 CSS Current Range Test The output current on each of the 16 detectors (8 on CSS side A and 8 on side B) will be monitored to determine whether it is in the acceptable range, defined by selectable lower and upper thresholds. Mnemonic CSS_FDC_CURRENT_LOW_THRESHOLD Description threshold for detecting out-of-range current Units Amps Default Value 0.0 Mnemonic CSS_FDC_CURRENT_HIGH_THRESHOLD Description High threshold for detecting out-of-range current Units Amps Default Value 0.500",7/1/05
ProjectA - TIM - 1843,"EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.5.2.2.1, RVM and fsw_test_05 inconsistent with each other",2,"The EngCntrl SRS, RVM,and fsw_test_05 requirement text do not agree. The test script text for the ""Report Telemetry Data"" is different than the SRS in that the test script provides more detailed information on updating the telemetry data. The RVM text is like the test script text with the exception of added commons, which changes the intent of the requirement. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.5.2.2.1: Report Telemetry Data The EngCntrl Flight software shall update all telemetry data channels Referenced Test Script Requirement 3.5.2.2.1: Report Telemetry Data The EngCntrl Flight software shall update all values in all telemetry data packets except the programmable telemetry buffer packet 6 and the following telemetry data words: a) EngCntrl Data (Packet 0): Error history list Error count and Processing Time b) Status Data 1 (Packet 3): Continuous Dump values and Peek Memory values Referenced RVM Requirement 3.5.2.2.1: Report Telemetry Data The EngCntrl Flight software shall update all values in all telemetry data packets except the programmable telemetry buffer, packet 6, and the following telemetry data words: a) EngCntrl Data (Packet 0): Error history list, Error count and Processing Time b) Status Data 1 (Packet 3): Continuous Dump values and Peek Memory values",7/1/05
ProjectA - TIM - 1842,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.5.1.5.3 inconsistent with RVM and fsw_test_07,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_07 requirement text. The RVM and test script text for the ""Neutralizer Common Voltage"" is different than the SRS in that the RVM and test script text does not include: ""The EngCntrl Flight Software shall not indicate the Neutralizer Common error if the PPU Slice Power is reported to be OFF."" This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.5.1.5.3: Neutralizer Common Voltage The EngCntrl Flight Software shall indicate a Neutralizer Common error if the Neutralizer Common Voltage is measured to be less than 10v or greater than 90v. The EngCntrl Flight Software shall not indicate the Neutralizer Common error if the PPU Slice Power is reported to be OFF. Referenced Test Script Requirement 3.5.1.5.3: Neutralizer Common Voltage The EngCntrl Flight Software shall indicate a Neutralizer Common error if the Neutralizer Common Voltage is measured to be less than 10v or greater than 90v. Referenced RVM Requirement 3.5.1.5.3: Neutralizer Common Voltage The EngCntrl Flight Software shall indicate a Neutralizer Common error if the Neutralizer Common Voltage is measured to be less than 10v or greater than 90v.",7/1/05
ProjectA - TIM - 1841,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.5.1.5.2 inconsistent with RVM and fsw_test_07,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_07 requirement text. The RVM and test script text for the ""High Voltage"" is different than the SRS in that the RVM and test script text does not include: ""The EngCntrl Flight Software shall indicate the High Voltage is OFF if the PPU Slice Power is reported to be OFF. "" This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.5.1.5.2: High Voltage The EngCntrl Flight Software shall indicate the High Voltage is ON if the measured line voltage is greater than or equal to 50v, otherwise the EngCntrl Flight Software shall indicate the High Voltage is OFF. The EngCntrl Flight Software shall indicate the High Voltage is OFF if the PPU Slice Power is reported to be OFF. Referenced Test Script Requirement 3.5.1.5.2: High Voltage The EngCntrl Flight Software shall indicate the High Voltage is ON if the measured line voltage is greater than or equal to 50v otherwise the EngCntrl Flight Software shall indicate the High Voltage is OFF. Referenced RVM Requirement 3.5.1.5.2: High Voltage The EngCntrl Flight Software shall indicate the High Voltage is ON if the measured line voltage is greater than or equal to 50v, otherwise the EngCntrl Flight Software shall indicate the High Voltage is OFF.",7/1/05
ProjectA - TIM - 1840,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.5.1.4.3 inconsistent with RVM and fsw_test_07,3,"The EngCntrl SRS does not agree with the RVM and fsw_test_07 requirement text. The RVM and test script text for the ""Pressure Required Lookup Tables"" is different than the SRS in that the RVM and test script state: ""These tables are unique for each valves FCD..."", but the SRS states ""These tables are unique for each FCD..."". Note that 3.5.1.4.3 does not contain a ""shall"" statement; however, the text was included in the RVM and test scripts to be verified. If the functionality described is a ""requirement"" then the statement should be written as a ""shall"" statement. The inconsistent specification of the text leads to the question about configuration management and whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.5.1.4.3: Pressure Required Lookup Tables The Pressure Required Lookup Tables are the FCD correction table associated with the Main flow and Cathode flow FCDs. These tables are unique for each FCD, however there will only be two tables that will be always be used independent of the thruster selected. Referenced Test Script Requirement 3.5.1.4.3: Pressure Required Lookup Tables The Pressure Required Lookup Tables are the FCD correction table associated with the Main flow and Cathode flow FCDs. These tables are unique for each valves FCD however there will only be two tables that will be always be used independent of the thruster selected. Referenced RVM Requirement 3.5.1.4.3: Pressure Required Lookup Tables The Pressure Required Lookup Tables are the FCD correction table associated with the Main flow and Cathode flow FCDs. These tables are unique for each valves FCD, however there will only be two tables that will be always be used independent of the thruster selected.",7/1/05
ProjectA - TIM - 1839,Build 4.0 OBC Code: Non-Initialized Data Maintenance Issue,5,"IV&V verified that current coding prevents the following possible uses of uninitialized variables, however future changes may expose these vulnerabilities. Klocwork reported the following warnings: 1) Non-Initialized Data Module - AC_JetTorqueDistribution File accommandjet.c 'axis1, axis2, and axis3' may be used uninitialized in this function at line 572. This could happen under conditions - default is true at line 518. switch ( pJet->GndCmd.Packed.ControlSet ) { case CNT_ODD_ALL: case CNT_EVEN_ALL: { axis1 = Y_AXIS; axis2 = Z_AXIS; axis3 = X_AXIS; break; } 2) Non-Initialized Data Module - AC_ControlLaw File accontrollaw.c 'selecti' might be used uninitialized in this function at line 180. Variable 'selecti' declared at line 80 might be used uninitialized under conditions - pAcGlobal->ActuatorSelect==0 is true at line 113 and (pAcGlobal->Mode==DeltaVRCS)&&(pAcGlobal->Jet.GndCmd.Packed.DeltaVBurnCompleted==0) is true at line 114 and pAcGlobal->Jet.GndCmd.Packed.ControlSet==0 is false at line 117 and pAcGlobal->Jet.GndCmd.Packed.ControlSet==1 is false at line 119 and i<3 is true at line 151 and fabs(pControl->RateCmd.v[i])>AcControlTable.RateLimit[select[i]].v[i] is false at line 160 and (pAcGlobal->Slew.Mode!=SlewInProgress)&&(pControl->IntegratorOn[i]==1) is true at line 179 and pAcGlobal->Slew.Mode!=SlewInProgress is true at line 179 Analysis: Both cases are currently precluded by values of ControlSet. ControlSet is a bitfield 4 (unsigned int 4 bits). Since it is defined in acjet.h it is initially 0 and the current code assignments only assign values of 0 or 1. Hence the current code assignments preclude the code paths that could lead to the possible use uninitialized variables in these two cases; however, a maintenance risk exists.",7/1/05
ProjectA - TIM - 1838,"EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.5.1.2.3 inconsistent with RVM, fsw_test_06, and fsw_test_07",3,"The EngCntrl SRS does not agree with the RVM, fsw_test_06, and fsw_test_07 requirement text. The RVM, and the test script text in fsw_test_06 and fsw_test_07 for the ""PPU Data Correction "" is different than the SRS in that the RVM and test script discusses ""The EngCntrl Flight Software..."", but the SRS discusses ""The Operational Software..."". The intent of the requirement is the same; however, this leads to the question about configuration management and whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.5.1.2.3: PPU Data Correction The Operational Software shall adjust all of the analog values read from the PPU using calibration data for the unit. Referenced Test Script Requirement 3.5.1.2.3: PPU Data Correction The EngCntrl Flight Software shall adjust all of the analog values read from the PPU using calibration data for the unit. Referenced RVM Requirement 3.5.1.2.3: PPU Data Correction The EngCntrl Flight Software shall adjust all of the analog values read from the PPU using calibration data for the unit.",7/1/05
ProjectA - TIM - 1837,Build 4.0 OBC Code: Non-Initialized Data 'Jet2New' May be Used in AC_JetTorqueDistribution,3,"IV&V verified the possible use of an uninitialized variable. Klocwork reported the following warning: Non-Initialized Data Module - AC_JetTorqueDistribution File accommandjet.c 'Jet2New' might be used uninitialized in this function at line 830. Variable 'Jet2New' declared at line 500 might be used uninitialized under conditions - fabs(pJet->TorqueCmdAugMag)<=(6.055454452393343E-006) is false at line 637 and pJet->DutyCycle.v[1]<0.0 is true at line 815 and pJet->ControlJet[i]!=pJet->ControlJet1 && pJet->ControlJet[i]!=pJet->ControlJet2 && SIGN(CrsProduct[i]) != SIGN(CrsProduct[Jet2Index]) is false at line 820 Jet2New is referenced in line 830: pJet->ControlJet2 = Jet2New; TorqueMatrixWrk.m[0][1] = AcJetTable.JetForceMag[pJet->ControlJet2] * AcJetTable.JetNormTorq[pJet->ControlJet2][axis1]; TorqueMatrixWrk.m[1][1] = AcJetTable.JetForceMag[pJet->ControlJet2] * AcJetTable.JetNormTorq[pJet->ControlJet2][axis2]; TorqueMatrixWrk.m[2][1] = AcJetTable.JetForceMag[pJet->ControlJet2] * AcJetTable.JetNormTorq[pJet->ControlJet2][axis3]; Minv( TorqueMatrixWrk, & TorqueMatrixWrkInv ); MoV( & TorqueMatrixWrkInv, TorqueCmdWrk, A_B, & pJet->DutyCycle );",7/1/05
ProjectA - TIM - 1836,Build 4.0 OBC Code: Non-Initialized Data May be Used in AC_JetTorqueDistribution,3,"IV&V verified the possible use of an uninitialized variable. Klocwork reported the following warning: Non-Initialized Data Module - AC_JetTorqueDistribution File accommandjet.c 'Jet2Index' might be used uninitialized in this function at line 822. Variable 'Jet2Index' declared at line 500 might be used uninitialized under conditions - fabs(pJet->TorqueCmdAugMag)<=(6.055454452393343E-006) is false at line 637 and SIGN(CrsProduct[i]) != Jet1Direction is false at line 707 and pJet->DutyCycle.v[1]<0.0 is true at line 815 and i<4 is true at line 818 and pJet->ControlJet[i]!=pJet->ControlJet1 is true at line 820 A code comment before these final conditionals and variable usage highlights this possible error. /* ** If Second Primary Jets Duty Cycle Is Negative (Which Can Occur When ** The Primary Plane Torque Lies Exactly Along One Jet) Then ... ** ** 1. Set second primary jet to closest inactive jet in ** primary set on opposite side of Jet1, ** 2. Update jet torque matrix, and ** 3. Recompute duty cycles */ usage of Jet2Index: 815 if ( pJet->DutyCycle.v[1] < 0.0 ) 816 { 817 BypassDotProductCheck = TRUE;818 for (i=0; i<4; i++) 819 { 820 if ( pJet->ControlJet[i] != pJet->ControlJet1 && 821 pJet->ControlJet[i] != pJet->ControlJet2 && 822 SIGN(CrsProduct[i]) != SIGN(CrsProduct[Jet2Index]) && 823 (DotProduct[i] > DotProductMax || BypassDotProductCheck == TRUE) ) 824 { 825 BypassDotProductCheck = FALSE; 826 Jet2New = pJet->ControlJet[i]; 827 DotProductMax = DotProduct[i]; 828 } 829 }",7/1/05
ProjectA - TIM - 1835,Build 4.0 OBC Code: Non-Initialized Data May be Used in AC_CommandEngineSequencer,3,"IV&V verified the possible use of an uninitialized variable. Klocwork reported the following warning: Non-Initialized Data Module - AC_CommandEngineSequencer File accommandEngine.c 'selecti' might be used uninitialized in this function. Variable 'selecti' declared at line 300 might be used uninitialized under conditions - pAcGlobal->Engine.Flags.SubMode==9 is true at line 380 and pEngine->Select[0].Use==1 is false at line 381 and pEngine->Select[1].Use==1 is false at line 383 and pEngine->Select[2].Use==1 is false at line 385 'selecti' is used in Line Number 387 Tdes = pAcGlobal->Control.IntegralErrLmtBdy[selecti]; 'Tdes is used in the subsequent line' AC_EngineTrq2Actuator ( pEngine, Tdes, (word *)&IntegratorOn[0], (dword *)&pEngine->MinusYCmdCnt, (dword *)&pEngine->PlusYCmdCnt, (real_type *)&PitchTorque, (real_type *)&YawTorque ); As reported, in order to use 'selecti' uninitialized, the variables Select[x].use (used in the conditionals at 381, 383, and 385) must all be zero. These variables are single bits defined in a structure in ACEngine.h. The values are initialized to zero. These variables are only set by Ground selection which occurs in AC_Select_Component of AC_ProcessACSCommands. There does not appear to be software protection to preclude this scenario; however, it seems operationally illogical since it would require commanding Engine without selection of an Engine.",7/1/05
ProjectA - TIM - 1834,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.5.1.1.1 and RVM inconsistent with fsw_test_06,2,"The EngCntrl SRS and RVM do not agree with the fsw_test_06 requirement text. The test script text for the ""Analog Data Channels Collected"" is different than the SRS and RVM in that the test script discusses 18 temperature sensors, but the SRS and the RVM discuss 15 temperature sensors. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.5.1.1.1: Analog Data Channels Collected Source Channels EngCntrl 5v, +12v, -12v power monitors Primary Current monitor 250 ohm and 750 ohm temp cal resistors 5v pressure voltage ref XFS 7 pressure sensors 15 temperature sensors Referenced Test Script Requirement 3.5.1.1.1-1 through 3.5.1.1.1-7: 3.5.1.1.1-1 Analog Data Channels Collected 3.5.1.1.1-2 Source EngCntrl 5v +12v -12v power monitors 3.5.1.1.1-3 Source EngCntrl Primary Current monitor 3.5.1.1.1-4 Source EngCntrl 250 ohm and 750 ohm temp cal resistors 3.5.1.1.1-5 Source EngCntrl 5v pressure voltage ref 3.5.1.1.1-6 Source XFS 7 pressure sensors 3.5.1.1.1-7 Source XFS 18 temperature sensors Referenced RVM Requirement 3.5.1.1.1-1 through 3.5.1.1.1-7: 3.5.1.1.1-1 Analog Data Channels Collected 3.5.1.1.1-2 Source EngCntrl 5v +12v -12v power monitors 3.5.1.1.1-3 Source EngCntrl Primary Current monitor 3.5.1.1.1-4 Source EngCntrl 250 ohm and 750 ohm temp cal resistors 3.5.1.1.1-5 Source EngCntrl 5v pressure voltage ref 3.5.1.1.1-6 Source XFS 7 pressure sensors 3.5.1.1.1-7 Source XFS 15 temperature sensors",6/30/05
ProjectA - TIM - 1833,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.8.9.2 inconsistent with RVM and fsw_test_34,3,"The EngCntrl SRS does not agree with the RVM and fsw_test_34 requirement text. The RVM and test script text for the ""Command Execution"" is different than the SRS in that the RVM and test script text also include part of the requirement text from requirement 3.4.7.10. Also, the EngCntrl SRS requirement for the ""Command Execution"" is numbered 3.4.8.9.2 and the RVM and test script requirement for ""Command Execution"" is numbered 3.4.7.9.2. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.8.9.2: Command Execution The Operational software shall change the selected throttle table entry upon reception of this command and successful command validation. Referenced Test Script Requirement 3.4.7.9.2: Command Execution The Operational software shall change the selected throttle table entry upon reception of this command and successful command validation. 3.4.7.10 XBEAMCTL The XBEAMCTL command is used to enable or disable the beam control algorithm. This command is inte Referenced RVM Requirement 3.4.7.9.2: Command Execution The Operational software shall change the selected throttle table entry upon reception of this command and successful command validation. 3.4.7.10 XBEAMCTL The XBEAMCTL command is used to enable or disable the beam control algorithm. This command is inte",6/30/05
ProjectA - TIM - 1832,EngCntrl Test Scripts: RVM and fsw_test_03 contain a requirement (3.4.7.8.1) not found within the EngCntrl SRS.,2,The RVM and fsw_test_34 contain a requirement not found within the EngCntrl SRS. This leads to the question as to whether or not the SRS was the baselined set of requirements. Referenced Test Script Requirement 3.4.7.8.1: Pending Mode Transition Request Check The Operational software shall verify a pervious mode transition has not been requested during this iteration of the control loop. The Operation software shall indicate a MODE CHANGE error if a previous mode change request is pending and the pending mode change request shall be changed to transition to the SAFE mode. Referenced RVM Requirement 3.4.7.8.1: Pending Mode Transition Request Check The Operational software shall verify a pervious mode transition has not been requested during this iteration of the control loop. The Operation software shall indicate a MODE CHANGE error if a previous mode change request is pending and the pending mode change request shall be changed to transition to the SAFE mode.,6/30/05
ProjectA - TIM - 1831,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.8.7 inconsistent with RVM and fsw_test_34,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_34 requirement text. The RVM and test script text for the ""XSPLYSET"" is different than the SRS in that the RVM and test script text discuss the requirement in terms of an ""XPSLYCNT"" command, and the SRS discusses a ""XSPLYSET"" command. The command name is incorrect in the RVM and test script version of the requirement. Also, the EngCntrl SRS requirement for the ""XSPLYSET "" is numbered 3.4.8.7 and the RVM and test script requirement for ""XSPLYSET"" is numbered 3.4.7.7. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.8.7: XSPLYSET The XSPLYSET command is used to change the setpoint value of individual power supplies in the indicated PPU. This command is intended for ground testing. Referenced Test Script Requirement 3.4.7.7: XSPLYSET The XPSLYCNT command is used to change the setpoint value of individual power supplies in the indicated PPU. This command is intended for ground testing. Referenced RVM Requirement 3.4.7.7: XSPLYSET The XPSLYCNT command is used to change the setpoint value of individual power supplies in the indicated PPU. This command is intended for ground testing.",6/30/05
ProjectA - TIM - 1830,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.8.6 inconsistent with RVM and fsw_test_34,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_34 requirement text. The RVM and test script text for the ""XSPLYCNT"" is different than the SRS in that the RVM and test script text discuss the requirement in terms of an ""XPSLYCNT"" command in the text portion and ""XSPLYCTL"" in the Short Title. The SRS discusses an ""XSPLYCNT"" command. The command name is referenced inconsistently. Also, the EngCntrl SRS requirement for the ""XSPLYCNT "" is numbered 3.4.8.6 and the RVM and test script requirement for ""XPSLYCNT"" is numbered 3.4.7.6. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.8.6: XSPLYCNT The XSPLYCNT command is used to enable or disable individual power supplies in the indicated PPU. This command is intended for ground testing. Referenced Test Script Requirement 3.4.7.6: XSPLYCTL The XPSLYCNT command is used to enable or disable individual power supplies in the indicated PPU. This command is intended for ground testing. Referenced RVM Requirement 3.4.7.6: XSPLYCTL The XPSLYCNT command is used to enable or disable individual power supplies in the indicated PPU. This command is intended for ground testing.",6/30/05
ProjectA - TIM - 1829,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.35.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.35.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.35.3: Command Execution The Operational software shall change the specified EngCntrl Telemetry Calibration Table entry upon reception of this command and successful command validation.,6/30/05
ProjectA - TIM - 1828,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.35.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.35.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.35.2: Data Value Parameter Check The Operational software is not required to check the validity of the table data values.,6/30/05
ProjectA - TIM - 1827,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.35.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.35.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.35.1: Telemetry Channel Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Telemetry Channel Number parameter is not valid and the command will be ignored.,6/30/05
ProjectA - TIM - 1826,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.35 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.35 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.35: XDAQCALT The XDAQCALT command is used to update a EngCntrl Telemetry Calibration table entry.,6/30/05
ProjectA - TIM - 1825,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.34.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.34.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.34.3: Command Execution The Operational software shall change the specified PPU Telemetry Calibration Table entry upon reception of this command and successful command validation.,6/30/05
ProjectA - TIM - 1824,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.34.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.34.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.34.2: Data Value Parameter Check The Operational software is not required to check the validity of the table data values.,6/30/05
ProjectA - TIM - 1823,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.34.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.34.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.34.1: Telemetry Channel Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Telemetry Channel Number parameter is not valid and the command will be ignored.,6/30/05
ProjectA - TIM - 1822,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.34 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.34 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.34: XPATCALT The XPATCALT command is used to update a PPU Telemetry Calibration table entry.,6/29/05
ProjectA - TIM - 1821,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.33.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.33.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.33.3: Command Execution The Operational software shall change the specified PPU Power Supply Calibration Table entry upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1820,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.33.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.33.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.33.2: Data Value Parameter Check The Operational software is not required to check the validity of the table data values.,6/29/05
ProjectA - TIM - 1819,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.33.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.33.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.33.1: Supply Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Supply Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1818,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.33 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.33 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.33: XPASCALT The XPASCALT command is used to update a PPU Power Supply Calibration table entry.,6/29/05
ProjectA - TIM - 1817,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.32.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.32.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.32.3: Command Execution The Operational software shall change the specified Pressure Transducer Calibration Table entry upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1816,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.32.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.32.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.32.2: Data Value Parameter Check The Operational software is not required to check the validity of the table data values.,6/29/05
ProjectA - TIM - 1815,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.32.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.32.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.32.1: Pressure Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Pressure Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1814,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.32 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.32 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.32: XPACCLUT The XPACCLUT command is used to update a Pressure Transducer Calibration table entry.,6/29/05
ProjectA - TIM - 1813,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.31.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.31.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.31.3: Memory Fault Protection Disable The Operational software shall disable the memory fault protection by disabling the interrupt source associated with the specified memory fault type.,6/29/05
ProjectA - TIM - 1812,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.31.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.31.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.31.2: Memory Fault Protection Enable The Operational software shall enable the memory fault protection by enabling the interrupt source associated with the specified memory fault type.,6/29/05
ProjectA - TIM - 1811,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.31.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.31.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.31.1: Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the command parameters are not valid.,6/29/05
ProjectA - TIM - 1810,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.31 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.31 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.31: XFAULTPRT The XFAULTPRT command is used to enable and disable various fault protection function of the Operational Software.,6/29/05
ProjectA - TIM - 1809,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.30.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.30.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.30.3: Enable Memory Scrub The Operational shall enable the Memory Scrub function of the Idle process when all checks have passed.,6/29/05
ProjectA - TIM - 1808,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.30.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.30.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.30.2: Memory Scrub In Progress Check The Operational shall indicate a MEMORY SCRUB IN PROGRESS error if the Idle Process is currently scrubbing the CPU memory. The memory scrub operation will not be aborted or restarted.,6/29/05
ProjectA - TIM - 1807,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.30.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.30.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.30.1: Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the memory address parameters are not valid.,6/29/05
ProjectA - TIM - 1806,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.30 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.30 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.30: XSCRBMEM The XSCRBMEM command is used to enable the memory scrub function of the Idle Process task.,6/29/05
ProjectA - TIM - 1805,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.29.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.29.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.29.2: Command Execution The Operational software shall change the specified run-time parameter entry upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1804,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.29.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.29.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.29.1: XRTDBASE The XRTDBASE command is used to update run-time parameters used by the Operational software.,6/29/05
ProjectA - TIM - 1803,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.29 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.29 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.29: XRTDBASE The XRTDBASE command is used to update run-time parameters used by the Operational software.,6/29/05
ProjectA - TIM - 1802,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.28.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.28.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.28.2: Command Execution The Operational software shall update the EngCntrl time value upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1801,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.28.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.28.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.28.1: Current Mode Check The Operational software shall indicate a COMMAND NOT VALID IN CURRENT MODE error if the current mode is not STANDBY or SAFE and the command will be ignored.,6/29/05
ProjectA - TIM - 1800,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.28 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.28 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.28: XSSCTIME The XSSCTIME command is used to update the EngCntrl time counter with the time value received from the spacecraft time broadcast.,6/29/05
ProjectA - TIM - 1799,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.27.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.27.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.27.2: Command Execution The Operational software shall adjust the EngCntrl time value upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1798,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.27.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.27.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.27.1: Current Mode Check The Operational software shall indicate a COMMAND NOT VALID IN CURRENT MODE error if the current mode is not STANDBY or SAFE and the command will be ignored.,6/29/05
ProjectA - TIM - 1797,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.27 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.27 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.27: XADJTIME The XADJTIME command is used adjust the EngCntrl time counter by a signed value.,6/29/05
ProjectA - TIM - 1796,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.26.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.26.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.26.2: Command Execution The Operational software shall update the EngCntrl time value upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1795,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.26.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.26.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.26.1: Current Mode Check The Operational software shall indicate a COMMAND NOT VALID IN CURRENT MODE error if the current mode is not STANDBY or SAFE and the command will be ignored.,6/29/05
ProjectA - TIM - 1794,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.26 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.26 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.26: XSETTIME The XSETTIME command is used load a value into the EngCntrl time counter.,6/29/05
ProjectA - TIM - 1793,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.25.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.25.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.25.1: Command Execution The Operational software shall start execution of the Bootloader software upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1792,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.25 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.25 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.25: XBOOTLDR The XBOOTLDR command is used terminate the Operational software and start the Bootloader software,6/29/05
ProjectA - TIM - 1791,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.24.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.24.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.24.1: Command Execution The Operational software shall restart upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1790,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.24 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.24 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.24: XEngCntrlRST The XEngCntrlRST command is used reset the Operational software.,6/29/05
ProjectA - TIM - 1789,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.23.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.23.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.23.1: Command Execution The Operational software shall update the memory peek address used by the Telemetry Update process.,6/29/05
ProjectA - TIM - 1788,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.23 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.23 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.23: XPEEKMEM The XPEEKMEM command is used to specify the start address to be used when the Telemetry Update task report the memory peek data.,6/29/05
ProjectA - TIM - 1787,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.22.2 is missing from RVM and test scripts,2,"The EngCntrl SRS requirement 3.4.8.22.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.22.2: Command Execution The Operational software shall write the value in the command if the command has passed all checks. When 32-bit data is specified, the Operational software shall write the lower 16-bit word first.",6/29/05
ProjectA - TIM - 1786,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.22.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.22.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.22.1: Data Type Verification The Operational software shall verify the XPOKEMEM command specifies a valid data type. The Operational software shall indicate an INVALID COMMAND PARAMETER error if the data type is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1785,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.22 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.22 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.22: XPOKEMEM The XPOKEMEM command is used to write a data value into a specified memory location in the CPU address space.,6/29/05
ProjectA - TIM - 1784,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.21.4 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.21.4 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.21.4: Command Execution The Operational software shall change the specified Pressure Setpoint Correction Table entry upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1783,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.21.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.21.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.21.3: Table Entry Parameter Check The Operational software is not required to check the validity of the table parameters.,6/29/05
ProjectA - TIM - 1782,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.21.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.21.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.21.2: Row Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Row Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1781,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.21.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.21.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.21.1: Table Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Table Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1780,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.21 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.21 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.21: XPARCLUT The XPARCLUT command is used to update a Pressure Setpoint Correction table entry.,6/29/05
ProjectA - TIM - 1779,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.20.4 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.20.4 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.20.4: Command Execution The Operational software shall change the specified Pressure Correction Table entry upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1778,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.20.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.20.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.20.3: Table Entry Parameter Check The Operational software is not required to check the validity of the table parameters.,6/29/05
ProjectA - TIM - 1777,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.20.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.20.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.20.2: Row Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Row Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1776,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.20.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.20.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.20.1: Table Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Table Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1775,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.20 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.20 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.20: XPAMCLUT The XPAMCLUT command is used to update a Pressure Correction table entry.,6/29/05
ProjectA - TIM - 1774,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.19.4 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.19.4 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.19.4: Command Execution The Operational software shall change the specified Throttle Table entry upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1773,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.19.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.19.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.19.3: Current Mode Check The Operational software shall indicate a COMMAND NOT VALID IN CURRENT MODE error if the current mode is not STANDBY or SAFE and the command will be ignored.,6/29/05
ProjectA - TIM - 1772,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.19.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.19.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.19.2: Table Entry Parameter Check The Operational software is not required to check the validity of the table parameters.,6/29/05
ProjectA - TIM - 1771,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.19.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.19.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.19.1: Power Level Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the power level is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1770,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.19 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.19 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.19: XTHROTAB The XTHROTAB command is used to used to upload new throttle table values for a specified power level.,6/29/05
ProjectA - TIM - 1769,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.18.4 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.18.4 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.18.4: Command Execution The Operational software shall change the pulse width control parameter defined in the command upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1768,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.18.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.18.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.18.3: Pulse Width Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Pulse Width parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1767,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.18.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.18.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.18.2: Mode Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Mode parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1766,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.18.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.18.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.18.1: Pulse Width Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Pulse Width Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1765,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.18 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.18 is missing from RVM and the test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.18: XPLSWDTH The XPLSWDTH command is used to change the pulse width parameters used to control both solenoid valve and latch valves. This command is intended for ground testing.,6/29/05
ProjectA - TIM - 1764,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.17.4 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.17.4 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.17.4: Command Execution The Operational software shall operate specified solenoid or regulator pairs defined in the command upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1763,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.17.3 is missing from test scripts,2,The EngCntrl SRS requirement 3.4.8.17.3 is missing from the test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.17.3: Pulse Width Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Pulse Width parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1762,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.17.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.17.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.17.2: Cycle Mode Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Cycle Mode parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1761,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.17.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.17.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.17.1: Valve Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Valve Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1760,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.17 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.17 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.17: XSOLVCTL The XSOLVCTL command is used to operate individual solenoid valves or regulator valve pairs in the XFS. This command is intended for ground testing.,6/29/05
ProjectA - TIM - 1759,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.16.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.16.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.16.3: Command Execution The Operational software shall command the Latch valve specified to open or closed upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1758,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.16.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.16.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.16.2: Open/Close Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Open/Close parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1757,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.16.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.16.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.16.1: Valve Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Valve Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1756,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.16 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.16 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.16: XLATVCTL The XLATVCTL command is used to open or close individual latch valves in the XFS. This command is intended for ground testing.,6/29/05
ProjectA - TIM - 1755,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.15.5 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.15.5 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.15.5: Command Execution The Operational software shall request a mode transition to INIT RUN mode upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1754,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.15.4 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.15.4 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.15.4: Pending Mode Transition Request Check The Operational software shall verify a pervious mode transition has not been requested during this iteration of the control loop. The Operation software shall indicate a MODE CHANGE error if a previous mode change request is pending and the command will be ignored.,6/29/05
ProjectA - TIM - 1753,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.15.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.15.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.15.3: Current Mode Check The Operational software shall indicate a COMMAND NOT VALID IN CURRENT MODE error if the current mode is not STANDBY and the command will be ignored.,6/29/05
ProjectA - TIM - 1752,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.15.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.15.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.15.2: Cathode Flow Regulator Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Cathode Flow Regulator Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1751,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.15.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.15.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.15.1: Main Flow Regulator Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Main Flow Regulator Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1750,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.15 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.15 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.15: XINITXFS The XINITXFS command is used to request the Operational software to transition to the INIT XFS mode.,6/29/05
ProjectA - TIM - 1749,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.14.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.14.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.14.3: Command Execution The Operational software shall set the XFS control mode upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1748,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.14.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.14.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.14.2: Current Mode Check The Operational software shall indicate a COMMAND NOT VALID IN CURRENT MODE error if the current mode is not STANDBY and the command will be ignored.,6/29/05
ProjectA - TIM - 1747,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.14.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.14.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.14.1: Single Plenum Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Single Plenum parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1746,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.14 is missing from RVM and test scripts,2,"The EngCntrl SRS requirement 3.4.8.14 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.14: XSGLPLNM The XSGLPLNM command is used to set the XFS mode to be used: normal, single plenum main or single plenum cathode.",6/29/05
ProjectA - TIM - 1745,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.13.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.13.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.13.2: Command Execution The Operational software shall enable or disable the leak check fault protection upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1744,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.13.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.13.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.13.1: Leak Check Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Leak Check parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1743,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.13 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.13 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.13: XLEAKCHK The XLEAKCHK command is used to enable or disable the XFS leak check fault protection.,6/29/05
ProjectA - TIM - 1742,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.12.6 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.12.6 is missing from RVM and the test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.12.6: Command Execution The Operational software shall request a mode transition to XFS RUN mode upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1741,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.12.5 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.12.5 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.12.5: Pending Mode Transition Request Check The Operational software shall verify a pervious mode transition has not been requested during this iteration of the control loop. The Operation software shall indicate a MODE CHANGE error if a previous mode change request is pending and the command will be ignored.,6/29/05
ProjectA - TIM - 1740,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.12.4 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.12.4 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.12.4: Current Mode Check The Operational software shall indicate a COMMAND NOT VALID IN CURRENT MODE error if the current mode is not STANDBY and the command will be ignored.,6/29/05
ProjectA - TIM - 1739,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.12.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.12.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.12.3: Engine Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Engine Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1738,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.12.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.12.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.12.2: Cathode Flow Regulator Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Cathode Flow Regulator Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1737,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.12.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.12.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.12.1: Main Flow Regulator Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Main Flow Regulator Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1736,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.12 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.12 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.12: XRUNXFS The XRUNXFS command is used to request the Operational software to transition to the RUN XFS mode.,6/29/05
ProjectA - TIM - 1735,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.11.3 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.11.3 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.11.3: Command Execution The Operational software shall enable or disable the Diode Mode of Operation upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1734,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.11.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.11.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.11.2: Diode Mode Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Diode Mode parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1733,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.11.1 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.11.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.11.1: Thruster Number Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Thruster Number parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1732,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.11 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.11 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.11: XDIODMOD The XDIODMOD command is used to enable/disable the Diode Mode of operation to be used during the THRUST mode operations.,6/29/05
ProjectA - TIM - 1731,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.10.2 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.10.2 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.10.2: Command Execution The Operational software shall enable or disable the beam control algorithm upon reception of this command and successful command validation.,6/29/05
ProjectA - TIM - 1730,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.10.1 is missing from the RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.10.1 is missing from the RVM and test scripts. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.10.1: Beam Control Parameter Check The Operational software shall indicate an INVALID COMMAND PARAMETER error if the Beam Control parameter is not valid and the command will be ignored.,6/29/05
ProjectA - TIM - 1729,EngCntrl Test Scripts: EngCntrl SRS requirement 3.4.8.10 is missing from RVM and test scripts,2,The EngCntrl SRS requirement 3.4.8.10 is missing from RVM and test scripts; however part of the requirement text is found within the 3.4.7.9.2 requirement description within the RVM. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced EngCntrl SRS Requirement 3.4.8.10: XBEAMCTL The XBEAMCTL command is used to enable or disable the beam control algorithm. This command is intended for ground testing. Referenced EngCntrl SRS Requirement 3.4.7.9.2: Command Execution The Operational software shall change the selected throttle table entry upon reception of this command and successful command validation. 3.4.7.10 XBEAMCTL The XBEAMCTL command is used to enable or disable the beam control algorithm. This command is inte,6/29/05
ProjectA - TIM - 1728,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.8.1.2 inconsistent with RVM and fsw_test_34,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_34 requirement text. The RVM and test script text for the ""Pending Mode Transition Request Check"" is different than the SRS in that the RVM and test script contain an additional requirement. Also, the EngCntrl SRS requirement for the ""Pending Mode Transition Request Check"" is numbered 3.4.8.1.2 and the RVM and test script requirement for ""Pending Mode Transition Request Check"" is numbered 3.4.7.1.2. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.8.1.2: Pending Mode Transition Request Check The Operational software shall verify a previous mode transition has not been requested during this iteration of the control loop. The Operation software shall indicate a MODE CHANGE error if a previous mode change request is pending. Referenced Test Script Requirement 3.4.7.1.2: Pending Mode Transition Request Check The Operational software shall verify a previous mode transition has not been requested during this iteration of the control loop. The Operation software shall indicate a MODE CHANGE error if a previous mode change request is pending. The Operation software shall ignore the command if the pending mode transition request is for SAFE mode. Referenced RVM Requirement 3.4.7.1.2: Pending Mode Transition Request Check The Operational software shall verify a previous mode transition has not been requested during this iteration of the control loop. The Operation software shall indicate a MODE CHANGE error if a previous mode change request is pending. The Operation software shall ignore the command if the pending mode transition request is for SAFE mode.",6/29/05
ProjectA - TIM - 1727,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.6.3 inconsistent with RVM and fsw_test_03,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_03 requirement text. The RVM and test script text for the ""Parameter Check"" is different than the SRS in that they discuss different conditionals for the ""INVALID COMMAND PARAMETER error"". Also, the EngCntrl SRS requirement for the ""Parameter Check"" is numbered 3.4.7.6.3 and the RVM and test script requirement for ""Parameter Check"" is numbered 3.4.6.6.3. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.6.3: Parameter Check The Bootloader software shall indicate an INVALID COMMAND PARAMETER error if the memory address parameters are not valid. Referenced Test Script Requirement 3.4.6.6.3: Parameter Check The Bootloader software shall indicate an INVALID COMMAND PARAMETER error if the memory segment and memory offset command parameters are not valid. Referenced RVM Requirement 3.4.6.6.3: Parameter Check The Bootloader software shall indicate an INVALID COMMAND PARAMETER error if the memory segment and memory offset command parameters are not valid.",6/29/05
ProjectA - TIM - 1726,"EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.6.1, fsw_test_03, and RVM inconsistent with each other",2,"The EngCntrl SRS, fsw_test_03, and RVM requirement text do not agree with each other. The test script text for the ""Checksum Calculation In Progress Check"" is different than the SRS and the RVM in that the test script text discusses the requirement in terms of a ""BSRBMEM"" command, the SRS discusses a ""BSCRBMEM"" command, and the RVM discusses the requirement in terms of a ""XSRBMEM"" command. The command name is inconsistent in all three sources. Also, the EngCntrl SRS requirement for the ""Checksum Calculation In Progress Check"" is numbered 3.4.7.6.1 and the RVM and test script requirement for ""Checksum Calculation In Progress Check"" is numbered 3.4.6.6.1. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.6.1: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a BSCRBMEM command is received and the command will be ignored. Referenced Test Script Requirement 3.4.6.6.1: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a BSRBMEM command is received and the command will be ignored. Referenced RVM Requirement 3.4.6.6.1: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a XSRBMEM command is received and the command will be ignored.",6/29/05
ProjectA - TIM - 1725,"EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.6, fsw_test_03, and RVM inconsistent with each other",2,"The EngCntrl SRS, fsw_test_03 requirement, and RVM text do not agree with each other. The test script text for the ""BSCRBMEM"" is different than the SRS in that the test script text discusses the requirement in terms of a ""BSRBMEM"" command, the SRS discusses a ""BSCRBMEM"" command, and the RVM discusses an ""XSRBMEM"" command. The command name is inconsistent in all three sources. Also, the EngCntrl SRS requirement for the ""BSCRBMEM"" is numbered 3.4.7.6, the test script requirement for ""BSRBMEM"" is numbered 3.4.6.6, and the RVM requirement for ""XSRBMEM"" is numbered 3.4.6.6. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.6: BSCRBMEM The BSCRBMEM command is used to enable the memory scrub function of the Idle Process task. Referenced Test Script Requirement 3.4.6.6: BSRBMEM The BSRBMEM command is used to enable the memory scrub function of the Idle Process task. Referenced Test Script Requirement 3.4.6.6: XSRBMEM The XSRBMEM command is used to enable the memory scrub function of the Idle Process task.",6/28/05
ProjectA - TIM - 1724,EngCntrl Test Scripts: fsw_test_03 and RVM contain a requirement (3.4.6.5.1) not found within the EngCntrl SRS,2,fsw_test_03 and RVM contain a requirement not found within the EngCntrl SRS. This leads to the question as to whether or not the SRS is the baselined set of requirements. Referenced Test Script Requirement 3.4.6.5.1: Address Range Check The Bootloader software shall check if the specified address will result in a illegal access error. The Bootloader shall indicate a BAD PEEK ADDRESS error if the specified address will cause an illegal access and will adjust the peek address prior to changing the Telemetry Update memory peek address to prevent the problem. Referenced RVM Requirement 3.4.6.5.1: Address Range Check The Bootloader software shall check if the specified address will result in a illegal access error. The Bootloader shall indicate a BAD PEEK ADDRESS error if the specified address will cause an illegal access and will adjust the peek address prior to changing the Telemetry Update memory peek address to prevent the problem.,6/28/05
ProjectA - TIM - 1723,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.3.3 inconsistent with RVM and fsw_test_04,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_04 requirement text. The RVM and test script text for the ""Enable Checksum Calculation"" is different than the SRS in that the RVM and test script text discuss the requirement in terms of an XSTARTSW command, and the SRS discusses a BSTARTSW command. The command name is different in the versions of the requirement text. No reference to the XSTARTSW command is found in the EngCntrl V1.2 SRS. Also, the EngCntrl SRS requirement for the ""Enable Checksum Calculation"" is numbered 3.4.7.3.3 and the RVM and test script requirement for ""Enable Checksum Calculation"" is numbered 3.4.6.3.3. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.3.3: Enable Checksum Calculation The Bootloader software shall enable the Idle Process task to calculate the Operational software checksum when the BSTARTSW is received and the Idle Process task is not currently calculating the checksum. Referenced Test Script Requirement 3.4.6.3.3: Enable Checksum Calculation The Bootloader software shall enable the Idle Process task to calculate the Operational software checksum when the XSTARTSW is received and the Idle Process task is not currently calculating the checksum. Referenced RVM Requirement 3.4.6.3.3: Enable Checksum Calculation The Bootloader software shall enable the Idle Process task to calculate the Operational software checksum when the XSTARTSW is received and the Idle Process task is not currently calculating the checksum.",6/28/05
ProjectA - TIM - 1722,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.3.1 inconsistent with RVM and fsw_test_04,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_04 requirement text. The RVM and test script text for the ""Checksum Calculation In Progress Check"" is different than the SRS in that the RVM and test script text discuss the requirement in terms of an XSTARTSW command, and the SRS discusses a BSTARTSW command. The command name is different in the two versions of the requirement text. No reference to the XSTARTSW command is found in the EngCntrl V1.2 SRS. Also, the EngCntrl SRS requirement for the ""Checksum Calculation In Progress Check"" is numbered 3.4.7.3.1 and the RVM and test script requirement for ""Checksum Calculation In Progress Check"" is numbered 3.4.6.3.1. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.3.1: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a BSTARTSW command is received and the command will be ignored. Referenced Test Script Requirement 3.4.6.3.1: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a XSTARTSW command is received and the command will be ignored. Referenced RVM Requirement 3.4.6.3.1: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a XSTARTSW command is received and the command will be ignored.",6/28/05
ProjectA - TIM - 1721,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.3 inconsistent with RVM and fsw_test_04,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_04 requirement text. The RVM and test script text for the ""XSTARTSW"" is different than the SRS in that the RVM and test script text discuss the requirement in terms of an XSTARTSW command, and the SRS discusses a BSTARTSW command. The command name is different in the two versions of the requirement text. No reference to the XSTARTSW command is found in the EngCntrl V1.2 SRS. Also, the EngCntrl SRS requirement for the ""BSTARTSW"" is numbered 3.4.7.3 and the RVM and test script requirement for ""XSTARTSW"" is numbered 3.4.6.3. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.3: BSTARTSW The BSTARTSW command is used to start the process of terminating the Bootloader software and transiting to the Operational software. This process involves the calculation of the Operational code checksum, comparing the results with a value stored in the EEPROM and then transition if the checksum passes. Referenced Test Script Requirement 3.4.6.3: XSTARTSW The XSTARTSW command is used to start the process of terminating the Bootloader software and transiting to the Operational software. This process involves the calculation of the Operational code checksum comparing the results with a value stored in the EEPROM and then transition if the checksum passes. Referenced RVM Requirement 3.4.6.3: XSTARTSW The XSTARTSW command is used to start the process of terminating the Bootloader software and transiting to the Operational software. This process involves the calculation of the Operational code checksum, comparing the results with a value stored in the EEPROM and then transition if the checksum passes.",6/28/05
ProjectA - TIM - 1720,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.2.2 inconsistent with RVM and fsw_test_04,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_04 requirement text. The RVM and test script text for the ""Enable Checksum Calculation"" is different than the SRS in that the RVM and test script text discuss the requirement in terms of an XCALCKSM command, and the SRS discusses a BCALCKSM command. The command name is different in the versions of the requirement text. No reference to the XCALCKSM command is found in the EngCntrl V1.2 SRS. Also, the EngCntrl SRS requirement for the ""Enable Checksum Calculation"" is numbered 3.4.7.2.2 and the RVM and test script requirement for ""Enable Checksum Calculation"" is numbered 3.4.6.2.2. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.2.2: Enable Checksum Calculation The Bootloader software shall enable the Idle Process task to calculation the Operational software checksum when the BCALCKSM is received and the Idle Process task is not currently calculating the checksum. Referenced Test Script Requirement 3.4.6.2.2: Enable Checksum Calculation The Bootloader software shall enable the Idle Process task to calculation the Operational software checksum when the XCALCKSM is received and the Idle Process task is not currently calculating the checksum. Referenced RVM Requirement 3.4.6.2.2: Enable Checksum Calculation The Bootloader software shall enable the Idle Process task to calculation the Operational software checksum when the XCALCKSM is received and the Idle Process task is not currently calculating the checksum.",6/28/05
ProjectA - TIM - 1719,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.2.1 inconsistent with RVM and fsw_test_04,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_04 requirement text. The RVM and test script text for the ""Checksum Calculation In Progress Check"" is different than the SRS in that the RVM and test script text discuss the requirement in terms of an XCALCKSM command, and the SRS discusses a BCALCKSM command. The command name is different in the versions of the requirement text. No reference to the XCALCKSM command is found in the EngCntrl V1.2 SRS. Also, the EngCntrl SRS requirement for the ""Checksum Calculation In Progress Check"" is numbered 3.4.7.2.1 and the RVM and test script requirement for ""Checksum Calculation In Progress Check"" is numbered 3.4.6.2.1. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.2.1: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a BCALCKSM command is received and the command will be ignored. Referenced Test Script Requirement 3.4.6.2.1: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a XCALCKSM command is received and the command will be ignored. Referenced RVM Requirement 3.4.6.2.1: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a XCALCKSM command is received and the command will be ignored.",6/28/05
ProjectA - TIM - 1718,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.2 inconsistent with RVM and fsw_test_04,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_04 requirement text. The RVM and test script text for the ""XCALCKSM "" is different than the SRS in that the RVM and test script text discuss the XCALCKSM command and states: ""The XCALCKSM command does not contain any commands"", and the SRS discusses the BCALCKSM command and states: ""The BCALCKSM command does not contain any parameters"". The command name is different in the versions of the requirement text. No reference to the XCALCKSM command is found in the EngCntrl V1.2 SRS. Also, the EngCntrl SRS requirement for the ""BCALCKSM "" is numbered 3.4.7.2 and the RVM and test script requirement for ""XCALCKSM "" is numbered 3.4.6.2. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.2: BCALCKSM The BCALCKSM command is used to initiate calculation of the checksum value of the Operation software. The checksum is calculated in a background process during the Idle Process task. The BCALCKSM command does not contain any parameters. Referenced Test Script Requirement 3.4.6.2: XCALCKSM The XCALCKSM command is used to initiate calculation of the checksum value of the Operation software. The checksum is calculated in a background process during the Idle Process task. The XCALCKSM command does not contain any commands. Referenced RVM Requirement 3.4.6.2: XCALCKSM The XCALCKSM command is used to initiate calculation of the checksum value of the Operation software. The checksum is calculated in a background process during the Idle Process task. The XCALCKSM command does not contain any commands.",6/28/05
ProjectA - TIM - 1717,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.1.5 inconsistent with RVM and fsw_test_04,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_04 requirement text. The RVM and test script text for the ""Memory Scrub In Progress Check"" is different than the SRS in that the RVM and test script text discuss the requirement in terms of the operational software (XLOADCODE) and the SRS discusses the requirement in terms of the bootloader software (BLOADCODE). The command name is different in the versions of the requirement text. No reference to the XLOADCODE command is found in the EngCntrl V1.2 SRS. Also, the EngCntrl SRS requirement for the ""Memory Scrub In Progress Check"" is numbered 3.4.7.1.5 and the RVM and test script requirement for ""Memory Scrub In Progress Check"" is numbered 3.4.6.1.5. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.1.5: Memory Scrub In Progress Check The Bootloader shall indicate a MEMORY SCRUB IN PROGRESS error if the Idle Process is currently scrubbing the CPU memory and will terminate the memory scrub operation. The Bootloader software shall write the data specified in the BLOADCODE command. Referenced Test Script Requirement 3.4.6.1.5: Memory Scrub In Progress Check The Bootloader shall indicate a MEMORY SCRUB IN PROGRESS error if the Idle Process is currently scrubbing the CPU memory and will terminate the memory scrub operation. The Bootloader software shall write the data specified in the XLOADCODE command. Referenced RVM Requirement 3.4.6.1.5: Memory Scrub In Progress Check The Bootloader shall indicate a MEMORY SCRUB IN PROGRESS error if the Idle Process is currently scrubbing the CPU memory and will terminate the memory scrub operation. The Bootloader software shall write the data specified in the XLOADCODE command.",6/28/05
ProjectA - TIM - 1716,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.1.4 inconsistent with RVM and fsw_test_04,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_04 requirement text. The RVM and test script text for the ""Checksum Calculation In Progress Check"" is different than the SRS in that the RVM and test script text discuss the requirement in terms of the operational software (XLOADCODE) and the SRS discusses the requirement in terms of the bootload software (BLOADCODE). The command name is different in the two versions of the requirement text. No reference to the XLOADCODE command is found in the EngCntrl V1.2 SRS. Also, the EngCntrl SRS requirement for the ""Checksum Calculation In Progress Check"" is numbered 3.4.7.1.4 and the RVM and test script requirement for ""Checksum Calculation In Progress Check"" is numbered 3.4.6.1.4. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.1.4: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a BLOADCODE command is received and the command will be ignored. Referenced Test Script Requirement 3.4.6.1.4: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a XLOADCODE command is received and the command will be ignored. Referenced RVM Requirement 3.4.6.1.4: Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a XLOADCODE command is received and the command will be ignored.",6/28/05
ProjectA - TIM - 1715,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.1.3 inconsistent with RVM and fsw_test_04,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_04 requirement text. The RVM and test script text for the ""Data Write"" is different than the SRS in that the RVM and test script text discuss an exception to when to write data as 16-bit words and the SRS does not. Also, the EngCntrl SRS requirement for the ""Data Write"" is numbered 3.4.7.1.3 and the RVM and test script requirement for ""Data Write"" is numbered 3.4.6.1.3. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.1.3: Data Write The Bootloader software shall write data as 16-bit words. Referenced Test Script Requirement 3.4.6.1.3: Data Write The Bootloader software shall write data as 16-bit words when possible the exception is when the start address is odd or an odd number of bytes are specified. Referenced RVM Requirement 3.4.6.1.3: Data Write The Bootloader software shall write data as 16-bit words when possible, the exception is when the start address is odd or an odd number of bytes are specified.",6/28/05
ProjectA - TIM - 1714,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.1.2 inconsistent with RVM and fsw_test_04,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_04 requirement text for the ""EEPROM Data Size Verification"" requirement. The command name specified in the RVM and requirement text is different: ""XLOADCODE"" vs ""BLOADCODE"". In addition, the requirements specify explictly different values for which the the Bootloader software is to verify: “more than 48 bytes are to be written” versus “more than 28 words are to be written”. Also, the EngCntrl SRS requirement for the ""EEPROM Data Size Verification"" is numbered 3.4.7.1.2 and the RVM and test script requirement for ""EEPROM Data Size Verification"" is numbered 3.4.6.1.2. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.1.2: EEPROM Data Size Verification The Bootloader software shall verify the BLOADCODE command does not specify more than 28 words are to be written. The Bootloader software shall indicate an INVALID COMMAND PARAMETER error if the number of words is not valid and the command will be ignored. Referenced Test Script Requirement 3.4.6.1.2: EEPROM Data Size Verification The Bootloader software shall verify the XLOADCODE command does not specify more than 48 bytes are to be written. The Bootloader software shall indicate an INVALID COMMAND PARAMETER error if the number of bytes is not valid and the command will be ignored. Referenced RVM Requirement 3.4.6.1.2: EEPROM Data Size Verification The Bootloader software shall verify the XLOADCODE command does not specify more than 48 bytes are to be written. The Bootloader software shall indicate an INVALID COMMAND PARAMETER error if the number of bytes is not valid and the command will be ignored.",6/28/05
ProjectA - TIM - 1713,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.1.1 inconsistent with RVM and fsw_test_04,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_04 requirement text. The RVM and test script text for the ""EEPROM Address Verification "" is different than the SRS in that the RVM and test script text discuss the requirement in terms of the operational software (XLOADCODE) and the SRS discusses the requirement in terms of the bootloader software (BLOADCODE). The command name is different in the three versions of the requirement text. No reference to the XLOADCODE command is found in the EngCntrl V1.2 SRS. Also, the EngCntrl SRS requirement for the ""EEPROM Address Verification"" is numbered 3.4.7.1.1 and the RVM and test script requirement for ""EEPROM Address Verification"" is numbered 3.4.6.1.1. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.1.1: EEPROM Address Verification The Bootloader software shall verify the BLOADCODE command does not specify an address within the write protected region of the EEPROM. The Bootloader software shall indicate an INVALID COMMAND PARAMETER error if the address is not valid and the command will be ignored. Referenced Test Script Requirement 3.4.6.1.1: EEPROM Address Verification The Bootloader software shall verify the XLOADCODE command does not specify an address within the write protected region of the EEPROM. The Bootloader software shall indicate an INVALID COMMAND PARAMETER error if the address is not valid and the command will be ignored. Referenced RVM Requirement 3.4.6.1.1: EEPROM Address Verification The Bootloader software shall verify the XLOADCODE command does not specify an address within the write protected region of the EEPROM. The Bootloader software shall indicate an INVALID COMMAND PARAMETER error if the address is not valid and the command will be ignored.",6/28/05
ProjectA - TIM - 1712,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.7.1 inconsistent with RVM and fsw_test_04,2,"The EngCntrl SRS does not agree with the RVM and fsw_test_04 requirement text. The requirement text in the RVM and test script for the ""XLOADCODE"" is different than the SRS in that it states: ""the XLOADCODE command is used to load from 1 to 48 bytes of data..."" and the SRS states: ""The BLOADCODE command is used to load from 1 to 28 words of data."" Also, the EngCntrl SRS requirement for the ""BLOADCODE"" is numbered 3.4.7.1 and the test script requirement for ""XLOADCODE"" is numbered 3.4.6.1. The inconsistent requirements text and numbering leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.7.1: BLOADCODE The BLOADCODE command is used to load from 1 to 28 words of data into the non-write protected region of the EEPROM. The BLOADCODE command contains parameters for specifying the address within the EEPROM to start the data write, the number of words to write and the data values. Referenced Test Script Requirement 3.4.6.1: XLOADCODE The XLOADCODE command is used to load from 1 to 48 bytes of data into the non-write protected region of the EEPROM. The XLOADCODE command contains parameters for specifying the address within the EEPROM to start the data write the number of bytes to write and the data values. Referenced RVM Requirement 3.4.6.1: XLOADCODE The XLOADCODE command is used to load from 1 to 48 bytes of data into the non-write protected region of the EEPROM. The XLOADCODE command contains parameters for specifying the address within the EEPROM to start the data write, the number of bytes to write and the data values.",6/27/05
ProjectA - TIM - 1711,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.6.1 inconsistent with RVM and fsw_test_32,3,"The EngCntrl SRS does not agree with the RVM and fsw_test_32 requirement text for the ""Command History List"" requirement. The RVM and test script text for the ""Command History List"" is different than the SRS in that it does not discuss that the list of the last four commands received shall exclude GDE specific commands. Also, the EngCntrl SRS requirement for the ""Command History List"" is numbered 3.4.6.1 and the RVM and test script requirement for ""Command History List"" is numbered 3.4.5.1. The intent of the requirement is consistent; however, the fact that the text is different supports the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.6.1: Command History List The EngCntrl Flight software shall maintain a list of the last four commands received. The list shall contain the OPCODE words only and shall exclude GDE specific commands. The EngCntrl Flight software is not required to maintain the command history knowledge when transitioning between software builds. Referenced Test Script Requirement 3.4.5.1: Command History List The EngCntrl Flight software shall maintain a list of the last four commands received. The list shall contain the OPCODE words only. The EngCntrl Flight software is not required to maintain the command history knowledge when transitioning between software builds. Referenced RVM Requirement 3.4.5.1: Command History List The EngCntrl Flight software shall maintain a list of the last four commands received. The list shall contain the OPCODE words only. The EngCntrl Flight software is not required to maintain the command history knowledge when transitioning between software builds.",6/24/05
ProjectA - TIM - 1710,"EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.4.1, fsw_test_32, and RVM inconsistent with each other",2,"The EngCntrl SRS, RVM, and fsw_test_32 requirement text do not agree with each other for the ""Subaddress Check"" requirement. The test script text for the ""Subaddress Check"" is different than the SRS and the RVM in that it discusses Bootloader software and Operational software in four versus two separate ""shall"" statements. The RVM text for the ""Subaddress Check"" is different than the SRS and test script in that it discusses ""subaddress 2 and subaddress 9"". Also, the EngCntrl SRS requirement for the ""Subaddress Check"" is numbered 3.4.4.1 and the RVM and test script requirement for ""Subaddress Check"" is numbered 3.4.3.1. This leads to the question as to whether all aspects of the approved SRS requirement were verified. Referenced EngCntrl SRS Requirement 3.4.4.1: Subaddress Check The EngCntrl software shall only accept commands received via subaddress 2. The EngCntrl software shall indicate a COMMAND SUBADDRESS error if data is received in any subaddress other than subaddress 2 and the command will be ignored. Referenced Test Script Requirement 3.4.3.1: Subaddress Check The Bootloader software shall only accept commands received via subaddress 2. The Bootloader software shall indicate a COMMAND SUBADDRESS error if data is received in any subaddress other than subaddress 2 and the command will be ignored. The Operational software shall only accept commands received via subaddress 2. The Operational software shall indicate a COMMAND SUBADDRESS error if data is received in any subaddress other than subaddress 2 and the command will be ignored. Referenced RVM Requirement 3.4.3.1: Subaddress Check The Bootloader software shall only accept commands received via subaddress 2. The Bootloader software shall indicate a COMMAND SUBADDRESS error if data is received in any subaddress other than subaddress 2 and the command will be ignored. The Operational software shall only accept commands received via subaddress 2 and subaddress 9. The Operational software shall indicate a COMMAND SUBADDRESS error if data is received in any subaddress other than subaddress 2 or subaddress 9 and the command will be ignored.",6/22/05
ProjectA - TIM - 1709,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.4.3 inconsistent with RVM and fsw_test_32,2,"The EngCntrl SRS and the RVM do not agree with the fsw_test_32 requirement text for the ""Command Execution Limit"" requirement. The RVM and test script text for the ""Command Execution Limit"" is different than the SRS in that it states: ""the EngCntrl Flight software shall attempt to execute up to 16 commands..."", where as the SRS states: ""the EngCntrl Flight software shall execute up to 16 commands..."". Also, the requirement number for the ""Command Execution Limit"" requirement is 3.4.3 in the EngCntrl SRS and 3.4.2 in the RVM and test script. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.4.3: Command Execution Limit The EngCntrl Flight software shall execute up to 16 commands received from the host spacecraft during each iteration of the 1 Hz control loop. Referenced Test Script Requirement 3.4.2: Command Execution Limit The EngCntrl Flight software shall attempt to execute up to 16 commands received from the host spacecraft during each iteration of the 1 Hz control loop. Referenced RVM Requirement 3.4.2: Command Execution Limit The EngCntrl Flight software shall attempt to execute up to 16 commands received from the host spacecraft during each iteration of the 1 Hz control loop.",6/22/05
ProjectA - TIM - 1708,EngCntrl Test Scripts: RVM and Test Scripts missing EngCntrl SRS v1.2 requirement 3.4.2,2,"The RVM and test scripts do not include EngCntrl SRS requirement 3.4.2. There is no indication in the RVM or the Test Script that requirement 3.4.2 was verified. Review of the DD-310 sheet in the RVM resulted in the identification of a EngCntrl TRD requirement 4.9.3.2, which appears to be the parent to EngCntrl SRS 3.4.2. EngCntrl TRD requirement 4.9.3.2 is linked in the RVM to EngCntrl FSW tests ""Nominal Standby Mode Test"" (fsw_test_11) and ""Command Parameters Test"" (fsw_test_34). However, there is no Requirements Traceability Matrix that shows the relationshEngine between the EngCntrl TRD and EngCntrl SRS requirements. The EngCntrl TRD requirements are not referenced in any of the FSW test scripts. Referenced EngCntrl SRS Requirement 3.4.2: The EngCntrl Flight Software shall cause the Engine to go to safe mode if no valid 1553 transaction occurs for a period of time greater than 3 seconds. EngCntrl TRD referenced requirement: 4.9.3.2 Command Timeout The EngCntrl shall monitor the Command interface for traffic; if no valid commands or broadcast messages are received for 3 seconds the EngCntrl shall indicate a command lost fault. The fault response to command lost will depend on the mode of the EngCntrl. If the EngCntrl is in Bootload mode or Safe mode, no action will be taken. If the EngCntrl is in any other mode, the EngCntrl will enter Safe mode.",6/22/05
ProjectA - TIM - 1707,Incorrect and Incomplete References from the L4 ACS SRS to the ACS Performance Specification,2,"The following sub-issues address incorrect and/or missing links in the ACS L4 Software Requirements Specification (SRS) to the ACS Performance Specification (ACSPS): Sub-Issue #1. L4-SROAC-77 states: AC software shall perform STR data FDIR defined in ACS Performance Specification section 3.2.4.1. The title of this section is: 3.2.4.1 Rate Commands in Acquisition / Coarse Sun Pointing Mode. The referenced ACSPS section has no bearing on ACS FDIR. The reference in the L4 should be to section 3.2.5.1 Star Tracker Fault Detection and Correction. Sub-Issue #2. L4-SROAC-102 states: AC software shall perform mode transition FDIR defined in ACS performance specification section 3.1.3.6 and 3.1.2.4. Section 3.1.2.4 does not exist in the ACSPS. Sub-Issue #3. L4-SROAC-53 states: AC software shall perform IRU data FDIR defined in ACS Performance Specification section 3.2.4.2. The title of this section is: 3.2.4.2 Inertial Target and Body Pointing Vectors in Target Pointing Mode. The referenced ACSPS section has no bearing on ACS FDIR. The reference in the L4 should be to 3.2.5.2 IRU Fault Detection and Correction. Sub-Issue #4. L4-SROAC-70 states: AC software shall perform RWA data FDIR defined in ACS Performance Specification section 3.2.4.4. The title of this section is: 3.2.4.4 Thrust Vector Pointing Trajectory and Engine Thruster Throttling in Delta-V Mode. The referenced ACSPS section has no bearing on ACS FDIR. The reference in the L4 should be to 3.2.5.4 RWA Fault Detection and Correction. Sub-Issue #5. The references in the ACS L4 SRS to the ACSPS address FDIR for only three of the seven ACS sensors and effectors identified in the ACSPS (e.g., there is no reference to FDIR for RCS). IV&V recommends that the Project link each of the requirements for the remaining four sensors and effectors to the appropriate sections in the ACSPS. Referenced specifications: (1) ProjectA Attitude Control Subsystem Performance Specification, S912-PF4610, REVISION C, revision date of October 29, 2004 (signed on November 15, 2004) and (2) ProjectA ACS L4 specification, extracted from the June 9, 2005 DOORS data base.",6/20/05
ProjectA - TIM - 1704,ACS Traceability Analysis: Inadequate tracing from L3 Pointing Stability requirements to ACS SRS,3,"The ACS SRS requirements are inadequately traced to the L3 Pointing Stability requirements. The existing trace to L4-SROAC-157 does not adequately fulfill the functionality defined in the L3 requirements. ACS SRS requirement L4-SROAC-147 appears to be applicable to the functionality defined in the Pointing Stability requirements; however the requirements are not linked. L3 Pointing Stability requirements: L3-SFS-105, L3-SFS-2153, L3-SFS-108, and L3-SFS-2335. L3-SFS-105 - During science operations, the Spacecraft System shall be able to limit the Flight System's roll (X) and pitch (Y) rate errors to less than 60 microrad/sec (3 sigma) for a period of at least 30 seconds. L3-SFS-2153 - During science operations, the Spacecraft System shall be able to limit the Flight System's yaw (Z) rate error to less than 250 microrad/sec (3 sigma) for a period of at least 30 seconds. L3-SFS-108 - While it is acquiring opnav images, the Flight System shall be able to limit its roll (X), pitch (Y), and yaw (Z) rates to less than 250 microrad/sec (3 sigma) for a period of at least 30 seconds while under RWA control. Note: Optical navigation is the driver for this requirement. L3-SFS-2335 - When Gravity Science or Navigation measurements are being performed using the HGA, the ACS shall limits its attitude rate errors about the pitch (Y) and yaw (Z) axis to less than or equal to 44 microrad/sec, 3-sigma, provided that RWAs are being used for control and momentum is not being unloaded. These requirements are currently traced to L4-SROAC-157 which states ""The AD software shall propagate and validate the error covariance matrix."" This trace is insufficient as it refers only to attitude determination and not to attitude control. L4-SROAC-147 - The software shall use proportional-integral-derivative (PID) controller for Target Pointing, Delta-V except for Thrust Vector Control (TVC), and Science Mode, proportional-derivative (PD) controller for Acquisition/Coarse Sun Pointing Mode, with only the derivative (rate) term for the Rate Nulling submode. The TVC has a separate controller as described in ACS Performance Specification section 3.2.2.3.",6/17/05
ProjectA - TIM - 1703,ACS Traceability Analysis: Incomplete tracing of L4-SROAC-120 – 123,4,"L4-SROAC-120 – 123 are insufficiently traced to the Level 3 requirements. L4-SROAC-120 – 123 state: The ACS mode shall transition from Target Pointing Mode by ground command or automatically to Acquisition/Coarse Sun Pointing, Rate Nulling Submode when one or more of the following occur: L4-SROAC-120 - Attitude errors or body rate errors exceed a specified value for a specified time. L4-SROAC-121 - Invalid ephemeris. L4-SROAC-122 - Kalman Filter divergence. L4-SROAC-123 - Loss of attitude reference. The following L3 requirements appear to describe the functionality described in these ACS requirements; however, currently there are no links between these requirements. L3-SFS-440 - The ACS shall provide autonomous control mode transition and fault detection and correction logic. L3-SFS-441 - The ACS shall provide for ground override of all autonomous function L3-SFS-932 - The Spacecraft ACS shall monitor performance in each mode/sub-mode against configurable thresholds and will notify FP monitors and/or regress to a safer control mode if a violation occurs.",6/17/05
ProjectA - TIM - 1702,ACS Traceability Analysis: L3 ACS related requirements with no associated L3 or L4 traces,2,"The following L3 requirements do not have any associated L3 or L4 traces: L3-SFS-853, L3-SFS-855, and L3-SFS-857 through L3-SFS-860. L3-SFS-853 Spacecraft Flight Software shall provide a software element (Ephemeris Services, ES) to maintain geometric information of the spacecraft's location and orientation, specifically - Predicted Inertial position of Earth, Moon, Mars, Vesta, asteroids and other principal solar system bodies as specified by MDN. L3-SFS-855 Spacecraft Flight Software shall provide a software element (Ephemeris Services, ES) to maintain geometric information of the spacecraft's location and orientation, specifically - Desired Inertial pointing direction for science and opnav observations L3-SFS-857 ES ephemerides shall use the Earth-Mean-Equator 2000 reference frame. L3-SFS-858 ES ephemerides shall use 12:00, Jan 1, 2000, Ephemeris Time (ET), as the reference epoch. Time in the ephemerides will be measured in ET seconds from that epoch. L3-SFS-859 The ACS Software shall determine central-body (Sun, asteroid, etc.) relative Flight Software states (position and velocity vs. time) using a set of 30 Chebyshev polynomials provided by the Ground Segment. L3-SFS-860 ES ephemerides shall describe central-body (Sun, asteroid, etc.) relative spacecraft states (position vs. time) using sets of Chebyshev polynomials.",6/17/05
ProjectA - TIM - 1701,ACS Traceability Analysis: No traces from the ACS SRS requirements to L3-SFS-695,3,"L3-SFS-695 contains no traces to the ACS SRS; however, it refers to implementing attitude determination and control functions in the Flight Software. L3-SFS-695 - The Flight Software shall implement major functions including: attitude determination and control (ACS), command & data handling (C&DH), thermal control (TCS), and interface support (XB, HSS, SCSA) on required processors.",6/17/05
ProjectA - TIM - 1700,ACS Traceability Analysis: Inadequate tracing from ACS SRS requirements to L3-SFS-2478,3,"L3-SFS-2478 is inadequately traced to the ACS SRS. The existing traces do not adequately fulfill the functionality. ACS SRS requirements L4-SROAC-36 and L4-SROAC-95 appear to be applicable to the functionality defined in L3-SFS-2478; however, the requirements are not linked. L3-SFS-2478 - The RCS subsystem shall support telemetry including tank pressure and thruster on times to be able to detect an unexpected loss of propellant before loss of more than 5 kg of propellant. L4-SROAC-36 - The AC software shall maintain statistics on AC command processing status since the last power-on or re-boot and provide these statistics in telemetry. Command statistics include: ACS Jet Commands: • Set Jet Pulse Period, • Set DeltaV Jet Seconds, • Stationkeep Pulse Period L4-SROAC-95 - The AC software shall generate synchronous telemetry to support ground monitoring and analysis of both spacecraft performance and ACS software performance. This telemetry includes, at a minimum: Active AC control mode and submode, Control parameters, Attitude and body rates, Raw attitude sensor and actuator data, Actuator control commands, Sensor and actuator status data, Sensor and actuator temperature, Spacecraft position and velocity, Flags indicating that FDIR limits have or have not been exceeded, Enable/disable status of each FDIR check.",6/17/05
ProjectA - TIM - 1699,ACS Traceability Analysis: L3-SFS-98 and L3-SFS-100 have no associated L3 or L4 Inlink traces,2,"L3-SFS-98 and L3-SFS-100 do not have any associated L3 or L4 Inlink traces. L3-SFS-98 states: ""When entering the Acquisition/Coarse Sun Pointing Mode, Sun Acquisition Submode, the ACS shall command the S/A drive position such that each S/A wing's cell side normal is parallel to the FS +X body axis."" L3-SFS-98 is missing traces to ACS SRS requirements to address the ACS funtionality to point the solar array. L3-SFS-100 states ""When in the Target Pointing, Science or Delta-V modes, the ACS shall keep the cell side normal of each S/A parallel to the spacecraft to Sun line through a combination of S/A drive position commands and steering commands about the pointing vector in the body frame."" L3-SFS-100 is missing traces to ACS SRS requirements to address the ACS funtionality to point the solar array. ACS SRS requirements L4-SROAC-91 and L4-SROAC-92 appear to be applicable to the functionality defined in L3-SFS-98 and L3-SFS-100; however, the requirements are not linked. L4-SROAC-91 - ACS FSW shall generate Solar Array Commands to maintain proper orientation of the solar arrays for power generation at 1 Hz. L4-SROAC-92 - SAD commands shall be output to the ACE in all ACS modes.",6/17/05
ProjectA - TIM - 1696,ACS Traceability Analysis: Incorrect tracing from ACS SRS requirements to L3-SFS-933,3,The existing trace from ACS requirement L4-SROAC-74 to L3-SFS-933 is incorrect. L3-SFS-933 - The Spacecraft shall provide health status on all ACS components when active L4-SROAC-74 - The spacecraft rate from each STR shall be converted to the body frame,6/17/05
ProjectA - TIM - 1695,ACS Traceability Analysis: Incorrect and Inadequate tracing from ACS SRS requirements to L3-SFS-932,3,"L3-SFS-932 is inadequately traced to the ACS SRS. The links from L3-SFS-932 to L4-SROAC-32, L4-SROAC-95, and L4-SROAC-105 are incorrect. Furthermore the ACS SRS requirements L4-SROAC-117, L4-SROAC-118, L4-SROAC-125, L4-SROAC-129, L4-SROAC-130, L4-SROAC-132, L4-SROAC-150, and L4-SROAC-161 appear to be applicable to the functionality defined in L3-SFS-932; however, the requirements are not linked. L3-SFS-932 - The Spacecraft ACS shall monitor performance in each mode/sub-mode against configurable thresholds and will notify FP monitors and/or regress to a safer control mode if a violation occurs. Links recommended for deletion: L4-SROAC-95 - The AC software shall generate synchronous telemetry to support ground monitoring and analysis of both spacecraft performance and ACS software performance. This telemetry includes, at a minimum: Active AC control mode and submode, Control parameters, Attitude and body rates, Raw attitude sensor and actuator data, Actuator control commands, Sensor and actuator status data, Sensor and actuator temperature, Spacecraft position and velocity, Flags indicating that FDIR limits have or have not been exceeded, Enable/disable status of each FDIR check. L4-SROAC-105 - The software shall reject any valid command of an invalid mode, or mode transition, and remain in the current mode. L4-SROAC-32 - Set AC control mode: • Launch Mode, • Acquisition/Coarse Sun Pointing Mode - Rate Nulling Submode, • Acquisition/Coarse Sun Pointing Mode - Sun Acquisition Submode, • Acquisition/Coarse Sun Pointing Mode - Sun Pointing Submode, • Target Pointing Mode • Delta-V Mode - Engine Submode, • Delta-V Mode - RCS Submode, • Science Mode - Asteroid Nadir Pointing Submode, • Science Mode - Asteroid Target Tracking Submode. Links recommended for addition: L4-SROAC-117 - The ACS mode shall transition from Acquisition/Coarse Sun Pointing, Sun Pointing Submode to Sun Acquisition Submode when the Y and Z axis attitude errors exceed specified (table) values for a specified time or there is no Sun presence detected from any CSS 'eyes' for a specified time that exceeds the maximum expected eclEnginee period. L4-SROAC-118 - The ACS mode shall transition from Acquisition/Coarse Sun Pointing, Sun Pointing Submode to Rate Nulling Submode when any axis of the body rate errors exceeds a specified value for a specified time. L4-SROAC-125 - The ACS mode shall transition from Delta-V or Science mode to Target Pointing Inertial Target Submode when the body rate errors or attitude error exceed a specified (table) value for a specified time. L4-SROAC-129 - Transition to Target Pointing Mode shall be rejected if spacecraft loss of attitude reference is detected. L4-SROAC-130 - Transition to Target Pointing Mode shall be rejected if Kalman Filter diverges. L4-SROAC-132 - Transition to Science or Delta-V Mode shall be rejected if spacecraft loss of attitude reference is detected. L4-SROAC-150 - Momentum management performance failures shall be detected. L4-SROAC-161 - If Kalman Filter divergence detected while in Target Pointing, Delta-V, or Science Mode for a specified time, Kalman Filter shall be re-initialized after ACS automatically transitions to Acquisition/Coarse Sun Pointing Mode.",6/17/05
ProjectA - TIM - 1694,ACS Traceability Analysis: L3-SFS-899 has no associated L3 or L4 traces,2,"L3-SFS-899 does not have any associated L3 or L4 traces. L3-SFS-899 states: ""The Spacecraft FP design will include transition to Safe Mode for a minimum of the following failure modes: • ACS performance degradation (attitude solution, pointing ability, rate/momentum) • EPS performance degradation (array current, bus voltage, battery charge) • CDH functional degradation (OBC software, critical unit hardware, 1553 data bus) • Telecom functional loss (command timeout)"" L3-SFS-899 is missing traces to ACS SRS requirements to address the ACS funtionality to transition to Safe Mode upon ACS performance degradation. Furthermore the ACS SRS requirements L4-SROAC-119 – 123 appear to be applicable to the functionality described above in L3-SFS-899; however, the requirements are not linked. L4-SROAC-119 – 123 state: The ACS mode shall transition from Target Pointing Mode by ground command or automatically to Acquisition/Coarse Sun Pointing, Rate Nulling Submode when one or more of the following occur: Attitude errors or body rate errors exceed a specified value for a specified time. Invalid ephemeris. Kalman Filter divergence. Loss of attitude reference.",6/17/05
ProjectA - TIM - 1693,ACS Traceability Analysis: Inadequate tracing from ACS SRS requirements to L3-SFS-891,3,"L3-SFS-891 is not satisfied by the existing traced ACS SRS requirements. ACS SRS requirements L4-SROAC-03, L4-SROAC-50, L4-SROAC-70, L4-SROAC-75, and L4-SROAC-77 appear to be applicable to the functionality defined in L3-SFS-891; however, the requirements are not linked. L3-SFS-891 - The Flight System FP design shall include hardware and low level flight software monitors such as watchdog timers, fault indicators (e.g., self diagnostics, error logging), error detection and correction systems, etc. for critical component processors. L4-SROAC-03 - During each 5 Hz cycle, the ACS software shall generate a FDIR status packet to identify which faults failed their FDIR checks and which did not. L4-SROAC-50 - In the event that an ACE error packet is received, the AC software shall execute its control cycle and increment the error packet receiving counter. L4-SROAC-70 - AC software shall perform RWA data FDIR defined in ACS Performance Specification section 3.2.4.4. L4-SROAC-75 - The AC software shall provide an indication to FDIR if the star tracker packet was not received for that 5 Hz cycle. L4-SROAC-77 - AC software shall perform STR data FDIR defined in ACS Performance Specification section 3.2.4.1.",6/17/05
ProjectA - TIM - 1692,ACS Traceability Analysis: Incorrect tracing from ACS SRS requirements to L3-SFS-890,3,"The existing traces from ACS requirements L4-SROAC-160 and L4-SROAC-161 to L3-SFS-890 are incorrect. L3-SFS-890 - Spacecraft FP FSW shall be capable of monitoring all types of engineering telemetry; including analogs, BI-levels thermistors/thermocouples/PRTs, component BIT, and software-generated parameters, not including data generated by instrument processors. L4-SROAC-160 - The AD software shall monitor the performance of the Kalman Filter and report the convergence/divergence state status of the Kalman Filter. L4-SROAC-161 - If Kalman Filter divergence detected while in Target Pointing, Delta-V, or Science Mode for a specified time, Kalman Filter shall be re-initialized after ACS automatically transitions to Acquisition/Coarse Sun Pointing Mode.",6/17/05
ProjectA - TIM - 1690,ACS Traceability Analysis: Inadequate tracing from L4 requirements to L3-SFS-866 and L3-SFS-2336,2,"The existing trace from ACS requirement L4-SROAC-149 to L3-SFS-866 and L3-SFS-2336 is inadequate. L4-SROAC-149 does not address all of the described functionality in the two L3 requirements. Furthermore the ACS SRS requirement L4-SROAC-37 appears to be applicable to the functionality defined in L3-SFS-866 and L3-SFS-2336; however, the requirements are not linked. L3-SFS-866 - The Ground Segment shall be capable of commanding, via either stored sequence or immediate commands a momentum dump that commands the spacecraft momentum about each axis to be reduced below a minimum threshold for that axis. L3-SFS-2336 - The minimum momentum threshold for each axis shall be stored in the spacecraft flight software and changeable by the Ground Segment. L4-SROAC-149 - ACS FSW shall manage and unload accumulated reaction wheel momentum when reaction wheels are used. L4-SROAC-37 - The AC software shall accept AC task commands which initialize, activate, inhibit, or otherwise control the individual AC task software processes. These commands are: ACS Momentum Control Commands: • Enable/Disable autonomous momentum control • Enable/Disable momentum adjust • Momentum command • Set momentum error limit threshold commands • Momentum torque magnitude command",6/17/05
ProjectA - TIM - 1688,ACS Traceability Analysis: L3-SFS-859 and L3-SFS-860 have no associated L3 or L4 traces,2,"L3-SFS-859 and L3-SFS-860 do not have any associated L3 or L4 traces. L3-SFS-859 states: ""The ACS Software shall determine central-body (Sun, asteroid, etc.) relative Flight Software states (position and velocity vs. time) using a set of 30 Chebyshev polynomials provided by the Ground Segment."" L3-SFS-859 is missing traces to ACS SRS requirements to address the ACS funtionality to determine central-body relative Flight Software states. L3-SFS-860 states ""ES ephemerides shall describe central-body (Sun, asteroid, etc.) relative spacecraft states (position vs. time) using sets of Chebyshev polynomials."" L3-SFS-860 is missing traces to ACS SRS requirements to address the ACS funtionality to determine central-body relative spacecraft states. Furthermore the ACS SRS requirement L4-SROAC-167 appears to be applicable to some of the functionality defined in L3-SFS-859 and L3-SFS-860; however, the requirements are not linked. L4-SROAC-167 - AC software shall propagate the spacecraft ephemeris every ACS control cycle (5 Hz).",6/17/05
ProjectA - TIM - 1687,ACS Traceability Analysis: Incorrect tracing from ACS SRS requirements to L3-SFS-856,3,"The traces from ACS requirements L4-SROAC-152 and L4-SROAC-153 to L3-SFS-856 are incorrect and do not flow from L3-SFS-856. L3-SFS-856 - The Ground Segment shall uplink input files as required to enable the ES to maintain the desired spacecraft pointing to accuracies specified in the Mission Requirements Document. L4-SROAC-152 - The AD software for six-state Kalman Filter shall receive as input: Estimated IRU Rates, Corrected Inertial-to-Tracker Quaternions from STR1 and/or STR2, and Propagated Quaternion. L4-SROAC-153 - The AD software for three-state Kalman Filter shall receive as input: Measured Rates derived from Corrected Inertial-to-Tracker Quaternions from STR1 and/or STR2 at 1 Hz, and Estimated Rates.",6/17/05
ProjectA - TIM - 1679,ACS Traceability Analysis: Incorrect traces from ACS SRS requirements to L3-SFS-694,3,"The traces from the following ACS SRS requirements to L3-SFS-694 are incorrect: L4-SROAC-64, L4-SROAC-65, L4-SROAC-66, and L4-SROAC-67. L3-SFS-694 - The Flight Software shall support flight software subsystem requirements, including processing commands and telemetry, storing and transmitting data, and maintaining flight software health. L4-SROAC-64 - The RWA data shall be used to calculate the speed and direction of each wheel. L4-SROAC-65 - Wheel torque, in the body frame, shall be calculated. L4-SROAC-66 - The wheel momentum shall be calculated from the RWA tachometer data. L4-SROAC-67 - The last valid RWA data shall be used for that processing cycle when RWA data is declared invalid.",6/16/05
ProjectA - TIM - 1676,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.3.9 inconsistent with fsw_test_01,2,"The EngCntrl SRS and the requirement text included in the RVM and fsw_test_01 for EngCntrl SRS Requirement 3.3.9 do not agree. The RVM and test script text for the ""PPU Address"" is different than the SRS in the way the PPU is set. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.3.9: PPU Address The EngCntrl Flight Software shall set the initial PPU address from the value stored in the nonvolatile Configuration Data Table. This initial PPU address is used by the Telemetry collection sequence step for the reading of the PPU telemetry data. Referenced Test Script Requirement 3.3.9: PPU Address The EngCntrl Flight Software shall set the initial PPU based on the state of the EngCntrl ID indication located in the EngCntrl ID register of the CPU FPGA. This initial PPU address is used by the Telemetry collection sequence step for the reading of the PPU telemetry data. For EngCntrl ID bit equal to 0 the Bootloader software shall set the PPU address to 0 the value is 0x01. For EngCntrl ID bit equal to 1 the Bootloader software shall set the PPU address to 0 the value is 0x01. Referenced RVM Requirement 3.3.9: PPU Address The EngCntrl Flight Software shall set the initial PPU based on the state of the EngCntrl ID indication located in the EngCntrl ID register of the CPU FPGA. This initial PPU address is used by the Telemetry collection sequence step for the reading of the PPU telemetry data. For EngCntrl ID bit equal to 0, the Bootloader software shall set the PPU address to 0,the value is 0x01. For EngCntrl ID bit equal to 1, the Bootloader software shall set the PPU address to 0,the value is 0x01.",6/16/05
ProjectA - TIM - 1674,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.3.6 inconsistent with RVM and fsw_test_01,2,"The EngCntrl SRS and the requirement text included in the RVM and fsw_test_01 for EngCntrl SRS Requirement 3.3.6 do not agree. The RVM and test script text for the ""XVD"" is different than the SRS in that it discusses not initializing the XVD board during the Initialization states. The RVM and test script also discuss that the Bootloader software initializing the XVD during the Thruster shutdown state versus the Engine Safe state. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.3.6: XVD The EngCntrl Flight Software is not required initialize the XVD board during the Initialization states. The Bootloader software shall effectively initialize the XVD during the Engine Safe state. Referenced Test Script Requirement 3.3.6: XVD The EngCntrl Flight Software shall not initialize the XVD board during the Initialization states. The Bootloader software shall effectively initialize the XVD during the Thruster shutdown state. Referenced RVM Requirement 3.3.6: XVD The EngCntrl Flight Software shall not initialize the XVD board during the Initialization states. The Bootloader software shall effectively initialize the XVD during the Thruster shutdown state.",6/16/05
ProjectA - TIM - 1672,EngCntrl Test Scripts: EngCntrl SRS v1.2 and RVM requirement 3.3.5.7 inconsistent with fsw_test_01,2,"The EngCntrl SRS and the RVM do not agree with the requirement text included in fsw_test_01 for EngCntrl SRS Requirement 3.3.5.7; however the SRS text does agree with the RVM. The test script text for the ""Telemetry Buffer Initialization "" is different than the SRS and the RVM in that it discusses that ""no other changes shall be made to the buffer content to enable extraction of data if a reboot has occurred."" Also, the EngCntrl SRS and the RVM requirement for the ""Telemetry Buffer Initialization"" is numbered 3.3.5.7 and the test script requirement for ""Telemetry Buffers"" (note: different requirement headings exist too is numbered 3.3.5.6. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.3.5.7: Telemetry Buffer Initialization The Bootloader software shall initialize the Telemetry buffers in the 1553 interface by writing the packet ID into each buffer and setting the Engine mode value. Referenced Test Script Requirement 3.3.5.6: Telemetry Buffers The Bootloader software shall initialize the Telemetry buffers in the 1553 interface by writing the packet ID into each buffer and setting the Engine mode value. No other changes shall be made to the buffer content to enable extraction of data if a reboot has occurred. Referenced EngCntrl SRS Requirement 3.3.5.7: Telemetry Buffer Initialization The Bootloader software shall initialize the Telemetry buffers in the 1553 interface by writing the packet ID into each buffer and setting the Engine mode value.",6/16/05
ProjectA - TIM - 1671,ACS Traceability Analysis: L3-SFS-453 has no associated L3 or L4 traces,3,"L3-SFS-453 does not have any associated L3 or L4 traces. L3-SFS-453 states: ""The ACS shall be capable of determining the spacecraft position relative to the Earth, the Sun, Vesta and Ceres provided valid ephemeredes are uplinked and loaded into the ACS software."" L3-SFS-453 is missing traces to ACS SRS requirements to address the ACS functionality of ""determining the spacecraft position relative to the Earth, the Sun, Vesta and Ceres.""",6/16/05
ProjectA - TIM - 1670,EngCntrl Test Scripts: Test Scripts missing EngCntrl SRS v1.2 requirement 3.3.5.6 and RVM inconsistent with SRS,2,"The test scripts do not include EngCntrl SRS requirement 3.3.5.6, and the RVM requirement text does not agree with the SRS. There is no indication in the RVM or the Test Script that this requirement was verified. Referenced EngCntrl SRS Requirement 3.3.5.6: 1553 Telemetry Sub-Address Double-Buffering The EngCntrl Bootloader Software shall provide for double-buffering of telemetry sub-addresses to ensure consistency of telemetry data. Referenced EngCntrl RVM Requirement 3.3.5.6: Telemetry Buffers The Bootloader software shall initialize the Telemetry buffers in the 1553 interface by writing the packet ID into each buffer and setting the Engine mode value. No other changes shall be made to the buffer content to enable extraction of data if a reboot has occurred.",6/16/05
ProjectA - TIM - 1669,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.3.2 inconsistent with RVM and fsw_test_01,2,"The EngCntrl SRS and the requirement text included in the RVM and fsw_test_01 for EngCntrl SRS Requirement 3.3.2 do not agree. The RVM and test script text for the ""Interrupts"" is different than the SRS in that it discusses all other interrupt source vector registers and associated interrupt vector table entries being initialized with an Illegal Interrupt ISR. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.3.2: Interrupts The EngCntrl Flight software shall initialize the interrupt source vector registers and associated interrupt vector table entries for the following interrupts: Timer Interrupts, VME Bus Error Interrupts, Illegal Access Interrupts and EDAC Error Interrupts. All unused interrupt vector table entries shall be initialized with an Illegal Interrupt ISR. The EngCntrl Flight software shall enable the following interrupt sources: Timer Interrupts, Illegal Access Interrupts, VME Bus Error Interrupts and EDAC Error Interrupts. All other interrupt sources shall be disabled. Referenced Test Script Requirement 3.3.2: Interrupts The EngCntrl Flight software shall initialize the interrupt source vector registers and associated interrupt vector table entries for the following interrupts: Timer Interrupts, VME Bus Error Interrupts, Illegal Access Interrupts and EDAC Error Interrupts. All other interrupt source vector registers and associated interrupt vector table entries shall be initialized with an Illegal Interrupt ISR. All unused interrupt vector table entries shall be initialized with an Illegal Interrupt ISR. The EngCntrl Flight software shall enable the following interrupt sources: Timer Interrupts Illegal Access Interrupts VME Bus Error Interrupts and EDAC Error Interrupts. All other interrupt sources shall be disabled. Referenced RVM Requirement 3.3.2: Interrupts The EngCntrl Flight software shall initialize the interrupt source vector registers and associated interrupt vector table entries for the following interrupts: Timer Interrupts, VME Bus Error Interrupts, Illegal Access Interrupts and EDAC Error Interrupts. All other interrupt source vector registers and associated interrupt vector table entries shall be initialized with an Illegal Interrupt ISR. All unused interrupt vector table entries shall be initialized with an Illegal Interrupt ISR. The EngCntrl Flight software shall enable the following interrupt sources: Timer Interrupts, Illegal Access Interrupts, VME Bus Error Interrupts and EDAC Error Interrupts. All other interrupt sources shall be disabled.",6/16/05
ProjectA - TIM - 1666,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.3.1 inconsistent with RVM and fsw_test_01,2,"The EngCntrl SRS and the requirement text included in the RVM and fsw_test_01 for EngCntrl SRS Requirement 3.3.1 do not agree . The RVM and the test script text for the ""SRAM Initialization"" is different than the SRS in that it discusses initializing the SRAM with a known pattern on boot up. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.3.1: SRAM Initialization The Bootloader software shall initialize the SRAM on boot up. This is to set the EDAC code word to a known state to prevent EDAC errors from being generated by SRAM reads to un-initialized memory. Note: SRAM reads to un-initialized memory is expected due to the continuous memory dump telemetry function. The Operational Software is not required to initialize the SRAM given that the Bootloader software will have already performed this operation. Referenced Test Script Requirement 3.3.1: SRAM Initialization The Bootloader software shall initialize the SRAM with a known pattern on boot up. This is to set the EDAC code word to a known state to prevent EDAC errors from being generated by SRAM reads to un-initialized memory. Note: SRAM reads to un-initialized memory is expected due to the continuous memory dump telemetry function. The Operational Software is not required to initialize the SRAM given that the Bootloader software will have already performed this operation. Referenced RVM Requirement 3.3.1: SRAM Initialization The Bootloader software shall initialize the SRAM with a known pattern on boot up. This is to set the EDAC code word to a known state to prevent EDAC errors from being generated by SRAM reads to un-initialized memory. Note: SRAM reads to un-initialized memory is expected due to the continuous memory dump telemetry function. The Operational Software is not required to initialize the SRAM given that the Bootloader software will have already performed this operation.",6/16/05
ProjectA - TIM - 1662,ACS Traceability Analysis: Incorrect traces from L3-SFS-434 to ACS SRS,3,"The following traces from L3-SFS-434 to ACS SRS requirements are incorrect: L4-SROAC-28, L4-SROAC-35 , L4-SROAC-71, L4-SROAC-97 , L4-SROAC-122, L4-SROAC-123, L4-SROAC-124, L4-SROAC-156, and L4-SROAC-168. The remaining trace to L3-SFS-435 appears to be correct. Deleting the above listed L4 requirements leaves no links to the L4 software requirements. Being that L3-SFS-434 is a General Requirement, it may be appropriate to link it to only L3 requirements, which are then linked to the L4 software requirements. L3-SFS-434 - The ACS shall control the spacecraft attitude during all phases of the mission from launch vehicle separation to the end of the mission , excluding Rate Nulling submode during which only the rates are controlled. The ACS SRS requirements incorrectly traced to L3-SFS-434 are: L4-SROAC-28 - The AC software shall accept AC task commands which initialize, activate, inhibit, or otherwise control the individual AC task software processes. These commands are: L4-SROAC-35 - Enable or Disable Component usage: RWA, CSS, IRU, STR, IRU in Attitude Determination. L4-SROAC-71 - If more than one wheel fails the FDIR test, actuator selection shall be selected to thrusters. L4-SROAC-97 - ACS FSW shall maintain attitude knowledge within the main flight computer, downlinking this data as part of the wideband data stream. L4-SROAC-122 - The ACS mode shall transition from Target Pointing Mode by ground command or automatically to Acquisition/Coarse Sun Pointing, Rate Nulling Submode when one or more of the following occur: Kalman Filter divergence. L4-SROAC-123 - The ACS mode shall transition from Target Pointing Mode by ground command or automatically to Acquisition/Coarse Sun Pointing, Rate Nulling Submode when one or more of the following occur: Loss of attitude reference L4-SROAC-124 - Transition from Science or Delta-V Mode to Acquisition/Coarse Sun Pointing Rate Nulling Submode shall be: (1) autonomous, via detection of Kalman Filter divergence or loss of attitude reference for a specified time, or (2) explicit, via ground-command. L4-SROAC-156 - The AD software shall accept a command to initialize the Kalman Filter. L4-SROAC-168 - AN software shall accept AN task commands which initialize, activate, inhibit, or otherwise control the individual AN task software processes. These commands are: • Initialize, • Enable/Disable telemetry packet generation, • DRAM table management commands, • Reset Telemetry Statistics.",6/16/05
ProjectA - TIM - 1661,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.2.4.2.2 inconsistent with RVM and fsw_test_08,2,"The EngCntrl SRS and requirement text included in the RVM and fsw_test_08 for EngCntrl SRS Requirement 3.2.4.2.2 do not agree . The test script and the RVM text for the ""Operation State"" is different than the SRS in that it discusses remaining in the Operation State until both a command is received to transition into the Bootloader Software and the start of a 1Hz control loop versus just receipt of the command. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.2.4.2.2: Operation State The Operational Software shall enter the Operation State upon completion of the Initialization State. The Operational Software shall remain in the Operation State until a command is received to transition into the Bootloader Software. Referenced Test Script Requirement 3.2.4.2.2: Operation State The Operational Software shall enter the Operation State upon completion of the Initialization State. The Operational Software shall remain in the Operation State until a command is received to transition into the Bootloader Software and the start of a 1Hz control loop. Referenced RVM Requirement 3.2.4.2.2: Operation State The Operational Software shall enter the Operation State upon completion of the Initialization State. The Operational Software shall remain in the Operation State until a command is received to transition into the Bootloader Software and the start of a 1Hz control loop.",6/16/05
ProjectA - TIM - 1660,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.2.3.2.3 inconsistent with RVM and fsw_test_01,2,"The EngCntrl SRS and the requirement text included in the RVM and fsw_test_01 for EngCntrl SRS Requirement 3.2.3.2.3 do not agree . The RVM and test script text for the ""Idle State"" is different than the SRS in that it discusses the Bootloader Software entering the Idle State upon completion of the ""Thruster Shutdown State"" versus the ""Engine Safe State"", and there are 3 criteria for remaining in the Idle State versus 2 criteria. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.2.3.2.3: Idle State The Bootloader Software shall enter the Idle State upon completion of the Engine Safe State. The Bootloader software shall remain in the Idle State until all of the following are satisfied: a) a command is received to transition into the Operational Software and b) the check sum of the Operational Software is validated. Referenced Test Script Requirement 3.2.3.2.3: Idle State The Bootloader Software shall enter the Idle State upon completion of the Thruster Shutdown State. The Bootloader software shall remain in the Idle State until all three of the following are satisfied: a a command is received to transition into the Operational Software b the check sum of the Operational Software is validated and c the start of a 1Hz control loop. Referenced RVM Requirement 3.2.3.2.3: Idle State The Bootloader Software shall enter the Idle State upon completion of the Thruster Shutdown State. The Bootloader software shall remain in the Idle State until all three of the following are satisfied: a) a command is received to transition into the Operational Software, b) the check sum of the Operational Software is validated and c) the start of a 1Hz control loop.",6/15/05
ProjectA - TIM - 1659,EngCntrl Test Scripts: RVM and Test Scripts missing EngCntrl SRS v1.2 requirement 3.2.13,2,The RVM and test scripts do not include requirement 3.2.13 of the EngCntrl SRS. There is no indication in the RVM or the Test Script that this requirement was verified. Referenced EngCntrl SRS Requirement 3.2.13: Operational Software Function The function of the Operational software shall be to control the operation of the Engine based on commands from the spacecraft.,6/15/05
ProjectA - TIM - 1658,EngCntrl Test Scripts: RVM and Test Scripts missing EngCntrl SRS v1.2 requirement 3.2.11,2,"The RVM and test scripts do not include requirement 3.2.11 of the EngCntrl SRS. There is no indication in the RVM or the Test Script that this requirement was verified. Referenced EngCntrl SRS Requirement 3.2.11: Bootloader Software Function The function of the Bootloader software shall be to initialize the EngCntrl Hardware from power on or from hardware reset, to safe the system and to allow for upload of a new version of the Operational Software.",6/15/05
ProjectA - TIM - 1657,EngCntrl Test Scripts: RVM and Test Scripts missing EngCntrl SRS v1.2 requirement 3.2.1,2,The RVM and the test scripts do not include requirement 3.2.1 of the EngCntrl SRS. Inspection and test may be required to fully verify the requirement. There is no indication in the RVM or the Test Script that this requirement was verified. Referenced EngCntrl SRS Requirement 3.2.1: Architecture Design The EngCntrl Flight Software shall consist of two separate software builds: Bootloader Software and Operational Software. Each software build shall be independent with the exception of shared configuration data.,6/15/05
ProjectA - TIM - 1656,EngCntrl Test Scripts: RVM and fsw_test_36 missing 11 parameters from EngCntrl SRS v1.2 requirement 3.10.5,2,"The RVM and fsw_test_36 do not include the following 11 parameters associated with requirement 3.10.5 of the EngCntrl SRS: 1.) Beam Current 2.) Accel Voltage 3.) Accel Current 4.) Discharge Voltage 5.) Discharge Current 6.) Neutralizer Voltage 7.) Neutralizer Current 8.) Main Plenum Tank Pressure 9.) Cathode Plenum Tank Pressure 10.) Single Plenum Mode Pressure 11.) Checksum There is no indication in the RVM or the Test Script that these 11 parameters were verified. Referenced EngCntrl SRS Requirement 3.10.5: Throttle Table The Operation software shall utilize a 112 record table to define the valid throttle levels for a thruster. Each throttle table record (entry) shall consist of twelve words to define the following: Beam Voltage, Beam Current, Accel Voltage, Accel Current, Discharge Voltage, Discharge Current, Neutralizer Voltage, Neutralizer Current, Main Plenum Tank Pressure, Cathode Plenum Tank Pressure, Single Plenum Mode Pressure and a Checksum of the record. Referenced Test Script Requirement 3.10.5: Throttle Table The Operation software shall utilize a 112 record table to define the valid throttle levels for a thruster. Each throttle table record (entry) shall consist of twelve words to define the following: Beam Voltage Referenced RVM Requirement 3.10.5: Throttle Table The Operation software shall utilize a 112 record table to define the valid throttle levels for a thruster. Each throttle table record (entry) shall consist of twelve words to define the following: Beam Voltage",6/14/05
ProjectA - TIM - 1655,EngCntrl Test Scripts: EngCntrl SRS v1.2 requirement 3.10.4.3 inconsistent with RVM and fsw_test_36,2,"The EngCntrl SRS requirement text does not agree with the requirement text in the RVM and fsw_test_36. The RVM and the test script text for the ""Pressure Setpoint Correction Lookup Tables"" requirement is different than the SRS in that it specifies utilization of ""two sets of three lookup tables"" versus ""two sets of lookup tables"". Also, the Requirement numbers do not agree. This leads to the question as to whether the approved SRS requirement was verified. Referenced EngCntrl SRS Requirement 3.10.4.3: Pressure Setpoint Correction Lookup Tables The Operational Software shall utilize two sets of lookup tables to adjust the raw setpoint pressure value for the two plenum tanks. Each lookup table shall be a 16 x 16 matrix used to correct the setpoint value based on the temperature of the associated FCD being utilized to control Xenon flow to a thruster. Referenced Test Script Requirement 3.10.4.4: Pressure Setpoint Correction Lookup Tables The Operational Software shall utilize two sets of three lookup tables to adjust the raw setpoint pressure value for the two plenum tanks. Each lookup table shall be a 16 x 16 matrix used to correct the setpoint value based on the temperature of the associated FCD being utilized to control Xenon flow to a thruster. Referenced RVM Requirement 3.10.4.4: Pressure Setpoint Correction Lookup Tables The Operational Software shall utilize two sets of three lookup tables to adjust the raw setpoint pressure value for the two plenum tanks. Each lookup table shall be a 16 x 16 matrix used to correct the setpoint value based on the temperature of the associated FCD being utilized to control Xenon flow to a thruster.",6/14/05
ProjectA - TIM - 1654,EngCntrl Test Scripts: RVM and fsw_test_35 missing 6 parameters from EngCntrl SRS v1.2 requirement 3.10.1,2,"The RVM and fsw_test_35, do not include the following 6 parameters associated with requirement 3.10.1 of the EngCntrl SRS v1.2: 1.) XFS Valve Mapping to XVD Valve Channel 2.) XFS Temperature Sensor Mapping to CPU Analog channel 3.) XFS Pressure Sensor Mapping to CPU Analog Channel 4.) PPU Supply Command Correction Values 5.) PPU Supply TLM Correction Values 6.) Default PPU Address There is no indication in the RVM or the Test Script that these 6 parameters were verified. Referenced EngCntrl SRS Requirement 3.10.1: Run-time Configuration Data The Operational software shall utilize a database of run-time parameters for the control of the various Engine Mode procedures. This database shall define the following: Grid Clear Duration Cathode Conditioning Heat 1 Duration Cathode Conditioning Heat 2 Duration Cathode Conditioning Cool 1 Duration Cathode Conditioning Cool 2 Duration Maximum number of Thruster Startup retries Thruster Startup Cathode Preheat Duration Neutralizer Stability Duration Discharge Stability Duration Maximum Thruster Startup Cathode Preheat Duration Minimum Thruster Startup Cathode Cool Duration XFS Single Plenum Trip Point (High) XFS Single Plenum Trip Point (Low) Time before going into Single Plenum Mode Maximum XFS Throttle Up Time Maximum XFS Throttle Down Time Software Error Counter Cathode Heater Open Current Cathode Heater Open Voltage Maximum Latch Valve Pulse Width Multiple Recycle Event Time Continuous Recycle Event Time Plenum Error Enable / Disable Main Plenum Initialization Time Cathode Plenum Initialization Time Number of PPU Samples to Average Number of XFS Samples to Average Clear Error History XFS Valve Mapping to XVD Valve Channel XFS Temperature Sensor Mapping to CPU Analog channel XFS Pressure Sensor Mapping to CPU Analog Channel PPU Supply Command Correction Values PPU Supply TLM Correction Values Default PPU Address",6/14/05
ProjectA - TIM - 1653,EngCntrl Test Scripts: RVM and Test Scripts missing EngCntrl SRS v1.2 requirements,3,"The RVM and test scripts do not include the following EngCntrl SRS requirements. Testing does not appear to be a viable verification method for these requirements; however these requirements need to be verified by some other means (e.g., inspection or analysis). 3.1.1: Inherited DS1 Software The EngCntrl Flight Software shall be constructed by re-engineering the DS1 EngCntrl Flight Software version 1.12. The DS1 Flight Software has been archived in the ProjectA Project library at the following located: https://partners-lib.jpl.nasa.gov/partners-lib/dscgi/ds.py/View/Collection-5481 3.1.2: ProjectA Engine Architecture The DS1 EngCntrl Flight software shall be re-engineered to enable control of the enhanced Engine used for the ProjectA Mission. 3.1.3: ProjectA EngCntrl Architecture The DS1 EngCntrl Flight software shall be re-engineered to enable control of the enhanced EngCntrl used for the ProjectA Mission. The memory map of the ProjectA EngCntrl is defined in the EngCntrl Hardware Software ICD (JPL D-27114). 3.1.4.1: Architecture The EngCntrl Flight Software shall be designed to run on the EngCntrl Flight Computer. The ProjectA EngCntrl Flight computer is based on the 80C86 processor, manufactured by Intersil. The operating frequency of the processor is 4Mhz. The flight computer contains 128k bytes of EEPROM and 256k bytes of SRAM. 3.1.4.2.1: Processor Utilization The EngCntrl software control loop design for non-background tasks shall comply with the processor utilization margins defined in the ProjectA Project Technical Margin Management Plan (JPL D-25863). The margin requirements are: 40% at PDR, 33% at CDR, 25% at ARR and 20% for launch and flight. The background tasks are those tasks that are performed in the Idle State of the Flight Software. 3.1.4.2.2: Memory Utilization The EngCntrl software memory utilization shall comply with the memory utilization margins defined in the ProjectA Project Technical Margin Management Plan (JPL D-25863). The margin requirements are: 40% at PDR, 30% at CDR, 20% at ARR and 10% for launch and flight. These margins apply both to EEPROM and SRAM. 3.1.5.1: Language The EngCntrl Flight Software shall be implemented in the ANSI-C programming language. 3.1.5.2: Compiler The EngCntrl Flight Software shall be compiled with a C compiler capable of producing native 80C86 executable binaries. 3.1.5.3: Implementation Constraints The EngCntrl Flight software shall not be implemented with dynamic memory allocation. All memory storage shall be fixed and initialized.",6/14/05
ProjectA - TIM - 1650,C&DH Traceability Analysis: L3-SFS-383 has no associated L3 or L4 traces,3,"L3-SFS-383 does not have any associated L3 or L4 traces. L3-SFS-383 states: ""The CDH shall support commanding of EPS functions and collection of telemetry from the PDU, HVEA, Battery and Solar Array Drive Electronics (SADE)."" L3-SFS-383 is missing traces to C&DH SRS requirements to address the C&DH functionality to ""support commanding of EPS functions and collection of telemetry from the PDU, HVEA, Battery and Solar Array Drive Electronics (SADE)"". L3-SFS-383: The CDH shall support commanding of EPS functions and collection of telemetry from the PDU, HVEA, Battery and Solar Array Drive Electronics (SADE).",5/27/05
ProjectA - TIM - 1648,C&DH Traceability Analysis: L3-SFS-682 not satisfied by the existing L3 and L4 traces,3,"[L3-SFS-682] is a high level requirement indicating C&DH will conform with the ProjectA State and Subsystem Mode Definition Design Note. [L3-SFS-681] is the only direct link to [L3-SFS-682]. [L3-SFS-681] has incoming links from from [L4-SROBC-32] and [L4-SROSU-32]. Therefore, these links were assessed towards the satisfaction of [L3-SFS-682] as well. Although [L4-SROBC-32], [L4-SROSU-32], [L3-SFS-681] constitute valid traces to [L3-SFS-682], these requirements only address boot, SuROM Diagnostic (Monitor), and Normal Modes. Therefore, [L3-SFS-682] is not satisfied by the linked requirements. Referenced Requirements Artifact: DOORS database dated 6/9/05 [L3-SFS-682] The C&DH subsystem shall support all modes, states and functions specified in the ProjectA State and Subsystem Mode Definition Design Note DN-ProjectA-SE-001. Requirement Linked to [L3-SFS-682] [L3-SFS-681] The C&DH modes shall be referred to as boot (initializing) and normal (initialized/functioning). Requirements linked to [L3-SFS-681]: [L4-SROBC-32] If sufficient RAD-6000 and LIO processing resources are operable, restart operations shall progress to completion in SuROM Diagnostic (Monitor) Mode or Normal Mode. [L4-SROSU-32] If sufficient RAD6000 and LIO processing resources are operable, restart operations shall progress to completion in SuROM Diagnostic (Monitor) Mode or Normal Mode.",5/27/05
ProjectA - TIM - 1647,C&DH Traceability Analysis: L3-SFS-2263 has no associated L3 or L4 traces,3,"L3-SFS-2263 does not have any associated L3 or L4 traces. L3-SFS-2263 states: ""The C&DH shall reject a CLTU if an error is detected during receipt."" L3-SFS-2263 is missing traces to C&DH SRS requirements to address the C&DH functionality to ""reject a CLTU if an error is detected during receipt."" L3-SFS-2263: The C&DH shall reject a CLTU if an error is detected during receipt.",5/27/05
ProjectA - TIM - 1645,C&DH Traceability Analysis: L3-SFS-679 has no associated L3 or L4 traces,3,"L3-SFS-679 does not have any associated L3 or L4 traces. L3-SFS-679 states: ""The C&DH shall accept Command Link Transfer Unit (CLTU) data from the ground per the format described in the FGICD."" L3-SFS-679 is missing traces to C&DH SRS requirements to address the C&DH functionality to accept Command Link Transfer Unit (CLTU) data from the ground per the format described in the FGICD. L3-SFS-679: The C&DH shall accept Command Link Transfer Unit (CLTU) data from the ground per the format described in the FGICD.",5/27/05
ProjectA - TIM - 1640,C&DH Traceability Analysis: L3-SFS-666 has no associated L3 or L4 traces,3,"L3-SFS-666 does not have any associated L3 or L4 traces. L3-SFS-666 states: ""The C&DH subsystem shall provide a dedicated RS-422 interface and be able to receive data from the GRaND at a rate of 19.2 kbps."" L3-SFS-666 is missing traces to C&DH SRS requirements to address the C&DH systems functionality to ""provide a dedicated RS-422 interface and be able to receive data from the GRaND at a rate of 19.2 kbps"" L3-SFS-666: The C&DH subsystem shall provide a dedicated RS-422 interface and be able to receive data from the GRaND at a rate of 19.2 kbps.",5/27/05
ProjectA - TIM - 1639,C&DH Traceability Analysis: L3-SFS-664 not satisfied by the existing L3 and L4 requirements trace,3,"[L3-SFS-664] deals mainly with C&DH RS-422 and MIL-STD-1553 B serial interfaces. Several L4 UPL FSW SRS requirements and [L3-SFS-508] are linked to [L3-SFS-664]; however, [L3-SFS-664] appears to be limited to hardware. If [L3-SFS-664] was intended to flow down to the L4 FSW requirements, then it seems unsatisfied, since UPL is not the only FSW element associated with RS-422 and MIL-STD-1553 B serial interfaces. Referenced Requirements Artifact: DOORS database dated 6/9/05 [L3-SFS-664] The C&DH subsystem shall provide hardware interfaces for the collection, storage and transmission of all Flight System telemetry and data using either RS-422 serial interfaces or MIL-STD-1553 B serial interfaces to pass data from the components to the C&DH. Requirements Linked to [L3-SFS-664]: [L4-SRUP-211] The serial data protocol shall minimize the loss of data during transfer. [L4-SRUP-210] The serial interface shall be full duplex with parity check. [L4-SRUP-324] The Uplink FSW shall maintain a status message containing the following parameters [L4-SRUP-325] Timestamp. [L4-SRUP-326] Status RT ID. [L4-SRUP-327] Active Select State. [L4-SRUP-328] Uplink Command Count. [L4-SRUP-329] Uplink Transmitter Select. [L4-SRUP-330] Uplink CCW Boot Control. [L4-SRUP-331] FP Log Entry Count. [L4-SRUP-332] OBC Monitor Status. [L4-SRUP-333] OBC WDT Status. [L4-SRUP-334] Uplink Reset Count. [L4-SRUP-335] Command Timeout. [L4-SRUP-336] 1553 Status. [L3-SFS-508] The Engine shall collect and provide operating telemetry to the spacecraft. Requirements Linked to [L3-SFS-508]: NONE",5/27/05
ProjectA - TIM - 1638,C&DH Traceability Analysis: L3-SFS-2552 has no associated L3 or L4 traces,3,"L3-SFS-2552 does not have any associated L3 or L4 traces. L3-SFS-2552 states: ""The C&DH subsystem shall provide the MOS profiles of clock oscillator frequency versus temperature for both the CEU A and CEU B spacecraft clocks."" L3-SFS-2552 is missing traces to C&DH SRS requirements to address the C&DH systems functionality to ""provide the MOS profiles of clock oscillator frequency versus temperature for both the CEU A and CEU B spacecraft clocks."" L3-SFS-2552: The C&DH subsystem shall provide the MOS profiles of clock oscillator frequency versus temperature for both the CEU A and CEU B spacecraft clocks.",5/27/05
ProjectA - TIM - 1637,C&DH Traceability Analysis: L3-SFS-2549 has no associated L3 or L4 traces,3,"L3-SFS-2549 does not have any associated L3 or L4 traces. L3-SFS-2549 states: ""The C&DH subsystem shall provide the capability to measure the temperature of the spacecraft clock oscillator and downlink it to the ground at a rate of at least one time per minute."" L3-SFS-2549 is missing traces to C&DH SRS requirements to address the C&DH systems ""capability to measure the temperature of the spacecraft clock oscillator and downlink it to the ground at a rate of at least one time per minute"". L3-SFS-2549: The C&DH subsystem shall provide the capability to measure the temperature of the spacecraft clock oscillator and downlink it to the ground at a rate of at least one time per minute.",5/27/05
ProjectA - TIM - 1636,C&DH Traceability Analysis: L3-SFS-659 has no associated L3 or L4 traces,3,"L3-SFS-659 does not have any associated L3 or L4 traces. L3-SFS-659 states: ""The C&DH shall be configured to receive uplink data at any time."" L3-SFS-659 is missing traces to C&DH SRS requirements to address the C&DH configuration ""to receive uplink data at any time"". L3-SFS-659: The C&DH shall be configured to receive uplink data at any time.",5/27/05
ProjectA - TIM - 1635,C&DH L3 - L4 Traceability Analysis: L3-SFS-658 not satisfied by the existing L3 requirements trace,3,"The L3 requirement, [L3-SFS-344], is the only requirement linked to [L3-SFS-658]; however, [L3-SFS-344] does not appear to be a valid trace to [L3-SFS-658]. In addition, [L3-SFS-658] seems to be a negative requirement. As such, it is unclear which subsystem is responsible for requiring more than one command before allowing both OBCs to be turned off. This functionality may be part of the OBC C&DH FSW design, or possibly, this is part of the system-level fault protection handled by the UPL FSW. Referenced Requirements: Artifact: DOORS database dated 6/9/05 [L3-SFS-658] No single hardware or software command to the C&DH shall result in both OBCs being turned off. Requirements Linked to [L3-SFS-658]: [L3-SFS-344] The EPS shall provide fused, unswitched, unregulated bus power to the CEU critical inputs, and ACE critical inputs. Requirements Linked to [L3-SFS-344]: NONE",5/27/05
ProjectA - TIM - 1634,C&DH Traceability Analysis: L3-SFS-657 has no associated L3 or L4 traces,3,"L3-SFS-657 does not have any associated L3 or L4 traces. L3-SFS-657 states: ""Every critical configuration command shall have two ways to verify configuration based on hardware or software telemetry."" L3-SFS-657 is missing traces to C&DH SRS requirements to address the C&DH functionality in verifying configuration command based on hardware or software telemetry. L3-SFS-657: Every critical configuration command shall have two ways to verify configuration based on hardware or software telemetry.",5/27/05
ProjectA - TIM - 1633,C&DH Traceability Analysis: L3-SFS-2255 has no associated L3 or L4 traces,3,"L3-SFS-2255 does not have any associated L3 or L4 traces. L3-SFS-2255 states: ""The C&DH shall support patching/loading via normal command paths (i.e. not limited to test ports). "" L3-SFS-2255 is missing traces to C&DH SRS requirements to address the C&DH support of ""patching/loading via normal command paths (i.e. not limited to test ports)"". L3-SFS-2255: The C&DH shall support patching/loading via normal command paths (i.e. not limited to test ports).",5/27/05
ProjectA - TIM - 1632,C&DH Traceability Analysis: L3-SFS-2254 not satisfied by the existing L4 requirements trace,3,"[L3-SFS-2254] requires the C&DH to ""support patching/loading multiple flight software images."" Although, there are several ACE and Uplink Boot PROM SRS requirements linked to [L3-SFS-2254], there are no requirements linked from the OBC C&DH SRS. Referenced Requirements Artifact: DOORS database dated 6/9/05 [L3-SFS-2254] The C&DH shall support patching/loading multiple flight software images in the key engineering processors (UL, OBC, ACE). Requirements Linked to [L3-SFS-2254]: [L4-SRAUB-30] The Boot/Monitor shall support a Copy function which copies from Instruction space or Data space to EEPROM. [L4-SRAUB-29] The Boot/Monitor shall support a Compute CRC function that computes a 16-bit truncated CCITT16] CRC for the specified memory range with the result sent to the UART. [L4-SRAUB-28] The Boot/Monitor shall support an Initialize function to load areas of Instruction and Data memory with specific values. [L4-SRAUB-27] The Boot/Monitor shall provide the capability to begin execution at a specified address. [L4-SRAUB-26] The Boot/Monitor shall provide the capability to Continue execution at the point from which the Monitor program was called. [L4-SRAUB-25] The Boot/Monitor shall provide the capability to modify the contents of locations in input/output (I/O) space as defined in the UT69R000] RadHard Microcontroller Data sheet. [L4-SRAUB-24] The Boot/Monitor shall provide the capability to modify the contents of all UT69R000] registers as defined in the UT69R000] RadHard Microcontroller Data sheet. [L4-SRAUB-23] The Boot/Monitor shall provide the capability to modify the contents of memory locations in SRAM and EEPROM as defined in the UT69R000] RadHard Microcontroller Data sheet. [L4-SRAUB-22] The Boot/Monitor shall provide the capability to examine and report the contents of locations in input/output (I/O) space as defined in the UT69R000] RadHard Microcontroller Data sheet. [L4-SRAUB-21] The Boot/Monitor shall provide the capability to examine and report the contents of all UT69R000] registers as defined in the UT69R000] RadHard Microcontroller Data sheet. [L4-SRAUB-20] The Boot/Monitor shall provide the capability to examine and report the contents of memory locations in PROM, SRAM, and EEPROM as defined in the UT69R000] RadHard Microcontroller Data sheet. [L4-SRAUB-5] Multiple copies of the Boot Function table shall exist at different pre-determined locations in EEPROM. [L4-SRAUB-10] The Boot software shall provide the capability to copy data from Data Memory to Instruction Memory. [L4-SRAUB-11] The Boot software shall provide the capability to copy data from Data Memory to Data Memory. [L4-SRAUB-12] The Boot software shall provide the capability to initialize specified ranges of Data Memory to a specified value. [L4-SRAUB-13] The Boot software shall provide the capability to initialize specified ranges of Instruction Memory to a specified value. [L4-SRAUB-14] The Boot software shall provide the capability to set the execution start address of the Application Software to a specified value. [L4-SRAUB-15] The Boot software shall provide the capability to compute, record and validate a CRC for specified ranges of Data Memory. [L4-SRAUB-16] The Boot software shall provide the capability to compute, record and validate a CRC for specified ranges of Instruction Memory.",5/27/05
ProjectA - TIM - 1631,C&DH Traceability Analysis: L3-SFS-2253 has no associated L3 or L4 traces,3,"L3-SFS-2253 does not have any associated L3 or L4 traces. L3-SFS-2253 states: ""The C&DH shall support the reprogramming of any reprogrammable hardware and have the patches survive a computer reset (with the exception of OBC, ACE, Uplink Card or other components SUROM) either by loading a non executing FSW image (e.g. EEPROM) on a controlling computer or by loading a powered but non-controlling computer. Specifically for the spacecraft: OBC, ACE, Uplink Card, EngCntrl, STKR. For the payload: FC, VIR, and GRaND."" L3-SFS-2253 is missing traces to C&DH SRS requirements to address the C&DH support of the reprogramming of any reprogrammable hardware and having the patches survive a computer reset. L3-SFS-2253: The C&DH shall support the reprogramming of any reprogrammable hardware and have the patches survive a computer reset (with the exception of OBC, ACE, Uplink Card or other components SUROM) either by loading a non executing FSW image (e.g. EEPROM) on a controlling computer or by loading a powered but non-controlling computer. Specifically for the spacecraft: OBC, ACE, Uplink Card, EngCntrl, STKR. For the payload: FC, VIR, and GRaND.",5/27/05
ProjectA - TIM - 1630,C&DH Traceability Analysis: L3-SFS-1014 not satisfied by the existing L4 requirements trace,3,"L3-SFS-1014 does not appear to be satisfied by the 8 traced C&DH requirements (L4-SROBC-203, L4-SROBC-204, L4-SROBC-208 ,L4-SROBC-210, L4-SROBC-212, L4-SROBC-213, L4-SROBC-214, and L4-SROBC-216). L3-SFS-1014 states: ""The Spacecraft Engine processor shall provide the following FP features as a minimum: watchdog time-out (processor reset), memory verification/checksums of select memory locations, and communication link outages (no Comm with Spacecraft C&DH)."" All of the 8 traced requirements address FP Features; However none of the traced C&DH requirements address a watchdog time-out (processor reset), or communication link outages (no Comm with Spacecraft C&DH). L3-SFS-1014: The Spacecraft Engine processor shall provide the following FP features as a minimum: watchdog time-out (processor reset), memory verification/checksums of select memory locations, and communication link outages (no Comm with Spacecraft C&DH). All Traced Requirements: L4-SROBC-203: Flight Software shall maintain running calculations of essential variables (i.e., checksum) to be used for verification of a good table load prior to table use. L4-SROBC-204: Flight Software shall initialize and maintain an 8-bit EXCLUSIVE-OR checksum for the currently selected table. L4-SROBC-208: Flight Software shall accept and execute a COMMIT_TABLE_WITH_CHECKSUM command that compares the on-board Checksum with the expected Checksum specified in the command and performs the following based on the comparison results: L4-SROBC-210: If the specified Checksum and the on-board Checksum are not equal, the Flight Software shall reject the new or edited table loads, increment an error counter, generate a significant event message, calculate a CRC for each 4K-bytes of the load (or for the complete table if it is less that 4K-bytes), and transmit the CRCs in telemetry for ground analysis. L4-SROBC-212: Flight Software shall maintain a ground-definable checksum flag for each table. When true, the Flight Software calculates and stores the table checksum upon commitment of any uploaded change to the table. The Software Manager task indicates to the Checksum task to disable checksum checking a table undergoing commitment. L4-SROBC-213: Flight Software shall maintain a ground-definable jam-loadable flag for each table. When true (that is, jammable), the Flight Software immediately commits table changes to memory. When false (that is, non-jammable), the Flight Software ""handshakes"" with the table's assigned application task indicating that a table is ready to commit. The application task indicates back to Software Manager when commitment may take place. L4-SROBC-214: The execution of a table commit operation shall disable subsequent commit operation to that table until the table is again selected. L4-SROBC-216: Flight Software shall accept and execute an RESET_TABLE_OPERATIONS command that terminates the current table load/edit session without affecting the onboard versions of the currently selected table, regardless of whether a table has been selected.",5/26/05
ProjectA - TIM - 1629,C&DH Traceability Analysis: L3-SFS-972 not satisfied by the existing L4 requirements trace,3,"There appears to be several L4 OBC C&DH requirements linked incorrectly to [L3-SFS-972]. [L4-SROBC-301], [L4-SROBC-297], and [L4-SROBC-296] are specific to DRAM; whereas, [L3-SFS-972] is limited to ""static"" memory. Referenced Requirements Artifact: DOORS database dated 6/9/05 [L3-SFS-972] The Spacecraft shall perform memory scrub of static memory at a ground selectable rate, to detect and correct single bit flEngine. Requirements Linked to [L3-SFS-972]: [L4-SROBC-295] Flight Software shall provide background memory scrubbing of the SRAM in the Flight Computer [L4-SROBC-296] Flight Software shall provide background memory scrubbing of the triply redundant Error Detection and Correction (EDAC) DRAM on the memory card. [L4-SROBC-297] The DRAM memory checks shall be capable of detecting multiple errors in the DRAM. [L4-SROBC-299] Flight Software shall provide a command to enable scrubbing of SRAM and DRAM with a parameter specifying scrub rate. [L4-SROBC-300] Flight Software shall provide a command to disable the scrubbing of SRAM and DRAM. [L4-SROBC-301] Flight Software shall provide a command to restart the scrubbing of DRAM which will cause MS to start scrubbing from the first DRAM segment, and reset its housekeeping telemetry associated with DRAM scrubbing. [L4-SROBC-305] The OBC flight software shall provide a mechanism to verify the contents of key static memory areas to support single event upset detection in EEPROM and SRAM (code and static table data). [L4-SROBC-317] The OBC flight software shall provide a handshake mechanism with the software manager task for loading static tables without generating false checksum errors. [L3-SFS-943] The Spacecraft shall provide memory protection for the prescribed operating environments (radiation hardening/mitigation). Requirements Linked to [L3-SFS-943]: [L4-SROBC-305] The OBC flight software shall provide a mechanism to verify the contents of key static memory areas to support single event upset detection in EEPROM and SRAM (code and static table data). [L4-SROBC-308] The OBC flight software shall provide a command to re-compute checj ksums for each of the following memory types: [L4-SROBC-309] EEPROM [L4-SROBC-310] Code segments in RAM [L4-SROBC-311] All static tables in RAM [L4-SROBC-312] The OBC flight software shall provide a command to enable or disable the checksumming of the following memory types: [L4-SROBC-313] All memory areas [L4-SROBC-314] EEPROM [L4-SROBC-315] Code segments in SRAM [L4-SROBC-316] Static tables in SRAM.",5/26/05
ProjectA - TIM - 1628,C&DH Traceability Analysis: L3-SFS-971 not satisfied by the existing L4 requirements trace,3,"[L3-SFS-971], does not appear to be satisfied by the linked OBC C&DH SRS requirements, [L4-SROBC-291] and [L4-SROBC-292], and the ACS SRS requirement, [L4-SROAC-4]. The two linked C&DH SRS requirements address monitoring the status of critical software tasks; while, the linked ACS SRS requirement is specific to ""latched FDIR status telemetry."" However, none of the linked requirements address responding to anomalies with predefined corrective actions. Referenced Requirements: Artifact: DOORS database dated 6/9/05 [L3-SFS-971] The Spacecraft shall monitor the status of critical software tasks and on anomaly, respond with predefined corrective actions. Requirements Linked to [L3-SFS-971]: [L4-SROBC-291] Flight Software shall generate an OBC health status telemetry packet consisting of an OBC state (healthy, reset, fault), the status of telemetry monitoring (enabled/disabled), and shall be timestamped. [L4-SROBC-292] The Flight Software shall send an OBC health status telemetry packet to the Uplink Card at 1 Hz. [L4-SROAC-4] ACS software shall provide a latched FDIR status telemetry that reflects the FDIR status since last reset or until cleared by ground command.",5/26/05
ProjectA - TIM - 1627,C&DH Traceability Analysis: L3-SFS-909 not satisfied by the existing L4 requirements trace,3,"There are several links from the OBC C&DH, OBC SuROM, and OBC ACS SRSs to [L3-SFS-909]; however, these requirements do not seem to satisfy [L3-SFS-909]. This may be partly due to the wording of [L3-SFS-909]. Presumably, ""component reset"" conveys ""OBC re-boot,"" and ""switch"" conveys ""OBC swap."" No references to the term ""Phoenix Mode"" were found in any of the L4 SRSs. If [L3-SFS-909] is applicable to an OBC swap, then it would seem that UPL would support this functionality as well. However, there are no L4 UPL SRS requirements linked to L3-SFS-909. Referenced Requirements: Artifact: DOORS database dated 6/9/05 [L3-SFS-909] The Flight System shall initialize to a safe state following initial powerup, component reset or switch or recovery from Phoenix mode. Safe State: prevent powering previously failed unit, use of actuators while mated, monitor separation and initiate separation sequence and transition to Safe Mode when appropriate. Requirements Linked to [L3-SFS-909]: [L4-SROAC-16] After initialization is complete, the ACS software shall respond to ACS Commands. [L4-SROAC-15] When the C&DH software indicates that a power-on or re-boot has occurred, selected ACS FDIR processing shall be initialized as disabled. [L4-SROAC-14] When the C&DH software indicates that a power-on or re-boot has occurred, all AC statistics shall be reset to zero. [L4-SROSU-4] Flight Software shall accept an initialization parameter block via ground command, including Spacecraft ID (Default=0x75), VCDU RS Code(Default=0x4D47), VCDU Size (Default=1084), Downlink Card VCDU Rate (Default=1 per second), Uplink Card VCDU Rate (Default= 1 per 4 seconds), Time (Default=0), with no Insert Zone, and RT-Primary, where the Spacecraft ID and RT-Primary values are stored in EEPROM memory. [L4-SROBC-3] Flight Computer startup applications shall place the spacecraft into a safe system configuration without any ground intervention following power-up or a temporary power bus fault (cold-boot). [L4-SROBC-4] Flight Software shall reset/restart and initialize all Flight Computer hardware components on the processor board to a known state. [L4-SROBC-272] Flight Software shall collect the following statistics data associated with each monitor point: [L4-SROBC-278] time_of_last_reset (Note: [L4-SROBC-272] not linked to [L3-SFS-909] directly)",5/26/05
ProjectA - TIM - 1626,C&DH Traceability Analysis: L3-SFS-878 not satisfied by the existing L4 requirements trace,3,"L3-SFS-878 does not appear to be satisfied by the 5 traced C&DH requirements (L4-SROBC-210, L4-SROBC-218, L4-SROBC-219, L4-SROBC-227, and L4-SROBC-228). L3-SFS-878 states: ""The Flight Software, on command from MOS, shall provide a directory listing entry consisting of the name, CRC, and data size of the file."" All of the mapped C&DH requirement address the CRC; however, none of the C&DH SRS mapped requirements address the obtaining a directory listing with the name, CRC, and data size of the file. L3-SFS-878: The Flight Software, on command from MOS, shall provide a directory listing entry consisting of the name, CRC, and data size of the file. All Traced Requirements: L4-SROBC-210: If the specified Checksum and the on-board Checksum are not equal, the Flight Software shall reject the new or edited table loads, increment an error counter, generate a significant event message, calculate a CRC for each 4K-bytes of the load (or for the complete table if it is less that 4K-bytes), and transmit the CRCs in telemetry for ground analysis. L4-SROBC-218: Flight Software shall accept and execute a COMPUTE_CRC command that computes a CRC for a specified memory range and returns the value in housekeeping telemetry. L4-SROBC-219: Flight Software shall accept and execute a START_MEMORY_DWELL command that continuously captures and telemeters the contents of specified processor address locations. L4-SROBC-227: Flight Software shall accept and execute a COMPUTE_CRC_RANGE command that computes a CRC for a specified memory range and returns the value in event with the maximum number of events not exceeds 20. L4-SROBC-228: Flight Software shall accept and execute a COMPUTE_CHECKSUM command that computes a CHECKSUM for a specified memory range and returns the value in an event message with the maximum number of events not to exceed 20.",5/26/05
ProjectA - TIM - 1625,C&DH Traceability Analysis: L3-SFS-877 not satisfied by the existing L4 requirements traces,3,"L3-SFS-877 does not appear to be satisfied by the 3 traced C&DH requirements (L4-SROBC-218, L4-SROBC-222, and L4-SROBC-223) and the 1 VML requirement (L4-SRVML-19). L3-SFS-877 states: ""The Flight Software shall provide the capability to read out a list of the stored sequence and their sizes. ""None of the C&DH SRS mapped requirements address ""a list of the stored sequence and their sizes""; However the mapped VML SRS requirement (L4-SRVML-19) does discuss a file buffer sequence. Also, the 3 traced C&DH requirements (L4-SROBC-218, L4-SROBC-222, and L4-SROBC-223) do not appear to be related to L3-SFS-877. L3-SFS-877: The Flight Software shall provide the capability to read out a list of the stored sequence and their sizes. All Traced Requirements: L4-SROBC-218: Flight Software shall accept and execute a COMPUTE_CRC command that computes a CRC for a specified memory range and returns the value in housekeeping telemetry. L4-SROBC-222: Flight Software shall telemeter, in a single CCSDS packet, the combined MEMORY_DWELL data contents at a rate of no faster than one packet per second. L4-SROBC-223: The time stamp associated with each MEMORY_DWELL packet shall be the sample time associated with the first data sample of the packet. L4-SRVML-19: VM Sequence Memory VM Task shall provide capability for VMLFC to read a sequence from a file buffer and to notify Ground System on anomalies on that read.",5/26/05
ProjectA - TIM - 1624,C&DH Traceability Analysis: L3-SFS-872 not satisfied by the existing L4 requirements trace,3,"L3-SFS-872 does not appear to be satisfied by the 1 traced C&DH requirement (L4-SROBC-224)and the 1 traced VML requirement. L3-SFS-872 states: ""The spacecraft shall provide 4 Mbytes of sequence and data storage capacity in DRAM for MOS use and 200 Kbytes in SRAM for the VMLFC application code."" Neither of the L4 requirements address data storage capacity in DRAM for MOS or SRAM for the VMLFC application code. L3-SFS-872: The spacecraft shall provide 4 Mbytes of sequence and data storage capacity in DRAM for MOS use and 200 Kbytes in SRAM for the VMLFC application code. All Traced Requirements: L4-SROBC-224: Flight Software shall support up to 64 distinct MEMORY_DWELL addresses. L4-SRVML-20: VM Memory Buffer VM Task shall provide capability of dumping information regarding the file buffers residing in DRAM request.",5/26/05
ProjectA - TIM - 1623,C&DH Traceability Analysis: L3-SFS-837 not satisfied by the existing L4 requirement trace,3,"L3-SFS-837 does not appear to be satisfied by the 1 traced C&DH requirement (L4-SROBC-152). L3-SFS-837 states: ""The Flight Software shall support use of the spacecraft's Virtual Channel Frame Count (VCFC) for retransmitted frames shall be the same as the VCFC used for playback of the same frame."" Requirement L4-SROBC-152 addresses retransmitting frames; however, L4-SROBC-152 does not address use of the Virtual Channel Frame Count (VCFC) for retransmitted frames to be the same as the VCFC used for playback of the same frame. L3-SFS-837: The Flight Software shall support use of the spacecraft's Virtual Channel Frame Count (VCFC) for retransmitted frames shall be the same as the VCFC used for playback of the same frame. All Traced Requirements: L4-SROBC-152: The OBC-C&DH software shall accept and execute a RETRANSMIT_DATASETS command, which begins retransmission of the specified DATASET for specified Virtual Recorders.",5/26/05
ProjectA - TIM - 1622,C&DH Traceability Analysis: L3-SFS-754 not satisfied by the existing L4 requirements trace,3,"L3-SFS-754 does not appear to be satisfied by the existing C&DH, Uplink, ACS, and VML requirements that are linked in the June 9, 2005 DOORS DB. L3-SFS-754 states: ""General Flight Software telemetry packets shall be timed tagged to a minimum resolution of 1.0 seconds with respect to spacecraft time."" All of the linked requirements deal with telemetry; however none of the traced requirements specifically address the time tagging of telemetry packets to a minimum resolution of 1.0 seconds with respect to spacecraft time. Note: L4 requirements links to L3-SFS-754 changed significantly after receipt of the DOORS DB on April 21, 2005. L3-SFS-754: General Flight Software telemetry packets shall be timed tagged to a minimum resolution of 1.0 seconds with respect to spacecraft time. All Traced Requirements from the June 9, 2005 DOORS DB: L4-SROAC-49 The AC software shall maintain statistics on ACS telemetry received, including the total number of packets received. L4-SRVML-12 VM Global Variable Telemetry VM Task shall provide interface storage and transmission of the VMLFC global variables in sequences/blocks being executed. L4-SRVML-11 VML Channeled Telemetry VM Task shall provide interface for VML internal Telemetry storage and transmission via Software Bus. L4-SRUP-325 Timestamp. L4-SROAC-94 All AC telemetry shall be time-tagged with the on-board system time. L4-SROBC-250 Thermal Control Software shall provide sensor sampling and control response rates at 1 Hz for all applicable heater units. L4-SROBC-251 Thermal Control Software shall be capable of performing the temperature reading processing for all thermal data points at 1 Hz.",5/26/05
ProjectA - TIM - 1621,C&DH Traceability Analysis: L3-SFS-753 not satisfied by the existing L4 requirements trace,3,"L3-SFS-753 does not appear to be satisfied by the 9 linked C&DH requirements (L4-SROBC-99, L4-SROBC-100 - L4-SROBC-105, L4-SROBC-107, and L4-SROBC-223). L3-SFS-753 states: ""The Flight Software shall maintain time and distribute to tasks for time stamping telemetry, managing stored command sequences, and in support of attitude and navigation."" The mapped requirements only address the capability of maintaining time and distributing to tasks for managing stored commands, but do not address maintaining time and distributing to tasks for time stamping telemetry, or in support of attitude and navigation. However the requirements in support of attitude and navigation should be found within the ACS SRS and not with the C&DH SRS. Maintaining time and distributing to tasks for time stamping telemetry should be found within the C&DH SRS. L3-SFS-753: The Flight Software shall maintain time and distribute to tasks for time stamping telemetry, managing stored command sequences, and in support of attitude and navigation. All Traced Requirements: L4-SROBC-99: Flight Software shall accept and execute a JAM_SECONDS command to jam the seconds field of the spacecraft clock. The JAM_SECONDS command, received from the ground, sets the seconds field of the spacecraft clock to the value in the command. L4-SROAC-163: The AN software shall send ephemeris data to AC task every commandable seconds between 30 to 300 seconds (default is 300 seconds) after enabled by AC task. L4-SROBC-223: The time stamp associated with each MEMORY_DWELL packet shall be the sample time associated with the first data sample of the packet. L4-SRUP-197: The Uplink FSW shall evenly space the longer ""seconds"" over the entire one hundred second period. L4-SRUP-196: The Uplink FSW shall modify the integer value with a fractional component that specifies the number of ticks to add over a 100 second period. L4-SRUP-195: The Uplink FSW shall calculate an integer 1 Hz signal timing count, segmenting the count into evenly spaced integer values and applying these to every one of the 2 KHz intervals within one second. L4-SRUP-194: The Uplink FSW shall accept an Open Loop Command that specifies the number of Master Clock ticks that equal one second. L4-SRUP-192: The Uplink FSW shall accept open loop commands using commanded intervals. L4-SRUP-191: The Uplink FSW shall support an open loop mode of operation by loading a specified hardware divider with the number of Master Clock ticks specified to equal one second. L4-SROBC-100: Flight Software shall send the time of the next 1 Hz pulse to the Framing Camera/VIR instrument via the 1553 bus, prior to the 1553 slot allocated to this function (currently at 0 milliseconds). L4-SROBC-101: Flight Software shall maintain sub-seconds in spacecraft time to 5 milliseconds updated by the 1553 device driver. L4-SROBC-102: Flight Software shall make available, on demand, the current spacecraft time via library functions to all flight software applications. L4-SROBC-103: Flight Software shall provide 1 Hz and 10 Hz Interrupt Service Routines (ISRs) (generated from the uplink card 1 Hz and 10 Hz pulses) that are used to schedule software operations. L4-SROBC-104: In the event that the 1 Hz pulse from the uplink card is unavailable, the Flight Software shall provide a backup interrupt to schedule software operations. L4-SROBC-105: In the event that the 10 Hz pulse from the uplink card is unavailable, the Flight Software shall provide a backup interrupt to schedule software operations. L4-SROBC-107: Flight Software shall set its seconds to the value passed by the Uplink FSW at boot. L4-SROAC-94 All AC telemetry shall be time-tagged with the on-board system time.",5/26/05
ProjectA - TIM - 1620,C&DH Traceability Analysis: L3-SFS-744 not satisfied by the existing L4 requirements trace,3,"L3-SFS-744 does not appear to be satisfied by the one C&DH requirement (L4-SROBC-139). L3-SFS-744 states: ""The Flight Software shall report the amount of remaining unallocated telemetry capacity upon command."" L4-SROBC-139 only discusses the capability of providing ground commands to modify the memory quota of an individual Virtual Recorder, but does not discuss reporting ""the amount of remaining unallocated telemetry capacity"". L3-SFS-744: The Flight Software shall report the amount of remaining unallocated telemetry capacity upon command. All Traced Requirements: L4-SROBC-139: The OBC-C&DH software shall provide ground commands to modify the memory quota of an individual Virtual Recorder during run-time operation without disabling the storage into the Virtual Recorder and without disrupting the normal flow of data to the Virtual Recorder.",5/26/05
ProjectA - TIM - 1619,C&DH Traceability Analysis: L3-SFS-743 not satisfied by the existing L4 requirements trace,3,"L3-SFS-743 does not appear to be satisfied by the one C&DH requirement (L4-SROBC-139). L3-SFS-743 states: ""The Flight Software shall report the amount of memory allocated to a specified telemetry buffer via telemetry."" L4-SROBC-139 only discusses the capability of providing ground commands to modify the memory quota of an individual Virtual Recorder, but does not discuss reporting ""the amount of memory allocated to a specified telemetry buffer"". L3-SFS-743: The Flight Software shall report the amount of memory allocated to a specified telemetry buffer via telemetry. All Traced Requirements: L4-SROBC-139: The OBC-C&DH software shall provide ground commands to modify the memory quota of an individual Virtual Recorder during run-time operation without disabling the storage into the Virtual Recorder and without disrupting the normal flow of data to the Virtual Recorder.",5/26/05
ProjectA - TIM - 1618,Incomplete tracing of L4-SRUP-294 to the L3 requirements,3,"L4-SRUP-294 defines functionality that appears to be directly applicable to the functionality defined in requirements: L3-SFS-789, L3-SFS-790, and L3-SFS-987. However, links to these L3 requirements do not exist. L4-SRUP-294 states: The Uplink FSW shall verify a Table Load command packet checksum and word length prior to execution. If the calculated checksum does not match the checksum within the command packet or the word length is not as expected, the command is rejected. Suggested links: L3-SFS-789: The Flight Software shall support verification of each uplink segment and packet parameters received from the ground. L3-SFS-790: The Flight Software shall reject the uplink command if an error is detected. L3-SFS-987 The Spacecraft shall reject all invalid commands, and shall terminate any sequence that issues an invalid command. Definition: An invalid command is defined as being a command checksum failure, other aspects will be covered by the ground system",5/19/05
ProjectA - TIM - 1617,"Incomplete tracing of L4 Uplink requirements to L3-SFS-808, L3-SFS-830, L3-SFS-831 and L3-SFS-988",3,"L3-SFS-808, L3-SFS-830, and L3-SFS-831 currently have no traces to the Uplink SRS. L4-SRUP-289 and L4-SRUP-290 define functionality that is directly applicable to these requirements as well as L3-SFS-988. L3-SFS-808: The Flight Software shall terminate a specified thread of execution upon command. L3-SFS-830 The Flight Software shall provide the capability to terminate a sequence regardless of its present state. L3-SFS-831 The Flight Software shall be able to terminate a sequence with either a single command or single sequence instruction. L3-SFS-988: Spacecraft FP responses shall suspend execution of programmed, onboard stored command sequences when this becomes necessary, where the termination event will be recorded in telemetry. L4-SRUP-289 : Flight Software shall stop execution of the requested RTS upon receipt of the real-time command STOP_RTS from either the ground or another on-board software application. L4-SRUP-290: Flight Software shall enable or disable the execution of the requested RTS upon receipt of the real-time commands ENABLE_RTS or DISABLE_RTS from either the ground or another on-board software application.",5/19/05
ProjectA - TIM - 1616,Incomplete tracing of L4-SRUP-288 to the L3 requirements,3,"L4-SRUP-288 defines functionality that appears to be directly applicable to the functionality defined in requirements: L3-SFS-804, L3-SFS-806, and L3-SFS-807. However, links to these L3 requirements do not exist. L4-SRUP-288: Uplink RTS' shall dispatch up to 10 commands per second. L3-SFS-804: The Flight Software shall execute relative-time sequence instructions within 0.1 second, inclusive of the indicated time relative to the preceding instruction. L3-SFS-806 : The Flight Software shall provide the capability to execute consecutive sequence instructions with relative time tags of 0.1 second apart. L3-SFS-807: The Flight Software shall be capable of executing 16 or more relative time sequence instructions per second. The existing traces: L3-SFS-694: The Flight Software shall support flight software subsystem requirements, including processing commands and telemetry, storing and transmitting data, and maintaining flight software health. L3-SFS-746: The Flight Software shall provide command handling in the form of real-time command processing (distribution to subsystem functions and instruments), and stored capability (relative and absolute).",5/19/05
ProjectA - TIM - 1615,Incomplete tracing of Uplink SRS Requirements to L3-SFS-987,3,"L4-SRUP-280, L4-SRUP-281, and L4-SRUP-285 are directly applicable to the functionality defined in L3-SFS-987; however, no links to these requirements exist. L3-SFS-987: The Spacecraft shall reject all invalid commands, and shall terminate any sequence that issues an invalid command. Definition: An invalid command is defined as being a command checksum failure, other aspects will be covered by the ground system. L4-SRUP-280: Prior to the execution of each individual RTS command, the Flight Software shall verify the validity of the following command parameters: RTS command length, and Embedded command checksum. L4-SRUP-281: In the event an RTS command fails the validation check: L4-SRUP-285: Flight Software shall ABORT the execution of that specific RTS buffer.",5/19/05
ProjectA - TIM - 1614,Insufficient tracing to L4-SRUP-266,4,"L4-SRUP-266 is insufficiently traced. Suggest that a missing link be added to L3-SFS-916. The existing trace to L3-SFS-694 lacks specificity. L4-SRUP-266 states: The Uplink FSW fault protection software shall execute any pending commands prior to telemetry evaluation, to ensure command responses have priority over fault detection. L3-SFS-916: The Flight System FP design shall have capability to: • Respond to minor anomalies without interrupting normal operations • Autonomously switch/reset components w/temporary interruption of normal operations • Autonomously abort normal operations and transition to safe state awaiting ground recovery L3-SFS-694: The Flight Software shall support flight software subsystem requirements, including processing commands and telemetry, storing and transmitting data, and maintaining flight software health",5/19/05
ProjectA - TIM - 1613,Incomplete tracing of L4 Uplink SRS requirements to L3-SFS-751,3,"Linking of L4-SRUP-224 through L4-SRUP-227 is incomplete. L4-SRUP-221 specifically defines functionality related to the system functionality defined in L3-SFS-751. L3-SFS-751: The Flight Software shall log major events as reported by subsystem tasks for later retransmit The following Uplink requirements relate to the retransmission of the event log: L4-SRUP-224: The Uplink FSW shall transfer a specified range of event messages on command. L4-SRUP-225 On command, the Uplink FSW shall dump fault log entries for either log. L4-SRUP-226 Log entries shall replace spare telemetry in the Uplink Critical VCDU. L4-SRUP-227 The Uplink FSW shall dump the specified range of event messages in telemetry on command.",5/19/05
ProjectA - TIM - 1612,Incomplete linking of L4-SRUP-221,3,Linking of L4-SRUP-221 is incomplete. L4-SRUP-221 specifically defines functionality related to the system functionality defined in L3-SFS-905. L4-SRUP-221: The mate fault log shall function in the same way as the self fault log. L3-SFS-905 The Spacecraft shall maintain a FP log in both UL cards and shall be kept in sync within 10 messages. The number of messages shall be modifiable by table load.,5/19/05
ProjectA - TIM - 1611,L4-SRUP-206 contains incorrect L3 traces,4,"L4-SRUP-206 contains two incorrect traces. L4-SRUP-206 states: The protocol shall facilitate the transfer of commands, status messages, and fault log entries between the uplink cards. The incorrect traces are as follows: L3-SFS-911: Spacecraft design or FP shall prevent or respond to the scenario where both OBCs are powered and configured as 1553 bus controllers. L3-SFS-694: The Flight Software shall support flight software subsystem requirements, including processing commands and telemetry, storing and transmitting data, and maintaining flight software health. The remaining traces to L4-SRUP-206 are adequate.",5/19/05
ProjectA - TIM - 1610,L4-SRUP-205 incorrectly traced to L3-SFS-911,4,L4-SRUP-205 contains an incorrect trace. L4-SRUP-205 states: The Uplink FSW shall support a 19.2 Kbps serial interface used for communication with the redundant Uplink Card. This refers to the uplink to uplink interface. The incorrect traces are as follows: L3-SFS-911: Spacecraft design or FP shall prevent or respond to the scenario where both OBCs are powered and configured as 1553 bus controllers. The remaining traces to L3-SFS-941 and L3-SFS-891 are adequate.,5/19/05
ProjectA - TIM - 1609,Incorrect and Incomplete traces to L3-SFS-847,3,"The functionality in L4-SRUP-196 is unrelated to L3-SFS-847. According to the June 9, 2005 DOORS DB there are no other L4 requirements linked to L3-SFS-847. L3-SFS-753 is linked as a child to L3-SFS-847; however, it is not clear that the functionality defined in L3-SFS-847 is specifically addressed. L3-SFS-847: The Flight Software shall provide a 64-bit time field (32 bit seconds, 32 bit sub-seconds) in the Packet Secondary Header. All traced requirements: L4-SRUP-196: The Uplink FSW shall modify the integer value with a fractional component that specifies the number of ticks to add over a 100 second period. L3-SFS-753: The Flight Software shall maintain time and distribute to tasks for time stamping telemetry, managing stored command sequences, and in support of attitude and navigation.",5/19/05
ProjectA - TIM - 1608,L3-SFS-874 not fully addressed by the linked L4 requirements,2,"L3-SFS-874 is not fully satisfied by the linked L4 requirements. There are currently no traces to the Uplink SRS. The following Uplink SRS requirements were identified as being applicable to the functionality defined in L3-SFS-874: L4-SRUP-170, L4-SRUP-172, L4-SRUP-182, L4-SRUP-183, L4-SRUP-298, and L4-SRUP-301. However, the specific functionality for loading and deleting sequences, and requesting directory listings via memory dump is not specifically addressed by the linked requirements. L3-SFS-874 states: The Flight Software shall provide capabilities to allow the MOS to load and delete sequences and request directory listings, all via memory dump. L4-SRUP-170: The Uplink FSW shall generate Uplink Card Telemetry VCDUs using one or more of the following packets with the following APIDs: L4-SRUP-172: 0x0FF2 Memory Dump Packet L4-SRUP-182: Upon receipt of a memory dump command from the ground, the Uplink FSW shall insert a Memory Dump Telemetry Packet into each Uplink Card VCDU until the memory dump is complete. L4-SRUP-183: The first word in the data section of the Memory Dump Telemetry Packet shall contain the starting address of the memory dump for the packet. L4-SRUP-298: Flight Software shall accept and execute a SELECT_TABLE command, which initializes a table load/edit ""session"" to load or dump data for a specified table. L4-SRUP-301: Flight Software shall accept and execute a DUMP_TABLE command, specifying an offset into the table to start dumping, the number of words to dump from the offset, and the number of copies to dump.",5/19/05
ProjectA - TIM - 1607,Incorrect tracing of L4-SRUP-158 and L4-SRUP-159 to L3-SRS-942,3,"The following traces from L3-SFS-942 to Uplink requirements are incorrect: L4-SRUP-158 and L4-SRUP-159. The remaining traces from L3-SFS-942 to the Uplink requirements are correct. L3-SFS-942 states: The Spacecraft shall provide health monitors for all C&DH processors and interfaces. L4-SRUP-158 states :The Uplink FSW shall send Critical VCDUs to the Downlink Card via SCSA interface at a programmable rate associated with downlink telemetry rate, once per 360 seconds by default. L4-SRUP-159 states : The Uplink FSW shall collect, format and transmit Uplink Card Telemetry to the Downlink Card.",5/19/05
ProjectA - TIM - 1606,Insufficient tracing of L4-SRUP-157,3,"Uplink SRS requirement L4-SRUP-157 appears to be applicable to the functionality defined in L3-SFS-891 and L3-SFS-981 for fault/error logging; however the requirement is not linked to either of the L3 SCFSRD requirements. L4-SRUP-157: The Uplink FSW shall report instances of aborting SCSA transactions in critical telemetry. L3-SFS-891 The Flight System FP design shall include hardware and low level flight software monitors such as watchdog timers, fault indicators (e.g., self diagnostics, error logging), error detection and correction systems, etc. for critical component processors. L3-SFS-981: The Spacecraft shall store all FP event messages in the FP log.",5/19/05
ProjectA - TIM - 1605,Incorrect L4 Uplink requirements traced to L3-SFS-843,4,"The following traces to L3-SFS-843 are incorrect: L4-SRUP-152, L4-SRUP-154, L4-SRUP-156, L4-SRUP-157, and L4-SRUP-285. The remaining trace to L4-SRUP-303 is valid. (Note there are L4 requirements from the OBC C&DH SRS also linked to L3-SFS-843.) L3-SFS-843 states: The Flight Software shall allow the transmission of stored data to be paused or aborted by command while in progress. L4-SRUP-152 states: The Uplink FSW shall abort and log as an SCSA error any VCDU transmission that has not completed within 100 milliseconds (ms). L4-SRUP-154 states: The Uplink FSW shall abort and log as an SCSA error any Downlink command transmission that has not completed within 100 microseconds. L4-SRUP-156 states The Uplink FSW shall retry each transaction once then abort the transaction. L4-SRUP-157 states The Uplink FSW shall report instances of aborting SCSA transactions in critical telemetry L4-SRUP-285 states: Flight Software shall ABORT the execution of that specific RTS buffer. L4-SRUP-303 states: Flight Software shall accept and execute an Abort Table Dump command.",5/19/05
ProjectA - TIM - 1604,Incorrect and incomplete tracing of L4-SRUP-287,3,"It is not clear that L4-SRUP-287 is correctly traced to L3-SFS-761. The functionality defined in L4-SRUP-287 does not appear to be necessary to address the software functionality defined in L3-SFS-761. However, it does appear that the functionality defined in L4-SRUP-287 is necessary to address requirement L3-SFS-746. L4-SRUP-287: An RTS shall be DISABLED immediately after it has been loaded. L3-SFS-746 : The Flight Software shall provide command handling in the form of real-time command processing (distribution to subsystem functions and instruments), and stored capability (relative and absolute). L3-SFS-761: The Flight Software shall include system startup procedures that contain default control capabilities sufficient to place the flight software into a safe and deterministic system configuration without any ground intervention following power-up or reset.",5/19/05
ProjectA - TIM - 1603,Incomplete and Incorrect tracing of L4-SRUP-137,3,"The existing trace from L4-SRUP-137 to L3-SFS-767 is erroneous and should be deleted. In addition, L4-SRUP-137 appears to partially address the functionality defined in L3-SFS-833. L4-SRUP-137: The Uplink FSW shall transmit the most recently generated Uplink VCDU to the OBC when a request is received across the HSS1 interface. L3-SFS-767: The Flight Software shall support Hardware Logic Pulse commands implemented in C&DH L3-SFS-833: The Flight Software shall support use of the spacecraft downlink frames and shall uniquely identify onboard frame location by virtual channel (VC) id and VCDU counter.",5/19/05
ProjectA - TIM - 1601,Insufficient tracing to L3-SFS-891,3,"Uplink SRS requirement L4-SRUP-333 appears to be applicable to the functionality defined in L3-SFS-891; however the requirement is not linked. L4-SRUP-333 maintains the WDT status in support of the FP functionality defined in L3-SFS-891. L3-SFS-891: The Flight System FP design shall include hardware and low level flight software monitors such as watchdog timers, fault indicators (e.g., self diagnostics, error logging), error detection and correction systems, etc. for critical component processors. L4-SRUP-324: The Uplink FSW shall maintain a status message containing the following parameters: L4-SRUP-333: OBC WDT Status.",5/19/05
ProjectA - TIM - 1596,Insufficient tracing to L3-SFS-789,4,"L4-SRUP-305, L4-SRUP-306, and L4-SRUP-308 appear to address functionality defined in L3-SFS-789; however links between these 3 L4 requirements and L3-SFS-789 do not exist. L3-SFS-789: The Flight Software shall support verification of each uplink segment and packet parameters received from the ground. L4-SRUP-305: Flight Software shall initialize and maintain an 8-bit EXCLUSIVE-OR checksum for the currently selected table. L4-SRUP-306 : Flight Software shall initialize and maintain a SESSION_WORD_COUNT for the total number of words loaded for the currently selected table. L4-SRUP-308: Flight Software shall accept and execute a COMMIT_TABLE_WITH_CHECKSUM command that compares the on-board Checksum with the expected Checksum specified in the command and performs the following based on the comparison results:",5/19/05
ProjectA - TIM - 1595,Insufficient tracing to L4-SRUP-296,4,"L4-SRUP-296 is insufficiently traced. Suggest that missing links be added to L3-SFS-789, L3-SFS-790, and L3-SFS-987. These links would relate to the verification of a load packet. L4-SRUP-296 states: Flight Software shall maintain counters for Table operations commands that were not processed due to error conditions, and generate event messages for error conditions. L3-SFS-789: The Flight Software shall support verification of each uplink segment and packet parameters received from the ground. L3-SFS-790: The Flight Software shall reject the uplink command if an error is detected. L3-SFS-987 The Spacecraft shall reject all invalid commands, and shall terminate any sequence that issues an invalid command. Definition: An invalid command is defined as being a command checksum failure, other aspects will be covered by the ground system",5/19/05
ProjectA - TIM - 1594,Incorrect tracing of L4-SRUP-295,3,"L4-SRUP-295 incorrectly traced to L3-SFS-985, L3-SFS-977, and L3-SFS-976. The functionality defined in L4-SRUP-295 is not applicable to teh Spacecraft functionality defined in L3-SFS-985, L3-SFS-977, and L3-SFS-976. L4-SRUP-295: Flight Software shall maintain counters for error-free Table operations commands received and processed. L3-SFS-985: The Spacecraft FP log shall be downlinked during every pass, shall have priority in the operational selection of downlink data, and shall have the ability to be re-transmitted. L3-SFS-977: Spacecraft FP software response enable defaults and sequence contents shall be in-flight modifiable via commands, table, or parameter loads. L3-SFS-976: Spacecraft FSW FP monitor enable defaults, threshold trigger values, persistence and responses shall be run-time modifiable by in-flight commands, table or parameter uploads.",5/19/05
ProjectA - TIM - 1593,Incorrect and Incomplete tracing of L4-SRUP-141 - L4-SRUP-144,3,"The existing traces to L4-SRUP-141 - L4-SRUP-144 are incorrect. The existing traces are: L3-SFS-780, L3-SFS-788, and L3-SFS-790 L4-SRUP-141 states: The Uplink FSW shall reset the Uplink side of the HSS1 interface when signaled by the OBC through a discrete line that a hang condition exists by performing the following actions: L4-SRUP-142: Drop all GSC commands held by the Uplink L4-SRUP-143: Abort any HSS1 transmissions in progress L4-SRUP-144: Clear the GSC command interrupt line. L3-SFS-780: The Flight Software shall be able to process any command in the Command and Telemetry Dictionary L3-SFS-788: The Flight Software shall accept and process uplink command segment data from the ground per the format described in the FGICD and Command & Telemetry Dictionary. L3-SFS-790: The Flight Software shall reject the uplink command if an error is detected. Deletion of these links will leave no links to a L3 parent requirement.",5/19/05
ProjectA - TIM - 1592,"Incomplete tracing of L4-SRUP-145, L4-SRUP-146, and L4-SRUP-149 to the L3 SCFSRD requirements",3,"Tracing of the requirements L4-SRUP-145, L4-SRUP-146, and L4-SRUP-149 to the L3 SCFSRD requirements is incomplete. The 3 L4 requirements are directly applicable to the functionality defined in L3-SFS-891 and L3-SFS-981 for error logging. L4-SRUP-145: The Uplink FSW shall log the HSS1 interface hang condition as an HSS1 error. L4-SRUP-146: The Uplink FSW shall log each dropped GSC command as a GSC command error. L4-SRUP-149: The Uplink FSW shall log any SCSA message experiencing a hardware error as an SCSA error. L3-SFS-891 The Flight System FP design shall include hardware and low level flight software monitors such as watchdog timers, fault indicators (e.g., self diagnostics, error logging), error detection and correction systems, etc. for critical component processors. L3-SFS-981: The Spacecraft shall store all FP event messages in the FP log.",5/19/05
ProjectA - TIM - 1591,Incorrect and Incomplete tracing of L4-SRUP-247,3,"L4-SRUP-247 is incorrectly traced to L3-SFS-978. Suggest that a better trace is to L3-SFS-2580. L4-SRUP-247: The Uplink FSW monitors shall call a fault response based on the RT ID (if A then response 1, ir B then response 2). This correlates to the 2 fault responses in the monitor table, where the responses can be identical or CEU unique (CEU_AonBoff or CEU_AoffBon). Existing Link: L3-SFS-978: Spacecraft FSW FP monitors and responses shall be individually enabled and disabled via command. Suggested traces L3-SFS-887: The Flight System shall have Fault Containment Regions (FCR) around each of the following flight system sections: [HW] CEU, ACE, ACE peripherals (reaction wheel, gyro, thruster, sun sensor, SADE/SADA) , SDST, PDU/HVEA, EngCntrl, EngCntrl peripherals (PPU, thruster, gimbal assembly, XFA), and Instruments (FC, VIR, GRaND) - [SW] flight system processors L3-SFS-2580: A FCR is a region (component or specific zone) of the Flight System defined for the purpose of fault analysis to ensure redundancy and cross strapping are applied in a way that allow the SFT requirements to be met.",5/19/05
ProjectA - TIM - 1590,Incorrect and Incomplete tracing of L4-SRUP-243,3,"L4-SRUP-243 is incorrectly linked to L3-SFS-698. L4-SRUP-243 states "" Fault monitor evaluation - shall have up to 6 fault detection flag identifiers (numeric or variable name), logic condition (and/or), and 2 fault response identifiers (numeric) per monitor which are table parameters."" L3-SFS-698 : The Flight Software shall have the ability to detect and report invalid opcodes and out of range errors for commands. The following L3 requirements appear to trace to this requirement: L3-SFS-889, L3-SFS-891, L3-SFS-977",5/19/05
ProjectA - TIM - 1589,Incorrect and Incomplete tracing of L4-SRUP-242,3,"L4-SRUP-242 is incorrectly linked to L3-SFS-749. The remaining trace to L3-SFS-694 is valid. L4-SRUP-242: Telemetry monitor evaluation - shall have up to 4 telemetry identifiers (numeric or variable name), 4 conditional values (0/1), 1 persistence value (cycles), per check which are table parameters. L3-SFS-749 : The Flight Software shall support data collection and/or storage and transmission of all subsystem and science instrument telemetry. Additional traces have been identified: L3-SFS-889, L3-SFS-890, and L3-SFS-979.",5/19/05
ProjectA - TIM - 1588,Incorrect tracing of L4-SRUP-240,3,"Requirement L4-SRUP-240 is incorrectly traced to L3-SFS-698. This L3 trace does not relate to this L4 requirement and should be deleted. L4-SRUP-240: The Uplink FSW shall include telemetry monitor evaluation, fault monitor evaluation, and fault response functions. L3-SFS-698: The Flight Software shall have the ability to detect and report invalid opcodes and out of range errors for commands.",5/19/05
ProjectA - TIM - 1587,Incorrect and incomplete tracing of L4-SRUP-131,3,"Existing links to L4-SRUP-131 are incorrect. The requirement states:""The Uplink FSW shall disable the processing of HLP commands from the OBC by default (on bootup.)"" The existing links are as follows: L3-SFS-767: The Flight Software shall support Hardware Logic Pulse commands implemented in C&DH. L3-SFS-768: The Flight Software shall conform to the Command and Telemetry formats and protocols documented in the command and Telemetry Dictionary (CTD). L3-SFS-780: The Flight Software shall be able to process any command in the Command and Telemetry Dictionary. Suggest that traces to L3-SFS-761, L3-SFS-909, and L3-SFS-944 are more applicable traces for L4-SRUP-131.",5/19/05
ProjectA - TIM - 1586,Incorrect tracing of L4-SRUP-263 and 264 to L3-SFS-974,3,"L3-SFS-974 is incorrectly traced to the Uplink SRS requirements L4-SRUP-263 and L4-SRUP-264. The cited Uplink requirements are sufficiently traced to other L3 requirements. L3-SFS-974: The Spacecraft FSW shall be designed to accommodate processor resets during mission-critical events, such as launch and solar array deployments. L4-SRUP-263: The Uplink FSW telemetry monitors (individual or all) shall be reset to their default states by command (enabled, persistence reset, flag cleared). L4-SRUP-264: The Uplink FSW fault monitors (individual or all) shall be reset to their default states by command (enabled, tier status reset).",5/19/05
ProjectA - TIM - 1585,L3-SFS-976 not fully satisfied by existing L4 Requirement Links,3,"L3-SFS-976 is not fully satified by the existing L4 requirements links. Additional links to the Uplink SRS requirements are needed to satisfy L3-SFS-976. The following Uplink requirements appear to trace to L3-SFS-976: L4-SRUP-251, L4-SRUP-252, L4-SRUP-253, and L4-SRUP-254. L3-SFS-976: Spacecraft FSW FP monitor enable defaults, threshold trigger values, persistence and responses shall be run-time modifiable by in-flight commands, table or parameter uploads. L4-SRUP-251 : Persistence counter - number of contiguous cycles at current evaluation state. L4-SRUP-252 : Highest number of contiguous out-of-limit cycles. L4-SRUP-253 : Total limit out-of-limit cycles. L4-SRUP-254: Fail flag status - set if check fails for persistnece, clear by command.",5/19/05
ProjectA - TIM - 1584,L3-SFS-889 not fully satisfied by existing L4 Requirement Links,3,"L3-SFS-889 is missing traces to several Uplink SRS requirements. Additional links to the Uplink SRS requirements are needed to satisfy L3-SFS-889. The following Uplink requirements appear to trace to L3-SFS-889: L4-SRUP-265, L4-SRUP-267, L4-SRUP-268, and L4-SRUP-269 L3-SFS-889: Spacecraft FP shall detect system-level anomalies, based on predetermined performance thresholds, and take autonomous corrective action when necessary to keep the Spacecraft in a power-positive, thermally safe, commandable state. L4-SRUP-265 : The Uplink FSW shall check for faults and evaluate monitors in a repeatable, time synchronous manner. L4-SRUP-267 : Evaluation at 1 Hz (if evaluation is enabled). L4-SRUP-268 All (enabled) telemetry monitors evaluated. L4-SRUP-269 : All (enabled) fault monitors evaluated until a fault is detected and a response is initiated.",5/19/05
ProjectA - TIM - 1583,"L4-SRUP-129 incorrectly traced to L3-SFS-767, L3-SFS-768, and L3-SFS-780",3,L4-SRUP-129 contains extraneous traces. L4-SVUP-129 does not appear to be applicable to the three L3 SCFSRD requirements for which it is linked. L4-SVUP-129 states: The Uplink FSW shall maintain a count of rejected HSS1 messages. Existing traces are to: L3-SFS-767: The Flight Software shall support Hardware Logic Pulse commands implemented in C&DH L3-SFS-768: The Flight Software shall conform to the Command and Telemetry formats and protocols documented in the command and Telemetry Dictionary (CTD). L3-SFS-780: The Flight Software shall be able to process any command in the Command and Telemetry Dictionary,5/18/05
ProjectA - TIM - 1582,"L4-SRUP-126 incorrectly traced to L3-SFS-761, L3-SFS-777, L3-SFS-891, and L3-SFS-892",4,"L4-SRUP-126 contains extraneous traces. L4-SRUP-126 : The Uplink FSW HSS1 messages shall consist of HLP commands, PCC commands, VCDU requests, GSC command requests and Loopback requests. The links to L3-SFS-761, 777, 891, and 892 are invalid and should be deleted. L3-SFS-761: The Flight Software shall include system startup procedures that contain default control capabilities sufficient to place the flight software into a safe and deterministic system configuration without any ground intervention following power-up or reset. L3-SFS-777: The Flight Software shall have the capability to receive and install configuration files and tables to respond to changes in spacecraft and instrument hardware and operations. L3-SFS-891: The Flight System FP design shall include hardware and low level flight software monitors such as watchdog timers, fault indicators (e.g., self diagnostics, error logging), error detection and correction systems, etc. for critical component processors. L3-SFS-892: The Spacecraft FP design shall implement autonomous fail over of CEU control in the event of a non-recoverable fault signature.",5/18/05
ProjectA - TIM - 1581,Incorrect tracing of L4-SRUP-121 and L4-SRUP-122,3,Existing traces from L4-SRUP-121 and L4-SRUP-122 to L3-SFS-790 and L3-SFS-789 are not valid. L4-SRUP-121: The Uplink FSW shall maintain a count of all received GSC commands. L4-SRUP-122: The Uplink FSW shall maintain a count of all rejected GSC commands. Current incorrect traces are: L3-SFS-790: The Flight Software shall reject the uplink command if an error is detected. and L3-SFS-789: The Flight Software shall support verification of each uplink segment and packet parameters received from the ground. REmaining adequate trace: L3-SFS-747: The Flight Software shall provide command accept and reject counters for subsystem tasks and interfaces.,5/18/05
ProjectA - TIM - 1579,Incomplete tracing of L3-SFS-662,3,"L3-SFS-662 currently contains no links, however it can and should be traced to other L3 FSW requirements, which are in turn linked to the L4 software requirements. For starters, L3-SFS-845 can be traced to L3-SFS-662. L3-SFS-845 is linked to L4 software requirements. L3-SFS-662 The C&DH subsystem shall provide a 1 pps synchronization signal to subsystems and components that need to be synchronized with the spacecraft, otherwise the spacecraft shall provide the spacecraft clock with an uncertaintly of 5 msec or less (3-sigma). L3-SFS-845: The Flight Software shall support time synchronization of software events used for time-tagging telemetry data. The spacecraft clock shall be the Flight System time reference.",5/18/05
ProjectA - TIM - 1578,Incomplete tracing to/from L3-SFS-2311,3,"L3-SFS-2311 currently contains no links, however it can and should be traced to other L3 subsystem requirements, which are in turn linked to the L4 software requirements. For starters, L3-SFS-768, L3-SFS-780, and L3-SFS-788 can be traced to L3-SFS-2311. L3-SFS-2311: The Spacecraft shall recognize all commands defined in the Command and Telemetry Dictionary L3-SFS-768: The Flight Software shall conform to the Command and Telemetry formats and protocols documented in the command and Telemetry Dictionary (CTD). L3-SFS-780: The Flight Software shall be able to process any command in the Command and Telemetry Dictionary L3-SFS-788: The Flight Software shall accept and process uplink command segment data from the ground per the format described in the FGICD and Command & Telemetry Dictionary.",5/18/05
ProjectA - TIM - 1577,Extraneous traces to L3-SFS-2258,4,"L3-SFS-2258 is a spacecraft level requirement and contains extraneous traces to the Uplink SRS requirements. Links to Uplink L4-SRUP-150 and L4-SRUP-151 are redundant because L3-SFS-790 is traced to L3-SFS-2258, which also has links to those requirements plus many more. L3-SFS-2258 is sufficiently covered by the traced requirements, L3-SFS-2263 and L3-SFS-790. L3-SFS-2258: The Spacecraft shall reject a uplinked command if an error is detected. Existing traced requirements: L4-SRUP-150 : The Uplink FSW shall maintain a count of rejected SCSA messages. L4-SRUP-151 : The Uplink FSW shall maintain an error status describing the reason for the rejection of the last rejected SCSA message. L3-SFS-790 The Flight Software shall reject the uplink command if an error is detected. L3-SFS-2263 The C&DH shall reject a CLTU if an error is detected during receipt.",5/18/05
ProjectA - TIM - 1576,Incorrect traces to L3-SFS-770,3,"L3-SFS-770 is an introduction or modifier to the subsequent 5 requirements (L3-SFS-771 through L3-SFS 775). L3-SFS-770 states: ""The Flight Software shall allow ground operators to disable the following autonomous capabilities:"". The L4 requirement traces cited for L3-SFS-770 do not appear to be applicable to the the functionality described in L3-SFS-770. The existing traces: L4-SRUP-206 The protocol shall facilitate the transfer of commands, status messages, and fault log entries between the uplink cards. L4-SRUP-208 The Uplink FSW shall send and receive the Uplink status message at a rate of 1 Hz. L4-SRUP-209 The Uplink FSW shall be able to send and receive fault log entries are a maximum rate of 1 Hz. L4-SRUP-240 The Uplink FSW shall include telemetry monitor evaluation, fault monitor evaluation, and fault response functions. L4-SRUP-242 Telemetry monitor evaluation - shall have up to 4 telemetry identifiers (numeric or variable name), 4 conditional values (0/1), 1 persistence value (cycles), per check which are table parameters. L4-SRUP-243 Fault monitor evaluation - shall have up to 6 fault detection flag identifiers (numeric or variable name), logic condition (and/or), and 2 fault response identifiers (numeric) per monitor which are table parameters. L4-SRUP-244 Fault responses - shall be modifiable via table load (re-load an entire response) and be a fixed size of 600d bytes, 300d 16-bit words.",5/18/05
ProjectA - TIM - 1575,"EngCntrl v1.0: DEBUG Variable ""uart_tx"" No Longer Used",5,"The variable ""uart_tx"" was previously used in SH_DEFINE.H to support debugging. Usage of this variable in version 1.0 of the EngCntrl code has been commented out; however, the variable is still defined by line #34 of the file, ""SH_EngCntrl.H"". FlexeLint Message: Message #768: global struct member 'uart_tx' (line 34, file SH_EngCntrl.H) not referenced Message ID #768 Description: A member (name provided as symbol) of A struct or union appeared in a non-library header file but was not used in any module comprising the program. This message is suppressed for unit checkout. Since struct's may be replicated in storage, finding an unused member can pay handsome storage dividends. However, many structures merely reflect an agreed upon convention for accessing storage and for any one program many members are unused. In this case, receiving this message can be a nuisance. One convenient way to avoid unwanted messages (other than the usual -e and -esym) is to always place such structures in library header files. Alternatively, you can place the struct within a ++flb ... --flb sandwich to force it to be considered library. Referenced Source Code: File - SH_DEFINE.H: 23: * Temporary debug macros for writing to UART TX. 24: * 25: * #define DEBUG_TX1(b) { while (processor_regs->uart_tx & 0x300); processor_regs->uart_tx = (b); } File - SH_EngCntrl.H: 34: WORD uart_tx; // 60010",5/16/05
ProjectA - TIM - 1574,EngCntrl v1.0: Switch Statement with Missing Default in OP_PROCMODE.C,4,"OP_PROCMODE.C lines 667-676 contains a switch statement with no 'default'. FlexeLint Message: Message #744: switch statement has no default Message ID #744 Description: A switch statement has no section labeled default:. Was this an oversight? It is standard practice in many programming groups to always have a default: case. This can lead to better (and earlier) error detection. One way to suppress this message is by introducing a vacuous default: break; statement. If you think this adds too much overhead to your program, think again. In all cases tested so far, the introduction of this statement added absolutely nothing to the overall length of code. If you accompany the vacuous statement with a suitable comment, your code will at least be more readable. This message is not given if the control expression is an enumerated type. In this case, all enumerated constants are expected to be represented by case statements, else 787 will be issued. Referenced Source code: File - OP_PROCMODE.C: 667: switch (process_thruster()) 668: { 669: case THRUST_IDLE: 670: mode_change = STANDBY_MODE; 671: break; 672: case THRUST_SAFE: 673: safe_mode = SAFE_START; 674: mode_change = SAFE_MODE; 675: break; 676: }",5/16/05
ProjectA - TIM - 1573,"EngCntrl v1.0: Possible Range Checking Missing for Structure Elements ""xfs_control.max_plenum_high"" and ""xfs_control.max_plenum_low""",4,"The structure elements ""xfs_control.max_plenum_high"" and ""xfs_control.max_plenum_low"" are initialized to 55 by lines 217-218 of the file, ""SH_DATABASE.H"". The comments on these lines incorrectly refer to these variables as type ""WORD"" or 'unsigned int', since SH_SYSTEM.H defines the variables as type ""INTEGER"" or 'int'. According to the EngCntrl/Spacecraft ICD, these variables are updateable parameters of the command, XRTDBASE. After the command is read from the 1553 buffer, the parameters are passed to the function, ""set_run_time_parameters"", as an unsigned integer pointer (array) named ""parameter"". If the parameters being updated correspond to the max plenum high or max plenum low, then they are assigned the value of ""parameter[2]"". The sign mismatch is most likely not a problem, since the values assigned to these variables are unlikely to exceed 15 bits. However, there appears to be no range checking performed by the EngCntrl FSW to ensure that when these parameters are passed by the XRTDBASE command that they are within an acceptable range. Referenced Source Code: File - OP_RT_DBASE.C 36: INTEGER set_run_time_parameters( WORD * parameter ) …. 116: case 11: // RT-DBASE: VOL W set-max-plenum-high 117: { 118: xfs_control.max_plenum_high = parameter[2]; 119: } 120: break; 121: 122: case 12: // RT-DBASE: VOL W set-max-plenum-low 123: { 124: xfs_control.max_plenum_low = parameter[2]; 125: } 126: break; File - OP_RUN_XFS.C: 415: plenum_error_1 = (INTEGER) xfs_control.main_pa_measured 416: - (INTEGER) xfs_control.main_pa_required; 417: 418: plenum_error_2 = (INTEGER) xfs_control.main_pa_required 419: - (INTEGER) xfs_control.main_pa_measured; 420: 421: /*********************************/ 422: /* Check for plenum errors */ 423: /*********************************/ 424: 425: if ( (plenum_error_1 >= xfs_control.max_plenum_high) 426: || (plenum_error_2 >= xfs_control.max_plenum_low) ) 427: { 428: xfs_control.main_leak_counter++; 429: } 430: else 431: { 432: xfs_control.main_leak_counter = 0; 433: } File - OP_XFS_DATA.C: 90: /***************************************************/ 91: /* Compute the average plenum pressures */ 92: /***************************************************/ 93: 94: xfs_control.main_pa_measured = vote_transducers( pa1, pa2, pa3 ); 95: if ((INTEGER)xfs_control.main_pa_measured < 0 ) xfs_control.main_pa_measured = 0; 96: if ((INTEGER)xfs_control.main_pa_measured > 4095) xfs_control.main_pa_measured = 4095; File - SH_PROC_CMD.C: 1125: // XRTDBASE 1126: // 1127: // w0 = opcode 1128: // w1 = param # 1129: // w2 = data (MSW) 1130: // w3 = data (LSW) 1131: // w4 = checksum 1132: 1133: case OPCODE_XRTDBASE: 1134: { 1135: BRK_IF_BAD_CMD_LEN_OR_CKSM( 4 ); 1136: command_OK = set_run_time_parameters( command ); 1137: } 1138: break; File – SH_SYSTEM.H: 262: typedef struct 263: { …. 266: WORD main_pa_measured; 267: WORD main_pa_required; 268: WORD main_pa_desired; …. 290: INTEGER max_plenum_high; 291: INTEGER max_plenum_low; 292: WORD max_plenum_errors; … 297: } 298: XFS_CONTROL_TYPE; File - SH_DATABASE.H: 189: XFS_CONTROL_TYPE xfs_control = 190: { …. 193: 0, /* WORD main_pa_measured; */ 194: 0, /* WORD main_pa_required; */ 195: 0, /* WORD main_pa_desired; */ …. 217: 55, /* WORD max_plenum_high; */ 218: 55, /* WORD max_plenum_low; */ 219: 10, /* WORD max_plenum_errors; */ …. 224: }; Referenced Document: From EngCntrl/Spacecraft ICD: Section 5.3.1.4.8.1 Command Description - The XRTDBASE command shall modify run-time parameters in the EngCntrl Operational Software database. Table 5-51 - XRTDBASE Parameters: ------------------------------------------------------------------- Parameter Code Size Volatile Units ------------------------------------------------------------------- XFS Single Plenum Trip Point (High) 11 Word Yes PSI XFS Single Plenum Trip Point (Low) 12 Word Yes PSI -------------------------------------------------------------------",5/16/05
ProjectA - TIM - 1571,C&DH Traceability Analysis: Incomplete tracing of L4-SROBC-118,3,"Per ProjectA-TIM-1558 IV&V recommended deleting the existing traces from L3-SFS-697 to L4-SROBC-114 through L4-SROBC-119. As a result of removing the traces, L4-SROBC-118 will have no associated L3 parent requirement. L3-SFS-697: The Flight Software shall allow on-orbit modifications to operational heater set points by table commands. L4-SROBC-118: Flight Software shall reflect the violation in housekeeping telemetry.",5/12/05
ProjectA - TIM - 1570,"EngCntrl Software Test 20, Grid Clear Mode Fault Test, Does Not Fully Verify the Linked DD-310 and EngCntrl SRS Requirements",3,"The EngCntrl test script fsw_test_20 incorporates numerous other test files using the “start” command. The result is a test script that is dozens of pages in length. Other than linking the DD-310 and EngCntrl SRS requirements to fsw_test_20, there is no further assignment of requirements to “test points” within the script. Together, these characteristics make it difficult to determine where in the script a particular linked requirement is verified. The results of IV&V analysis indicates that not all the linked EngCntrl SRS requirements are verified by fsw_test_20. IV&V notes that the SRS requirements are linked to only this test, while many of the DD-310 requirements are also linked to other EngCntrl tests. Given this, it may be the case that the other linked tests completely verify a DD-310 requirement where there is an assessment (in this TIM) that Test 20 has not adequately addressed it. The attachment to this TIM identifies those requirements that IV&V considers to be: (1) Not verified by the script as indicated by a “Sub-Issue number” and (2) Potentially not verified by the script as indicated by a “Comment”. As for item 2, IV&V does not have sufficient resources or time to fully determine if the requirement in question has/has not been fully verified by the script (due to the script characteristics mentioned above).",5/11/05
ProjectA - TIM - 1569,"EngCntrl Software Test 23, Cathode Conditioning Mode Fault Test, Does Not Fully Verify the Linked DD-310 and EngCntrl SRS Requirements",3,"The EngCntrl test script fsw_test_23 incorporates numerous other test files using the “start” command. The result is a test script that is dozens of pages in length. Other than linking the DD-310 and EngCntrl SRS requirements to fsw_test_23, there is no further assignment of requirements to “test points” within the script. Together, these characteristics make it difficult to determine where in the script a particular linked requirement is verified. The results of IV&V analysis indicates that not all the linked EngCntrl SRS requirements are verified by fsw_test_23. IV&V notes that the SRS requirements are linked to only this test, while many of the DD-310 requirements are also linked to other EngCntrl tests. Given this, it may be the case that the other linked tests completely verify a DD-310 requirement where there is an assessment (in this TIM) that Test 23 has not adequately addressed it. The attachment to this TIM identifies those requirements that IV&V considers to be: (1) Not verified by the script as indicated by a “Sub-Issue number” and (2) Potentially not verified by the script as indicated by a “Comment”. As for item 2, IV&V does not have sufficient resources or time to fully determine if the requirement in question has/has not been fully verified by the script (due to the script characteristics mentioned above).",5/10/05
ProjectA - TIM - 1568,Incomplete tracing of Uplink Reprogramming Related Requirements to the SC&FSRD,3,"The following Uplink SRS L4 requirements appear to support the S/C capability to reprogram and / or upload of FSW changes or patches. L4-SRUP-39 which specifies sending the command ""Sub-Function: Modify Computer Control Word (CCW) - non-zero mask and value."" L4-SRUP-40 specifies sending the command ""Sub-Function: Load Operand Memory - non-zero address and data."" L4-SRUP-63 specifies sending the command ""PCC HLP Function: Set ACE EEPROM Write Control Bit"" L4-SRUP-64 specifies sending the command ""PCC HLP Function: Reset ACE EEPROM Write Control Bit"" L4-SRUP-70 states ""PCC HLP Function: UL Operand EEPROM Write Enable"" L4-SRUP-74 states ""PCC HLP Function: OBC Memory EEPROM Write Enable"" L4-SRUP-93 states ""PCC HLP Function: UL Operand EEPROM Write Disable"" L4-SRUP-97 states "" PCC HLP Function: OBC Memory EEPROM Write Disable"" L4-SRUP-101 states "" The Uplink FSW shall process the ""Memory Load"" fields in a Standard PCC command if the ""load address"" falls within the ranges of 0x101-0xFFF and 0xA000-0xFFFF."" L4-SRUP-116 states "" Function Code 6B - Action: Load the specified dataset into the specified location in memory."" The following L3 requirements also define functionality for supporting the FSW Load and Patch; however there are no traceability links between the above mentioned L4 requirements and these 3 L3 SC&FSRD requirements: L3-SFS-756 - Flight Software shall support FSW Load and Patch on powered but non controlling components in a normal operational configuration. Specifically for the flight software: OBC, ACE, Uplink Card, and EngCntrl. L3-SFS-757 - The Flight Software shall support the reprogramming of the EEPROMS within the OBC, ACE, Uplink Card, EngCntrl, instruments and other flight systems components as required. L3-SFS-791 - The Flight Computer (OBC) Flight Software shall be designed to allow upload for flight software changes, sequence changes, and parameter changes.",5/10/05
ProjectA - TIM - 1567,Incomplete tracing of L4-SRUP-19,3,"L4-SRUP-19 is insufficiently traced to the Level 3 requirements. L4-SRUP-19 states ""The Uplink FSW shall validate the checksum of commands received from the ground."" L3-SFS-987 states ""The Spacecraft shall reject all invalid commands, and shall terminate any sequence that issues an invalid command. Definition: An invalid command is defined as being a command checksum failure, other aspects will be covered by the ground system."" There is currently no link between these requirements.",5/10/05
ProjectA - TIM - 1566,Incomplete tracing of L4-SRUP-17,3,"L4-SRUP-17 is insufficiently traced to the Level 3 requirements. L4-SRUP-17 states ""The Uplink FSW shall reject commands that are not CCSDS compliant."" L3-SFS-790 states ""The Flight Software shall reject the uplink command if an error is detected."" There is currently no link between these requirements.",5/10/05
ProjectA - TIM - 1565,Incomplete tracing of L4-SRUP-16,3,"L4-SRUP-16 is insufficiently traced to the Level 3 requirements. L4-SRUP-16 states ""The Uplink FSW shall verify the primary header of all commands for CCSDS compliance."" L3-SFS-789 states ""The Flight Software shall support verification of each uplink segment and packet parameters received from the ground."" There is currently no link between these requirements.",5/10/05
ProjectA - TIM - 1564,Extraneous trace between L4-SRUP-9 and L3-SFS-747,4,L4-SRUP-9 is extraneously traced to L3-SFS-747. L3-SFS-747 refers to an error counter whereas L4-SRUP-9 refers to the status/reason for the rejection. L4-SRUP-9: The Uplink FSW shall maintain an error status describing the reason for the rejection of the last rejected transfer frame. L3-SFS-747: The Flight Software shall provide command accept and reject counters for subsystem tasks and interfaces.,5/10/05
ProjectA - TIM - 1563,L4-SRUP-8 incorrectly traced to L3-SFS-768 and L3-SFS-788,4,"L4-SRUP-8 contains extraneous traces. L4-SRUP-8 states ""The Uplink FSW shall maintain a count of rejected transfer frames."" The links to L3-SFS-768 and 788 should be deleted. L3-SFS-768 states ""The Flight Software shall conform to the Command and Telemetry formats and protocols documented in the command and Telemetry Dictionary (CTD)."" L3-SFS-788 states ""The Flight Software shall accept and process uplink command segment data from the ground per the format described in the FGICD and Command & Telemetry Dictionary.""",5/10/05
ProjectA - TIM - 1561,L3-SFS-195 not satisfied by L4-SRUP-153,3,"L3-SFS-195 appears to define requirements for both hardware and software. The software aspects of L3-SFS-195 do not appear to be satisfied by the 1 trace to L4-SRUP-153. There appear to be other Uplink and OBC CDH requirements related to this L3 requirement. See the recommendations for examples of additional traces that should be created. L3-SFS-195 states ""The Spacecraft System shall be able to transmit data at a downlink rate of at least 41250.46 bps, at an Earth distance of at least 4.0 AU. "" L4-SRUP-153 states ""The Uplink FSW shall transmit Downlink commands to the Downlink card at the maximum rate of one command per second in the order that they are received from the ground.""",5/10/05
ProjectA - TIM - 1560,L3-SFS-194 not satisfied by L4-SRUP-153,3,"L3-SFS-194 appears to define requirements for both hardware and software. The software aspects of L3-SFS-194 do not appear to be satisfied by the 1 trace to L4-SRUP-153. There appear to be other Uplink and OBC CDH requirements related to this L3 requirement. See the recommendations for examples of additional traces that should be created. L3-SFS-194 states ""The Spacecraft System shall be able to transmit data at a downlink rate of at least 61875.69kbps, at an Earth distance of at least 3.5 AU."" L4-SRUP-153 states ""The Uplink FSW shall transmit Downlink commands to the Downlink card at the maximum rate of one command per second in the order that they are received from the ground.""",5/10/05
ProjectA - TIM - 1559,C&DH Traceability Analysis: L3-SFS-699 not satisfied by L4-SROBC-29,3,"L3-SFS-699 does not appear to be satisfied by the 1 C&DH requirement (L4-SROBC-29). L3-SFS-699 states: ""The Flight Software subsystem shall monitor, control and report on mode transition events."" L4-SROBC-29 deals with determining whether a processor mode transition was due to POWER_ON or External Hardware Reset command. There is no mention of controlling or reporting on mode transition events. L3-SFS-699: The Flight Software subsystem shall monitor, control and report on mode transition events. L4-SROBC-29: Flight Software shall determine whether a processor mode transition was due to POWER_ON or External Hardware Reset command.",5/9/05
ProjectA - TIM - 1557,C&DH Traceability Analysis: L3-SFS-694 not satisfied by the existing L4 requirements traces,3,"L3-SFS-694 does not appear to be satisfied by the all of the traced C&DH requirements listed below. L3-SFS-694 states:""The Flight Software shall support flight software subsystem requirements, including processing commands and telemetry, storing and transmitting data, and maintaining flight software health."" None of the existing traced C&DH L4 requirements discuss maintaining the flight software health. L3-SFS-694: The Flight Software shall support flight software subsystem requirements, including processing commands and telemetry, storing and transmitting data, and maintaining flight software health. L4-SROBC-318: The OBC flight software shall provide a command to Reset Counters that resets telemetered command and error counters and data. L4-SROBC-301: Flight Software shall provide a command to restart the scrubbing of DRAM which will cause MS to start scrubbing from the first DRAM segment, and reset its housekeeping telemetry associated with DRAM scrubbing. L4-SROBC-298: Flight Software shall report DRAM and SRAM Memory errors through housekeeping telemetry. L4-SROBC-297: The DRAM memory checks shall be capable of detecting multiple errors in the DRAM. L4-SROBC-296: Flight Software shall provide background memory scrubbing of the triply redundant Error Detection and Correction (EDAC) DRAM on the memory card. L4-SROBC-295: Flight Software shall provide background memory scrubbing of the SRAM in the Flight Computer L4-SROBC-293: The Flight Software shall accept and execute commands to change the OBC state. L4-SROBC-262: Flight Software shall provide a mechanism to limit repetitive event messages generated. L4-SROBC-256: Flight Software shall support at least 256 telemetry monitor points. L4-SROBC-255: Valid spacecraft housekeeping and instrument housekeeping CCSDS telemetry packets acquired or constructed by the Flight Software telemetry acquisition function shall be made available to the telemetry monitoring function. L4-SROBC-125: Flight Software shall reset SC counters upon receipt of Reset Counters command. L4-SROBC-124: Flight Software shall enable or disable the execution of the requested RTS upon receipt of the real-time commands ENABLE_RTS or DISABLE_RTS from either the ground or another on-board software application. L4-SROBC-123: Flight Software shall stop execution of the requested RTS upon receipt of the real-time command STOP_RTS from either the ground or another on-board software application. L4-SROBC-122: Flight Software shall execute up to 12 commands per second. L4-SROBC-121: An RTS shall be DISABLED immediately after it has been loaded. L4-SROBC-110: Flight Software shall provide a Relative Time Sequence (RTS) stored command load and execution capability to support continuous spacecraft and instrument mission operations. L4-SROBC-106: TC task shall accept and execute a Reset Counters command, which resets its command and error counters. L4-SROBC-102: Flight Software shall make available, on demand, the current spacecraft time via library functions to all flight software applications. L4-SROBC-100: Flight Software shall send the time of the next 1 Hz pulse to the Framing Camera/VIR instrument via the 1553 bus, prior to the 1553 slot allocated to this function (currently at 0 milliseconds). L4-SROBC-89: S3 task shall process a GRAND message that passes a CRC check by removing the sync codes (2 bytes) and the length field (2 bytes), and sending the CCSDS telemetry packet to the Software Bus. L4-SROBC-88: S3 task shall calculate a CRC for each GRAND message and compare it against the CRC appended to the end of the message, discarding the message if the CRC does not match and updating a bad message counter. L4-SROBC-87: S3 task shall read Gamma Ray and Neutron Detector (GRAND) telemetry, MUC GRAND TLM FIFO, with a read frequency that avoids FIFO overflow. L4-SROBC-86: S3 task shall maintain counts of those MUC Instrument failure statuses that are cleared on read. L4-SROBC-85: S3 task shall maintain Housekeeping telemetry for the MUC Instrument Interface Status, updating the telemetry after each reading of the MUC Instrument Interface Status. L4-SROBC-84: S3 task shall read MUC Instrument Interface Status in a single HSS3 data block. L4-SROBC-83: S3 task shall forward the spacecraft Time Code message it received from the Software Bus to MUC, which in turn forwards it to GRAND, based on the op-code and slave address. L4-SROBC-82: S3 task shall be able to generate and send FIFO reset commands to the MUC to reset any one of the following Gamma Ray and Neutron Detector (GRAND) FIFOs: GRAND TLM, GRAND CMD, and TEST. L4-SROBC-81: S3 task shall be able to forward any commands destined to the MUC or to the MUC instruments (via MUC) that it receives from the Software Bus. L4-SROBC-79: S3 task shall accept and execute a RESET_TLM command, which resets its housekeeping telemetry. L4-SROBC-77: S2 task shall accept and execute a RESET_TLM command, which resets its housekeeping telemetry. L4-SROBC-76: S2 task shall send downlink telemetry data to the DownLink Card. L4-SROBC-75: S2 task shall receive telemetry data from the Downlink Card as specified in the ICD. L4-SROBC-74: S2 task shall send Downlink Card commands as specified in the ICD. L4-SROBC-73: S2 task shall be able to receive a Downlink Card Loopback Register Read command from the Software Bus and send the command via the S2 serial interface to the Downlink Card. Loopback results are sent to the Software Bus using the Software Bus stream id specified in the command. L4-SROBC-72: S2 task shall not initiate Downlink Card Loopback test by itself; the loopback test command must come from the Software Bus. L4-SROBC-71: S2 task shall be able to receive a Downlink Card Loopback Register Write command from the Software Bus and send the command via the S2 serial interface to the Downlink Card. L4-SROBC-325: An enable command shall be implemented requiring each Hardware Diagnostics test to be started within .5 second of the enable command. L4-SROBC-40: The results of the Hardware Diagnostics tests conducted during nominal operations shall be inserted into the designated portion of telemetry streams. L4-SROBC-39: The results of Hardware Diagnostics tests conducted during start-up shall be stored in fixed memory locations that will not be modified by processor resets. L4-SROBC-38: Flight Software hardware diagnostics shall accept commands to activate background or foreground hardware testing. L4-SROBC-37: Flight Software shall include commandable, background real-time hardware diagnostics for Flight Computer Input / Output Interfaces. L4-SROBC-35: All machine error interrupt services shall attempt to restore operations except in those cases where restoring operations can lead to fault conditions in which case the services will transition the task to a suspended state at a known location. L4-SROBC-34: All machine error interrupt services shall leave the processor in a known repeatable state. No service routine will be designed to skip command execution. L4-SROBC-33: Unless physically unavoidable, errors detected during startup processes shall not cause the restart processes to terminate before reaching their commanded termination location. L4-SROBC-32: If sufficient RAD-6000 and LIO processing resources are operable, restart operations shall progress to completion in SuROM Diagnostic (Monitor) Mode or Normal Mode. L4-SROBC-31: The Flight Software exception log shall fill each entry until it reaches the last entry (23); all subsequent entries overwrite the last location (23). L4-SROBC-30: Flight Software shall store RAD-6000 processor exception data in a log. L4-SROBC-29: Flight Software shall determine whether a processor mode transition was due to POWER_ON or External Hardware Reset command. L4-SROBC-28: Floating-Point Exception Intrpt Currently Masked? L4-SROBC-27: Supervisor Call Interrupt Restart as Cold Boot L4-SROBC-26: Floating-Point Unavailable Intrpt Suspend Offending Task L4-SROBC-25: Program Interrupt Suspend Offending Task L4-SROBC-24: Alignment Interrupt Suspend Offending Task L4-SROBC-23: External Interrupt INTERRUPT SERVICE L4-SROBC-22: Instruction Storage Interrupt Suspend Offending Task L4-SROBC-21: Data Storage Interrupt Suspend Offending Task L4-SROBC-20: Machine Check Interrupt Suspend Offending Task L4-SROBC-19: System Reset Interrupt COLD_RESTART L4-SROBC-18: Flight Software shall trap processor interrupts, make an Exception Log entry, and respond according to the following Exception/Required Action Tables: L4-SRUP-316: Upon initialization, the Uplink FSW shall read the RT address and set an identifier as 'A' if the address is 27 and 'B' if the address is 28. L4-SRUP-314: Flight Software shall accept and execute a RESET_TABLE_OPERATIONS command that terminates the current table load/edit session without affecting the onboard versions of the currently selected table, regardless of whether a table has been selected. L4-SRUP-313: Flight Software shall retain telemetry pertaining to a table commit command until another table select command or reset table operations command has been issued. L4-SRUP-312: The execution of a table commit operation shall disable subsequent commit operation to that table until the table is again selected. L4-SRUP-311: Flight Software shall reject a Table Commit command if a table load/edit session has not been initiated or dump-only is in effect. L4-SRUP-310: If the specified Checksum and the on-board Checksum are not equal, the Flight Software shall reject the new or edited table loads, increment an error counter, generate a significant event message, calculate a CRC for each 4K-bytes of the load, and transmit the CRCs in telemetry for ground analysis. L4-SRUP-309: If the specified Checksum and the on-board Checksum are equal, Flight Software shall immediately make the new or edited versions of the table available for use (COMMIT). L4-SRUP-307: Flight Software shall accept and execute a COMMIT_TABLE command that immediately makes the new or edited version of the table available for use. L4-SRUP-308: Flight Software shall accept and execute a COMMIT_TABLE_WITH_CHECKSUM command that compares the on-board Checksum with the expected Checksum specified in the command and performs the following based on the comparison results: L4-SRUP-306: Flight Software shall initialize and maintain a SESSION_WORD_COUNT for the total number of words loaded for the currently selected table. L4-SRUP-305: Flight Software shall initialize and maintain an 8-bit EXCLUSIVE-OR checksum for the currently selected table. L4-SRUP-304: Flight Software shall maintain running calculations of essential variables (i.e., checksum) to be used for verification of a good table load prior to table use. L4-SRUP-303: Flight Software shall accept and execute an Abort Table Dump command. L4-SRUP-302: Flight Software shall reject a Table Dump command if a table load/edit session has not been initiated, a dump is already active, or the specified dump range extends beyond the size of the table. L4-SRUP-301: Flight Software shall accept and execute a DUMP_TABLE command, specifying an offset into the table to start dumping, the number of words to dump from the offset, and the number of copies to dump. L4-SRUP-300: Flight Software shall reject any Table Load command that is issued when a table load/edit session has not been initiated or when a dump-only state has been specified, or that specifies loading data beyond the size of the table. L4-SRUP-299: Flight Software shall accept and execute a LOAD_TABLE command to load between 1 and 121 words of table data at a specified word offset from the beginning of the currently selected table. L4-SRUP-298: Flight Software shall accept and execute a SELECT_TABLE command, which initializes a table load/edit ""session"" to load or dump data for a specified table. L4-SRUP-297: Flight Software shall accept and execute a Reset Counters command that resets command and error counters. L4-SRUP-295: Flight Software shall maintain counters for error-free Table operations commands received and processed. L4-SRUP-296: Flight Software shall maintain counters for Table operations commands that were not processed due to error conditions, and generate event messages for error conditions. L4-SRUP-294: The Uplink FSW shall verify a Table Load command packet checksum and word length prior to execution. If the calculated checksum does not match the checksum within the command packet or the word length is not as expected, the command is rejected. L4-SRUP-288: Uplink RTS' shall dispatch up to 10 commands per second. L4-SRUP-287: An RTS shall be DISABLED immediately after it has been loaded. L4-SRUP-286: RTSs shall be DISABLED upon a COLD_RESTART with the exception of RTS #1 (the Start-Up RTS). L4-SRUP-285: Flight Software shall ABORT the execution of that specific RTS buffer. L4-SRUP-284: Flight Software shall reflect the violation in housekeeping telemetry L4-SRUP-283: Flight Software shall generate a significant event message that describes the violation. L4-SRUP-282: Flight Software shall discard the invalid RTS command. L4-SRUP-281: In the event an RTS command fails the validation check: L4-SRUP-280: Prior to the execution of each individual RTS command, the Flight Software shall verify the validity of the following command parameters: RTS command length, and Embedded command checksum. L4-SRUP-278: Flight Software shall execute commands within the RTS buffer (in position order) as the relative time-tag specified in the RTS command expires. L3-SFS-695: The Flight Software shall implement major functions including: attitude determination and control (ACS), command & data handling (C&DH), thermal control (TCS), and interface support (XB, HSS, SCSA) on required processors. L4-SRUP-324: The Uplink FSW shall maintain a status message containing the following parameters: L4-SRUP-325: Timestamp. L4-SRUP-326: Status RT ID. L4-SRUP-327: Active Select State. L4-SRUP-328: Uplink Command Count. L4-SRUP-329: Uplink Transmitter Select. L4-SRUP-330: Uplink CCW Boot Control. L4-SRUP-331: FP Log Entry Count. L4-SRUP-332: OBC Monitor Status. L4-SRUP-333: OBC WDT Status. L4-SRUP-334: Uplink Reset Count. L4-SRUP-335: Command Timeout. L4-SRUP-336: 1553 Status. L4-SRUP-205: The Uplink FSW shall support a 19.2 Kbps serial interface used for communication with the redundant Uplink Card. L4-SRUP-206: The protocol shall facilitate the transfer of commands, status messages, and fault log entries between the uplink cards. L4-SRUP-207: The Uplink FSW shall be able to send and receive commands at a maximum rate of 1 Hz. L4-SRUP-208: The Uplink FSW shall send and receive the Uplink status message at a rate of 1 Hz. L4-SRUP-209: The Uplink FSW shall be able to send and receive fault log entries are a maximum rate of 1 Hz. L4-SRUP-210: The serial interface shall be full duplex with parity check. L4-SRUP-211: The serial data protocol shall minimize the loss of data during transfer. L4-SRUP-218: Uplink fault protection events shall be compatible with those generated by the OBC. L4-SRUP-221: The mate fault log shall function in the same way as the self fault log. L4-SRUP-222: The Uplink FSW shall transfer every 10 new event messages to its mate via the UL-UL serial interface. L4-SRUP-223: The Uplink FSW shall transfer a specified number of events to its mate via the UL-UL serial interface, as follows: L4-SRUP-224: The Uplink FSW shall transfer a specified range of event messages on command. L4-SRUP-225: On command, the Uplink FSW shall dump fault log entries for either log. L4-SRUP-226: Log entries shall replace spare telemetry in the Uplink Critical VCDU. L4-SRUP-227: The Uplink FSW shall dump the specified range of event messages in telemetry on command. L4-SRUP-228: The Uplink FSW shall clear both fault logs during initialization or on command. L4-SRUP-229: The Uplink FSW shall maintain a count of entries for both fault logs in telemetry. L4-SRUP-240: The Uplink FSW shall include telemetry monitor evaluation, fault monitor evaluation, and fault response functions. L4-SRUP-242: Telemetry monitor evaluation - shall have up to 4 telemetry identifiers (numeric or variable name), 4 conditional values (0/1), 1 persistence value (cycles), per check which are table parameters. L4-SRUP-243: Fault monitor evaluation - shall have up to
6 fault detection flag identifiers (numeric or variable name), logic condition (and/or), and 2 fault response identifiers (numeric) per monitor which are table parameters. L4-SRUP-245: The Uplink FSW shall have a predetermined number of checks, monitors, and responses available for use. These are (at a minimum) 30 Telemetry Monitors, 20 Fault Monitors, and 20 Fault Responses (primary and redundant). L4-SRUP-247: The Uplink FSW monitors shall call a fault response based on the RT ID (if A then response 1, ir B then response 2). This correlates to the 2 fault responses in the monitor table, where the responses can be identical or CEU unique (CEU_AonBoff or CEU_AoffBon). L4-SRUP-248: The Uplink FSW telemetry monitor logic shall provide telemetry indicating current state and evaluation result for each monitor: L4-SRUP-249: State (enable/disable) - enabled default state, command enable/disable. L4-SRUP-250: Last check result (fail/pass) - updated every cycle based on telemetry. L4-SRUP-251: Persistence counter - number of contiguous cycles at current evaluation state. L4-SRUP-252: Highest number of contiguous out-of-limit cycles. L4-SRUP-253: Total limit out-of-limit cycles. L4-SRUP-254: ail flag status - set if check fails for persistnece, clear by command. L4-SRUP-255: The Uplink FSW fault monitor logic shall provide telemetry indicating current state and evaluation result for each monitor. L4-SRUP-256: State (enabled/disabled) - enabled default state, command enable/disable. L4-SRUP-257: Tier Status (0 to 4) - default to 0, increments when monitor fault detected and responded to up to 4, disables monitor when max tier reached (table value). L4-SRUP-258: The Uplink FSW fault response logic shall provide telemetry indicating current state and execution status for each response. L4-SRUP-259: State (enabled/disabled) - enabled default state by RT ID. L4-SRUP-260: Execution status (idle/active) - current status. L4-SRUP-265: The Uplink FSW shall check for faults and evaluate monitors in a repeatable, time synchronous manner. L4-SRUP-266 The Uplink FSW fault protection software shall execute any pending commands prior to telemetry evaluation, to ensure command responses have priority over fault detection. L4-SRUP-267: Evaluation at 1 Hz (if evaluation is enabled). L4-SRUP-268: All (enabled) telemetry monitors evaluated. L4-SRUP-269: All (enabled) fault monitors evaluated until a fault is detected and a response is initiated. L4-SRUP-270: The Uplink FSW shall evaluate its critical interfaces for faults and set flags for FP software. L4-SRUP-271: High Speed Serial 1 (HSS1) interface shall be valid while the OBC health status packet is received and the time stamp is incrementing (OBC_S1_State). L4-SRUP-272: Uplink Serial Interface shall be valid while the UL Status Message packet is being received and the time stamp is incrementing (UL_Serial_State). L4-SRUP-273: 1553 Data Bus shall be valid while the UL RT is receiving the OBC status message (time at tone), which is incrementing (RT_1553_State). L4-SRUP-274: The Uplink FSW shall set the CEU power state (OBC_Power) prior to evaluating faults and responding. L4-SRUP-317: The Uplink FSW shall maintain the power status for critical components, which shall be the combination of two independent critical telemetry points. L4-SRUP-319: The critical component power state shall be considered off when both critical telemetry points are ""Off"" or ""0"". For any other combination, the critical component power state shall be considered on. L4-SRUP-320: The Uplink FSW shall maintain an active select state, which shall be 'self', 'mate', or 'none'. L4-SRUP-321: Upon initialization, the Uplink FSW shall read the CEU critical power status and mate status message and set the active select state accordingly (per ProjectA Fault Protection Design Note). L4-SRUP-322: The active select state shall be commandable. L4-SRUP-323: Re-initialization of the active select state shall be commandable. L4-SROBC-141: If a Virtual Recorder with OVERWRITE_DISABLED becomes full, the OBC-C&DH software shall discard newly arriving telemetry data. L4-SROBC-142: When a Virtual Recorder operating in OVERWRITE_ENABLE mode becomes full (i.e., its QUOTA becomes exhausted), the OBC-C&DH software shall overwrite data in the oldest recorded block with the newly arriving data. L4-SROBC-143: The OBC-C&DH software shall provide the capability to store data (by Application-ID) using packet Sequence Number based filtering. If X is zero, the packet will not be stored. If X is greater than zero, the packet will be stored if and only if the Sequence Number of the packet modulo X is less than N. L4-SROBC-160: The OBC-C&DH software shall accept and execute a Dump_Event_Buffer command, which starts a dump of the Event Virtual Recorder in the real time data/telemetry stream. L4-SROBC-161: The OBC-C&DH software shall accept and execute an ABORT_EVENTS_BUFFER_DUMP command, which terminates the dumping of recorded significant events and messages in the real-time data/telemetry stream. L4-SROBC-162: The OBC-C&DH software shall accept and execute a SELECT_DS_FILTER command, which selects the specified storage filter table for use in subsequent CCSDS packet filtering operations. L4-SROBC-163: The OBC-C&DH software shall accept and execute a RESET_DS_HOUSEKEEPING command, which resets housekeeping data that is normally reported in the real-time telemetry stream. L4-SROBC-164: The OBC-C&DH software shall accept and execute a pause playback command, which pauses playbacks, retransmissions, and dumps of all virtual recorders. L4-SROBC-165: The OBC-C&DH software shall accept and execute a resume playback command, which resumes playbacks, retransmissions, and dumps of all virtual recorders. L4-SROBC-166: The OBC-C&DH software shall accept and execute a JAM_FILTER factor command, which given the application id of a packet will modify the filter factors for the filter table currently in use. L4-SROBC-168: The OBC-C&DH software shall accept and execute a START_CONTINUOUS_PLAYBACK command for the requested Virtual Recorder. L4-SROBC-176: Flight Software shall maintain a ""Working Buffer"" within Software Manager that is used for temporary storage of uplinked data, and is addressable in certain commands as an offset to a virtual address base of F0000000 hexadecimal. L4-SROBC-177: Flight Software shall maintain a special command for VML memory load when the command address matches F1xxyyyy hexadecimal where xx shall be the VM file buffer number, and yyyy shall be the offset address for VM files. L4-SROBC-178: Flight Software shall implement an Enable command with time out timer and Disable command for any memory access to EEPROM, which includes memory load, memory copy, or table commands. L4-SROBC-181: Flight Software shall accept and execute a Load Memory command to load SRAM, DRAM, EEPROM, and Working Buffer Flight Computer memory locations. L4-SROBC-183: Flight Software shall accept and execute a NON_INTERRUPTABLE_LOAD_MEMORY command that disables interrupts during the load of between 1 and 6 (16-bit) words into processor SRAM. L4-SROBC-222: Flight Software shall telemeter, in a single CCSDS packet, the combined MEMORY_DWELL data contents at a rate of no faster than one packet per second. L4-SROBC-224: Flight Software shall support up to 64 distinct MEMORY_DWELL addresses. L4-SROBC-226: Flight Software shall accept and execute commands that can write to and read from any single specified memory address.",5/9/05
ProjectA - TIM - 1556,C&DH Traceability Analysis: L3-SFS-650 not satisfied by L4-SROBC-11 and L4-SROBC-9,3,"L3-SFS-650 does not appear to be satisfied by the 2 C&DH requirements (L4-SROBC-11 and L4-SROBC-9). L3-SFS-650 states: ""The C&DH subsystem shall provide the capability for processor re-initialization after a processor reboot resulting from a cold or warm start."" L4-SROBC-11 and L4-SROBC-9 only discuss the capability of reinitializing from a ""COLD_RESTART"". Reinitializing from a warm start is not addressed by L4-SROBC-11 and L4-SROBC-9. L3-SFS-650: The C&DH subsystem shall provide the capability for processor re-initialization after a processor reboot resulting from a cold or warm start. L4-SROBC-11: All data shall be reinitialized from EEPROM. L4-SROBC-9: Provided processor hardware is operating nominally, Flight Software shall perform the following on a Flight Computer COLD_RESTART:",5/9/05
ProjectA - TIM - 1555,C&DH Traceability Analysis: L3-SFS-408 not satisfied by L4-SROBC-251,3,"L3-SFS-408 does not appear to be satisfied by the one C&DH requirement (L4-SROBC-251). L3-SFS-408 states: ""The TCS shall provide sufficient temperature monitor points to evaluate the spacecraft thermal performance in-orbit and on the ground for maintaining safe operating temperatures within limits."" L4-SROBC-251 only discusses the capability of performing the temperature reading processing for all thermal data points at 1 Hz, but does not address the control function necessary for ""maintaining safe operating temperatures within limits"". L3-SFS-408: The TCS shall provide sufficient temperature monitor points to evaluate the spacecraft thermal performance in-orbit and on the ground for maintaining safe operating temperatures within limits. L4-SROBC-251: Thermal Control Software shall be capable of performing the temperature reading processing for all thermal data points at 1 Hz.",5/9/05
ProjectA - TIM - 1553,"EngCntrl Software Test 17, XFS On Mode Fault Test, Does Not Fully Verify the Linked DD-310 and EngCntrl SRS Requirements",3,"The EngCntrl test script fsw_test_17 incorporates numerous other test files using the “start” command. The result is a test script that is dozens of pages in length. Other than linking the DD-310 and EngCntrl SRS requirements to fsw_test_17, there is no further assignment of requirements to “test points” within the script. Together, these characteristics make it difficult to determine where in the script a particular linked requirement is verified. The results of IV&V analysis indicates that not all the linked EngCntrl SRS requirements are verified by fsw_test_17. IV&V notes that the SRS requirements are linked to only this test, while many of the DD-310 requirements are also linked to other EngCntrl tests. Given this, it may be the case that the other linked tests completely verify a DD-310 requirement where there is an assessment (in this TIM) that Test 17 has not adequately addressed it. The attachment to this TIM identifies those requirements that IV&V considers to be: (1) Not verified by the script as indicated by a “Sub-Issue number” and (2) Potentially not verified by the script as indicated by a “Comment”. As for item 2, IV&V does not have sufficient resources or time to fully determine if the requirement in question has/has not been fully verified by the script (due to the script characteristics mentioned above).",5/5/05
ProjectA - TIM - 1552,"EngCntrl Software Test 14, XFS Init Mode Fault Test, Does Not Fully Verify the Linked DD-310 and EngCntrl SRS Requirements",3,"The EngCntrl test script fsw_test_14 incorporates numerous other test files using the “start” command. The result is a test script that is dozens of pages in length. Other than linking the DD-310 and EngCntrl SRS requirements to fsw_test_14, there is no further assignment of requirements to “test points” within the script. Together, these characteristics make it difficult to determine where in the script a particular linked requirement is verified. The results of IV&V analysis indicates that not all the linked EngCntrl SRS requirements are verified by fsw_test_14. IV&V notes that the SRS requirements are linked to only this test, while many of the DD-310 requirements are also linked to other EngCntrl tests. Given this, it may be the case that the other linked tests completely verify a DD-310 requirement where there is an assessment (in this TIM) that Test 14 has not adequately addressed it. The attachment to this TIM identifies those requirements that IV&V considers to be: (1) Not verified by the script as indicated by a “Sub-Issue number” and (2) Potentially not verified by the script as indicated by a “Comment”. As for item 2, IV&V does not have sufficient resources or time to fully determine if the requirement in question has/has not been fully verified by the script (due to the script characteristics mentioned above).",5/5/05
ProjectA - TIM - 1551,"EngCntrl Software Test 11, Nominal Standby Mode Test, Does Not Fully Verify the Linked DD-310 and EngCntrl SRS Requirements",3,"The EngCntrl test script fsw_test_11 incorporates numerous other test files using the “start” command. The result is a test script that is dozens of pages in length. Other than linking the DD-310 and EngCntrl SRS requirements to fsw_test_11, there is no further assignment of requirements to “test points” within the script. Together, these characteristics make it difficult to determine where in the script a particular linked requirement is verified. The results of IV&V analysis indicates that not all the linked EngCntrl SRS requirements are verified by fsw_test_11. IV&V notes that the SRS requirements are linked to only this test, while many of the DD-310 requirements are also linked to other EngCntrl tests. Given this, it may be the case that the other linked tests completely verify a requirement where there is an assessment (in this TIM) that Test 11 has not adequately addressed it. The attachment to this TIM identifies those requirements that IV&V considers to be: (1) Not verified by the script as indicated by a “Sub-Issue number” and (2) Potentially not verified by the script as indicated by a “Comment”. As for item 2, IV&V does not have sufficient resources or time to fully determine if the requirement in question has/has not been fully verified by the script (due to the script characteristics mentioned above).",5/4/05
ProjectA - TIM - 1550,"EngCntrl Software Test 10, Safe Mode Fault Test, Does Not Fully Verify the Linked DD-310 and EngCntrl SRS Requirements",3,"The EngCntrl test script fsw_test_10 incorporates numerous other test files using the “start” command. The result is a test script that is dozens of pages in length. Other than linking the DD-310 and EngCntrl SRS requirements to fsw_test_10, there is no further assignment of requirements to “test points” within the script. Together, these characteristics make it difficult to determine where in the script a particular linked requirement is verified. The results of IV&V analysis indicates that not all the linked EngCntrl SRS requirements are verified by fsw_test_10. IV&V notes that the SRS requirements are linked to only this test, while many of the DD-310 requirements are also linked to other EngCntrl tests. Given this, it may be the case that the other linked tests completely verify a requirement where there is an assessment (in this TIM) that Test 10 has not adequately addressed it. The attachment to this TIM identifies those requirements that IV&V considers to be: (1) Not verified by the script as indicated by a “Sub-Issue number” and (2) Potentially not verified by the script as indicated by a “Comment”. As for item 2, IV&V does not have sufficient resources or time to fully determine if the requirement in question has/has not been fully verified by the script (due to the script characteristics mentioned above).",5/4/05
ProjectA - TIM - 1549,"EngCntrl Software Test 9, Nominal Safe Mode Test, Does Not Fully Verify the Linked DD-310 and EngCntrl SRS Requirements",3,"The EngCntrl test script fsw_test_9 incorporates numerous other test files using the “start” command. The result is a test script that is dozens of pages in length. Other than linking the DD-310 and EngCntrl SRS requirements to fsw_test_9, there is no further assignment of requirements to “test points” within the script. Together, these characteristics make it difficult to determine where in the script a particular linked requirement is verified. The results of IV&V analysis indicates that not all the linked EngCntrl SRS requirements are verified by fsw_test_9. IV&V notes that the SRS requirements are linked to only this test, while many of the DD-310 requirements are also linked to other EngCntrl tests. Given this, it may be the case that the other linked tests completely verify a requirement where there is an assessment (in this TIM) that Test 9 has not adequately addressed it. The attachment to this TIM identifies those requirements that IV&V considers to be: (1) Not verified by the script as indicated by a “Sub-Issue number” and (2) Potentially not verified by the script as indicated by a “Comment”. As for item 2, IV&V does not have sufficient resources or time to fully determine if the requirement in question has/has not been fully verified by the script (due to the script characteristics mentioned above).",5/4/05
ProjectA - TIM - 1548,Loss of Requirement Definition Fidelity in the VML SRS,2,"Table 1 in the VML SRS maps multiple SCFSRD-25870 requirements to 16 VML requirements (these requirements are also found in Section 5). The requirement fidelity found in the L3 is degraded in the linked VML children. This is primarily due to the way this SRS has allocated requirements: (1) Section 5 contains “VM Language Requirements” (also referred to as ""VM Task Interface Requirements"" in Table 1 and as ""VML Interface Requirements"" in Table 2) and (2) Table 2 contains VMLFC Internal Requirements that are not included in Section 5 and therefore are not treated as “official” VML requirements that must be verified (note: these are detailed requirements that to some degree directly relate to the SCFSRD-25870 requirements). For example, there are 31 L3 requirements mapped to VM001.1: VM001.1 – Sequence Execution Capabilities VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 12 (twelve) Virtual Machines, capable of executing on-board blocks and sequences. A subset of the 31 linked L3 requirements are: 10.6.5.0-1 The Flight Software shall support VM sequences containing of up to 4000 instructions in length. 10.6.5.0-2 The Flight Software shall provide for initiation of sequences by other sequences. 10.6.5.0-3 The Flight Software shall provide for at least 12 concurrent threads of sequence execution. 10.6.5.0-4 The Flight Software shall execute absolute-time sequence instructions within 0.1 second of the spacecraft clock, inclusive of execution of indicated absolute Flight Software clock time. This value is independent of inaccuracies in Flight Software time. 10.6.5.0-5 The Flight Software shall execute relative-time sequence instructions within 0.1 second, inclusive of the indicated time relative to the preceding instruction. This example serves to indicate how the fidelity of the parent L3 requirements are degraded/lost in tracing to the VML SRS. In addition, differences between the parent L3 and the VMLFC requirements found in Table 2 are noted. An example is: L3-SFS-800: The Flight Software shall support VM sequences containing of up to 4000 instructions in length. VML.3.5.k: The sequencing software shall support sequences of up to at least 1000 instructions in length.",4/22/05
ProjectA - TIM - 1547,EngCntrl Test 12 Requirements Not Included in Test 11,2,"An e-mail received by IV&V on March 31, 2005, concerning EngCntrl requirements mapping, stated that EngCntrl FSW Test 12 was to be integrated with Test 11. The script for Test 12 was supposed to verify EngCntrl SRS requirements 3.7.2.2.1 and 3.7.2.2.2. It is noted that no script is included in Test 12, only these two requirements are found. The script for Test 11 does not incorporate the two requirements from Test 12 nor are they verified by the script. ***Note, the referenced e-mail is attached to this TIM in the RelationshEngine area.",4/21/05
ProjectA - TIM - 1546,"ProjectA OBC C&DH Flight Software Test Procedure, Section 11.7, VM Test, Does Not Fully Verify the Linked VML SRS Requirements",2,"This test executes script: vm_runseqtest1(). This script contains three separate tests which are identified as Test 1, Test 2 and Test 3 in the Action Column. Issues: Sub-Issue #1: Requirements linked to the individual tests in the Requirement ID Column would tend to indicate that all six of the VML SRS requirements are verified by Tests 1-3. However, these six major requirements contain sub-requirements. The following sub-requirements are not linked to or verified by these tests: VM001.4, VM002.2, VM004.1, VM004.2, VM004.3 and VM005.3. Sub-Issue #2: The Expected Results Column does not adequately identify the ""expected results"". Statements such as ""Try to unload out-of-bounds Engines, Request housekeeping telemetry"" seem to be more associated with ""test descriptions"" rather than to characterize the ""expected test results"".",4/6/05
ProjectA - TIM - 1545,"ProjectA OBC C&DH Flight Software Test Procedure/Script vm_runseqtest1(), Test #3, Does Not Fully Verify the Linked VML SRS Requirements",2,"The third test within script vm_runseqtest1() is structured as follows: ;************************************************************************ ; REQUIREMENTS COMPLIANCE: ; The following Requirements are met by the next step in this execution: ; VM001.3 - VML Sequence Variables. ; For now (Aug/2004) Global Variables (GV's) are just spares ; embedded in the FSW code(SRAM). ; Yet, this test can verify that VM Task integrates the VML ; capability of reading & writing to Global Variables. ; WR Capability - Modification of VML GV's via VML WR-to-GV Cmd ; RD Capability - Reading of modified GV's after issuing a GV ; Table Dump. ; ; VM003.2 - Global Variable Telemetry - (Observation of VML Event Msgs at ; screen #5 meets this requirement). ;************************************************************************ ; Modifying VML GVs and observing them ; as TLM via GV Table Dump: ans = ask ""Proceed with GV's RD & WR Test?"" buttons(""Yes"",""No"") if (ans = ""Yes"") then @vs:gv_set_int 1, 45 wait 1 @vs:gv_set_int 2, 45 wait 1 @vs:gv_set_int 3, 45 wait 1 @vs:gv_set_int 4, 45 wait 1 @vs:gv_set_int 5, 45 wait 1 @vs:gv_set_int 6, 45 wait 1 @vs:gv_set_int 7, 45 wait 1 @vs:gv_set_int 8, 45 wait 1 @vs:gv_set_int 9, 45 wait 1 @vs:gv_set_int 10, 45 wait 1 @vs:gv_set_int 11, 255 wait 1 @vs:gv_set_int 12, 255 wait 1 @vs:gv_set_int 13, 255 wait 1 @vs:gv_set_int 14, 255 wait 1 @vs:gv_set_int 15, 255 wait 1 @vs:gv_set_int 16, 255 wait 1 @vs:gv_set_int 17, 255 wait 1 @vs:gv_set_int 18, 255 wait 1 @vs:gv_set_int 19, 255 wait 1 @vs:gv_set_int 20, 255 wait 5 endif ;Now Dump GV Table and observe ;GVs modified. ;Make sure to watch the data being shown ;in the Vml_GV Table Dump... ans = ask ""Request GV Table Dump?"" buttons(""Yes"",""No"") if (ans = ""Yes"") then @sm:select_sys_table 125, 2, 5 ;same as --> @tselect VmGvTable Active Dump_Only wait 10 @sm:dump_table 0,0,1 ;same as --> @tdump VmGvTable 0 -1 wait 10 endif Issues: Sub-Issue #1: Verification of VM001.3 This requirement is stated as follows: Through VM Task interface, VML Flight Component shall provide global variables with read/write accessibility to active sequences and spacecraft subsystems. The statement (For now (Aug/2004) Global Variables (GV's) are just spares embedded in the FSW code(SRAM). Yet, this test can verify that VM Task integrates the VML capability of reading & writing to Global Variables. WR Capability - Modification of VML GV's via VML WR-to-GV Cmd; RD Capability - Reading of modified GV's after issuing a GV Table Dump.) raises concern whether the full intent of this requirement is verified. It appears that the test is designed for an incomplete FSW build and that the requirement “read/write accessibility to active sequences and spacecraft subsystems” is not verified. In addition, Table 2 in the VML SRS states (vml_fsw1.scr will have the ability to request table dumps for readings of the Global Variables on-board. It will also be able to write to Global Variables via VML Command). The test does not appear to address “the global variables on-board”. Sub-Issue #2: Verification of VM003.2. This requirement is stated as follows: VM Task shall provide interface storage and transmission of the VMLFC global variables in sequences/blocks being executed. The test does not appear to deal with the “VMLFC global variables in sequences/blocks being executed”; therefore, this requirement is not verified. Sub-Issue #3: There are 24 S912-GR3400 requirements that are linked to the two VML SRS requirements associated with this test. It is noted that the Project’s approach to verify parent requirements is through verification of children (to the extent possible). It is unclear if this test can be used to verify the linked L3 parent requirements, if this is the intent.",4/5/05
ProjectA - TIM - 1544,"ProjectA OBC C&DH Flight Software Test Procedure/Script vm_runseqtest1(), Test #2, Does Not Fully Verify the Linked VML SRS Requirements",2,"The second test within script vm_runseqtest1() is structured as follows: ;************************************************************************ ; REQUIREMENTS COMPLIANCE: ; The following Requirements are met by the next step in this execution: ; VM005.1 - VML Sequence Loading - (Observation of VML Event Msgs at ; screen #1 meets this requirement). ; VM005.2 - VML Sequence Memory - (Observation of VML Event Msgs at ; screen #1 meets this requirement). ; VM002.1 - VML Command Interface - ; (verify #4 & #7 for VML-SC Cmd Interface). ; ;*********************************************************************** ans = ask ""Start Sequence Loading & Execution?"" buttons(""Yes"",""No"") if (ans = ""Yes"") then ; Load Binary files into DRAM and Exec them %mem_block save sm_memload from ""vml_test8.pre"" wait 2 @sm_memload 0xF1140000 0 -1 4 wait 3 ;Send a VML command to read & load the Files in DRAM @vs:load 12,""d:/fb20/vml_test8.mod"" wait 1 wait 60 ;These SEQs run for 60 secs each... endif ; Request HK Telemetry again ans = ask ""Request VM HK Telemetry?"" buttons(""Yes"",""No"") if (ans = ""Yes"") then @vs:hk_tlm_request endif ; Playback SEQ Commands sent to S/C ; Make sure to watch the data being logged into ; the pakts stat under VC23_Recorder. ; Watch the stat of the data at the ds_summary. ; The raw data should be looked upon in the ans = ask ""Request VML-SEQ Command Playback?"" buttons(""Yes"",""No"") if (ans = ""Yes"") then ans = ask ""First time Commanding Playback since boot?"" buttons(""Yes"",""No"") if (ans = ""Yes"") then @ds:start_playback DataSet_0, VR9_MASK else @ds:start_playback DataSet_1, VR9_MASK endif wait 5 endif Issues: Sub-Issue #1: Verification of VM002.1. This requirement is stated as follows:VM Task shall provide interface for time synchronization between VM Engines and spacecraft. Table 2 in the VML SRS states: vml_fsw2.scr will change the S/C time and Event Message containing VML time synch will be observed. It is unclear if the scripts mentioned above perform this function. There are no specific pass/fail criteria to show that the time synchronization has been performed correctly or not. Sub-Issue #2: Verification of VM005.1. This requirement is stated as follows: VM Task shall provide capability to accept sequence loads without interrupting a thread of execution. Table 2 in the VML SRS states: vml_fsw5.scr : Setp #1: Load a sequence from MAESTRO database into DRAM. Step #2: Send VML_Load & VML_Spawn commands in order to load sequence into an engine and start its execution. Step #3: Observe TLM on the initialization and continuity of first sequence execution. Step #4: Start the load of a different sequence from MAESTRO database into DRAM. Step #5: Observe on-going execution of sequence #1 by verifying VM engine # & current function Telemetry. It is unclear if the scripts mentioned above perform this function. There are no specific pass/fail criteria to show that the load was accepted and that sequence execution was not interrupted. Sub-Issue #3: Verification of VM005.2 This requirement is stated as follows: VM Task shall provide capability to read a sequence from a file buffer and to notify Ground System on anomalies on that read. Table 2 in the VML SRS states: Execution of vml_fsw5.scr Steps #1 & #2 will verify this Requirement. It is unclear if these were actually performed during the test and whether any read anomalies were created. Sub-Issue #4: There are 14 L3 SCFSRD (S912-GR3400) requirements that are linked to the three VML SRS requirements associated with this test. It is noted that the Project’s approach to verify parent requirements through verification of children (to the extent possible). It is unclear if this test can be used to verify the linked L3 parent requirements, if this is the intent.",4/5/05
ProjectA - TIM - 1543,"ProjectA OBC C&DH Flight Software Test Procedure/Script vm_runseqtest1(), Test #1, Does Not Fully Verify the Linked VML SRS Requirements",2,"The first test within script vm_runseqtest1() is as follows: ;************************************************************************ ; REQUIREMENTS COMPLIANCE: ; VM001.1 - This test verifies the MAX & MIN number of Engines and ; the integration of the VML Flight Component as a subsystem ; of ProjectA FSW platform. ; Send a VML Command to the higher & lower range of Engines: ; Engines ""0"" and ""13"". ; Observe the HK Telemetry command counter indication that ; a VML Command has been sent and accepted (error counter remains ; equal to zero). ; ; VM001.2 - Verify that ""Engine Current State"" & ""Engine Load State"" ; Telemetry Points at screen 6 are ""UNLOADED"" (0) and ""NEVER ; USED"" (6). ; VM003.1 - This observation also validates the ""VML Channeled Telemetry"" ; ; VM002.3 - Observation of screen #7 with HouseKeeping Telemetry points ; meets this requirement. ; VM006.1 - Observation of screen #1 with VML Event Messages meets this ; requirement. ; ;*********************************************************************** ans = ask ""Test for Engine Config Limits?"" buttons(""Yes"",""No"") if (ans = ""Yes"") then @vs:unload 0 ;Verify the Evnt Msg: ""VM 0 out of range can't unload"" @vs:unload 13 ;Verify the Evnt Msg: ""VM 13 out of range can't unload"" @vs:hk_tlm_request ;Verify HK Tlm for vm_cmd_cnts & vm_cmd_err_cnts. These ;counters should increase. wait 2 endif Issues: Sub-Issue #1: Verification of VM001.1. This requirement is stated as follows: VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 12 (twelve) Virtual Machines, capable of executing on-board blocks and sequences. The linked test only shows that out of range commands are rejected. It does not verify the requirement by showing that 12 VMs capable of executing on-board blocks and sequences can be run. It should be noted that there are numerous S912-GR3400 requirements that are linked to this single VML SRS requirement. Because it is the Project’s approach to verify parent requirements through verification of children (to the extent possible) this test will not verify the parent L3 requirements either. Sub-Issue #2: Verification of VM003.1: This requirement is stated as follows: VM Task shall provide interface for VML internal Telemetry storage and transmission via Software Bus. It is unclear how the statement (This observation [presumably the two telemetry points from the previous step] also validates the ""VML Channeled Telemetry"") validates the linked requirement. It seems that observing only two points out of an unknown number of VML points does mot adequately address this requirement. Sub-Issue #3: Verification of VM002.3. This requirement is stated as follows: VM Task shall provide proper interface to accept and reject commands and housekeeping packet generation. It is unclear how the statement (Observation of screen #7 with HouseKeeping Telemetry points meets this requirement.) is adequate to verify this requirement. There are no specific pass/fail criteria for “housekeeping packet generation”. If the intent is to check all VM commands, this test does not verify the requirement as only one legal VS command is sent. Sub-Issue #4: Verification of VM006.1. This requirement is stated as follows: VM Task shall provide interface for VML internal Event Reports to be logged into Error Handler task with logging capabilities. It is unclear how the statement (Observation of screen #1 with VML Event Messages meets this requirement.) is adequate to verify this requirement, e.g., VML internal Event Reports logged into the Error Handler task are apparently not present(the contents of the Event Report is not defined). There are no specific pass/fail criteria for determining whether the content of screen #1 is correct. Sub-Issue #5: There are 42 S912-GR3400 requirements that are linked to the five VML SRS requirements associated with this test. It is noted that the Project’s approach to verify parent requirements is through verification of children (to the extent possible). It is unclear if this test can be used to verify the linked L3 parent requirements, if this is the intent.",4/4/05
ProjectA - TIM - 1542,Build 3.0 OBC Code: Inadequate/Outdated source code comments,4,"Issue: Based upon IV&V verification, the in-line descriptive source code comments for the ProjectA Build 3.0 OBC source code are often inadequate or missing and/or outdated. Several header comment blocks contain blanks entries for one or more of the following entries: - Author - Purpose - Functions Contained - Assumptions and External Effects - Date Written, and Modification History. Rather than identifying every single instance of this problem, this TIM provides specific examples for 13 variations of this problem found throughout the OBC code. 1.) The file, ""tg_glob.h"", is missing entries for ""Purpose"", ""Functions Contained"", ""Assumptions and External Effects"", and ""Modification History"" Source Code References: File - ../appbuild_03r00_fsw/tg/inc/tg_glob.h: 1: /*============================================================================= 3: ** tg_glob.h 7: ** Purpose: 9: ** Functions Contained: 11: ** Assumptions and External Effects: 13: ** Date Written: 03/13/99 15: ** Modification History: 16: ** MM/DD/YY CR-xxxx F. Last, Organization 17: ** - change description 19: **============================================================================*/ 2.) Files ""di_glob.h"", ""xbserver.c"", ""md_addr.c"", and ""xb_summit_io_utils.c"" contain no comments Source Code References: File - ../appbuild_03r00_fsw/di/inc/di_glob.h: (Note: referenced source code represents this source code in its entirety) 1: void 2: diDummyFcn( void ); 3: 4: void 5: di_command_exec( diCmdPktFmt * diCmdPtr ); 6: 7: void 8: diClearTlm( void ); File - ../appbuild_03r00_fsw/sm/src/md_addr.c: (Note: referenced source code represents this source code in its entirety) 1: #include ""fdstypes.h"" 2: #include ""smpkt.h"" 3: 4: u_dword sm_md_addr_table [ MAX_MDWELL_PTS ] ; 5: u_word sm_md_addr_table_end ; File - ../appbuild_03r00_fsw/xb/src/xb_summit_io_utils.c: (Note: this file contains no comments) 3.) File ../s1/src/s1ulcisr.c has a creation date of 12/14/98. 4.) The file, ""../s2/src/s2cmd.c"" contains a last modification date of 1/18/2001. It also contains a blank ""Purpose:"" statement 5.) Files ""s3agent.c"" and ""s3task.c"" contain blank entries for the ""Purpose"" statement of the main header comments block. In both cases, the entries for the ""Functions Contained"" statement are incomplete. 6.) The file, ""../sb/src/putstr.c"" is sparsely commented and contains no modification history. 7.) The Build 3.0 OCB code contains 51 instances where the ""xb"" (i.e., 1553) source code comments reference ""1773 Communications (eXternal Bus)"" ProjectA is utilizing a 1553 implementation. Therefore, references to the 1773 protocol seem misleading. 8.) File ../xb/inc/xbsummitif.h contains no main header comments block and other comments are limited. 9.) A comment dated 4/2000 indicates a temporarily disabled function in file, ""xbmain.c"". Since this date predates the ProjectA project, it is unclear whether the ""temporary"" fix was inherited by ProjectA. Source Code References: File - ../appbuild_03r00_fsw/xb/src/xbmain.c: 91: "" /* Disable it until QhssClose is fixed 04/28/00 */"" 10.) The file ""totypes.h"" contains an implied TBD: Source Code References: File - ../to/inc/totypes.h : 84: u_byte data[ MAX_CMD_INPUT_SIZE ]; /* need to modify */ 11.) There is a possible unresolved issue in legacy code according to the following comments from the file, ""QDDhiapi.c"": Source Code References: File - ../src/drv/qhss/QDDhiapi.c: 3365: /* ISSUES: What this is used for or how it is called I don't know. */ File: ../src/drv/qhss/aw_QDDhiapi.c 3365: /* ISSUES: What this is used for or how it is called I don't know. */ 12.) The file, ""ssbsizes.h"", references an undefined and undocumented replacement macro named ""JWM"": Source Code References: File - ../sb/inc/ssbsizes.h: 54: #ifndef JWM 62: #endif JWM 13.) File totbl_nm.c is not included in build files, but referenced within several file comments: Source Code References: File - ../to/src/tamain.c 88: extern tlm_rate_table_type tlm_rate_table[TLM_RATE_TABLE_SIZE]; /* declared in totbl_nm.c */ File - ../to/src/tocmd.c 100: /* D100-027 - declared in totbl_nm.c */ File - ../to/src/toMPIC0.c 89: // Declared in totbl_nm.c File - ../to/src/toPTIMx.c 50: // Declared in totbl_nm.c File - ../to/src/totbl_nm.c 49: ** $Log: totbl_nm.c,v $",
ProjectA - TIM - 1541,Build 3.0 OBC Code: Missing header files,4,"Issue: Based upon IV&V verification, the following header files are #include'd in the OBC Build 3.0 code, but were not provided with the delivered code: ""ag_tables.h"", ""adtelemetry.h"", and ""adcommand.h"". The first header is #include'd by ""ag_tbl.c"", the other two are #include'd by ""adglobal.h"". Neither ""ag_tbl.c"" nor ""adglobal.h"" appears to serve any purpose in the OBC Build 3.0 code. Source Code References: File: ../tables/src/ag_tbl.c 8: #include ""ag_tables.h"" File: ../ac/inc/adglobal.h 16: #include ""adtelemetry.h"" 17: #include ""adcommand.h""",
ProjectA - TIM - 1540,Build 3.0 OBC Code: Extraneous versions of header files - 2 instances,4,"Issue: This issue addresses two verified instances where multiple identical versions of the same files were included in the OBC Build 3.0 source code. The first instance involves the three files named, ""rad6k.h"". These files are located in the OS directories, ""../h/drv/rad6k"", ""../src/drv/qhss/ghcc"", and ""../src/drv/1553/ghcc""; however, the Build 3.0 OBC code appears to only access (i.e., #include) the copy in ""../drv/rad6k"". The second instance involves the two files named, ""EventLogEXT.h"". These files are located in the OS directories, ""../src/drv/qhss/eventLog/user"" and ""../drv/eventLog""; however, the Build 3.0 OBC code appears to only use (i.e., #include) the copy in ""../drv/eventLog"". Source Code References: ""rad6k.h"" File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/h/drv/rad6k/rad6k.h File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/qhss/ghcc/rad6k.h File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/1553/ghcc/rad6k.h File - ../appbuild_03r00_fsw/eepromImage/config.h: 50: #include ""drv/rad6k/rad6k.h"" File - ../appbuild_03r00_fsw/hs/src/hs_main.c 148: #include <drv/rad6k/rad6k.h> /* for proto IOCC_EOI */ File - ../appbuild_03r00_fsw/lio/src/lioopint.c 5: #include <drv/rad6k/rad6k.h> /* for IOCC_EOI */ File - ../appbuild_03r00_fsw/s1/src/s1ulcisr.c 38: #include <drv/rad6k/rad6k.h> File - ../appbuild_03r00_fsw/xb/src/xbbcisr.c 57: #include ""drv/rad6k/rad6k.h"" /* for #define IOCC_EOI */ File - ../osbuild_03r00_fsw/h/drv/lio/lioregs.h: 22: #include ""../rad6k/rad6k.h"" File - ../osbuild_03r00_fsw/h/drv/rad6k/rad6k.h: 1: /* rad6k.h - CPU board header */ File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/1553/bcdd.c 97: #include ""drv/rad6k/rad6k.h"" File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/1553/rtdd.c 61: #include ""drv/rad6k/rad6k.h"" File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/1553/ghcc/rad6k.h: 1: /* rad6k.h - CPU board header */ File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/ambi/ambiFns.c 12: #include ""drv/rad6k/rad6k.h"" /* RAD6000SC Paramaters */ File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/lio/lioFns.c 14: #include ""drv/rad6k/rad6k.h"" File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/lio/liouart.h: 22: #include ""drv/rad6k/rad6k.h"" File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/qhss/QDDhiapi.c 86: #include <drv/rad6k/rad6k.h> /* defines IOCC_EOI */ File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/qhss/QDDhiapi_05_10_1999.c 83: #include <drv/rad6k/rad6k.h> /* defines IOCC_EOI */ File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/qhss/aw_QDDhiapi.c 86: #include <drv/rad6k/rad6k.h> /* defines IOCC_EOI */ ""EventLogEXT.h"" File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/h/drv/eventLog/EventLogEXT.h File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/qhss/eventLog/user/EventLogEXT.h File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/qhss/QDD_all_tests.c 1 37: #include <drv/eventLog/EventLogEXT.h> File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/qhss/QDDdisplayProc.c 1 17: #include <drv/eventLog/EventLogEXT.h> File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/qhss/QDDhiapi.c 1 88: #include <drv/eventLog/EventLogEXT.h> /* debug tool - RecordEVENT prints */ File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/qhss/aw_QDDhiapi.c 1 88: #include <drv/eventLog/EventLogEXT.h> /* debug tool - RecordEVENT prints */ File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/qhss/eventLog/source/EventLog.h 1 26: #include <h/drv/eventLog/EventLogEXT.h>",
ProjectA - TIM - 1539,Build 3.0 OBC Code: Extraneous versions of 1553 header files - 3 instances,4,"Issue: This issue addresses three verified instances where two identical versions of the same files were included in the OBC Build 3.0 code. The first instance involves the two files named, ""1553if.h"". These files are located in the OS build directories ""../h/drv/1553"" and ""../src/drv/1553""; however, the Build 3.0 OBC code appears to only use (i.e., #include) the copy in ""../src/drv"". The second instance involves the two files named, ""1553rt.h"". One version is in the OS directory, ""../src/drv/1553""; the other is in the APP directory, ""../xb/inc/1553rt.h"". However, the Build 3.0 OBC code appears to only use (i.e., #include) the OS version of this file. The third instance involves the two files named, ""summit_regs.h"". One version is in the OS directory, ""../src/drv/1553""; the other is in the APP directory, ""../xb/inc"". For this case, the Build 3.0 OBC code appears to use (i.e., #include) both versions of this file. Source Code References: Instance #1: ""1553if.h"": File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/h/drv/1553/1553if.h File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/1553/1553if.h File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/1553/bcdd.c: 98: #include ""drv/1553/1553if.h"" File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/1553/rtdd.c: 62: #include ""drv/1553/1553if.h"" Instance #2: ""1553if.h"": File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/1553/1553rt.h File - ../appbuild_03r00_fsw/xb/inc/1553rt.h File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/1553/1553rt.h File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/src/drv/1553/rtdd.c: 63 #include ""1553rt.h"" Instance #3: ""summit_regs.h"": File - ../appbuild_03r00_fsw/xb/inc/summit_regs.h File - ../appbuild_03r00_fsw/xb/inc/xbsummitif.h: 32: #include ""summit_regs.h"" File - ../osbuild_03r00_fsw/src/drv/1553/1553bc.h: 23: 04/16/95 MJF Moved Summit ctl. reg. bit defines to summit_regs.h File - ../osbuild_03r00_fsw/src/drv/1553/bcdd.c: 96: #include ""summit_regs.h"" File - ../osbuild_03r00_fsw/src/drv/1553/rtdd.c: 64: #include ""summit_regs.h"" File - ../osbuild_03r00_fsw/src/drv/1553/summit_regs.h",
ProjectA - TIM - 1538,Build 3.0 OBC Code: Misspelling of miioccom.h,4,"Issue: The OBC OS source code file, ""sad.h"" line #27, contains a '#include' statement for the header <miiocom.h>. Based upon IV&V verification, this is the only source code that references this file; however, the '#ifndef' statement that controls whether this statement is processed depends on the constant ""_MIIOCCOM_"". This constant is checked in the same manner for several other source code files; However, all other instances are followed by the statement ""#include <miioccom.h>"" where the spelling of the header file agrees with the constant. Given this pattern, and that a file named ""miiocom.h"" was not included in the Build 3.0 OBC FSW delivery, this file name appears to be misspelled in ""sad.h"". In addition, ""sad.h"" contains a comment indicating it is a WindRiver (i.e., associated with the VxWorks OS) file. However, there's no comments describing any ProjectA-specific changes. Source Code References: File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/h/streams/sad.h: 26: #ifndef _MIIOCCOM_ 27: #include <miiocom.h> 28: #endif File - ../osbuild_03r00_fsw/export/home/ProjectA/wind/radbuild30/target/h/streams/misad.h: 13: #include <sad.h> File - ../osbuild_03r00_fsw/h/strmLib.h 36: #include ""streams/stropts.h"" /* Includes miioccom.h */ File - ../osbuild_03r00_fsw/h/streams/dlpi.h 1169: #include <miioccom.h> File - ../osbuild_03r00_fsw/h/streams/micommon.h 166: * Be sure to examine miioccom.h for possible ioctl command code collisions 169: #include <miioccom.h> File - ../osbuild_03r00_fsw/h/streams/miecho.h 17: #include <miioccom.h> File - ../osbuild_03r00_fsw/h/streams/miioccom.h 1:/* miioccom.h - IOCTL command definition header */ 12: ** miioccom.h 4.1, last change 8/31/93 19: static char miioccom_h_sccsid[] = ""@(#)miioccom.h 4.1""; File - ../osbuild_03r00_fsw/h/streams/mind.h 15: #include <miioccom.h> File - ../osbuild_03r00_fsw/h/streams/sad.h 27: #include <miioccom.h> //Charlie 1/27/05: changed spelling from ""miiocom"" File - ../osbuild_03r00_fsw/h/streams/sockio.h 26: #include <miioccom.h> File - ../osbuild_03r00_fsw/h/streams/sockmod.h 32: #include <miioccom.h> 40: #include <inet/miioccom.h> File - ../osbuild_03r00_fsw/h/streams/strlog.h 47: #include ""miioccom.h"" File - ../osbuild_03r00_fsw/h/streams/stropts.h 25: * defined in miioccom.h and other (port-specific) ioctl() command codes. 29: #include ""streams/miioccom.h"" File - ../osbuild_03r00_fsw/h/streams/timod.h 28: #include <miioccom.h>",
ProjectA - TIM - 1537,Build 3.0 OBC Code: Multiple versions of mv2600.h,4,"Issue: Based upon IV&V verification, two Build 3.0 source code files, ""toMPIC0.c"" and ""xbpmcif.h"", '#include' a header file named, ""mv2600.h"". The '#include' statements for ""toMPIC0.c"" and ""xbpmcif.h"" reference different relative paths for this header, which suggests the possibility that two versions of the header file, ""mv2600.h"", are necessary to support this build. In addition, the '#include' for ""toMPIC0.c"" encloses this header file in angle brackets (<>); whereas, ""xbpmcif.h"" encloses it with double quotes ("" ""). By convention, angle brackets typically denote a standard header file; while, double quotes denote a local or non-standard header file. Although compilers do not require this convention, the inconsistent usage suggests one of these files is a standard header, while the other is altered version of this header or a completely different header file. Source Code References: File - ../appbuild_03r00_fsw/xb/inc/mv2600.h File - ../appbuild_03r00_fsw/to/src/toMPIC0.c: 68: #include <mtx603_jh/mv2600.h> File - ../appbuild_03r00_fsw/xb/inc/xbpmcif.h: 4 #include ""mv2600.h""",
ProjectA - TIM - 1535,Build 3.0 OBC Code: Loss of sign from assignment (int to unsigned long) - 80 instances,4,"Issue: Based upon IV&V verification, variable ""bank"" is an 'unsigned long type', and is it being set to ""beginningBank"" which is an 'integer' type. If ""beginningBank"" holds a negative value then the potential exists for a sign loss. This same type of issue exists in 79 additional instances of which, 20 were verified by IV&V. See the attached Excel spreadsheet for a complete listing of the additional instances. FlexeLint Message #732: Loss of sign (assignment) (int to unsigned long) FlexeLint Message #732 Description: An assignment (or implied assignment, see Context) is made from a signed quantity to an unsigned quantity. Also, it could not be determined that the signed quantity had no sign. For example: u = n; /* Info 732 */ u = 4; /* OK */ where u is unsigned and n is not, warrants a message only for the first assignment, even though the constant 4 is nominally a signed int. Make sure that this is not an error (that the assigned value is never negative) and then use a cast (to unsigned) to remove the message. Source Code References: File - di_cmd.c: Line # 331: for(bank = beginningBank; bank < endingBank; bank++ )",
ProjectA - TIM - 1534,"Build 3.0 OBC Code: Symbol ""os_cold_restart_count"" not explicitly initialized",4,"Issue: Based upon IV&V verification, several Build 3.0 OBC source code files define/declare the variable, ""os_cold_restart_count"". Line #64 of ""fdutils.c"" assigns the value of this variable to another variable with a similar name. However, this variable is never set or initialized, which implies the value is always zero. Comments on lines #106 - #108 of ""hs_sp.c"" suggest that a developer has already come to the same conclusion, but has not received confirmation. FlexeLint Message #729: Symbol 'os_cold_restart_count' (line 27, file xosglmem.h, module xosmodes.c) not explicitly initialized FlexeLint Message #729 Description: The named inter-module variable (external variable) was not explicitly initialized. See the comments on message 727 for more details. This message is suppressed for unit checkout (-u). FlexeLint Message ID #727: The named static variable (local to a function) was not explicitly initialized before use. The following remarks apply to messages 728 and 729 as well as 727. By no explicit initialization we mean that there was no initializer present in the definition of the object, no direct assignment to the object, and no address operator applied to the object or, if the address of the object was taken, it was assigned to a pointer to const. These messages do not necessarily signal errors since the implicit initialization for static variables is 0. However, the messages are helpful in indicating those variables that you had forgotten to initialize to a value. To extract the maximum benefit from the messages we suggest that you employ an explicit initializer for those variables that you want to initialize to 0. For example: static int n = 0; For variables that will be initialized dynamically, do not use an explicit initializer as in: static int m; This message will be given for any array, struct or union if no member or element has been assigned a value. Source Code References: File - /hs/src/hs_sp.c: 106: extern u_word os_cold_restart_count; /* The number of cold restarts */ 107: /* Not maintained at all. */ 108: /* Yes? */ _______________________________________________________________________ File - ../sb/inc/xosglmem.h: 27: extern u_word os_cold_restart_count; /* The number of cold restarts */ _______________________________________________________________________ File - ../sb/src/sosglmem.c: 75: u_word os_cold_restart_count; /* The number of cold restarts */ _______________________________________________________________________ File - ../tc/src/fdsutils.c: 64: extern u_word os_cold_restart_count ; _______________________________________________________________________ 526: os_environment.cold_restart_count = os_cold_restart_count ;",
ProjectA - TIM - 1533,"Build 3.0 OBC Code: Symbol ""TO_squeeze_table"" not explicitly initialized",4,"Issue: Based upon IV&V verification, file - tosquish.c line #91 defines ""TO_squeeze_table [1]"" as type ""squeeze_fmt"". Line #92 uses ""TO_squeeze_table[1]"" as part of a calculation; however, this array is never set or initialized. This array is used by the function ""TO_process_squeeze"" defined by File - totlm.c. However, the comment on line #22 of totlm.c indicates this function is ""not used for ProjectA."" ""TO_split_table[1]"" is also used by a similar function called ""DS_process_split"" defined by File - dstlm.c. However, unlike the previous case, it appears this function is used for ProjectA. Another difference is that dstlm.c contains an 'external' declaration for ""TO_squeeze_table[1]"" indicating the array is of type ""ds_squeeze_fmt"" (i.e., instead of type ""squeeze_fmt""). None of the source code files contain the ""real"" (i.e., Non-'extern') definition for ""TO_squeeze_table[1]"" of this type. So, the DS code must rely on the definition provided by the TO code for this, as well as the definition for ""TO_squeeze_table_size"". FlexeLint Message #729: Symbol 'TO_squeeze_table' (line 91, file tosquish.c) not explicitly initialized FlexeLint Message #729 Description: The named inter-module variable (external variable) was not explicitly initialized. See the comments on message 727 for more details. This message is suppressed for unit checkout (-u). FlexeLint Message #727: The named static variable (local to a function) was not explicitly initialized before use. The following remarks apply to messages 728 and 729 as well as 727. By no explicit initialization we mean that there was no initializer present in the definition of the object, no direct assignment to the object, and no address operator applied to the object or, if the address of the object was taken, it was assigned to a pointer to const. These messages do not necessarily signal errors since the implicit initialization for static variables is 0. However, the messages are helpful in indicating those variables that you had forgotten to initialize to a value. To extract the maximum benefit from the messages we suggest that you employ an explicit initializer for those variables that you want to initialize to 0. For example: static int n = 0; For variables that will be initialized dynamically, do not use an explicit initializer as in: static int m; This message will be given for any array, struct or union if no member or element has been assigned a value. Source Code References: File: ../to/src/tosquish.c 91: squeeze_fmt TO_squeeze_table[1]; 92: u_word TO_squeeze_table_size = sizeof(TO_squeeze_table)/sizeof(squeeze_fmt) _______________________________________________________________________ File - ../to/src/totlm.c: 22: **TO_process_squeeze (not used for ProjectA) 1123: extern squeeze_fmt TO_squeeze_table[]; 1136: while (i < TO_squeeze_table_size && TO_squeeze_table[i].stream_id != 1137: ((seds_packet_header_type *) pkt)->packet_id) 1138: i++; _______________________________________________________________________ File: ../ds/src/dstlm.c: 1588: boolean DS_process_squeeze( u_word ap_id, tlm_packet_structure *pkt ) 1594: extern ds_squeeze_fmt TO_squeeze_table[]; _______________________________________________________________________ File - ../ds/inc/dstypes.h: 282: typedef struct { 283: u_word stream_id; 284: u_word word_count; 285: } ds_squeeze_fm _______________________________________________________________________ File - ../to/inc/totypes.h: 223: typedef struct { 224: u_word stream_id; 225: u_word word_count; 226: } squeeze_fmt;",
ProjectA - TIM - 1531,Build 3.0 OBC Code: Possible access of out-of-bounds pointer,3,"Issue: Based upon IV&V verification, file ""tpsexetask.c"" defines the function, ""Tp_TaskMain"", which passes the pointer, ""ptr_tppduevnt->packet_data[0]"", in as the pointer ""InputData"" to the function ""TPSReadPDUSensors"". Since the pointer, ""ptr_tppduevnt"" is of type ""tp_pdu_input_pkt_fmt"", the pointer ""InputData"" corresponds to the first element of the array, ""packet_data[MAX_TPS_PDU_INPUT_SIZE]"". Tracing back through the code reveals the constant, ""MAX_TPS_PDU_INPUT_SIZE"" to be 164. Therefore, line #166 of ""tpssenreadsensors.c"" references ""InputData[i+164]"" where i = 0 and 1. This causes element 165 of the ""InputData"" array to be accessed. However, by definition ""InputData"" has 164 elements i.e., InputData[0] through InputData[163]. Therefore, the number of elements is exceeded by 2. Likewise, line #174 of ""tpssenreadsensors.c"" references ""InputData[i+166]"" where i = 0 and 1. This causes element 167 of the ""InputData"" array to be accessed. Therefore, the number of elements is exceeded by 4. Both cases cause the array to go out-of-bounds. FlexeLint Message #661: Possible access of out-of-bounds pointer (2 beyond end of data) by operator '[' [Reference: file tpsexetask.c: line #212; file tpssenreadsensors.c: lines 165, 166] FlexeLint Message #661 Description: An out-of-bounds pointer may have been accessed. See message 415 for a description of the parameters Integer and String. For example: int a[10]; if( n <= 10 ) a[n] = 0; Here the programmer presumably should have written n<10. This message is similar to messages 415 and 796 but differs from them by the degree of probability. FlexeLint Message #415 Description: An out-of-bounds pointer was accessed. String designates the operator. The parameter 'Integer' gives some idea how far out of bounds the pointer may be. It is measured in units given by the size of the pointed to object. The value is relative to the last item of good data and therefore should always be greater than zero. For example: int a[10]; a[10] = 0; results in an overflow message containing the phrase '1 beyond end of data'. FlexeLint Message #416 Description: An out-of-bounds pointer was created. See message 415 for a description of the parameters Integer and String. For example: int a[10]; ... f( a + 11 ); Here, an illicit pointer value is created and is flagged as such by PC-lint/FlexeLint. Note that the pointer a+10 is not considered by PC-lint/FlexeLint to be the creation of an out-of-bounds pointer. This is because ANSI C explicitly allows pointing just beyond an array. Access through a+10, however, as in *(a+10) or the more familiar a[10], would be considered erroneous but in that case message 415 would be issued. FlexeLint Message #796 Description: An out-of-bounds pointer may conceivably have been accessed. See message 415 for a description of the parameters Integer and String. For example: int a[10]; int j = 100; for( i = 0; i < n; i++ ) j = n; a[j] = 0; Here, the access to a[j] is flagged because it is conceivable that the for loop is not executed leaving the unacceptable index of 100 in variable j. This message is similar to messages 415 and 661 but differing from them by the degree of probability. Source Code References: File - ../tp/src/tpssenreadsensors.c: 94: void TPSReadPDUSensors( u_word *InputData ) 164: /* copy FC2 CCD Temp */ 165: for ( i=0; i<2; i++ ) 166: ThermalTelemetry.TelemetryArray[i+PDU_DATA_OFFSET+14+50+45+2]= InputData[i+164] & 0x0fff; 172: /* copy FC2 CCD Temp */ 173: for ( i=0; i<2; i++ ) 174: ThermalTelemetry.TelemetryArray[i+PDU_DATA_OFFSET+14+50+45+6]= InputData[i+166] & 0x0fff; File - ../tp/src/tpsexetask.c: 139: void Tp_TaskMain( void ) 147: tp_pdu_input_pkt_fmt * ptr_tppduevnt; 210: /* Tell Read Sensors to store all incoming telemetry */ 211: /* Provide the pointer to the data. */ 212: TPSReadPDUSensors (&ptr_tppduevnt->packet_data[0]); File - ../tp/src/ttppkt.h: 22: #define MAXTPHARDWRDS 68 /* Number of words in ACE HARD TLM (1553) */ 32: #define MAX_TPS_PDU_INPUT_SIZE MAXPDUWRDS+(sizeof(time_code_sec_hdr_type)/2) Note = 160 + (8/2) = 164 99: typedef struct 100: { 101: seds_packet_header_type hdr; 102: u_word packet_data[MAX_TPS_PDU_INPUT_SIZE]; 103: } tp_pdu_input_pkt_fmt; File - ../pkts/fdstypes.h: 151: ** Telemetry Time Code Packet Secondary Header Structure 154: typedef struct 155: { 157: u_word hi_word_secs; 158: u_word lo_word_secs; 159: u_word hi_word_subsecs; 160: u_word lo_word_subsecs; 162: } time_code_sec_hdr_type",
ProjectA - TIM - 1530,Build 3.0 OBC Code: Control flows into case/default,4,"Issue: Based upon IV&V verification, the file, ""xbm_inp.c"" line #241, contains a 'case' statement, which is based on an 'enum' type variable named ""TIMED_RAW_INPUT"". No 'break' statement appears before the next case statement. The case statement appears in the function, ""XB_bcp_synch_input"". A call to this function was not traceable to the ProjectA main executive (i.e., the function, ""ProjectAmain""). Therefore, the code possibly represents ""dead code."" FlexeLint Message #616: control flows into case/default FlexeLint Message #616 Description: It is possible for flow of control to fall into a case statement or a default statement from above. Was this deliberate or did the programmer forget to insert a break statement? If this was deliberate then place a comment immediately before the statement that was flagged as in: case 'a': a = 0; /* fall through */ case 'b': a++; Note that the message will not be given for a case that merely follows another case without an intervening statement. Also, there must actually be a possibility for flow to occur from above. Source Code References: File - ../xb/src/xbm_inp.c 213: work_unit *XB_bcp_synch_input(synch_input_channel *c) 241: case TIMED_RAW_INPUT : 242: #if (1) 243: XB_stamp_future((time_code_sec_hdr_type *) 244: (c->packet+WORDS_IN(seds_packet_header_type))); 245: #endif 246: 247: case UNTIMED_RAW_INPUT :",
ProjectA - TIM - 1529,Build 3.0 OBC Code: Loss of information from assignment (16 bits to 15 bits) - data_types_pkt.w2,3,"Issue: Based upon IV&V verification, an assignment was made from a constant (0x8642) to an integral variable (data_types_pkt.w2) that is not large enough to hold the constant. data_types_pkt.w2 is defined as type word which is a short integer. FlexeLint Message # 569: Loss of information (assignment) (16 bits to 15 bits) FlexeLint Message # 569 Description: An assignment (or implied assignment, see Context) was made from a constant to an integral variable that is not large enough to hold the constant. Examples include placing a hex constant whose bit requirement is such as to require an unsigned int into a variable typed as int. The number of bits given does not count the sign bit. Source Code References: File - tocmd.c: 390: data_types_pkt.w2 = 0x8642;",
ProjectA - TIM - 1528,Build 3.0 OBC Code: Loss of information from assignment (8 bits to 7 bits) - data_types_pkt.b3,3,"Issue: Based upon IV&V verification, the 'signed char' structure member, ""data_types_pkt.b3"", is being assigned the 8 bit HEX value, ""0xE3"". Since a 'signed char' is only capable of holding 8 bits less a sign bit, the variable is not large enough to hold the assigned constant FlexeLint Message # 569: Loss of information (assignment) (8 bits to 7 bits) FlexeLint Message # 569 Description: An assignment (or implied assignment, see Context) was made from a constant to an integral variable that is not large enough to hold the constant. Examples include placing a hex constant whose bit requirement is such as to require an unsigned int into a variable typed as int. The number of bits given does not count the sign bit. Source Code References: File - tocmd.c: 387: data_types_pkt.b3 = 0xE3;",
ProjectA - TIM - 1527,Build 3.0 OBC Code: Loss of information from assignment (8 bits to 7 bits) - data_types_pkt.b2,3,"Issue: Based upon IV&V verification, the 'signed char' structure member, ""data_types_pkt.b2"", is being assigned the 8 bit constant value, ""255"". Since a 'signed char' is only capable of holding 8 bits less a sign bit, the variable is not large enough to hold the assigned constant. FlexeLint Message #569: Loss of information (assignment) (8 bits to 7 bits) FlexeLint Message #569 Description: An assignment (or implied assignment, see Context) was made from a constant to an integral variable that is not large enough to hold the constant. Examples include placing a hex constant whose bit requirement is such as to require an unsigned int into a variable typed as int. The number of bits given does not count the sign bit. Source Code References: File - tocmd.c: 386: data_types_pkt.b2 = 255;",
ProjectA - TIM - 1526,"Build 3.0 OBC Code: Undefined/Undocumented preprocessor variable ""VERBOSIT""",4,"Issue: Based upon IV&V verification, the file, ""di_cmd.c"", contains two instances where the replacement macro, ""VERBOSITY"", is spelled inconsistently with the other instances of this macro. Lines #1165 and #1192 of ""di_cmd.c"" spell this macro as ""VERBOSIT"". Neither ""VERBOSIT"" nor ""VERBOSITY"" appears to be set via a '#define' statement or within a ""makefile"". In addition, the file, ""sm_58c1001.c"" contains a '#define"" statement for the replacement macro, ""VERBOSITY_LEVEL"". This file uses this macro for conditional compilation of the code. This macro name seems redundant to the previous macro or at least makes the purpose of the two different macros seem ambiguous. FlexeLint Message #553: Undefined preprocessor variable 'VERBOSIT', assumed 0 FlexeLint Message #553 Description: The indicated variable had not previously been defined within a #define statement and yet it is being used in a preprocessor condition of the form #if or #elif. Conventionally all variables in preprocessor expressions should be pre-defined. The value of the variable is assumed to be 0. Source Code References: File - ../di/src/di_cmd.c: 56: #define VERBOSITY 0 /** VERBOSITY LEVEL 0 = NO MESSAGES ***/ 1130: #if VERBOSITY > 0 1143: #if VERBOSITY > 0 1165: #if VERBOSIT > 0 1192: #if VERBOSIT > 0 1331: #if VERBOSITY > 0 1473: #if VERBOSITY > 0 1486: #if VERBOSITY > 0 1504: #if VERBOSITY > 0 1527: #if VERBOSITY > 0 1550: #if VERBOSITY > 0 1656: #if VERBOSITY > 0 1687: #if VERBOSITY > 0 1700: #if VERBOSITY > 0 File - ../sm/src/sm_58c1001.c: 47: * verbosity level 49: * 0 - max verbosity 50: * 1 - min verbosity (print nothing) 52: #ifndef VERBOSITY_LEVEL 53: #define VERBOSITY_LEVEL 2 228: #if (VERBOSITY_LEVEL < 1) 359: #if (VERBOSITY_LEVEL < 1) 428: #if (VERBOSITY_LEVEL < 1)",
ProjectA - TIM - 1525,"Build 3.0 OBC Code: Undefined/Undocumented preprocessor variable ""INCLUDE_HAMMING_SPACE_TMR""",4,"Issue: Based upon IV&V verification, the file, ""di_cmd.c"", references the replacement macro, ""INCLUDE_HAMMING_SPACE_TMR"", three times on lines #1150, #1177, and #1204. This macro is used in a '#if' preprocessor directive. No definition of this macro was found in the code or the supporting makefiles/build files. FlexeLint Message #553: Undefined preprocessor variable 'INCLUDE_HAMMING_SPACE_TMR', assumed 0 FlexeLint Message #553 Description: The indicated variable had not previously been defined within a #define statement and yet it is being used in a preprocessor condition of the form #if or #elif. Conventionally all variables in preprocessor expressions should be pre-defined. The value of the variable is assumed to be 0. Source Code References: File - ../di/src/di_cmd.c: 1149: errors = TMRTestMMAddress(address, 0x80000000, MASK_OUT_B | MASK_OUT_C, DATA_SECTION_MODE); 1150:# if (INCLUDE_HAMMING_SPACE_TMR > 0) 1151: errors += TMRTestMMAddress(address, 0x00008000, MASK_OUT_B | MASK_OUT_C, HAMMING_SECTION_MODE); 1152: errors += TMRTestMMAddress(address, 0x80000000, MASK_OUT_B | MASK_OUT_C, HAMMING_SECTION_MODE); 1153:# endif 1176: errors = TMRTestMMAddress(address, 0x80000000, MASK_OUT_A | MASK_OUT_C, DATA_SECTION_MODE); 1177:# if (INCLUDE_HAMMING_SPACE_TMR > 0) 1178: errors += TMRTestMMAddress(address, 0x00008000, MASK_OUT_A | MASK_OUT_C, HAMMING_SECTION_MODE); 1179: errors += TMRTestMMAddress(address, 0x80000000, MASK_OUT_A | MASK_OUT_C, HAMMING_SECTION_MODE); 1180:# endif 1203: errors = TMRTestMMAddress(address, 0x80000000, MASK_OUT_A | MASK_OUT_B, DATA_SECTION_MODE); 1204:# if (INCLUDE_HAMMING_SPACE_TMR > 0) 1205: errors += TMRTestMMAddress(address, 0x00008000, MASK_OUT_A | MASK_OUT_B, HAMMING_SECTION_MODE); 1206: errors += TMRTestMMAddress(address, 0x80000000, MASK_OUT_A | MASK_OUT_B, HAMMING_SECTION_MODE); 1207:# endif",
ProjectA - TIM - 1524,"Build 3.0 OBC Code: Undefined/Undocumented preprocessor variable ""SWAP_TMR_REGISTER"", assumed 0",4,"Issue: Based upon IV&V verification, the file, ""di_cmd.c"", references the replacement macro, ""SWAP_TMR_REGISTER"", two times on lines #989 and #1071. This macro is used in a '#if' preprocessor directive. No definition of this macro was found in the code or the supporting makefiles/build files. FlexeLint Message #553: Undefined preprocessor variable 'SWAP_TMR_REGISTER', assumed 0 FlexeLint Message #553 Description: The indicated variable had not previously been defined within a #define statement and yet it is being used in a preprocessor condition of the form #if or #elif. Conventionally all variables in preprocessor expressions should be pre-defined. The value of the variable is assumed to be 0. Source Code References: File - ../di/src/di_cmd.c 2: 989: #if (SWAP_TMR_REGISTER > 0) 990: TMRErrors = Flip(TMRErrors); 991: #endif 1071: #if (SWAP_TMR_REGISTER > 0) 1071: TMRErrors += Flip(MM_TMR_ERRORS_REG); 1071: #else 1071: TMRErrors += MM_TMR_ERRORS_REG; 1071: #endif",
ProjectA - TIM - 1523,"Build 3.0 OBC Code: Symbol ""hw_register"" not initialized",4,"Issue: Based upon IV&V verification, the file, ""fdsutils.c"" line #521 sets the value of the structure member, ""os_environment.hw_register"". However, this variable does not appear to be used elsewhere in the code. Additionally, the union, ""hw_register.proc_id"", contains the members, ""temp_byte"" (line #513) and ""proc_id"" (line #514), which are never initialized. ""temp_byte"" appears to not be used elsewhere in the code; and ""proc_id"" appears to be only used for the initialization of the first variable referenced, ""os_environment.hw_register"". FlexeLint Message #530: Symbol 'hw_register' (line 515) not initialized FlexeLint Message #530 Description: An auto variable was used before it was initialized. Source Code References: File - .. /pkts/fdsutils.h: 95: struct os_env_struct 96: { 97: os_status_reg_type hw_register; 98: u_word current_mode ; 99: u_word previous_mode ; 100: u_word warm_cold_flag ; 101: u_word warm_restart_count ; 102: u_word cold_restart_count ; 103: } ; File - ../tc/src/fdsutils.c: 510: struct os_env_struct os_environment ; 511: union 512: { 513: char temp_byte ; 514: os_status_reg_type proc_id ; 515: } hw_register; 517: /* 518: ** Get the processor ID register from the hardware 519: */ 520: /* NEED STATUS BYTE HERE */ 521: os_environment.hw_register = hw_register.proc_id ;",
ProjectA - TIM - 1522,"Build 3.0 OBC Code: Apparent data overrun for function ""memset(void *, int, unsigned int)""",4,"Issue: The standard C library function, ""memset"", will fill a block of memory starting at the address specified by the first argument of the function, with the character specified by the second argument, for a number of bytes specified by the third byte. The file, ""s3task.c"" line #670 utilizes this function as follows: memset (&grand_s3_tlm, 0, GRAND_HK_TLM_LNGTH); Based upon IV&V verification, the variable ""grand_s3_tlm"", which is of type ""grand_s3_tlm_fmt"", represents the starting address for the ""memset"" function. The size of the variable type, ""grand_s3_tlm_fmt"" was determined to be 68. The fill character being passed to ""memset"" is ""0"". Then ""GRAND_HK_TLM_LNGTH"", which was calculated to be 148, corresponds to number of bytes to fill with this value. This larger value appears to cause an overrun of the targeted memory buffer by 80 bytes. FlexeLint Message #419: Apparent data overrun for function 'memset(void *, int, unsigned int)', argument 3 (size=448) exceeds argument 1 (size=68) [Reference: file s3task.c: line 670] FlexeLint Message #419 Description: This message is for data transfer functions such as memcpy, strcpy, fgets, etc. when the size indicated by the first cited argument (or arguments) exceeds the size of the buffer area cited by the second. The message may also be issued for user functions via the -function option. Source Code References: File - ../s3/src/s3task.c: 143: grand_s3_tlm_fmt grand_s3_tlm; /* PPC GRaND I/F tlm */ 670: memset (&grand_s3_tlm, 0, GRAND_HK_TLM_LNGTH); File - ../pks/grpkt.h: 71: #define GR_HK_TLM_MAX_SIZE 434 /* packet total 448 max, actual 146 */ 164: /*---------------------------------------------------------------------------- 166: ** struct: grand_hk_tlm_fmt 168: ** purpose: Structure for GRaND Housekeeping telemetry 170: **--------------------------------------------------------------------------*/ 171: typedef struct 172: { 173: seds_packet_header_type hdr ; 174: time_code_sec_hdr_type sec_hdr ; 175: u_byte tlm[ GR_HK_TLM_MAX_SIZE ]; 176: } grand_hk_tlm_fmt ; 177: 178: #define GRAND_HK_TLM_LNGTH sizeof ( grand_hk_tlm_fmt ) Note: determined to be 448 273: /*---------------------------------------------------------------------------- 274: ** 275: ** struct: grand_s3_tlm_fmt 276: ** 277: ** purpose: housekeeping tlm specifically for GRaND PPC interface 278: ** 279: **-------------------------------------------------------------------------- 280: typedef struct 281: { 282: seds_packet_header_type hdr ; 283: time_code_sec_hdr_type sec_hdr ; 284: u_dword total_bytes_read ; /* total bytes read over I/F */ 285: u_dword total_dropped_bytes ;/* bytes dropped in sync search */ 286: u_word sa_pkts ; /* packets of data from SA */ 287: u_word dropped_bytes ; /* bytes dropped since last msg */ 288: u_word cmds_received ; /* commands received from SB */ 289: u_word cmds_rejected ; /* commands rejected from SB */ 290: u_word cmds_sent ; /* commands forwarded */ 291: u_word cmds_sent_error ; /* commands forwarded w/error */ 292: u_word tlm_sent ; /* total tlm packets sent to SB */ 293: u_word tlm_error ; /* tlm packets rejected by SB */ 294: u_word crc_error ; /* tlm packets rejected because of CRC error */ 295: u_word time_sent ; /* time messages sent to GRaND */ 296: u_word time_sent_error ; /* time messages not successfully sent to GRaND */ 297: u_word sa_cmd_count ; /* count of commands to SA */ 298: u_word sa_cmd_rej_count ; /* count of rejected commands */ 299: u_word sa_read_count ; /* count of reads */ 300: u_word sa_send_count ; /* count of pkts sent to SB */ 301: u_word sa_send_error_count ;/* count of pkts sent to SB with errors */ 302: u_word sa_read_data_count ; /* counter for successful reads */ 303: u_word sa_read_error_count ;/* counter for unsuccessful reads */ 304: u_word s3_agent_exec_cnt ; /* loop counter for msgs/reads */ 305: u_word s3_agent_read_entry ;/* counter for start of read */ 306: u_word s3_agent_read_exit ; /* counter for end of read */ 307: } grand_s3_tlm_fmt ; 308: 309: #define GRAND_S3_TLM_LNGTH sizeof ( grand_s3_tlm_fmt) Note: determined to be 68",
ProjectA - TIM - 1521,"Build 3.0 OBC Code: Symbol ""get_crc(unsigned char *, unsigned long)"" not previously declared static at line 198",4,"Issue: Based upon IV&V verification, line #198 of the file, ""s3task.c"", declares the prototype for function, ""get_crc"". Line #1543 of this file provides a definition for this function that agrees with its prototype except it has been defined as 'static'. FlexeLint Message #401: symbol 'get_crc(unsigned char *, unsigned long)' not previously declared static at line #198 FlexeLint Message #401 Description: The indicated symbol declared static was previously declared without the static storage class. This is technically a violation of the ANSI standard. Some compilers will accept this situation without complaint and regard the Symbol as static. Source Code References: File - ../s3/src/s3task.c: 198: u_word get_crc(u_byte *p, u_dword byte_count); 1543: static u_word get_crc(u_byte *p, u_dword byte_count)",
ProjectA - TIM - 1520,Build 3.0 OBC Code: Function names as place holders only,4,"Issue: Based upon IV&V verification, the following Source Code contains merely placeholders for 3 different functions. At this point in the development cycle, placeholders for functions are not expected. Source Code References: File - xbm_std.c: Line #'s 297 - 330: /* ** Function Abstract ** ** Name: XB_bci_synch ** ** Purpose: */ void XB_bci_synch(void) { } /* ** Function Abstract ** ** Name: XB_bcp_synch ** ** Purpose: ** */ work_unit *XB_bcp_synch(void) { } /* ** Function Abstract ** ** Name: XB_bcd_synch ** ** Purpose: */ void XB_bcd_synch(void) { }",
ProjectA - TIM - 1519,"Build 3.0 OBC Code: ""REVISION"" macro const",4,"Issue: Based upon IV&V verification, it appears as though macro 'REVISOIN_LINE' is not referenced within the module in which it is defined. However, upon further analysis, it appears as though ""REVISION_LINE"" is misspelled as ""REVISOIN_LINE"" on line #71. FlexeLint Message # 750: local macro 'REVISOIN_LINE' (line 61, file bumpit.c) not referenced FlexeLint Message # 750 Description: A 'local' macro is one that is not defined in a header file. The macro is not referenced throughout the module in which it is defined. Source Code References: File - bumpit.c: 61: #define REVISOIN_LINE 10 71: for( i=0; i < REVISION_LINE; i++ )",
ProjectA - TIM - 1518,Build 3.0 OBC Code: Comment indicates known issues within the code.,4,"Issue: Based upon IV&V verification, the following comment was found within toMPIC0.c on line #274, suggesting this part of the code is immature. /* This is a kluge. Depending on the build, this ISR gets invoked 2-4 times per counter underflow. In order to ensure TA is awakened only one time per underflow, read Timer0's current count register. The most significant bit is toggled with each underflow. */ sysPciRead32 (MPIC_ADDR (MPIC_TIMER0_CUR_CNT_REG), &current); current &= 0x80000000;",
ProjectA - TIM - 1517,"Build 3.0 OBC Code: File: ""sc_tbl.c"" Prolog indicates different filename",4,"Issue: Based upon IV&V verification, the following comments are at the beginning of file ""sc_tbl.c"": /* ** File: XSCBUFFR.C ** ** Author: A. Cudmore, NASA/GSFC Code 735.3 ** ** Purpose: This file contains the declarations for all of the tables ** that are dumped and or loaded by the Software Manager ** ** Assumptions and External Effects: ** ** Date Written: 06/14/90 ** ** Modification History: ** MM/DD/YY CR-xxxx F. Last, NASA/GSFC Code 735.3 ** - change description ** ** 02/01/94 A. Cudmore NASA/GSFC Code 735.3 ** - updated buffers for TRMM 3.0 */ /* ** Include Files: */ The file name within the File Prolog does not match the file name ""sc_tbl.c"". Also, according to these comments, the file has not been updated in over 10 years. Considering this erroneous comment data, the integrity of the file is questionable. IV&V also verified this type of issue exists in the following files: ""suLCrc.c"", ""suLdComp.c"", ""suLdSize.c"", and ""suLoadBuilder.c""..",
ProjectA - TIM - 1516,Build 3.0 OBC Code: Non-negative quantity cannot be less than zero - 4 instances,3,"Issue: Based upon IV&V verification, packet_ptr->data_set_id is being compared for being <=0. packet_ptr->data_set_id can be equal to 0, but can never be less than 0 since packet_ptr->data_set_id is of type unsigned short which will never be negative. This issue spans 3 additional issues of the same type within ""smpkt.h"", and all 3 issues have been verified. FlexeLint Message # 775: non-negative quantity cannot be less than zero FlexeLint Message # 775 Description: A non-negative quantity is being compared for being <=0. This is a little suspicious since a non-negative quantity can be equal to 0 but never less than 0. The non-negative quantity may be of type unsigned or may have been promoted from an unsigned type or may have been judged not to have a sign by virtue of it having been AND'ed with a quantity known not to have a sign bit an enum that may not be negative, etc. See also Warning 568. Source Code References: File - dsplaybk.c: 1295: if ((packet_ptr->data_set_id <= 0) || (packet_ptr->data_set_id > NUMBER_OF_DATASETS-1)) { Additional instances related to FlexeLint Message #775 and verified by IV&V: 1.) Location: dsplaybk.c (at line 1411 column 58) Message: non-negative quantity cannot be less than zero 2.) Location: dstlm.c (at line 1280 column 44) Message: non-negative quantity cannot be less than zero 3.) Location: xbm_out.c (at line 482 column 43) Message: non-negative quantity cannot be less than zero",
ProjectA - TIM - 1515,"Build 3.0 OBC Code: Redundant macro defined identically within ""tids.h"" at same file location - 29 instances",4,"Issue: Based upon IV&V verification, there are no ""#ifndef""s within ""tids.h"". ""tids.h"" is called by more than one file which causes the macro to be defined identically at the same file location creating redundancy. This issue spans 28 additional issues of the same type within tids.h, and all 28 issues have been verified. FlexeLint Message # 760: Redundant macro 'AC_TASK_ID' defined identically at same file location FlexeLint Message # 760 Description: The given macro was defined earlier (location given) in the same way and is hence redundant. Source Code References: File - tids.h: 21: #define AC_TASK_ID 1 Additional instances related to FlexeLint Message #760 and verified by IV&V: 1.) Location: tids.h (at line 22 column 30) Message: Redundant macro 'CI_TASK_ID' defined identically at same file location 2.) Location: tids.h (at line 23 column 30) Message: Redundant macro 'CS_TASK_ID' defined identically at same file location 3.) Location: tids.h (at line 24 column 30) Message: Redundant macro 'DS_TASK_ID' defined identically at same file location 4.) Location: tids.h (at line 25 column 30) Message: Redundant macro 'DI_TASK_ID' defined identically at same file location 5.) Location: tids.h (at line 26 column 30) Message: Redundant macro 'HS_TASK_ID' defined identically at same file location 6.) Location: tids.h (at line 27 column 30) Message: Redundant macro 'IT_TASK_ID' defined identically at same file location 7.) Location: tids.h (at line 28 column 30) Message: Redundant macro 'MS_TASK_ID' defined identically at same file location 8.) Location: tids.h (at line 29 column 29) Message: Redundant macro 'SB_TASK_ID' defined identically at same file location 9.) Location: tids.h (at line 30 column 29) Message: Redundant macro 'SC_TASK_ID' defined identically at same file location 10.) Location: tids.h (at line 31 column 29) Message: Redundant macro 'SM_TASK_ID' defined identically at same file location 11.) Location: tids.h (at line 32 column 29) Message: Redundant macro 'TC_TASK_ID' defined identically at same file location 12.) Location: tids.h (at line 33 column 29) Message: Redundant macro 'TO_TASK_ID' defined identically at same file location 13.) Location: tids.h (at line 34 column 29) Message: Redundant macro 'TS_TASK_ID' defined identically at same file location 14.) Location: tids.h (at line 35 column 29) Message: Redundant macro 'DA_TASK_ID' defined identically at same file location 15.) Location: tids.h (at line 36 column 29) Message: Redundant macro 'XS_TASK_ID' defined identically at same file location 16.) Location: tids.h (at line 37 column 29) Message: Redundant macro 'TP_TASK_ID' defined identically at same file location 17.) Location: tids.h (at line 38 column 29) Message: Redundant macro 'UA_TASK_ID' defined identically at same file location 18.) Location: tids.h (at line 39 column 29) Message: Redundant macro 'XB_TASK_ID' defined identically at same file location 19.) Location: tids.h (at line 40 column 29) Message: Redundant macro 'S1_TASK_ID' defined identically at same file location 20.) Location: tids.h (at line 41 column 29) Message: Redundant macro 'S2_TASK_ID' defined identically at same file location 21.) Location: tids.h (at line 42 column 29) Message: Redundant macro 'S3_TASK_ID' defined identically at same file location 22.) Location: tids.h (at line 43 column 29) Message: Redundant macro 'S4_TASK_ID' defined identically at same file location 23.) Location: tids.h (at line 44 column 29) Message: Redundant macro 'SA_TASK_ID' defined identically at same file location 24.) Location: tids.h (at line 45 column 29) Message: Redundant macro 'AN_TASK_ID' defined identically at same file location 25.) Location: tids.h (at line 46 column 29) Message: Redundant macro 'TA_TASK_ID' defined identically at same file location 26.) Location: tids.h (at line 47 column 29) Message: Redundant macro 'TG_TASK_ID' defined identically at same file location 27.) Location: tids.h (at line 48 column 29) Message: Redundant macro 'VM_TASK_ID' defined identically at same file location 28.) Location: tids.h (at line 49 column 29) Message: Redundant macro 'SYS_MAX_TASKS' defined identically at same file location",
ProjectA - TIM - 1514,"Build 3.0 OBC Code: Redundant macro ""EEPROM"" defined identically - 3 instances",4,"Issue: Based upon IV&V verification, the following ""#ifndef"" is within header file ""smpkt.h"" which encompasses the entire file where macros ""EEPROM"", ""RAM"", and ""DRAM"" are defined: #ifndef_SM_PKT_H_ #define _SM_PKT_H_ However, ""EEPROM"", ""RAM"", and ""DRAM"" are also defined within ""smtbl.h"". This allows for the possibility of ""EEPROM"", ""RAM"", and ""DRAM"" to be defined identically, creating redundancy. An example is the fact that sm_tbl.c includes both header files (smtbl.h and smpkt.h). This issue spans 2 additional issues of the same type within ""smpkt.h"", and both issues have been verified. FlexeLint Message # 760: Redundant macro 'EEPROM' defined identically at line #69, file smtbl.h, module accommandattitude.c FlexeLint Message # 760 Description: The given macro was defined earlier (location given) in the same way and is hence redundant. Source Code References: File - smpkt.h: Lines #91-93: #define EEPROM 0x02 #define RAM 0x03 #define DRAM 0x04 File - smtbl.h: Lines #69-71: #define EEPROM 0x02 #define RAM 0x03 #define DRAM 0x04 File - sm_tbl.c: Line #135-137: #include ""smpkt.h"" /* SM task packet definitions */ #include ""scpkt.h"" /* Defines for Stored Commands Table */ #include ""smtbl.h"" /* SM table operations I/F */ Additional instances related to FlexeLint Message #760 and verified by IV&V: 1.) Location: smpkt.h (at line 92 column 33) Message: Redundant macro 'RAM' defined identically at line 70, file smtbl.h, module accommandattitude.c 2.) Location: smpkt.h (at line 93 column 33) Message: Redundant macro 'DRAM' defined identically at line 71, file smtbl.h, module accommandattitude.c",
ProjectA - TIM - 1513,"Build 3.0 OBC Code: Redundant macro defined identically within ""sids.h"" at same file location - 184 instances",4,"Issue: Based upon IV&V verification, there appears to be an issue within ""sids.h"" due to the lack of ""#ifndef"" within ""sids.h"". ""sids.h"" is called by more than one file which causes the macro to be defined identically at the same file location creating redundancy. This issue spans 183 additional issues of the same type within sids.h, and all of these issues have been verified. See the attached Excel spreadsheet for a complete listing of the additional instances. FlexeLint Message # 760: Redundant macro 'TLM' defined identically at same file location FlexeLint Message # 760 Description: The given macro was defined earlier (location given) in the same way and is hence redundant. Source Code References: File - sids.h: 13: #define TLM 0",
ProjectA - TIM - 1512,Build 3.0 OBC Code: Redundant macro defined identically - 363 instances,4,"Issue: The description for FlexeLint message #760 states that a given macro was defined earlier in the same way and is hence redundant. Based upon IV&V verification, several instances of message #760 were captured by TIM - 1513 and TIM - 1514. These TIMs were found to be one of the following types of issues: #1 Issue type (i.e., like TIM - 1514): #ifndef"" was defined within the header file which encompasses the entire file where the macro is defined. However, a macro contained within the specified file is also defined within another file. #2 Issue type (i.e., like TIM - 1513): The lack of ""#ifndef"" within a header file which is called by more than one file causes the macro to be defined identically at the same file location creating redundancy. There were 362 additional instances of message #760 were identified by FlexeLint; however, none of these were verified by the IV&V team due to time constraints. Presumably, these instances would fall into one of the two previously referenced issue types. See the attached Excel spreadsheet for a complete listing of the additional instances.",
ProjectA - TIM - 1511,"Build 3.0 OBC Code: Redundant macro ""INCLUDE_TIMESTAMP"" defined identically",4,"Issue: Based upon IV&V verification, the following ""#ifndef"" is within the header file, ""todsshr.h"", which encompasses the entire file where the macro ""UNSEGMENTED_PKT"" is defined: #ifndef _TO_DSS_HR_H_ #define _TO_DSS_HR_H_ However, ""UNSEGMENTED_PKT"" is also defined within ""dipkt.h"" This allows for the possibility of the macro ""UNSEGMENTED_PKT"" to be defined identically, creating redundancy. An example of this possibility is the fact that ""tomain.c"" includes both header files, ""todsshr.h"" and ""hspkt.h"", which includes ""dipkt.h"". FlexeLint Message # 760: Redundant macro 'UNSEGMENTED_PKT' defined identically at same file location FlexeLint Message # 760 Description: The given macro was defined earlier (location given) in the same way and is hence redundant. Source Code References: File - todsshr.h: 114: #define UNSEGMENTED_PKT 3 File - dipkt.h: 222: #define UNSEGMENTED_PKT 3 File - tomain.c: 63: #include ""todsshr.h"" File - tomain.c: 68: #include ""hspkt.h"" File - hspkt.h: 55: #include ""dipkt.h""",
ProjectA - TIM - 1510,"Build 3.0 OBC Code: Local declarator ""xprintf"" not referenced",4,"Issue: Based upon IV&V verification, the function 'xprintf()' is declared in a declaration appearing in the module file itself as opposed to a header file, but it wasn't referenced. Also, the comments proceeding the declaration state ""** Prototypes for the functions defined in the Utils assembly language module""; however, the function 'xprintf()' is actually defined in ""xos_vrtl.c"". FlexeLint Message # 752: local declarator 'xprintf()' (line 71, file fdsutils.c) not referenced FlexeLint Message # 752 Description: A 'local' declarator symbol is one declared in a declaration appearing in the module file itself as opposed to a header file. The symbol may have file scope or may have block scope. But it wasn't referenced. Source Code References: File - fdsutils.c: 71: int xprintf ( ) ; File - xos_vrtl.c: 41: int /*DISTANCE*/ xprintf(str, fmt, args, hook)",
ProjectA - TIM - 1509,Build 3.0 OBC Code: Local declarators not referenced - 96 instances,4,"Issue: Based upon IV&V verification, a local declarator symbol is declared in a declaration appearing in the module file itself as opposed to a header file, but it wasn't referenced. Some symbols are only declared, and not defined or used. Some symbols are declared and defined but not used. Others are declared and defined, but only used within a comparison statement. This issue spans 95 additional instances of the same issue; however, only 19 of these have been verified. See the attached Excel spreadsheet for a complete listing of the additional instances. FlexeLint Message # 752: local declarator 'DA_task_main(void)' (line 104, file ProjectAmain.c) not referenced FlexeLint Message # 752 Description: A 'local' declarator symbol is one declared in a declaration appearing in the module file itself as opposed to a header file. The symbol may have file scope or may have block scope. But it wasn't referenced. Source Code References: File - ProjectAmain.c: 104: extern void DA_task_main(void);",
ProjectA - TIM - 1508,Build 3.0 OBC Code: Local macro not referenced - 31 instances,4,"Issue: Based upon IV&V verification, there are several macros within the OBC FSW which are not referenced within the module in which they are defined. This issue spans 30 additional issues of the same type; however, only 24 of these issues have been verified. FlexeLint Message # 750: local macro 'IO_CARD_ACCESS' (line 64, file di_cmd.c) not referenced FlexeLint Message # 750 Description: A 'local' macro is one that is not defined in a header file. The macro is not referenced throughout the module in which it is defined. Source Code References: File - di_cmd.c: 64: #define IO_CARD_ACCESS(a) (AMBI_0_DPTR((a) & 0x07FFFFFC)) Additional instances related to FlexeLint Message #750 and verified by IV&V: 1.) Location: di_cmd.c (at line 66 column 0) Message: local macro 'DMA_READ' (line 66, file di_cmd.c) not referenced 2.) Location: di_cmd.c (at line 67 column 0) Message: local macro 'DMA_WRITE' (line 67, file di_cmd.c) not referenced 3.) Location: dsgetpvcdu.c (at line 81 column 0) Message: local macro 'eventf_macro' (line 81, file dsgetpvcdu.c) not referenced 4.) Location: itmain.c (at line 54 column 0) Message: local macro 'MM_RAM_BASE_ADDRESS' (line 58, file itmain.c) not referenced 5.) Location: itmain.c (at line 55 column 0) Message: local macro 'MM_RAM_ACCESS' (line 59, file itmain.c) not referenced 6.) Location: s1cmd.c (at line 84 column 0) Message: local macro 'UL_CRIT_PKT_ID' (line 84, file s1cmd.c) not referenced 7.) Location: s1cmd.c (at line 85 column 0) Message: local macro 'UL_CRIT_TLM_LEN' (line 85, file s1cmd.c) not referenced 8.) Location: sbtask.c (at line 114 column 0) Message: local macro '_SP_' (line 114, file sbtask.c) not referenced 9.) Location: sm_util.c (at line 368 column 2) Message: local macro 'SRAM_MAX' ((location not available)) not referenced 10.) Location: ssbli_nm.c (at line 44 column 0) Message: local macro 'DBIT' (line 44, file ssbli_nm.c) not referenced 11.) Location: ssbli_nm.c (at line 45 column 0) Message: local macro 'SET_AID' (line 45, file ssbli_nm.c) not referenced 12.) Location: ssbli_nm.c (at line 46 column 0) Message: local macro 'SET_BIT' (line 46, file ssbli_nm.c) not referenced 13.) Location: ssblstub.c (at line 60 column 0) Message: local macro 'DBIT' (line 60, file ssblstub.c) not referenced 14.) Location: ssblstub.c (at line 61 column 0) Message: local macro 'SET_AID' (line 61, file ssblstub.c) not referenced 15.) Location: ssblstub.c (at line 62 column 0) Message: local macro 'SET_BIT' (line 62, file ssblstub.c) not referenced 16.) Location: ssbsi_nm.c (at line 75 column 0) Message: local macro 'NO_ISRS' (line 75, file ssbsi_nm.c) not referenced 17.) Location: tosquish.c (at line 39 column 0) Message: local macro 'DBIT' (line 39, file tosquish.c) not referenced 18.) Location: tosquish.c (at line 40 column 0) Message: local macro 'SET_AID' (line 40, file tosquish.c) not referenced 19.) Location: ts_limst.c (at line 38 column 0) Message: local macro 'DF_AND' (line 38, file ts_limst.c) not referenced 20.) Location: ts_limst.c (at line 39 column 0) Message: local macro 'DF_OR' (line 39, file ts_limst.c) not referenced 21.) Location: ts_limst.c (at line 40 column 0) Message: local macro 'DF_XOR' (line 40, file ts_limst.c) not referenced 22.) Location: ts_limst.c (at line 41 column 0) Message: local macro 'DF_SEP' (line 41, file ts_limst.c) not referenced 23.) Location: ts_limst.c (at line 43 column 0) Message: local macro 'DF_FOR_TMON_xx' (line 43, file ts_limst.c) not referenced 24.) Location: xbinit.c (at line 117 column 0) Message: local macro 'odd_parity' (line 117, file xbinit.c) not referenced 25.) Location: xbm_inp.c (at line 147 column 0) Message: local macro 'MY_MARK' (line 147, file xbm_inp.c) not referenced 26.) Location: xbpmcif.c (at line 62 column 0) Message: local macro 'PMC_INT_VEC3' (line 62, file xbpmcif.c) not referenced 27.) Location: xbpmcif.c (at line 63 column 0) Message: local macro 'PMC_INT_VEC4' (line 63, file xbpmcif.c) not referenced 28.) Location: xbpmcif.c (at line 531 column 0) Message: local macro 'BYTE_SWAP_32_BIT' ((location not available)) not referenced 29.) Location: xschan.c (at line 149 column 0) Message: local macro 'SA24' (line 149, file xschan.c) not referenced 30.) Location: xschan.c (at line 150 column 0) Message: local macro 'SA25' (line 150, file xschan.c) not referenced",
ProjectA - TIM - 1507,Build 3.0 OBC Code: Switch statement has no default - 4 instances,4,"Issue: Based upon IV&V verification, a switch statement has no section labeled ""default"". This issue spans 3 additional instances of this same issue, and all 3 issues have been verified. FlexeLint Message # 744: switch statement has no default FlexeLint Message # 744 Description: A switch statement has no section labeled ""default"". Was this an oversight? It is standard practice in many programming groups to always have a default: case. This can lead to better (and earlier) error detection. One way to suppress this message is by introducing a vacuous default: break; statement. If you think this adds too much overhead to your program, think again. In all cases tested so far, the introduction of this statement added absolutely nothing to the overall length of code. If you accompany the vacuous statement with a suitable comment, your code will at least be more readable. This message is not given if the control expression is an enumerated type. In this case, all enumerated constants are expected to be represented by case statements, else 787 will be issued. Source Code References: File - sm_main.c: Line # 457 - 469: case TO_SEND_NEXT_PKT_FC: switch ( sm_dump_cntrl.dump_type ) { case MEMORY: SM_mem_dump_send ( ( sm_dump_send_fmt * ) &sm_cmd_pkt ) ; break ; case TABLE: SM_tbl_dump_send ( ( sm_dump_send_fmt * ) &sm_cmd_pkt ) ; break ; } /* switch on dump type */ break ; Additional instances related to FlexeLint Message #744 and verified by IV&V: 1.) Location: ts_tlm.c (at line 211 column 3) Message: switch statement has no default 2.) Location: ts_tlm.c (at line 480 column 3) Message: switch statement has no default 3.) Location: xbm_asy.c (at line 267 column 16) Message: switch statement has no default",
ProjectA - TIM - 1506,Build 3.0 OBC Code: Possible access of out-of-bounds pointer - 2 instances,2,"Issue: Based upon IV&V verification, file ""tpssenreadsensors.c"" contains an out-of-bounds pointer issue with ""TelemetryArray"". ""ThermalTelemetry.TelemetryArray[ ]"" is defined as having 183 elements. Where the replacement macro, ""PDU_DATA_OFFSET"" is defined as 68. i = 0 during the first iteration of the for loop, and then i = 1 during the second iteration of the for loop. ThermalTelemetry.TelemetryArray[i+PDU_DATA_OFFSET+14+50+45+6] is equal to 183 when i =0. However, ThermalTelemetry.TelemetryArray[i+PDU_DATA_OFFSET+14+50+45+6] is equal to 184 when i =1. Therefore TelemetryArray is out of bounds. There is 1 additional instance of this issue that has been verified. FlexeLint Message # 661: Possible access of out-of-bounds pointer (2 beyond end of data) by operator '[' [Reference: file tpssenreadsensors.c: lines 173, 174] FlexeLint Message # 661 Description: An out-of-bounds pointer may have been accessed. See message 415 for a description of the parameters Integer and String. For example: int a[10]; if( n <= 10 ) a[n] = 0; Here the programmer presumably should have written n<10. This message is similar to messages 415 and 796 but differs from them by the degree of probability. Source Code References: File - tpssenreadsensors.c: 173: for ( i=0; i<2; i++ ) 174: ThermalTelemetry.TelemetryArray[i+PDU_DATA_OFFSET+14+50+45+6]= InputData[i+166] & 0x0fff; Additional instance related to FlexeLint Message #661 and verified by IV&V: 1.) Location: tpssenreadsensors.c (at line 174 column 95) Message: Possible access of out-of-bounds pointer (2 beyond end of data) by operator '[' [Reference: file tpssenreadsensors.c: lines 173, 174]",
ProjectA - TIM - 1505,Build 3.0 OBC Code: Constant out of range for operator - 3 instances,3,"Issue: Based upon IV&V verification, a comparison is being made between a char array and a hex value. This issue spans 2 additional instances of this same issue, and both issues have been verified. FlexeLint Message # 650: Constant out of range for operator '==' FlexeLint Message # 650 Description: In a comparison operator or equality test (or implied equality test as for a case statement), a constant operand is not in the range specified by the other operand. For example, if 300 is compared against a char variable, this warning will be issued. Moreover, if char is signed (and 8 bits) you will get this message if you compare against an integer greater than 127. The problem can be fixed with a cast. For example: if( ch == 0xFF ) ... if( (unsigned char) ch == 0xFF ) ... If char is signed (+fcu has not been set) the first receives a warning and can never succeed. The second suppresses the warning and corrects the bug. PC-lint/FlexeLint will take into account the limited precision of some operands such as bit-fields and enumerated types. Also, PC-lint/FlexeLint will take advantage of some computations that limit the precision of an operand. For example, if( (n & 0xFF) >> 4 == 16 ) ... will receive this warning because the left-hand side is limited to 4 bits of precision. Source Code References: File - s3task.c: 153: char GRaND_tlm_buf[GRAND_TLM_BUFF_LENGTH]; 1036: if (GRaND_tlm_buf[GRaND_tlm_buf_process_count] == SYNC_HI) File - grpkt.h: 61: #define SYNC_HI 0xeb Additional instances related to FlexeLint Message #650 and verified by IV&V: 1.) Location: s3task.c (at line 1051 column 62) Message: Constant out of range for operator '==' 2.) Location: totlm.c (at line 785 column 32) Message: Constant out of range for operator '=='",
ProjectA - TIM - 1504,Build 3.0 OBC Code: Signed-unsigned mix with relational - 3 instances,3,"Issue: Based upon IV&V verification, there are comparisons within the OBC FSW Code between integers and unsigned integer values. The integer values have the potential to be negative numbers. This is an issue because the promotion of a negative number to unsigned makes the negative number very large and will produce erroneous comparison results within a relational statement. In some instances of the Flexelint message, it can be determined that the unsigned integer value will never be less than zero. However, it is not good programming practice to use an unsigned integer value in these circumstances. This issue spans 2 additional instances of this same issue, and both issues have been verified. FlexeLint Message # 574: Signed-unsigned mix with relational FlexeLint Message # 574 Description: The four relational operators are: > >= < <= One of the operands to a relational operator was signed and the other unsigned; also, the signed quantity could be negative. For example: if( u > n ) ... where u is unsigned and n is signed will elicit this message whereas: if( u > 12 ) ... will not (even though 12 is officially an int it is obvious that it is not negative). It is not a good idea to mix unsigned quantities with signed quantities in any case (a 737 will also be issued) but, with the four relationals, a negative value can produce obscure results. For example, if the conditional: if( n < 0 ) ... is true then the similar appearing: u = 0; if( n < u ) ... is false because the promotion to unsigned makes n very large. To resolve this problem, either cast the integer to unsigned if you know it can never be less than zero or cast the unsigned to an int if you know it can never exceed the maximum int. Source Code References: File - dsmem.c: 484: if ( highest_block_used <= ds_linked_list_table.total_bulk_memory_blocks ) ( where ""highest_block_used"" is integer and ""total_bulk_memory_blocks"" is an unsigned long) Additional instances related to FlexeLint Message #574 and verified by IV&V: 1.) Location: dsmem.c (at line 532 column 82) Message: Signed-unsigned mix with relational 2.) Location: sm_util.c (at line 174 column 105) Message: Signed-unsigned mix with relational",
ProjectA - TIM - 1503,Build 3.0 OBC Code: Suspicious cast - 4 instances,3,"Issue: Based upon IV&V verification, the variable ""GRaND_tlm_buf"" is defined as char [2048] and then it is type cast to an unsigned short to perform bitwise operations on it. In order to prevent any inadvertent data manipulations, ""GRaND_tlm_buf"" should be defined as an unsigned char. This issue spans 3 additional issues of the same type, and all 3 of these issues have been verified. FlexeLint Message # 571: Suspicious cast FlexeLint Message # 571 Description: Usually this warning is issued for casts of the form: (unsigned) ch where ch is declared as char and char is signed. Although the cast may appear to prevent sign extension of ch, it does not. Following the normal promotion rules of C, ch is first converted to int, which extends the sign and only then is the quantity cast to unsigned. To suppress sign extension you may use: (unsigned char) ch Otherwise, if sign extension is what you want and you just want to suppress the warning in this instance you may use: (unsigned) (int) ch Although these examples have been given in terms of casting a char they will also be given whenever this cast is made upon a signed quantity whose size is less than the casted type. Examples include signed bit fields (a possibility in the new standard), expressions involving char, and expressions involving short when this type is smaller than int or a direct cast of an int to an unsigned long (if int's is smaller than long). This message is not issued for constants or for expressions involving bit operations. Source Code References: File - s3task.c: 153: char GRaND_tlm_buf[GRAND_TLM_BUFF_LENGTH]; 1087: GRaND_tlm_data_count = ( (u_word) GRaND_tlm_buf[GRaND_tlm_buf_process_count] ) << 8; Additional instances related to FlexeLint Message #571 and verified by IV&V: 1.) Location: s3task.c (at line 1095 column 87) Message: Suspicious cast 2.) Location: s3task.c (at line 1151 column 86) Message: Suspicious cast 3.) Location: s3task.c (at line 1159 column 84) Message: Suspicious cast",
ProjectA - TIM - 1502,Build 3.0 OBC Code: Non-negative quantity is never less than zero - 5 instances,3,"Issue: Based upon IV&V verification, a non-negative quantity ""hs_input_cmd_Ptr->argument"" (unsigned short) which is never less than zero is being compared to check for a negative value. If ""hs_input_cmd_Ptr->argument"" has the potential of holding a negative value then the type should be changed to a signed value. If ""hs_input_cmd_Ptr->argument"" can never be negative then the comparison at line #478 of file hs_main.c is not valid. This issue spans 4 additional issues of the same type, and all 4 issues have been verified. FlexeLint Message # 568: non-negative quantity is never less than zero FlexeLint Message # 568 Description: Comparisons of the form: u >= 0 0 <= u u < 0 0 > u are suspicious if u is an unsigned quantity or a quantity judged to be never less then 0. See also message 775. Source Code References: File - hs_main.c: 478: if ( ( hs_input_cmd_Ptr->argument >= 0 ) && ( hs_input_cmd_Ptr->argument <= HS_DIAG_FAST_AND_SLOW_SUPER_PKT ) ) Additional instances related to FlexeLint Message #568 and verified by IV&V: 1.) Location: ts_cmd.c (at line 394 column 35) Message: non-negative quantity is never less than zero 2.) Location: ts_cmd.c (at line 415 column 35) Message: non-negative quantity is never less than zero 3.) Location: ts_cmd.c (at line 429 column 33) Message: non-negative quantity is never less than zero 4.) Location: ts_lim.c (at line 158 column 33) Message: non-negative quantity is never less than zero",
ProjectA - TIM - 1501,Build 3.0 OBC Code: External symbols not accessed - 72 instances,4,"Issue: Based upon IV&V verification, external variables were not accessed though the variables were referenced. This issue spans 71 additional issues of the same type; however, only 29 of these issues have been verified. FlexeLint Message # 552: Symbol 'diBadPacketId' (line 84, file di_task.c) not accessed. FlexeLint Message # 552 Description: An external variable was not accessed though the variable was referenced. This means that the value of a variable was never used. Perhaps the variable was assigned a value but was never used. Note that a variable's value is not considered accessed by autoincrementing or autodecrementing unless the autoincrement/decrement appears within a larger expression, which uses the resulting value. The same applies to a construct of the form: var += expression. If an address of a variable is taken, its value is assumed to be accessed. An array, struct or union is considered accessed if any portion thereof is accessed. Source Code References: File - di_task.c: 84: u_word diBadPacketId; 205: diBadPacketId++; Additional instances related to FlexeLint Message #552 and verified by IV&V: 1.) Location: dpstlmprocessing.c (at line 70 column 0) Message: Symbol 'DpTlmMessage' (line 70, file dpstlmprocessing.c) not accessed 2.) Location: dstlm.c (at line 207 column 0) Message: Symbol 'ds_last_odd_packet_ap_id' (line 207, file dstlm.c) not accessed 3.) Location: event_handling.c (at line 76 column 0) Message: Symbol 'split_ram' (line 76, file event_handling.c) not accessed 4.) Location: hs_main.c (at line 161 column 0) Message: Symbol 'hs_secs_cpu_hogging' (line 161, file hs_main.c) not accessed 5.) Location: hs_sp.c (at line 132 column 0) Message: Symbol 'event_message_cnt' (line 132, file hs_sp.c) not accessed 6.) Location: msmain.c (at line 89 column 0) Message: Symbol 'ms_error_buffer_count' (line 89, file msmain.c) not accessed 7.) Location: s1task.c (at line 89 column 0) Message: Symbol 's1State' (line 89, file s1task.c) not accessed 8.) Location: s2task.c (at line 86 column 0) Message: Symbol 's2State' (line 86, file s2task.c) not accessed 9.) Location: sosglmem.c (at line 119 column 0) Message: Symbol 'di_exit' (line 119, file sosglmem.c) not accessed 10.) Location: sosglmem.c (at line 119 column 0) Message: Symbol 'di_entry' (line 119, file sosglmem.c) not accessed 11.) Location: sosglmem.c (at line 125 column 0) Message: Symbol 'sb_entry' (line 125, file sosglmem.c) not accessed 12.) Location: sosglmem.c (at line 125 column 0) Message: Symbol 'sb_exit' (line 125, file sosglmem.c) not accessed 13.) Location: sosglmem.c (at line 126 column 0) Message: Symbol 'hs_entry' (line 126, file sosglmem.c) not accessed 14.) Location: sosglmem.c (at line 126 column 0) Message: Symbol 'hs_exit' (line 126, file sosglmem.c) not accessed 15.) Location: sosglmem.c (at line 141 column 0) Message: Symbol 'it_exit' (line 141, file sosglmem.c) not accessed 16.) Location: sosglmem.c (at line 142 column 0) Message: Symbol 'ms_exit' (line 142, file sosglmem.c) not accessed 17.) Location: sosglmem.c (at line 142 column 0) Message: Symbol 'ms_entry' (line 142, file sosglmem.c) not accessed 18.) Location: sosglmem.c (at line 147 column 0) Message: Symbol 's1_entry' (line 147, file sosglmem.c) not accessed 19.) Location: sosglmem.c (at line 147 column 0) Message: Symbol 's1_exit' (line 147, file sosglmem.c) not accessed 20.) Location: sosglmem.c (at line 148 column 0) Message: Symbol 's2_exit' (line 148, file sosglmem.c) not accessed 21.) Location: sosglmem.c (at line 148 column 0) Message: Symbol 's2_entry' (line 148, file sosglmem.c) not accessed 22.) Location: sosglmem.c (at line 149 column 0) Message: Symbol 's3_exit' (line 149, file sosglmem.c) not accessed 23.) Location: sosglmem.c (at line 149 column 0) Message: Symbol 's3_entry' (line 149, file sosglmem.c) not accessed 24.) Location: tomain.c (at line 106 column 0) Message: Symbol 'to_entry' (line 106, file tomain.c) not accessed 25.) Location: tomain.c (at line 107 column 0) Message: Symbol 'to_exit' (line 107, file tomain.c) not accessed 26.) Location: totlm.c (at line 118 column 0) Message: Symbol 'pkt_size' (line 118, file totlm.c) not accessed 27.) Location: totlm.c (at line 119 column 0) Message: Symbol 'pkt_seq' (line 119, file totlm.c) not accessed 28.) Location: tpsexetask.c (at line 112 column 0) Message: Symbol 'tp_entry' (line 112, file tpsexetask.c) not accessed 29.) Location: tpsexetask.c (at line 113 column 0) Message: Symbol 'tp_exit' (line 113, file tpsexetask.c) not accessed ---------------Note: The following instances of FlexeLint Message # 552 were not verified by the IV&V Team: 30.) Location: msmain.c (at line 95 column 0) Message: Symbol 'ms_segs_scrubed' (line 95, file msmain.c) not accessed 31.) Location: s2task.c (at line 87 column 0) Message: Symbol 's2firstpass' (line 87, file s2task.c) not accessed 32.) Location: s3task.c (at line 146 column 0) Message: Symbol 's3NbTLmCmd' (line 146, file s3task.c) not accessed 33.) Location: sberror.c (at line 143 column 0) Message: Symbol 'SBstrm_pipe_marker' (line 143, file sberror.c) not accessed 34.) Location: sberror.c (at line 153 column 0) Message: Symbol 'SBinternal_errors' (line 153, file sberror.c) not accessed 35.) Location: shsnmevt.c (at line 18 column 0) Message: Symbol 'hs_event_table' (line 18, file shsnmevt.c) not accessed 36.) Location: sm_main.c (at line 243 column 0) Message: Symbol 'sm_md_words_to_move' (line 243, file sm_main.c) not accessed 37.) Location: sm_main.c (at line 330 column 0) Message: Symbol 'sm_tbl_commit_req_cmd' (line 330, file sm_main.c) not accessed 38.) Location: sosglmem.c (at line 118 column 0) Message: Symbol 'an_exit' (line 118, file sosglmem.c) not accessed 39.) Location: sosglmem.c (at line 128 column 0) Message: Symbol 'sm_exit' (line 128, file sosglmem.c) not accessed 40.) Location: sosglmem.c (at line 128 column 0) Message: Symbol 'sm_entry' (line 128, file sosglmem.c) not accessed 41.) Location: sosglmem.c (at line 133 column 0) Message: Symbol 'cs_entry' (line 133, file sosglmem.c) not accessed 42.) Location: sosglmem.c (at line 133 column 0) Message: Symbol 'cs_exit' (line 133, file sosglmem.c) not accessed 43.) Location: sosglmem.c (at line 134 column 0) Message: Symbol 'ds_entry' (line 134, file sosglmem.c) not accessed 44.) Location: sosglmem.c (at line 134 column 0) Message: Symbol 'ds_exit' (line 134, file sosglmem.c) not accessed 45.) Location: sosglmem.c (at line 135 column 0) Message: Symbol 'sc_exit' (line 135, file sosglmem.c) not accessed 46.) Location: sosglmem.c (at line 135 column 0) Message: Symbol 'sc_entry' (line 135, file sosglmem.c) not accessed 47.) Location: sosglmem.c (at line 141 column 0) Message: Symbol 'it_entry' (line 141, file sosglmem.c) not accessed 48.) Location: sosglmem.c (at line 151 column 0) Message: Symbol 'sa_exec_cnt' (line 151, file sosglmem.c) not accessed 49.) Location: ssbli_nm.c (at line 57 column 0) Message: Symbol 'sb_log_mask_begin' (line 57, file ssbli_nm.c) not accessed 50.) Location: stc_main.c (at line 77 column 0) Message: Symbol 'tc_entry' (line 77, file stc_main.c) not accessed 51.) Location: stc_main.c (at line 78 column 0) Message: Symbol 'tc_exit' (line 78, file stc_main.c) not accessed 52.) Location: tg_task.c (at line 81 column 0) Message: Symbol 'tg10HzTick' (line 81, file tg_task.c) not accessed 53.) Location: tocmd.c (at line 116 column 0) Message: Symbol 'latest_clcw' (line 116, file tocmd.c) not accessed 54.) Location: tomain.c (at line 177 column 0) Message: Symbol 'asma_dump_cntrl_pkt' (line 177, file tomain.c) not accessed 55.) Location: tomain.c (at line 178 column 0) Message: Symbol 'asmb_dump_cntrl_pkt' (line 178, file tomain.c) not accessed 56.) Location: tomain.c (at line 181 column 0) Message: Symbol 'ssmb_dump_cntrl_pkt' (line 181, file tomain.c) not accessed 57.) Location: tomain.c (at line 191 column 0) Message: Symbol 'to_playback_status_pkt' (line 191, file tomain.c) not accessed 58.) Location: tomain.c (at line 192 column 0) Message: Symbol 'one_hz_not_rcvd_debug_var' (line 192, file tomain.c) not accessed 59.) Location: totlm.c (at line 122 column 0) Message: Symbol 'to_last_odd_packet_ap_id' (line 122, file totlm.c) not accessed 60.) Location: totlm.c (at line 139 column 0) Message: Symbol 'events_processed' (line 139, file totlm.c) not accessed 61.) Location: tpsexetask.c (at line 71 column 0) Message: Symbol 'TpInputMessage' (line 71, file tpsexetask.c) not accessed 62.) Location: ts_task.c (at line 186 column 0) Message: Symbol 'ts_entry' (line 186, file ts_task.c) not accessed 63.) Location: ts_task.c (at line 187 column 0) Message: Symbol 'ts_exit' (line 187, file ts_task.c) not accessed 64.) Location: xbbcisr.c (at line 101 column 0) Message: Symbol 'xb_bcrt_crashed' (line 101, file xbbcisr.c) not accessed 65.) Location: xbdebugv.c (at line 20 column 0) Message: Symbol 'unused_wus_count' (line 20, file xbdebugv.c) not accessed 66.) Location: xbdebugv.c (at line 31 column 0) Message: Symbol 'canned_ccsds_output_cnt' (line 31, file xbdebugv.c) not accessed 67.) Location: xbdebugv.c (at line 32 column 0) Message: Symbol 'broadcast_ccsds_output_cnt' (line 32, file xbdebugv.c) not accessed 68.) Location: xbexec.c (at line 236 column 0) Message: Symbol 'xb_goto_chain_last_goto' (line 236, file xbexec.c) not accessed 69.) Location: xbexec.c (at line 237 column 0) Message: Symbol 'xb_goto_chain_RTC_ptr' (line 237, file xbexec.c) not accessed 70.) Location: xbsched.c (at line 70 column 0) Message: Symbol 'xb_terminator_block' (line 70, file xbsched.c) not accessed 71.) Location: xosglmem.h (at line 33 column 0) Message: Symbol 'os_caused_reset' (line 33, file xosglmem.h, module xosmodes.c) not accessed",
ProjectA - TIM - 1500,Build 3.0 OBC Code: Local symbols not accessed - 41 instances,4,"Issue: Based upon IV&V verification, there are symbols defined locally in various files within several functions; however, the symbol is not used within the function, except for an assignment statement. This issues spans 40 additional issues of the same type; however, only 2 of these issues have been verified. FlexeLint Message # 550: Symbol 'mode_info' (line 1069) not accessed FlexeLint Message # 550 Description: A variable (local to some function) was not accessed. This means that the value of a variable was never used. Perhaps the variable was assigned a value but was never used. Note that a variable's value is not considered accessed by autoincrementing or autodecrementing unless the autoincrement/decrement appears within a larger expression, which uses the resulting value. The same applies to a construct of the form: var += expression. If an address of a variable is taken, its value is assumed to be accessed. An array, struct or union is considered accessed if any portion thereof is accessed. Source Code References: File - ms_main.c: 1069: struct os_env_struct mode_info ; 1070: 1071: mode_info = OS_get_environment ( ) ; Additional instances related to FlexeLint Message #550 and verified by IV&V: 1.) Location: cstask.c (at line 1102 column 0) Message: Symbol 'sb_rtn_stat' (line 1084) not accessed 2.) Location: hs_main.c (at line 813 column 0) Message: Symbol 'sb_rtn_stat' (line 740) not accessed ---------------Note: The following instances of FlexeLint Message # 550 were not verified by the IV&V Team: 3.) Location: dpsdepproc.c (at line 372 column 0) Message: Symbol 'Hard_Telemetry' (line 294) not accessed 4.) Location: fdsutils.c (at line 497 column 0) Message: Symbol 'count' (line 487) not accessed 5.) Location: hs_main.c (at line 677 column 0) Message: Symbol 'packet_added' (line 671) not accessed 6.) Location: hs_main.c (at line 941 column 0) Message: Symbol 'sb_rtn_stat' (line 903) not accessed 7.) Location: hs_main.c (at line 1367 column 0) Message: Symbol 'mnemonic' (line 1355) not accessed 8.) Location: itmain.c (at line 496 column 0) Message: Symbol 'test_dword' (line 389) not accessed 9.) Location: lioopint.c (at line 153 column 0) Message: Symbol 'temp' (line 125) not accessed 10.) Location: s1cmd.c (at line 587 column 0) Message: Symbol 'wordCount' (line 172) not accessed 11.) Location: s2cmd.c (at line 629 column 0) Message: Symbol 'ioctlStatus' (line 136) not accessed 12.) Location: s3cmd.c (at line 627 column 0) Message: Symbol 'nextSlot' (line 615) not accessed 13.) Location: s3task.c (at line 547 column 0) Message: Symbol 'msg_status' (line 264) not accessed 14.) Location: s3task.c (at line 950 column 0) Message: Symbol 'q_count' (line 871) not accessed 15.) Location: sbtask.c (at line 215 column 0) Message: Symbol 'ret_status' (line 133) not accessed 16.) Location: sbtask.c (at line 215 column 0) Message: Symbol 'mode_info' (line 135) not accessed 17.) Location: scloads.c (at line 1544 column 0) Message: Symbol 'return_status' (line 1519) not accessed 18.) Location: scrtsrq.c (at line 651 column 0) Message: Symbol 'return_status' (line 620) not accessed 19.) Location: scstats.c (at line 211 column 0) Message: Symbol 'return_status' (line 116) not accessed 20.) Location: sctask.c (at line 474 column 0) Message: Symbol 'init_flag' (line 359) not accessed 21.) Location: sm_main.c (at line 1191 column 0) Message: Symbol 'startup_flag' (line 1066) not accessed 22.) Location: sm_main.c (at line 1248 column 0) Message: Symbol 'sb_rtn_stat' (line 1222) not accessed 23.) Location: sm_main.c (at line 1383 column 0) Message: Symbol 'sb_rtn_stat' (line 1298) not accessed 24.) Location: sm_main.c (at line 1708 column 0) Message: Symbol 'sb_rtn_stat' (line 1661) not accessed 25.) Location: sm_main.c (at line 1828 column 0) Message: Symbol 'sb_rtn_stat' (line 1768) not accessed 26.) Location: sm_mem.c (at line 541 column 0) Message: Symbol 'source_ptr' (line 455) not accessed 27.) Location: sm_mem.c (at line 963 column 0) Message: Symbol 'sb_rtn_stat' (line 828) not accessed 28.) Location: sm_mem.c (at line 1133 column 0) Message: Symbol 'sb_rtn_stat' (line 1001) not accessed 29.) Location: sm_tbl.c (at line 1137 column 0) Message: Symbol 'sb_rtn_stat' (line 1011) not accessed 30.) Location: sm_tbl.c (at line 1289 column 0) Message: Symbol 'sb_rtn_stat' (line 1173) not accessed 31.) Location: sm_tbl.c (at line 1570 column 0) Message: Symbol 'sb_rtn_stat' (line 1338) not accessed 32.) Location: sm_util.c (at line 302 column 0) Message: Symbol 'sb_rtn_stat' (line 286) not accessed 33.) Location: tc_10hz.c (at line 336 column 0) Message: Symbol 'sb_rtn_stat' (line 189) not accessed 34.) Location: tc_1hz.c (at line 224 column 0) Message: Symbol 'sb_rtn_stat' (line 130) not accessed 35.) Location: toMPIC0.c (at line 186 column 0) Message: Symbol 'stat' (line 138) not accessed 36.) Location: ts_task.c (at line 264 column 0) Message: Symbol 'init_type' (line 188) not accessed 37.) Location: xbdebug.c (at line 359 column 0) Message: Symbol 'p_cm' (line 252) not accessed 38.) Location: xbm_inp.c (at line 450 column 8) Message: Symbol 'stat' (line 311) not accessed 39.) Location: xbmain.c (at line 118 column 0) Message: Symbol 'startup' (line 86) not accessed 40.) Location: xbmakewu.c (at line 466 column 6) Message: Symbol 'cmd' (line 377) not accessed",
ProjectA - TIM - 1498,Build 3.0 OBC Code: Symbol not subsequently referenced - 126 instances,4,"Issue: Based upon IV&V verification, various symbols are defined locally within several functions across several files. However, any usage of the symbol within each function has been commented out, or is not used at all within the function. This issue spans 125 additional issues of the same type; however, only 18 of these issues have been verified. See the attached Excel spreadsheet for a complete listing of the additional instances. FlexeLint Message # 529: Symbol 'sb_rtn_stat' (line 307) not subsequently referenced FlexeLint Message # 529 Description: The named variable was declared but not referenced in a function. Source Code References: File - cstack.c: 307: SBret_status sb_rtn_stat; 392: /* sb_rtn_stat = SBtask_delay( cs_init_time_out ); */ 433: /* sb_rtn_stat = SBtask_delay( cs_init_time_out ); */",
ProjectA - TIM - 1497,Build 3.0 OBC Code: Symbol not accessed - 42 instances,4,"Issue: Based upon IV&V verification, symbol ""Sbret"" is defined locally in several files within several functions; however, any usage of ""Sbret"" has either been commented out due to SPR D100-014, not used at all, or the functions only contain assignment statements. This issue spans 41 additional issues of the same type; however, only 33 of these issues have been verified. FlexeLint Message # 550: Symbol 'SBret' (line 163) not accessed FlexeLint Message # 550 Description: A variable (local to some function) was not accessed. This means that the value of a variable was never used. Perhaps the variable was assigned a value but was never used. Note that a variable's value is not considered accessed by autoincrementing or autodecrementing unless the autoincrement/decrement appears within a larger expression, which uses the resulting value. The same applies to a construct of the form: var += expression. If an address of a variable is taken, its value is assumed to be accessed. An array, struct or union is considered accessed if any portion thereof is accessed. Source Code References: File - dsdump.c: 163: SBret_status SBret; 174: /* SBret = eventf(DS_TASK_ID, ""SDS500 Dump Events Rejected, Invalid DataSet: %d"", packet_ptr->data_set_id); */ /*D100-014*/ 186: /* SBret = eventf(DS_TASK_ID, ""SDS503 Dump Events Rejected, Dump In Progress""); */ /*D100-014*/ 229: SBret = SBsend_copy(&ds_dump_request_pkt); Additional instances related to FlexeLint Message #550 and verified by IV&V: 1.) Location: dsdump.c (at line 280 column 0) Message: Symbol 'SBret' (line 264) not accessed 2.) Location: dsdump.c (at line 417 column 0) Message: Symbol 'SBret' (line 334) not accessed 3.) Location: dsmain.c (at line 299 column 0) Message: Symbol 'SBret' (line 229) not accessed 4.) Location: dsmain.c (at line 1036 column 0) Message: Symbol 'SBret' (line 913) not accessed 5.) Location: dsmain.c (at line 1413 column 0) Message: Symbol 'SBret' (line 1328) not accessed ---------------Note: Following messages are actually associated with FlexeLint Message #529: 6.) Location: dsmain.c (at line 454 column 0) Message: Symbol 'SBret' (line 362) not subsequently referenced 7.) Location: dsmain.c (at line 881 column 0) Message: Symbol 'SBret' (line 760) not subsequently referenced 8.) Location: dsmem.c (at line 278 column 0) Message: Symbol 'SBret' (line 168) not subsequently referenced 9.) Location: dsmem.c (at line 411 column 0) Message: Symbol 'SBret' (line 376) not subsequently referenced 10.) Location: dsmem.c (at line 553 column 0) Message: Symbol 'SBret' (line 454) not subsequently referenced 11.) Location: dsmem.c (at line 730 column 0) Message: Symbol 'SBret' (line 619) not subsequently referenced 12.) Location: dsmem.c (at line 911 column 0) Message: Symbol 'SBret' (line 788) not subsequently referenced 13.) Location: dsmem.c (at line 1199 column 0) Message: Symbol 'SBret' (line 1066) not subsequently referenced 14.) Location: dsmem.c (at line 1425 column 0) Message: Symbol 'SBret' (line 1267) not subsequently referenced 15.) Location: dsplaybk.c (at line 183 column 0) Message: Symbol 'SBret' (line 143) not subsequently referenced 16.) Location: dsplaybk.c (at line 392 column 0) Message: Symbol 'SBret' (line 243) not subsequently referenced 17.) Location: dsplaybk.c (at line 579 column 0) Message: Symbol 'SBret' (line 538) not subsequently referenced 18.) Location: dsplaybk.c (at line 810 column 0) Message: Symbol 'SBret' (line 717) not subsequently referenced 19.) Location: dsplaybk.c (at line 1066 column 0) Message: Symbol 'SBret' (line 974) not subsequently referenced 20.) Location: dsplaybk.c (at line 1222 column 0) Message: Symbol 'SBret' (line 1128) not subsequently referenced 21.) Location: dsplaybk.c (at line 1347 column 0) Message: Symbol 'SBret' (line 1274) not subsequently referenced 22.) Location: dsplaybk.c (at line 1440 column 0) Message: Symbol 'SBret' (line 1398) not subsequently referenced 23.) Location: dsplaybk.c (at line 1591 column 0) Message: Symbol 'SBret' (line 1499) not subsequently referenced 24.) Location: dsplaybk.c (at line 1848 column 0) Message: Symbol 'SBret' (line 1810) not subsequently referenced 25.) Location: dsplaybk.c (at line 1922 column 0) Message: Symbol 'SBret' (line 1886) not subsequently referenced 26.) Location: dsplaybk.c (at line 1979 column 0) Message: Symbol 'SBret' (line 1962) not subsequently referenced 27.) Location: dsplaybk2.c (at line 278 column 0) Message: Symbol 'SBret' (line 80) not subsequently referenced 28.) Location: dstlm.c (at line 302 column 0) Message: Symbol 'SBret' (line 261) not subsequently referenced 29.) Location: dstlm.c (at line 704 column 0) Message: Symbol 'SBret' (line 666) not subsequently referenced 30.) Location: dstlm.c (at line 1079 column 0) Message: Symbol 'SBret' (line 1005) not subsequently referenced 31.) Location: dstlm.c (at line 1150 column 0) Message: Symbol 'SBret' (line 1119) not subsequently referenced 32.) Location: dstlm.c (at line 1327 column 0) Message: Symbol 'SBret' (line 1273) not subsequently referenced 33.) Location: dsutils.c (at line 320 column 0) Message: Symbol 'SBret' (line 305) not subsequently referenced ---------------Note: The following instances of FlexeLint Message # 550 were not verified by the IV&V Team: 34.) Location: dsmain.c (at line 1482 column 0) Message: Symbol 'SBret' (line 1451) not accessed 35.) Location: dsmain.c (at line 1755 column 0) Message: Symbol 'SBret' (line 1551) not accessed 36.) Location: dsmain.c (at line 1923 column 0) Message: Symbol 'SBret' (line 1800) not accessed 37.) Location: todump.c (at line 427 column 0) Message: Symbol 'SBret' (line 388) not accessed 38.) Location: todump.c (at line 506 column 0) Message: Symbol 'SBret' (line 479) not accessed 39.) Location: toMPIC0.c (at line 298 column 0) Message: Symbol 'SBret' (line 267) not accessed ---------------Note: Following messages are actually associated with FlexeLint Message #529: ---------------Note: The following instances of FlexeLint Message # 529 were not verified by the IV&V Team: 40.) Location: tocmd.c (at line 228 column 0) Message: Symbol 'SBret' (line 165) not subsequently referenced 41.) Location: tocmd.c (at line 300 column 0) Message: Symbol 'SBret' (line 264) not subsequently referenced",
ProjectA - TIM - 1496,Build 3.0 OBC Code: Symbol not referenced - 2 instances,4,"Issue: Based upon IV&V verification, the static function ""packet_buffer at line #629 of file xbm_out.c was not referenced in the module after having been declared. The comment ' /* DEL */' is on the declaration line; however, the function itself is not commented out. This same type of issue exists where a static variable was not referenced in the module (static variable ""'command_ptr"" at line #123 of file tamain.c), and was verified by IV&V. FlexeLint Message # 528: Symbol 'packet_buffer' (line 629, file xbm_out.c) not referenced FlexeLint Message # 528 Description: The named static variable or static function was not referenced in the module after having been declared. Source Code References: File - xbm_out.c: 629: static u_word packet_buffer[100]; /* DEL */ File - tamain.c: 123: static command_structure *command_ptr; Additional instance related to FlexeLint Message #528 and verified by IV&V: 1.) Location: tamain.c (at line 123 column 0) Message: Symbol 'command_ptr' (line 123, file tamain.c) not referenced",
ProjectA - TIM - 1495,Build 3.0 OBC Code: Symbol previously used as static - 3 instances,4,"Issue: Based upon IV&V verification, the Symbol 'command_ptr' previously used as static (line #123, file tamain.c) is also used as external (line #83, file tocmd.c). Two additional verified instances of this issue also exist between files 'totlm.h' and 'dstlm.c'. FlexeLint Message # 512: Symbol 'command_ptr' previously used as static (line 123, file tamain.c) FlexeLint Message # 512 Description: The Symbol name given is a function name that was declared as static in some other module (the location of that declaration is provided). The use of a name as static in one module and external in another module is legal but suspect. Source Code References: File - tocmd.c: 83: extern command_structure *command_ptr; File - tamain.c: 123: static command_structure *command_ptr; Additional instances related to FlexeLint Message #512 and verified by IV&V: 1.) Location: totlm.h (at line 89 column 67) Message: Symbol 'DS_get_filter_time' previously used as static (line 1758, file dstlm.c) 2.) Location: totlm.h (at line 92 column 29) Message: Symbol 'DS_abs' previously used as static (line 1800, file dstlm.c)",
ProjectA - TIM - 1494,Build 3.0 OBC Code: Too many arguments for prototype - 11 instances,4,"Issue: Based upon IV&V verification, there is a call to a function that is merely a place holder for the function. The call to the function includes one parameter; however, the function definition does not contain any parameters. There are 11 instances of this issue within event_handling.c, and all 11 issues have been verified. FlexeLint Message # 119: Too many arguments (1) for prototype 'Uplink_Send_Event(void)' FlexeLint Message # 119 Description: The number of arguments provided for a function was greater than the number indicated by a prototype in scope. Source Code References: File - event_handling.c line: 254: Uplink_Send_Event ( &dpkt1 ); File - event_handling.c: 114: void Uplink_Send_Event() 115: { 116: /* Local Variables */ 117: 118: /* Code */ 119: 120: return; 121: } Additional instances related to FlexeLint Message #119 and verified by IV&V: 1.) Location: event_handling.c (at line 274 column 35) Message: Too many arguments (1) for prototype 'Uplink_Send_Event(void)' 2.) Location: event_handling.c (at line 295 column 35) Message: Too many arguments (1) for prototype 'Uplink_Send_Event(void)' 3.) Location: event_handling.c (at line 317 column 35) Message: Too many arguments (1) for prototype 'Uplink_Send_Event(void)' 4.) Location: event_handling.c (at line 332 column 34) Message: Too many arguments (1) for prototype 'Uplink_Send_Event(void)' 5.) Location: event_handling.c (at line 477 column 36) Message: Too many arguments (1) for prototype 'Uplink_Send_Event(void)' 6.) Location: event_handling.c (at line 496 column 38) Message: Too many arguments (1) for prototype 'Uplink_Send_Event(void)' 7.) Location: event_handling.c (at line 516 column 38) Message: Too many arguments (1) for prototype 'Uplink_Send_Event(void)' 8.) Location: event_handling.c (at line 537 column 38) Message: Too many arguments (1) for prototype 'Uplink_Send_Event(void)' 9.) Location: event_handling.c (at line 559 column 38) Message: Too many arguments (1) for prototype 'Uplink_Send_Event(void)' 10.) Location: event_handling.c (at line 577 column 34) Message: Too many arguments (1) for prototype 'Uplink_Send_Event(void)'",
ProjectA - TIM - 1493,Build 3.0 OBC Code: Vacuous type for variable - 2 instances,4,"Issue: Based upon IV&V verification, variable ""ats_cmd_status_index_table_size"" was defined as a 'volatile void' variable in ""scglmem.c"" at line #55 without any apparent reason. Variable ""ats_cmd_status_index_table_size"" is never used anywhere within the code. This same issue also exists at line #123 of ""scglmem.c"" for the variable, ""rts_info_table_size"". FlexeLint Message # 43: Vacuous type for variable 'ats_cmd_status_index_table_size' FlexeLint Message # 43 Description: A vacuous type was found such as the void type in a context that expected substance. Source Code References: File - scglmem.c: 55: volatile void ats_cmd_status_index_table_size; 123: volatile void rts_info_table_size;",
ProjectA - TIM - 1492,"Build 3.0 OBC Code: Enum constant ""ac_mode_::TargetAttSteering"" not used within defaulted switch - case #3",2,"Issue: Based upon IV&V verification, the switch expression ""switch ( pAcGlobal->Mode )"" is an enumerated type and the enumerated constant ""TargetAttSteering"" was not present as a case label in the function ""AC_VerifyError"" of the file ""acverifyerror.c"". The control error may need to be verified for the mode ""TargetAttSteering"". FlexeLint Message #788: enum constant 'ac_mode_::TargetAttSteering' not used within defaulted switch FlexeLint Message #788 Description: A switch expression is An enumerated type and at least one of the enumerated constants was not present as a case label. However, unlike Info 787, a default case was provided. This is a mild form of the case reported by Info 787. The user may thus elect to inhibit this mild form while retaining Info 787. Source Code References: File - acverifyerror.c: 77: switch ( pAcGlobal->Mode )",
ProjectA - TIM - 1491,"Build 3.0 OBC Code: Enum constant ""ac_mode_::TargetAttSteering"" not used within defaulted switch - case #2",2,"Issue: Based upon IV&V verification, the switch expression ""switch ( pAcGlobal->Mode )"" is an enumerated type and the enumerated constant ""TargetAttSteering"" was not present as a case label in the function ""AC_ControlError"" of the file ""accontrolerror.c"". The control error may need to be calculated for the mode ""TargetAttSteering"". FlexeLint Message #788: enum constant 'ac_mode_::TargetAttSteering' not used within defaulted switch FlexeLint Message #788 Description: A switch expression is An enumerated type and at least one of the enumerated constants was not present as a case label. However, unlike Info 787, a default case was provided. This is a mild form of the case reported by Info 787. The user may thus elect to inhibit this mild form while retaining Info 787. Source Code References: File - accontrolerror.c: 110: switch ( pAcGlobal->Mode )",
ProjectA - TIM - 1490,"Build 3.0 OBC Code: Enum constant ""ac_mode_::TargetAttSteering"" not used within defaulted switch - case #1",2,"Issue: Based upon IV&V verification, the switch expression ""switch ( pAcGlobal->Mode )"" is an enumerated type and the enumerated constant ""TargetAttSteering"" was not present as a case label in the function ""AC_CommandAttitude"" of the file ""accommandattitude.c"". The attitude command may need to be calculated for the mode ""TargetAttSteering"". FlexeLint Message #788: enum constant 'ac_mode_::TargetAttSteering' not used within defaulted switch FlexeLint Message #788 Description: A switch expression is An enumerated type and at least one of the enumerated constants was not present as a case label. However, unlike Info 787, a default case was provided. This is a mild form of the case reported by Info 787. The user may thus elect to inhibit this mild form while retaining Info 787. Source Code References: File - accommandattitude.c: 91: switch ( pAcGlobal->Mode )",
ProjectA - TIM - 1489,"Build 3.0 OBC Code: Too few initializers for ""EnableRwaTorqueMix""",2,"Issue: Based upon IV&V verification, the initialization data for ""EnableRwaTorqueMix"" in the file ""acjettable.c"" is only for 9 ACS modes, but ""EnableRwaTorqueMix"" is defined for 10 ACS modes in the file ""acjettable.h"". FlexeLint Message #785: Too few initializers for aggregate 'unknown-name' FlexeLint Message #785 Description: The number of initializers in a brace-enclosed initializer was less than the number of items in the aggregate. Default initialization is taken. An exception is made with the initializer {0}. This is given a separate message number in the Elective Note category ( 943). It is normally considered to be simply a stylized way of initializing all members to 0. Source Code References: File - acjettable.h: 38: u_word EnableRwaTorqueMix[NUM_SC_CFG][NUM_AC_MODE]; /* Flag To Enable RWA Torque Mixing, ND */ File - acjettable.c: 66: {{ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE ,FALSE, FALSE, FALSE }, /* Stowed */ 67: { FALSE, FALSE, FALSE, FALSE, FALSE, FALSE ,FALSE, FALSE, FALSE }, /* Deploying */ 68: { TRUE, FALSE, TRUE, FALSE, FALSE, FALSE ,TRUE, FALSE, FALSE }}, /* Deployed */",
ProjectA - TIM - 1488,"Build 3.0 OBC Code: Testing floats for equality in function ""AC_SlewSetUp""",3,"Issue: Based upon IV&V verification, line #104 of the file, ""acslewsetup.c"" within the function, ""AC_SlewSetUp"", is testing floats for equality. Round-off problems could cause erroneous inequalities. FlexeLint Message #777: Testing floats for equality FlexeLint Message #777 Description: This message is issued when the operands of operators == and != are some form of floating type (float, double, or long double). Testing for equality between two floating point quantities is suspect because of round-off error and the lack of perfect representation of fractions. If your numerical algorithm calls for such testing turn the message off. The message is suppressed when one of the operands can be represented exactly, such as 0 or 13.5. Source Code References: File - acslewsetup.c: 104: if ( OmegaMax == AcSlewTable.OmegaMaxLmt ) /* Has the maximum slew rate been commanded */",
ProjectA - TIM - 1487,"Build 3.0 OBC Code: Testing floats for equality in function ""AC_Navigate""",3,"Issue: Based upon IV&V verification, line #221 of the file, ""ac_navigate.c"" within the function, ""AC_Navigate"", is testing floats for equality. Round-off problems could cause erroneous inequalities. FlexeLint Message #777: Testing floats for equality FlexeLint Message #777 Description: This message is issued when the operands of operators == and != are some form of floating type (float, double, or long double). Testing for equality between two floating point quantities is suspect because of round-off error and the lack of perfect representation of fractions. If your numerical algorithm calls for such testing turn the message off. The message is suppressed when one of the operands can be represented exactly, such as 0 or 13.5. Source Code References: File - ac_navigate.c: 221: if (pEph->BodyPosInr[j].v[i] != pEph->OrbitBodyPosInr.v[i])",
ProjectA - TIM - 1486,"Build 3.0 OBC Code: Testing floats for equality in function ""SpeedControl""",3,"Issue: Based upon IV&V verification, line #488 of the file, ""accommandrwa.c"" within the function, ""SpeedControl"", is testing floats for equality. Round-off problems could cause erroneous inequalities. FlexeLint Message #777: Testing floats for equality FlexeLint Message #777 Description: This message is issued when the operands of operators == and != are some form of floating type (float, double, or long double). Testing for equality between two floating point quantities is suspect because of round-off error and the lack of perfect representation of fractions. If your numerical algorithm calls for such testing turn the message off. The message is suppressed when one of the operands can be represented exactly, such as 0 or 13.5. Source Code References: File - accommandrwa.c: 488: if (SpeedCmdOld[i] != pRwa->SpeedCmd[i])",
ProjectA - TIM - 1485,"Build 3.0 OBC Code: Symbol ""SunOccultationOld"" not explicitly initialized",3,"Issue: Based upon IV&V verification, the variable ""SunOccultationOld"" is used before it is assigned a value in the function ""AC_ProcessSTAOccCheck"" of the file ""acprocesssta.c"". FlexeLint Message #727: Symbol 'SunOccultationOld' (line 483) not explicitly initialized FlexeLint Message #727 Description: The named static variable (local to a function) was not explicitly initialized before use. By no explicit initialization we mean that there was no initializer present in the definition of the object, no direct assignment to the object, and no address operator applied to the object or, if the address of the object was taken, it was assigned to a pointer to const. These messages do not necessarily signal errors since the implicit initialization for static variables is 0. However, the messages are helpful in indicating those variables that you had forgotten to initialize to a value. To extract the maximum benefit from the messages we suggest that you employ an explicit initializer for those variables that you want to initialize to 0. For example: static int n = 0; For variables that will be initialized dynamically, do not use an explicit initializer as in: static int m; This message will be given for any array, struct or union if no member or element has been assigned a value. Source Code References: File - acprocesssta.c: 550: if ( pSta->SunOccultation != SunOccultationOld[pSta->StaID] )",
ProjectA - TIM - 1484,"Build 3.0 OBC Code: Symbol ""BodyOccultationOld"" not explicitly initialized",3,"Issue: Based upon IV&V verification, the variable ""BodyOccultationOld"" is used before it is assigned a value in the function ""AC_ProcessSTAOccCheck"" of the file ""acprocesssta.c"". FlexeLint Message #727: Symbol 'BodyOccultationOld' (line 482) not explicitly initialized FlexeLint Message #727 Description: The named static variable (local to a function) was not explicitly initialized before use. By no explicit initialization we mean that there was no initializer present in the definition of the object, no direct assignment to the object, and no address operator applied to the object or, if the address of the object was taken, it was assigned to a pointer to const. These messages do not necessarily signal errors since the implicit initialization for static variables is 0. However, the messages are helpful in indicating those variables that you had forgotten to initialize to a value. To extract the maximum benefit from the messages we suggest that you employ an explicit initializer for those variables that you want to initialize to 0. For example: static int n = 0; For variables that will be initialized dynamically, do not use an explicit initializer as in: static int m; This message will be given for any array, struct or union if no member or element has been assigned a value. Source Code References: File - acprocesssta.c: 516: if ( pSta->BodyOccultation[i] != BodyOccultationOld[i][pSta->StaID] )",
ProjectA - TIM - 1483,"Build 3.0 OBC Code: Symbol ""AC_CommandEngineInit"" undeclared",2,"Issue: Based upon IV&V verification, function ""AC_CommandEngineInit"" is not declared; however, it is used in the function ""AC_Init"" of the file ""acinit.c"". The function should be declared in acglobal.h. FlexeLint Message #718: Symbol 'AC_CommandEngineInit(struct ac_global_ *)' undeclared, assumed to return int FlexeLint Message #718 Description: A function was referenced without (or before) it had been declared or defined within the current module. This is not necessarily an error and you may want to suppress such messages. Note that by adding a declaration to another module, you will not suppress this message. It can only be suppressed by placing a declaration within the module being processed. Source Code References: File - acinit.c: 158: AC_CommandEngineInit ( pAcGlobal );",
ProjectA - TIM - 1482,"Build 3.0 OBC Code: Symbol ""AC_CommandEngineSequencer"" undeclared",2,"Issue: Based upon IV&V verification, function ""AC_CommandEngineSequencer"" is not declared; however, it is used in the function ""AC_GenerateCommands"" of the file ""acgeneratecommands.c"". The function should be declared in acglobal.h. FlexeLint Message #718: Symbol 'AC_CommandEngineSequencer(struct ac_global_ *)' undeclared, assumed to return int FlexeLint Message #718 Description: A function was referenced without (or before) it had been declared or defined within the current module. This is not necessarily an error and you may want to suppress such messages. Note that by adding a declaration to another module, you will not suppress this message. It can only be suppressed by placing a declaration within the module being processed. Source Code References: File - acgeneratecommands.c: 256: AC_CommandEngineSequencer( pAcGlobal );",
ProjectA - TIM - 1481,"Build 3.0 OBC Code: Symbol ""ClearFlag"" undeclared",2,"Issue: Based upon IV&V verification, function ""ClearFlag"" is not declared; however, it is used in the function ""AC_GenerateCommands"" of the file ""acgeneratecommands.c"". The file should '#include' the header file, ""auproto.h"", at the beginning of the file, which includes the function prototype for ""ClearFlag.h"". FlexeLint Message #718: Symbol 'ClearFlag(unsigned short *, unsigned short)' undeclared, assumed to return int FlexeLint Message #718 Description: A function was referenced without (or before) it had been declared or defined within the current module. This is not necessarily an error and you may want to suppress such messages. Note that by adding a declaration to another module, you will not suppress this message. It can only be suppressed by placing a declaration within the module being processed. Source Code References: File - acgeneratecommands.c: 182: ClearFlag ((u_word*)&AceBoxCmd.Command.THRCmd.Enable, (u_word)(i));",
ProjectA - TIM - 1480,Build 3.0 OBC Code: Possible access of out-of-bounds pointer - case #2,2,"Issue: Based upon IV&V verification, code in line 699 seems wrong. It should be ""pAttitude->DeltaThetaMesBdy.v[j] = 0.5 * DeltaQ.q[j];"" in stead of ""pAttitude->DeltaThetaMesBdy.v[i] = 0.5 * DeltaQ.q[i];"" in the file ""admain.c"". FlexeLint Message #661: Possible access of out-of-bounds pointer (1 beyond end of data) by operator '[' [Reference: file admain.c: lines 696, 699] FlexeLint Message #661 Description: An out-of-bounds pointer may have been accessed. For example: int a[10]; if( n <= 10 ) a[n] = 0; Here the programmer presumably should have written n<10. Source Code References: File - admain.c: 685: if ( pSta[0]->DataValid == VALID ) 686: { 687: i |= 0x01; 688: Status1 = QoQ ( pSta[0]->QInrToStaPrp, AcStaTable.QBdyToSta[0], A_BI, & QInrToBdy1 ); 689: for ( j = 0; j < 4; j++ ) 690: pAcGlobal->Attitude.QInrToBdyEst.q[j] = QInrToBdy1.q[j]; 691: } 692: if ( pSta[1]->DataValid == VALID ) 693: { 694: i |= 0x02; 695: Status1 = QoQ ( pSta[1]->QInrToStaPrp, AcStaTable.QBdyToSta[1], A_BI, & QInrToBdy2 ); 696: if ( i > 2 ) { 697: Status2 = QoQ ( QInrToBdy1, QInrToBdy2, AI_B, & DeltaQ ); 698: for ( j = 0; j < 3; j++ ) 699: : pAttitude->DeltaThetaMesBdy.v[i] = 0.5 * DeltaQ.q[i]; 700: Status2 = Qupdate( pAttitude->QInrToBdyEst, pAttitude->DeltaThetaMesBdy, 701: & pAttitude->QInrToBdyEst, QUPDATE_ANGLE_AXIS ); 702: } 703: else 704: { 705: for ( j = 0; j < 4; j++ ) 706: : pAcGlobal->Attitude.QInrToBdyEst.q[j] = QInrToBdy2.q[j]; 707: } 708: }",
ProjectA - TIM - 1479,Build 3.0 OBC Code: Possible access of out-of-bounds pointer - case #1,2,"Issue: Based upon IV&V verification, v[i] and q[i] should be v[j] and q[j] in line #288 in the file ""acpropagateattitude.c"". FlexeLint Message #661: Possible access of out-of-bounds pointer (1 beyond end of data) by operator '[' [Reference: file acpropagateattitude.c: lines 285, 288] FlexeLint Message #661 Description: An out-of-bounds pointer may have been accessed. For example: int a[10]; if( n <= 10 ) a[n] = 0; Here the programmer presumably should have written n<10. Source Code References: File - acpropagateattitude.c: 281: if ( pSta[1]->DataValid == VALID ) 282: { 283: i |= 0x02; 284: Status1 = QoQ ( pSta[1]->QInrToStaPrp, AcStaTable.QBdyToSta[1], A_BI, & QInrToBdy2 ); 285: if ( i > 2 ) { 286: Status2 = QoQ ( QInrToBdy1, QInrToBdy2, AI_B, & DeltaQ ); 287: for ( j = 0; j < 3; j++ ) 288: : pAttitude->DeltaThetaMesBdy.v[i] = 0.5 * DeltaQ.q[i]; 289: Status2 = Qupdate( pAttitude->QInrToBdyEst, pAttitude->DeltaThetaMesBdy, 290: & pAttitude->QInrToBdyEst, QUPDATE_ANGLE_AXIS ); 291: } 292: else 293: { 294: for ( j = 0; j < 4; j++ ) 295: : pAcGlobal->Attitude.QInrToBdyEst.q[j] = QInrToBdy2.q[j]; 296: }",
ProjectA - TIM - 1478,"Build 3.0 OBC Code: Variable ""tbl_ready"" not initialized",3,"Issue: Based upon IV&V verification, if tbl_ptr->new_tbl is not equal to 1, the variable ""tbl_ready"" (line #404) will be used before it is assigned a value in the function ""an_table_check"" of the file ""AN_Tbl_Manager.C"". Also, It seems that the function ""an_table_check"" is not complete. FlexeLint Message #644: Variable 'tbl_ready' (line 404) may not have been initialized FlexeLint Message #644 Description: An auto variable was not necessarily assigned A value before use. Source Code References: File - an_tbl_manager.c: 404: u_word tbl_ready, i; 405: 406: if ( tbl_ptr->new_tbl == 1 ) 407: { 408: /* 409: ** Try not to go through the for loop every cycle 410: ** when the new table is not ready to copy yet ... 411: */ 412: if (tbl_ptr->wk_tbl_status[tbl_ptr->tbl_num-1].ready_to_copy == 1) 413: { 414: tbl_ready = 1; 415: for ( i=0; i < tbl_ptr->tbl_num; i++ ) 416: { 417: if (tbl_ptr->wk_tbl_status[i].ready_to_copy == 0) 418: tbl_ready = 0; 419: } 420: } 421: 422: /* Check the continuity check flag */ 423: if ( tbl_ptr->cont_check == 1 ) 424: { 425: /* Read the first set of data from the load table */ 426: 427: /* Read the last set of data from the work table */ 428: 429: /* If the continuity check failed, inform ground */ 430: 431: } 432: } 433: return (tbl_ready);",
ProjectA - TIM - 1477,"Build 3.0 OBC Code: Variable ""QInrToBdy1"" not initialized",3,"Issue: Based upon IV&V verification, the variable ""QInrToBdy1"" (line #669) will be used before it is assigned a value in the function ""Ac_Ad_InitQ"" of the file ""admain.c"" if pSta[0]->DataValid is not equal to VALID and pSta[1]->DataValid is equal to VALID. FlexeLint Message #644: Variable 'QInrToBdy1' (line 669) may not have been initialized FlexeLint Message #644 Description: An auto variable was not necessarily assigned A value before use. Source Code References: File - admain.c: 669: quaternion_type QInrToBdy1, QInrToBdy2, DeltaQ; 697: Status2 = QoQ ( QInrToBdy1, QInrToBdy2, AI_B, & DeltaQ );",
ProjectA - TIM - 1476,"Build 3.0 OBC Code: Variable ""QVtoV"" not initialized",2,"Issue: Based upon IV&V verification, variable 'QVtoV' in the function ""AC_ComputeQInrToBdyCmd"" of the file ""acprocesscommands.c"" is not initialized if the variable, ""TgtEstAngle"", at line #1342 is less than AcEphTable.PowerSteerVPrecision. Use of QVtoV at line #1362 in this case may cause unpredictable result. FlexeLint Message #644: Variable 'QVtoV' (line 1322) may not have been initialized FlexeLint Message #644 Description: An auto variable was not necessarily assigned A value before use. Source Code References: File - acprocesscommands.c: 1331: if ( TgtEstAngle < AcEphTable.PowerSteerVPrecision ): 1332: {: 1333: /*: 1334: ** Anti-parallel: Rotate about any axis perpendicular to target 1335: */ 1336: for ( i=0; i<3; i++ ) SpinAxisV.v[i] = 0.0; 1337: SpinAxisV.v[1] = 1.0; 1338: 1339: VoV ( & pAcGlobal->Control.GndCmd.InertialTgtVBdy, & SpinAxisV, & TgtEstAngle );: 1340: TgtEstAngle = 1.0 - SQR(TgtEstAngle); 1341: 1342: if ( TgtEstAngle >= AcEphTable.PowerSteerVPrecision ): 1343: { 1344: VxV ( pAcGlobal->Control.GndCmd.InertialTgtVBdy, TgtEstBdy, & TempV ); 1345: for ( i=0; i<3; i++ ) 1346: QVtoV.q[i] = TempV.v[i]/sqrt(TgtEstAngle); 1347: QVtoV.q[3] = 0.0; 1348: }: 1349: else: 1350: { 1351: /* SAD axis and target are parallel */ 1352: return_status = 1; /*error*/ 1353: } 1354: }: 1355: else: 1356: {: 1357: QVtoV.q[3] = sqrt(TgtEstAngle/2.0); 1358: VxV ( pAcGlobal->Control.GndCmd.InertialTgtVBdy, TgtEstBdy, & TempV ); 1359: for ( i=0; i<3; i++ ) 1360: QVtoV.q[i] = TempV.v[i]/2.0/QVtoV.q[3]; 1361: }: 1362: QoQ ( pAcGlobal->Attitude.QInrToBdyEst, QVtoV, A_B, & pAcGlobal->Control.GndCmd.QInrToBdy ); : 1363: return( return_status );:",
ProjectA - TIM - 1475,"Build 3.0 OBC Code: Variable ""return_status"" not initialized",2,"Issue: Based upon IV&V verification, it is possible that variable ""return_status"" is not initialized. The code for the 'else' statement on line #1301 of the file, ""acprocesscommands.c"", is not finished according to a comment on line #1306 of the function ""AC_PowerSteer"" of the file. FlexeLint Message #644: Variable 'return_status' (line 1180) may not have been initialized FlexeLint Message #644 Description: An auto variable was not necessarily assigned A value before use. Source Code References: File - acprocesscommands.c: 1301: else 1302: { 1303: /* 1304: ** Select roatation about target vector ... 1305: */ 1306: /* codes here will be added later */ 1307: } 1309: return (return_status);",
ProjectA - TIM - 1474,"Build 3.0 OBC Code: Variable ""d2_lo"" not initialized",2,"Issue: Based upon IV&V verification, the variable d2_lo is not initialized before used in line #1276 in the function ""AC_PowerSteer"" of the file ""acprocesscommands.c"" when ""fabs(Temp_b)"" is greater than or equal to ""AcEphTable.PowerSteerVPrecision"". FlexeLint Message #644: Variable 'd2_lo' (line 1176) may not have been initialized FlexeLint Message #644 Description: An auto variable was not necessarily assigned A value before use. Source Code References: File - acprocesscommands.c: 1176: real_type Temp_a, Temp_b, Temp_c, d2, d2_hi, d2_lo, Temp_number, Nd2; 1274: if ((d2 >= 0.0 && d2 <= 1.0) || 1275: (d2_hi >= 0.0 && d2_hi <= 1.0) || 1276: (d2_lo >= 0.0 && d2_lo <= 1.0))",
ProjectA - TIM - 1473,"Build 3.0 OBC Code: Variable ""d2_hi"" not initialized",2,"Issue: Based upon IV&V verification, the variable ""d2_hi"" is not initialized before being used in line #1275 in the function ""AC_PowerSteer"" of the file ""acprocesscommands.c"", when ""fabs(Temp_b)"" is equal to or greater than ""AcEphTable.PowerSteerVPrecision"". FlexeLint Message #644: Variable 'd2_hi' (line 1176) may not have been initialized FlexeLint Message #644 Description: An auto variable was not necessarily assigned A value before use. Source Code References: File - acprocesscommands.c: 1176: real_type Temp_a, Temp_b, Temp_c, d2, d2_hi, d2_lo, Temp_number, Nd2; 1274: if ((d2 >= 0.0 && d2 <= 1.0) || 1275: (d2_hi >= 0.0 && d2_hi <= 1.0) || 1276: (d2_lo >= 0.0 && d2_lo <= 1.0))",
ProjectA - TIM - 1472,"Build 3.0 OBC Code: Variable ""Nfact"" not have been initialized",3,"Issue: Based upon IV&V verification, the variable ""Nfact"" (line #141) will be used before it is assigned a value in the function ""AC_CommandJet"" of the file ""AcCommandJet.c"" if pMom->GndCmd.Packed.EnableMomentAdj is equal to TRUE. FlexeLint Message #644: Variable 'Nfact' (line 70) may not have been initialized FlexeLint Message #644 Description: An auto variable was not necessarily assigned A value before use. Source Code References: File - AcCommandJet.c: 70: real_type ThrustRatio, Nfact; 114: if ( pMom->GndCmd.Packed.EnableMomentAdj == TRUE ) /* jets used for momentum unload only */ 115: { 116: for ( i = 0; i < 3; i++ ) 117: pJet->TorqueCmd.v[i] = pMom->TorqueCmdBdy.v[i]; 118: } 119: else /* 1 or 3 axis jet control, possibly with delta v */ 120: { 121: for ( i = 0; i < 3; i++ ) 122: pJet->TorqueCmd.v[i] = pControl->TorqueCmdJetBdy.v[i]; 123: /* 124: ** Normalize the torque demand for 2 second thruster period 125: */ 126: Nfact = pJet->GndCmd.JetPulsePeriod / 2.0; 127: VSCALEM( Nfact, pJet->TorqueCmd, pJet->TorqueCmd ); 128: if ( pEngine->Select[0].Use == 0 && pEngine->Select[1].Use == 0 && pEngine->Select[2].Use == 0 ) 129: { 130: /* 131: ** Gain boost if required for 3 axis control cases only 132: */ 133: : y_only = AC_JetGainBoost ( pAcGlobal, pJet, &ThrustRatio ); 134: } 135: if ( fabs(Nfact) > 0.0 ) 136: VSCALEM( 1./Nfact, pJet->TorqueCmd, pJet->TorqueCmd ); 137: } 138: /* 139: ** Compute Jet Pulse Widths For Given Torque Demand ... 140: */ 141: if ( y_only && fabs(pJet->TorqueCmd.v[1]*Nfact) < .03 * ThrustRatio )",
ProjectA - TIM - 1471,Build 3.0 OBC Code: Symbol not accessed - 15 instances,4,"Issue: Based upon IV&V verification, many variables are defined and set, but not used. As with TIM - 1465, some variables, such as ""pEphemerisTlm"" at line #88 in the file ""acgettlmdata.c"", are used in the commented out code. There are 14 additional instances of this issue type, all of which have been verified by IV&V. FlexeLint Message #550: Symbol 'pEphemerisTlm' (line 88) not accessed FlexeLint Message #550 Description: A variable (local to some function) was not accessed. This means that the value of a variable was never used. Perhaps the variable was assigned a value but was never used. Note that a variable's value is not considered accessed by autoincrementing or autodecrementing unless the autoincrement/decrement appears within a larger expression, which uses the resulting value. The same applies to a construct of the form: var += expression. If an address of a variable is taken, its value is assumed to be accessed. An array, struct or union is considered accessed if any portion thereof is accessed. IV&V team verified the following 14 additional instances of FlexeLint Message #550: 1.) Location: accontrolerror.c (at line 168 column 0) Message: Symbol 'pAttitude' (line 83) not accessed 2.) Location: acnavigate.c (at line 394 column 0) Message: Symbol 'temporary_vec' (line 302) not accessed 3.) Location: acprocesscommands.c (at line 1310 column 0) Message: Symbol 'Nd2' (line 1176) not accessed 4.) Location: acpropagateattitude.c (at line 249 column 0) Message: Symbol 'pSta' (line 80) not accessed 5.) Location: acverifyerror.c (at line 366 column 0) Message: Symbol 'pAttitude' (line 65) not accessed 6.) Location: acverifyerror.c (at line 366 column 0) Message: Symbol 'pEph' (line 68) not accessed 7.) Location: acverifyerror.c (at line 366 column 0) Message: Symbol 'pRwa' (line 69) not accessed 8.) Location: an_cmd.c (at line 301 column 0) Message: Symbol 'status' (line 102) not accessed 9.) Location: an_init.c (at line 140 column 0) Message: Symbol 'init_flag' (line 86) not accessed 10.) Location: an_task.c (at line 322 column 0) Message: Symbol 'prop_time' (line 148) not accessed ---------------Note: The following messages are actually associated with FlexeLint Message #551: 11.) Location: acprocesssta.c (at line 80 column 0) Message: Symbol 'StaInvalidDataOneShot' (line 80, file acprocesssta.c) not accessed 12.) Location: acprocesssta.c (at line 80 column 0) Message: Symbol 'StaNoDataOneShot' (line 80, file acprocesssta.c) not accessed ---------------Note: The following messages are actually associated with FlexeLint Message #714: 13.) Location: actask.c (at line 80 column 0) Message: Symbol 'ac_cmd_ctr' (line 80, file actask.c) not referenced 14.) Location: actask.c (at line 81 column 0) Message: Symbol 'ac_cmd_err' (line 81, file actask.c) not referenced",
ProjectA - TIM - 1470,Build 3.0 OBC Code: Ignoring return value of function - 2 instances,4,"Issue: Based upon IV&V verification, the return value of function ""AC_Engine_CMD"" called at line #125 in function ""AC_CommandEngine"" in the file ""accommandEngine.c"" is ignored. Following this 'return', the calling function uses its own 'return' value, which is always ""STATUS_OK"". Presumably, the 'return' value should not be ignored and should probably be used for the 'return' at line #127. This same issue exists at line #419 in function ""AC_CommandRwa"" in the file ""accommandrwa.c"", where instead, the 'return' value of the function ""AC_RWA_CMD"" is ignored. As in the first case, following this 'return', the calling function uses its own 'return' value, which is always ""STATUS_OK"". Presumably, the 'return' value at line #278 should be used. FlexeLint Message #534: Ignoring return value of function 'AC_Engine_CMD(struct ac_global_ *)' (compare with line 297, file acglobal.h, module accommandattitude.c) FlexeLint Message I#534 Description: A function that returns a value is called just for side effects as, for example, in a statement by itself or the left-hand side of a comma operator. Try: (void) function(); to call a function and ignore its return value. See also the fvr, fvo and fdr flags in Section 5.5 Flag Options. Source Code References: File - accommandEngine.c: 101: status_type AC_CommandEngine ( ac_global_type * pAcGlobal ) 125: AC_Engine_CMD ( pAcGlobal ); 127: return ( STATUS_OK ); 156: status_type AC_Engine_CMD ( ac_global_type * pAcGlobal ) 278: return (ReturnStatus); File - accommandrwa.c: 419: AC_RWA_CMD ( pAcGlobal ); 421: return ( STATUS_OK ); 454: status_type AC_RWA_CMD ( ac_global_type * pAcGlobal ) 469: return (ReturnStatus);",
ProjectA - TIM - 1469,"Build 3.0 OBC Code: Function ""Mt"" definition inconsistent with declaration",3,"Issue: Based upon IV&V verification, an inconsistent declaration and definition exist for function ""Mt"". Function ""Mt"" is defined as ""status_type"" in the file ""aumt.c"". However, it is declared as ""void"" in the file ""auproto.h"". FlexeLint Message #532: Return mode of function 'Mt(double *, unsigned short, unsigned short, double *)' inconsistent with line #73, file auproto.h, module accommandattitude.c FlexeLint Message #532 Description: A declaration (or a definition) of a function implies a different return mode than a previous statement. (The return mode of a function has to do with whether the function does, or does not, return a value). A return mode is determined from a declaration by seeing if the function returns void or, optionally, by observing whether an explicit type is given. Source Code References: File - aumt.c line: 35: status_type Mt( real_type * pMatrixA, 36: u_word RowA, 37: u_word ColumnA, 38: real_type * pMatrixB ) File - auproto.h: 70: void Mt ( real_type * pMatrixA, 71: u_word RowA, 72: u_word ColumnA, 73: real_type * pMatrixB ); 74",
ProjectA - TIM - 1468,"Build 3.0 OBC Code: Function ""MsubM"" definition inconsistent with declaration",3,"Issue: Based upon IV&V verification, inconsistent declaration and definition exist for function ""MsubM"". Function ""MsubM"" is defined as ""status_type"" in the file ""aumsubm.c"". However, it is declared as 'void' in the file ""auproto.h"". FlexeLint Message #532: Return mode of function 'MsubM(double *, double *, unsigned short, unsigned short, double *)' inconsistent with line 56, file auproto.h, module accommandattitude.c FlexeLint Message #532 Description: A declaration (or a definition) of a function implies a different return mode than a previous statement. (The return mode of a function has to do with whether the function does, or does not, return a value). A return mode is determined from a declaration by seeing if the function returns void or, optionally, by observing whether an explicit type is given. Source Code References: File - aumsubm.c: 34 status_type MsubM ( real_type * pMatrixA, 35 real_type * pMatrixB, 36 u_word Row, 37 u_word Column, 38 real_type * pMatrixC ) File - auproto.h: 52 void MsubM ( real_type * pMatrixA, 53 real_type * pMatrixB, 54 u_word Row, 55 u_word Column, 56 real_type * pMatrixC ); 57",
ProjectA - TIM - 1467,"Build 3.0 OBC Code: Function ""MoM"" definition inconsistent with declaration",3,"Issue: Based upon IV&V verification, an inconsistent declaration and definition exists for function ""MoM"". Function ""MoM"" is defined as ""status_type"" in the file, ""aumom.c"", on lines #36 - #41. However, it is declared as ""void"" in the file ""auproto.h"". FlexeLint Message #532: Return mode of function 'MoM(double *, double *, unsigned short, unsigned short, unsigned short, double *)' inconsistent with line #63, file ""auproto.h"", module ""accommandattitude.c"" FlexeLint Message #532 Description: A declaration (or a definition) of a function implies a different return mode than a previous statement. (The return mode of a function has to do with whether the function does, or does not, return a value). A return mode is determined from a declaration by seeing if the function returns void or, optionally, by observing whether an explicit type is given. Source Code References: File - aumom.c: 36: status_type MoM( real_type * pMatrixA, 37: real_type * pMatrixB, 38: u_word Row, 39: u_word ColumnRow, 40: u_word Column, 41: real_type * pMatrixC ) File - auproto.h: 58: void MoM ( real_type * pMatrixA, 59: real_type * pMatrixB, 60: u_word Row, 61: u_word ColumnRow, 62: u_word Column, 63: real_type * pMatrixC );",
ProjectA - TIM - 1466,"Build 3.0 OBC Code: Symbol ""AccelerationEnd"" not initialized",2,"Issue: Based upon IV&V verification, line #301 of the file, ""acnavigate.c"", declares the variable, ""AccelerationEnd"", local to the function ""AC_PropagateOrbit"". The variable is used on line #389, but is never initialized. Note: Line #301 the file, ""acnavigate.c"", also provides the declaration for the local variable, ""AccelerationBeg"". However, this variable is neither used nor initialized. This issue is captured by TIM - 1465. FlexeLint Message #530: Symbol 'AccelerationEnd' (line 301) not initialized FlexeLint Message #530 Description: An auto variable was used before it was initialized. Source Code References: File - acnavigate.c: 301: vector_type AccelerationBeg, AccelerationEnd; 389: pEph->AccelerationInr = AccelerationEnd;",
ProjectA - TIM - 1465,Build 3.0 OBC Code: Symbol not subsequently referenced - 74 instances,4,"Issue: Based upon IV&V verification, line #67 of the file, ""accommandattitude.c"", defines the local variable, ""Status"", but never uses it. There are 73 additional instances of this same issue type, all of which have been verified. In some cases, the unused variable is used in code that has been commented out (e.g., the variable ""j"" in function ""AC_GetTlmData""). In other cases, the function only contains one or more variable definitions, but has no functional elements in the program block (e.g., the functions ""AC_GenerateStatusMsgs"" and ""AC_VerifySadSlowTlmData""). See the attached Excel spreadsheet for a complete listing of the additional instances. FlexeLint Message #529: Symbol 'Status' (line 67) in accommandattitude.c not subsequently referenced FlexeLint Message #529 Description: The named variable was declared but not referenced in a function.",
ProjectA - TIM - 1464,Inconsistent control gain in Design Notes and Build 3 code,3,"The Kp in the Figure 3 and Figure 4 in the Design Note DN-ProjectA-ACS-008 is not equivalent to the proportional gain defined in the Design Note DN-ProjectA-ACS-006. Kp*Kr in the Figure 3 and Figure 4 in the Design Note DN-ProjectA-ACS-008 will be equivalent to the proportional gain because the signal Kp*attitude_error goes through Kr also. The control structure with Kp implemented in the Figure 3 and Figure 4 in the Design Note DN-ProjectA-ACS-008 is different from the control in the OBC Build 3.0 flight software. Furthermore, the attitude rate command is not fed into Kr as shown in the Figure 3 and Figure 4 in the Design Note DN-ProjectA-ACS-008. However, the controllers in the Figure 14 in the Design Note DN-ProjectA-ACS-008 use the attitude rate command (The detailed structures of the controllers are not provided in the design note. The IV&V team would like to review them if available). The controller in the OBC Build 3.0 flight software also uses the attitude rate command for the TVC control.",3/31/05
ProjectA - TIM - 1463,Incomplete Verification of ACS Requirements by the Build 3 and Build 4 Test Procedures,2,"A. This TIM presents the issues identified through analysis of the following artifacts: 1. L4-OBC-S912-SRS4930, DOORS version extracted on 11-2-04 2. OBC ACS Flight Software Requirements Specification, S912-SRS4930, REVISION B 3. ProjectA OBC ACS Flight Test Procedures, S912-TP4930, REVISION - PRODUCTION RELEASE (test procedure for Build 3, includes test scripts) 4. ProjectA OBC ACS Flight Test Procedures, S912-TP4930, REVISION A (test procedure for Build 4.0) 5. FswBuildx File, AC, ProjectA_acs_fsw_build40_performance_test_main.scr (and all scripts invoked by _main.scr) 6. ProjectA Attitude Control Subsystem Test Plan, S912-TP4690 ,REVISION -, released on 10-29-2004 7. Fault Protection Test Review Briefing Charts, 2-24-2005 B. It is noted that both documents 3 and 4 state: 1. PURPOSE This is the Software Test Procedure for the On-Board Computer (OBC) Attitude Control System (ACS) Flight Software (FSW) for the ProjectA Mission . This document specifies the functional, performance, and interface requirements for the ProjectA OBC ACS FSW. Each requirement is traceable to the implementation and test of the FSW. 2. SCOPE This document specifies the test procedures and requirements trace for the ProjectA OBC ACS FSW. 3. TEST OBJECTIVE The objective of these tests is to certify the OBC ACS task of the FSW. C. Sub-Issues (Note: the recommendation field provides IV&V suggested resolutions for each of the following sub-issues) Sub-issue #1: Both of the test procedures (documents 3 and 4) do not map individual requirements to specific test points. At best, document 3 maps multiple SRS requirements to one or more of the five tests identified in Section 11. Document 4 maps 70 SRS requirements to the ACS Mode Test script identified in item 5 and the scripts do not contain links to the SRS requirements (such links are found in the B3 OBC test scripts). Sub-issue #2: Document 4, Section 11.1 states: “The basic functionality should be verified against ACS Performance Spec (S912-PF4610). ACS pointing requirements and FDC will be verified in FSW Build 5.0”. It is unclear why this statement is made as the ACS Performance Specification is not referenced in Section 4; and Sections 1, 2, and 3, as noted above, imply that the SRS is the driving document. In fact, the requirements from the SRS are the only requirements linked to the tests within the Test Procedure document. Based on the last part of the statement, “ACS pointing requirements and FDC will be verified in FSW Build 5.0”, it appears that both the ACS SRS and the ACS Performance Specification provide requirements for software qualification testing. In addition, it is noted that the ACS Test Plan states: (1) In Section 1.1, The major aim of this ACS Test Plan is to outline the program for verifying the requirements stipulated in the ProjectA ACS Performance Specification, S912-PF4610 and thus provide confidence in the predicted ACS mission performance prior to launch, (2) In Section 4.2.1, The division of responsibilities between the FSW and the ACS is set forth in the ProjectA Software Development Plan, S912-PP4910. The flight software group, with support from the ACS group, is responsible for testing all requirements in the ProjectA OBC (On Board Computer) ACS Flight Software Requirements Specification, S912-SRS4930, which will be done on the Flight System Test Bed with the HDS. These requirements include real-time tasking, all commands including mode transition commands, all telemetry including processed sensor telemetry, and failure detection and correction, (3) In Section 4.2.2, For the CEU ACS code, a rigorous set of test cases shall be run in order to verify the core ACS flight algorithms and to baseline ACS performance. Given this, it appears there is confusion between what requirements the FSW team is using as the basis for ACS FSW verification and what the ACS team is using as their basis. From the ACS Test Plan it appears that the ACS Team is focused on verifying requirements in the ACS Performance Specification. If this is the case, then IV&V would expect that the ACS team will prepare a separate set of test procedures and scripts that will address the ACS Performance Specification requirements, and that will meet the other objectives stated in the Test Plan (e.g., ""a rigorous set of test cases shall be run in order to verify the core ACS flight algorithms and to baseline ACS performance""). Also, based on material from Document 7, slide 19, ""ACS will test all AC software ‘monitors’, threshold, persistence, and behavior (AC performance and FDC interaction)"" it appears that a separate set of tests based on the ACS Performance Specification is required as there are only two ProjectA documents that contain specific ADS FDC requirements (the ACS Performance Specification and the Fault Protection Performance Specification). In summary, it appears that the testing described in Documents 4 and 5 above is designed to verify both ACS SRS and ACS Performance Specification requirements. Yet the ACS Test Plan seems to imply that the ACS Team will perform a separate set of tests to verify the ACS Performance Specification requirements. IV&V is uncertain if there exists test procedures and scripts for ACS performance testing. Sub-issue #3: The SRS requirement numbers identified in the Test Procedures are apparently linked to the OBC ACS Flight Software Requirements Specification, S912-SRS4930, REVISION B (it is noted that Section 4 in the Procedures does not identify the SRS version number). For several of the linked SRS requirements the DOORS version of the requirement is different than its companion found in Revision B. This in turn implies that the tests linked to the DOORS version may not verify the latest baseline version of the requirements. The attachment identifies the specific requirements that are different between Rev. B and the SRS requirements that were extracted from the 11-02-04 DOORS database. Sub-issue #4: In most cases the procedure and the scripts do not identify specific pass/fail criteria. Document 4 simply states “Script executes.” and “The basic functionality should be verified against ACS Performance Spec (S912-PF4610). ACS pointing requirements and FDC will be verified in FSW Build 5.0”. Based on the scripts, the test conductor is observing screens that contain TLM, etc. and data is collected for post test analysis (e.g., plots); however, there is no indication of how this data is to be screened for pass/fail. Concerning the term “script executes” it is noted from the scripts that the execution is controlled (in many cases) by the “wait” statement. For example, “wait” until an expected event occurs, like an expected mode change. However, this approach does not, in general, correlate with the specific ACS SRS requirements that are linked to the test (i.e., the script completely executes because the “requirement has been verified”). Sub-issue #5: Due to Sub-issue #1 there is little guidance as to where a specific requirement is verified in the test scripts. An analysis of the test scripts found in Items 3 and 5 shows that few of the linked requirements are verified by the scripts. The attachment to this TIM identifies: (1) the linked SRS requirements from the OBC ACS Flight Software Requirements Specification, S912-SRS4930, REVISION B; (2) the companion SRS requirements from the 11-02-04 DOORS version and (3) a statement as to whether IV&V could find evidence that the linked test actually verifies the requirement. While the Build 4 ACS Mode Test script exercises many functions associated with configuring the ACS sensors and effectors, switching modes, managing momentum, etc. it seems to be insufficiently focused in scope to verify the detailed SRS requirements. Sub-issue #6: As noted above, the Purpose section of the Test Procedures states, ""This document specifies the functional, performance, and interface requirements for the ProjectA OBC ACS FSW"". This statement seems incorrect given that Items 1 and 2 above (the ACS SRS) identify the OBC ACS requirements. If the intent is to invoke the ACS Performance Specification as an ACS requirements document, then it should also be referenced.",3/10/05
ProjectA - TIM - 1461,"Build 3.0 OBC Code: ACS Control Mode Transitions specified inconsistently by code, ACS P-Spec, and ACS SRS",2,"The ACS control sub mode transitions are implemented in the matrix ""AcModeTable"" in the code ""ACModeTable.c"". However, the mode transitions defined in Table 1 of the ProjectA Attitude Control Subsystem Performance Specification are different. Fourteen (14) mode transitions are different. 1. The Rate_Nulling mode is allowed to transfer to Speed_ctl mode, which is not allowed in Table 1. 2. The Sun_acq mode is allowed to transfer to Speed_ctl mode, which is not allowed in Table 1. 3. The Sun_point mode is allowed to transfer to Speed_ctl mode, which is not allowed in Table 1. 4. The Sun_ point mode is allowed to transfer to DeltaVEngine mode, which is not allowed in Table 1. 5. The Sun_ point mode is allowed to transfer to DeltaVRCS mode, which is not allowed in Table 1. 6. The Inertial_target mode is not allowed to transfer to Sun_acq mode, which is allowed in Table 1. 7. The DeltaVEngine mode is not allowed to transfer to Sun_acq mode, which is allowed in Table 1. 8. The DeltaVEngine mode is allowed to transfer to DeltaVRCS mode, which is not allowed in Table 1. 9. The DeltaVRCS mode is not allowed to transfer to Sun_acq mode, which is allowed in Table 1. 10. The DeltaVRCS mode is allowed to transfer to DeltaVEngine mode, which is not allowed in Table 1. 11. The AsteroidNadirPointing mode is not allowed to transfer to Sun_acq mode, which is allowed in Table 1. 12. The AsteroidNadirPointing mode is not allowed to transfer to AsteroidTgtTracking mode, which is allowed in Table 1. 13. The AsteroidTgtTracking mode is not allowed to transfer to Sun_acq mode, which is allowed in Table 1. 14. The AsteroidTgtTracking mode is not allowed to transfer to AsteroidNadirPointing mode, which is allowed in Table 1. The requirements ""Commanded Transition Requirements"" (L4-SROAC-108, L4-SROAC-109, L4-SROAC-110) in ProjectA OBC ACS Flight Software Requirements Specification (S912-SRS4930) DOORS export 11/2/04 list allowable commanded mode transitions. However, there are more allowable commanded mode transitions defined in Table 1 of the ProjectA Attitude Control Subsystem Performance Specification. For example, according to Table 1, transition from science mode, delta-V mode, target pointing mode, or rate nulling sub mode to Sun acquisition sub mode is allowable. Referenced documents: ACModeTable.c in OBC Build 3.0 14 15 ac_mode_table_type AcModeTable = 16 { 17 /*LNH CNT CNT CNT NML NML Engine RCS ATGT ATRK */ 18 {{ 0, 1, 1, 1, 0, 0, 0, 0, 0, 0}, /*Launch, Speed_ctl */ 19 { 1, 0, 1, 1, 1, 1, 1, 1, 1, 1}, /*Contingency, Rate_Nulling */ 20 { 0, 1, 0, 1, 0, 0, 0, 0, 0, 0}, /*Contingency, Sun_acq */ 21 { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, /*Contingency, Sun_point */ 22 { 0, 0, 0, 1, 0, 1, 0, 0, 1, 1}, /*Normal, Attitude Steering */ 23 { 0, 0, 0, 1, 1, 0, 1, 1, 1, 1}, /*Normal, Inertial_target*/ 24 { 0, 0, 0, 1, 1, 1, 0, 1, 0, 0}, /*Normal, DeltaVEngine */ 25 { 0, 0, 0, 1, 1, 1, 1, 0, 0, 0}, /*Normal, DeltaVRCS */ 26 { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}, /*Science, AsteroidNadirPointing*/ 27 { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}}, /*Science, AsteroidTgtTracking*/ 28 { 1, 0, 0, 0, 1, 1, 3, 0, 1, 1} /*Jet=0, RWA=1, Engine_Jet=2, Engine_Rwa=3*/ 29 }; 30 ProjectA Attitude Control Subsystem Performance Specification. Contractor1 Document ID: S912-PF4610. Revision: C. Oct. 29, 2004. Table 1. ACS Control Mode Switching ProjectA OBC ACS Flight Software Requirements Specification (S912-SRS4930) DOORS export 11/2/04 L4-SROAC-107 Commanded Transition Requirements 1.8.1.2 Commanded Transition Requirements L4-SROAC-108 (ACS-AC072) The software shall allow a commanded transition from Launch Mode, Target Pointing Mode, Delta-V Mode, or Science Mode to acquisition/Coarse Sun Pointing Rate Nulling Submode. L4-SROAC-109 (ACS-AC073) The software shall allow a commanded transition from Acquisition/Coarse Sun Pointing Sun Pointing Submode to Target Pointing mode. L4-SROAC-110 (ACS-AC074) The software shall allow commanded transitions between Target Pointing Mode and Delta-V Mode or Science Mode.",2/18/05
ProjectA - TIM - 1460,"Build 3.0 OBC Code: ACS Control Modes specified inconsistently by code, ACS P-Spec, and ACS SRS",2,"Ten ACS control sub modes are implemented in the code ""ACModeTable.c"". However, there are ten sub modes defined in Table 1 of the ProjectA Attitude Control Subsystem Performance Specification and Table 6-1 of the ProjectA System State and Subsystem Mode Definitions Design Note (DN-ProjectA-SE-001) that are different than what is in ""ACModeTable.c"". Furthermore, there are only nine ACS Control sub modes defined in the OBC ACS SRS requirement L4-SROAC-32 (ACS-AC020.4). The ""Attitude Steering"" sub mode implemented in the code is not defined in the ProjectA ACS Performance Specification, the ProjectA System State and Subsystem Mode Definitions Design Note, or the ProjectA OBC ACS SRS requirement L4-SROAC-32 (ACS-AC020.4). The ""Torque Control"" sub mode defined in the ProjectA ACS Performance Specification and the ""RWA Torque"" sub mode defined in DN-ProjectA-SE-001 is not implemented in the code or defined in the OBC ACS SRS requirement L4-SROAC-32 (ACS-AC020.4). In addition, there are no sub modes defined for Launch mode in OBC ACS SRS requirement L4-SROAC-32 (ACS-AC020.4). However, there are two sub modes defined in Table 1 of the ACS Performance Spec. and Table 6-1 of DN-ProjectA-SE-001 for Lauch mode, which are for speed control and torque control. Only the ""Speed_ctl"" Launch sub mode is implemented in the code. There are 11 submodes defined in the design note DN-ProjectA-ACS-001 as follows: 1. Launch Mode – Torque Submode 2. Launch Mode – Speed Submode 3. Acquisition/Coarse Sun Pointing Mode - Rate Nulling Submode, 4. Acquisition/Coarse Sun Pointing Mode - Sun Acquisition Submode, 5. Acquisition/Coarse Sun Pointing Mode - Sun Pointing Submode, 6. Target Pointing Mode - Attitude Steering Submode, 7. Target Pointing Mode - Inertial Target Submode, 8. Delta-V Mode - Engine Submode, 9. Delta-V Mode - RCS Submode, 10. Science Mode - Asteroid Nadir Pointing Submode, 11. Science Mode - Asteroid Target Tracking Submode. Among the eleven submodes, torque submode is not implemented in the code and attitude steering submode is not defined in the ProjectA ACS Performance Specification. Referenced documents: ACModeTable.c in OBC Build 3.0 14 15 ac_mode_table_type AcModeTable = 16 { 17 /*LNH CNT CNT CNT NML NML Engine RCS ATGT ATRK */ 18 {{ 0, 1, 1, 1, 0, 0, 0, 0, 0, 0}, /*Launch, Speed_ctl */ 19 { 1, 0, 1, 1, 1, 1, 1, 1, 1, 1}, /*Contingency, Rate_Nulling */ 20 { 0, 1, 0, 1, 0, 0, 0, 0, 0, 0}, /*Contingency, Sun_acq */ 21 { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, /*Contingency, Sun_point */ 22 { 0, 0, 0, 1, 0, 1, 0, 0, 1, 1}, /*Normal, Attitude Steering */ 23 { 0, 0, 0, 1, 1, 0, 1, 1, 1, 1}, /*Normal, Inertial_target*/ 24 { 0, 0, 0, 1, 1, 1, 0, 1, 0, 0}, /*Normal, DeltaVEngine */ 25 { 0, 0, 0, 1, 1, 1, 1, 0, 0, 0}, /*Normal, DeltaVRCS */ 26 { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}, /*Science, AsteroidNadirPointing*/ 27 { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}}, /*Science, AsteroidTgtTracking*/ ProjectA Attitude Control Subsystem Performance Specification. Contractor1 Document ID: S912-PF4610. Revision: C. October 29, 2004. Table 1. ACS Control Mode Switching (reference is attached as a Relationship) ProjectA System State and Subsystem Mode Definitions Design Note, DN-ProjectA-SE-001, CDRL TD-008, dated 9/27/04. (reference is attached as a Relationship) ProjectA OBC ACS Flight Software Requirements Specification (S912-SRS4930) DOORS export 11/2/04 L4-SROAC-32 ACS-AC020.4 Set AC control mode: * Launch Mode, * Acquisition/Coarse Sun Pointing Mode - Rate Nulling Submode, * Acquisition/Coarse Sun Pointing Mode - Sun Acquisition Submode, * Acquisition/Coarse Sun Pointing Mode - Sun Pointing Submode, * Target Pointing Mode - Attitude Steering Submode, * Target Pointing Mode - Inertial Target Submode, * Delta-V Mode - Engine Submode, * Delta-V Mode - RCS Submode, * Science Mode - Asteroid Nadir Pointing Submode, * Science Mode - Asteroid Target Tracking Submode. ProjectA Design Note: Thrust Vector Control System Design and Analysis for ProjectA. Project Doc #: DN-ProjectA-ACS-008. Revision: Initial. March 03, 2003.",2/18/05
ProjectA - TIM - 1459,Build 3.0 OBC Code: Coarse Sun Acquisition Mode - Unused and undocumented Control Gains,4,"Control gains with Gyroless and no AD for Coarse Sun Acquisition Mode are defined as ""NoAdGains"" in the code ""AcControlTable.c"", but the gains are not used any place in the code and are not documented in the Design Notes. Referenced documents: AcControlTable.c in OBC Build 3.0 168 ** Gyroless No AD Gains for Coarse Sun Acquisition Mode ... 169 */ 170 171 {{{{0.00025, 0.0, 0.0}, 172 {0.0, 0.00025, 0.0}, 173 {0.0, 0.0, 0.00025}}}, /* NoAdGains Cp[0] */ 174 175 {{{0.0, 0.0, 0.0}, 176 {0.0, 0.0, 0.0}, 177 {0.0, 0.0, 0.0}}}, /* NoAdGains Cr[0] */ 178 {{{0.0, 0.0, 0.0}, 179 {0.0, 0.0, 0.0}, 180 {0.0, 0.0, 0.0}}}}, /* NoAdGains Ci[0] */ 181",2/18/05
ProjectA - TIM - 1458,Build 3.0 OBC Code: Controller Limits specified inconsistently by code and design note,2,"The limits of the controller implemented in the code ""AcControlTable.c"" are ThetaErrBdyLmt, OmegaErrBdyLmt, IntegralErrBdyLmt, and RateLimit. However, there is no body frame attitude error limit, rate error limit, and RateLimit according to the control algorithm shown in Figure 3 in DN-ProjectA-ACS-006. There is a limit for integral error in the Figure 3, which limits the integral of the attitude error, but it is different from the limit IntegralErrBdyLmt, which limits gain*integrated_attitude_error*inertia. The values of IntegralErrBdyLmt are set to 10000, 10000, and 10000(sec), which are unrealistic. The units of IntegralErrBdyLmt listed in the code are second, which is wrong. It should be kg*m*m/(sec*sec). The values of RateLimit are 10000 rad/sec except for ""alt 1 Jet"". The values seems unrealistic. Referenced documents: AcControlTable.c in OBC Build 3.0 64 /* 65 ** Attitude, Rate, And Integral Error Limits ... 66 */ 67 68 {{ 15.0 * DEG_2_RAD, 69 15.0 * DEG_2_RAD, 70 15.0 * DEG_2_RAD }}, /* ThetaErrBdyLmt, rad */ 71 72 {{ 5.0 * DEG_2_RAD, 73 5.0 * DEG_2_RAD, 74 5.0 * DEG_2_RAD }}, /* OmegaErrBdyLmt, r/s */ 75 76 {{ 1.00e4, 77 1.00e4, 78 1.00e4 }}, /* IntegralErrBdyLmt, sec */ 79 80 {{ 1.70e-3, 1.70e-3, 1.70e-3 }, /* RateLimit, rad/sec */ 81 { 1.00e+4, 1.00e+4, 1.00e+4 }, /* RateLimit, rad/sec */ 82 { 1.00e+4, 1.00e+4, 1.00e+4 }, /* RateLimit, rad/sec */ 83 { 1.00e+4, 1.00e+4, 1.00e+4 }, /* RateLimit, rad/sec */ 84 { 1.00e-4, 1.00e-4, 1.00e-4 }}, /* RateLimit, rad/sec */ 85 DN-ProjectA-ACS-006 Rev C (3/2/04) ""Attitude Control System Design and Analysis for ProjectA"" Figure 3",2/18/05
ProjectA - TIM - 1457,Build 3.0 OBC Code: Different control algorithm in the code,2,"The control algorithm implemented in ""accontrollaw.c"" is different from that documented in the design note DN-ProjectA-ACS-006. The comments in the code call the control algorithm ""double saturated controller"". It seems that the controller uses the integral of attitude error or rate error depending on if the rate command is saturated or not. However, the control algorithm shown in Figure 3 in DN-ProjectA-ACS-006 always uses the integral of attitude error. There are two limiters implemented in the code, but there is only one limiter in the design note. They are different. The limiter in the code limits gain*integrated_attitude_error*inertia or gain* integrated_rate_error*inertia. The limiter in the design note limits only integrated_attitude_error as shown in Figure 4 in DN-ProjectA-ACS-006. The rationale of the rate command calculation in the code line 144 and 145, shown as follows, is unclear. It uses the equivalent attitude error as the rate error. Actually, the rate error is available as pControl->OmegaErrLmtBdy. 144 pControl->RateCmd.v[i] = pControl->ThetaErrLmtBdy.v[i] * AcControlTable.Cp[select[i]].v[i] / 145 AcControlTable.Cr[select[i]].v[i]; It seems that the inner loop integration from line 157 to 159, shown as follows, includes not only the rate error as pControl->OmegaErrLmtBdy, but also the attitude error as pControl->RateCmd. The physical meaning of the combination is unclear and makes the integration larger than that without rate command saturation. 157 pControl->IntegralErrLmtBdy[selecti].v[i] += AcControlTable.Ci_Inner[select[i]].v[i] * 158 ( pControl->RateCmd.v[i] + pControl->OmegaErrLmtBdy.v[i] ) * AC_CYCLE_TIME * 159 AcControlTable.Ci[select[i]].v[i] * pControl->pIsc->m[i][i]; The values of the integral gain when on the rate limiter, shown as AcControlTable.Ci_Inner, are 1000 for Engine and 1 for the rest. The values are questionable. If the value is 1, the inner loop integration will use the same gains as the outer loop integration, which is not reasonable. The value of 1000 makes the inner loop integration much larger than the outer loop integration, which does not make sense. Referenced documents: accontrollaw.c in OBC Build 3.0 136 /* 137 ....DOUBLE SATURATED CONTROLLER 138 */ 139 for ( i = 0; i < 3; i++ ) { 140 /* 141 .... CALCULATE THE RATE COMMAND 142 */ 143 if ( fabs( AcControlTable.Cr[select[i]].v[i] ) > 0.0 ) 144 pControl->RateCmd.v[i] = pControl->ThetaErrLmtBdy.v[i] * AcControlTable.Cp[select[i]].v[i] / 145 AcControlTable.Cr[select[i]].v[i]; 146 else 147 pControl->RateCmd.v[i] = 0.0; 148 if ( fabs( pControl->RateCmd.v[i] ) > AcControlTable.RateLimit[select[i]].v[i] ) { 149 /* 150 .... SWITCH INTEGRATOR TO INNER LOOP, SATURATE RATE COMMAND 151 */ 152 pControl->RateCmd.v[i] = LIMIT ( pControl->RateCmd.v[i], AcControlTable.RateLimit[select[i]].v[i] ); 153 /* 154 .... ONLY INTEGRATE IF ACTUATOR WASN'T SATURATED LAST CYCLE 155 */ 156 if ( pControl->IntegratorOn[i] == 1 ) 157 pControl->IntegralErrLmtBdy[selecti].v[i] += AcControlTable.Ci_Inner[select[i]].v[i] * 158 ( pControl->RateCmd.v[i] + pControl->OmegaErrLmtBdy.v[i] ) * AC_CYCLE_TIME * 159 AcControlTable.Ci[select[i]].v[i] * pControl->pIsc->m[i][i]; 160 161 } 162 else { 163 /* 164 .... INTEGRATOR STAYS ON OUTER LOOP 165 .... ONLY INTEGRATE IF ACTUATOR WASN'T SATURATED LAST CYCLE 166 */ 167 if ( pControl->IntegratorOn[i] == 1 ) 168 pControl->IntegralErrLmtBdy[selecti].v[i] += pControl->ThetaErrLmtBdy.v[i] * AC_CYCLE_TIME * 169 AcControlTable.Ci[select[i]].v[i] * pControl->pIsc->m[i][i]; 170 171 } 172 /* 173 .... LIMIT THE INTEGRATOR 174 */ 175 pControl->IntegralErrLmtBdy[selecti].v[i] = LIMIT ( pControl->IntegralErrLmtBdy[selecti].v[i], 176 AcControlTable.IntegralErrBdyLmt.v[i] ); 177 /* 178 .... FORM PID TORQUE COMMAND 179 */ 180 pControl->TorquePidBdy.v[i] = ( ( pControl->RateCmd.v[i] + pControl->OmegaErrLmtBdy.v[i] ) * 181 AcControlTable.Cr[select[i]].v[i] ) * pControl->pIsc->m[i][i] + 182 pControl->IntegralErrLmtBdy[selecti].v[i]; 183 } DN-ProjectA-ACS-006 Rev C (3/2/04) ""Attitude Control System Design and Analysis for ProjectA"" Figure 3 and Figure 4",2/18/05
ProjectA - TIM - 1456,Build 3.0 OBC Code: Different Control Gains in the code,3,"The control gain values for Engine in the code ""AcControlTable.c"" are different from those listed in Table 4 in DN-ProjectA-ACS-008. Referenced documents: AcControlTable.c in OBC Build 3.0 132 /* 133 ** Proportional gains, alt Jet, Jet, RWA, Engine 134 */ 135 {{ 1.14e-04, 3.55e-04, 1.14e-04 }, /* alt 1 Jet */ 136 { 7.30e-04, 8.90e-03, 4.30e-04 }, /* alt 2 Jet */ 137 { 7.30e-04, 8.90e-03, 4.30e-04 }, /* Jet */ 138 { 2.27e-04, 2.85e-03, 2.27e-04 }, /* RWA */ 139 // { 2.27e-04, 2.85e-03, 1.80e-04 }, /* RWA */ 140 { 7.10e-06, 1.14e-04, 0.00e+00 }}, /* Engine */ 141 142 /* 143 ** Rate gains, alt Jet, Jet, RWA, Engine 144 */ 145 {{ 2.03e-02, 3.77e-02, 2.03e-02 }, /* alt 1 Jet */ 146 { 4.10e-02, 1.40e-01, 3.10e-02 }, /* alt 2 Jet */ 147 { 4.10e-02, 1.40e-01, 3.10e-02 }, /* Jet */ 148 { 3.02e-02, 1.07e-01, 3.02e-02 }, /* RWA */ 149 { 5.10e-03, 2.03e-02, 0.00e+00 }}, /* Engine */ 150 /* 151 ** Integral gains, alt Jet, Jet, RWA, Engine 152 */ 153 {{ 0.00e+00, 0.00e+00, 0.00e+00 }, /* alt 1 Jet */ 154 { 0.00e+00, 0.00e+00, 0.00e+00 }, /* alt 2 Jet */ 155 { 3.50e-06, 1.40e-04, 2.70e-06 }, /* Jet */ 156 { 1.80e-06, 3.56e-06, 1.80e-06 }, /* RWA */ 157 // { 1.80e-06, 3.56e-06, 5.30e-07 }, /* RWA */ 158 { 8.00e-09, 1.00e-07, 0.00e+00 }}, /* Engine */ 159 /* ProjectA Design Note: Thrust Vector Control System Design and Analysis for ProjectA. Project Doc #: DN-ProjectA-ACS-008. Revision: Initial. February 27, 2004. Table 4. Control system parameters for x and y Axes Parameter X Y Kp (1/sec2) 1.40e-3 3.97e-3 Kr (1/sec) 5.06e-3 1.43e-2 Ki (1/sec3) 8.0e-9 1.0e-7",2/18/05
ProjectA - TIM - 1455,Build 3.0 OBC Code: Undocumented Control Gains in the code,3,"There are five sets of PID control gains implemented in the code ""AcControlTable.c"". However, only three gain sets are documented in the Design Notes. The gain sets for ""alt 1 jet"" and ""alt 2 jet"" in the code are not documented in any of the Design Notes. Referenced documents: AcControlTable.c in OBC Build 3.0 132 /* 133 ** Proportional gains, alt Jet, Jet, RWA, Engine 134 */ 135 {{ 1.14e-04, 3.55e-04, 1.14e-04 }, /* alt 1 Jet */ 136 { 7.30e-04, 8.90e-03, 4.30e-04 }, /* alt 2 Jet */ 137 { 7.30e-04, 8.90e-03, 4.30e-04 }, /* Jet */ 138 { 2.27e-04, 2.85e-03, 2.27e-04 }, /* RWA */ 139 // { 2.27e-04, 2.85e-03, 1.80e-04 }, /* RWA */ 140 { 7.10e-06, 1.14e-04, 0.00e+00 }}, /* Engine */ 141 142 /* 143 ** Rate gains, alt Jet, Jet, RWA, Engine 144 */ 145 {{ 2.03e-02, 3.77e-02, 2.03e-02 }, /* alt 1 Jet */ 146 { 4.10e-02, 1.40e-01, 3.10e-02 }, /* alt 2 Jet */ 147 { 4.10e-02, 1.40e-01, 3.10e-02 }, /* Jet */ 148 { 3.02e-02, 1.07e-01, 3.02e-02 }, /* RWA */ 149 { 5.10e-03, 2.03e-02, 0.00e+00 }}, /* Engine */ 150 /* 151 ** Integral gains, alt Jet, Jet, RWA, Engine 152 */ 153 {{ 0.00e+00, 0.00e+00, 0.00e+00 }, /* alt 1 Jet */ 154 { 0.00e+00, 0.00e+00, 0.00e+00 }, /* alt 2 Jet */ 155 { 3.50e-06, 1.40e-04, 2.70e-06 }, /* Jet */ 156 { 1.80e-06, 3.56e-06, 1.80e-06 }, /* RWA */ 157 // { 1.80e-06, 3.56e-06, 5.30e-07 }, /* RWA */ 158 { 8.00e-09, 1.00e-07, 0.00e+00 }}, /* Engine */ 159 /*",2/18/05
ProjectA - TIM - 1454,"Incorrect inertia used in the thrust vector control system design note, DN-ProjectA-ACS-008.",2,"The spacecraft moment of inertia Iyy listed in Table 1 in DN-ProjectA-ACS-008 is 640 kg-m*m. However, Iyy in section 3.1.5.1.2 Spacecraft Inertia in ProjectA Attitude Control Subsystem Performance Specification is 330+-15% kg-m*m. The spacecraft inertia is also listed and used in several Design Notes, such as, Table 2 in DN-ProjectA-ACS-007, Table 4 in DN-ProjectA-ACS-012, and Table 2 in DN-ProjectA-ACS-0013. The Iyy values are not the same in the documents, but the minimum value for Iyy is 273.27 kg-m*m and the maximum value is 381.73 kg-m*m. The Iyy value is defined as 345.487 kg-m*m in AcControlTable.c in OBC FSW Build 3.0. The value of Iyy in DN-ProjectA-ACS-008 is about 85% larger than the value used in the code. This difference raises questions as to whether the control system performance can meet the requirements using the control gains designed in DN-ProjectA-ACS-008. Referenced documents: ProjectA Design Note: Thrust Vector Control System Design and Analysis for ProjectA. Project Doc #: DN-ProjectA-ACS-008. Revision: Initial. February 27, 2004. Table 1. Physical Parameters for x and y Axes Parameter x y Moment of Inertia I (kg- m2) 5750, 5500 640 1st Mode frequency omegai (Hz) 0.125 0.5 Modal slope at actuator phia (m-1) 0.06 0.06 Modal slope at sensor phis (m-1) 0.06 0.06 Thrust Ft (N) .020, .100 .020, .100 Thruster mass m (kg) 10 10 Thruster transverse inertia J (kg-m2) 0.17 0.17 Moment arm to c.g. Lt (m) 0.85, 1.14 1.29, 1.582 Effective gimbal pivot arm Ln (m) 0.10 -.34 ProjectA Attitude Control Subsystem Performance Specification. Contractor1 Document ID: S912-PF4610. Revision: C. July 30, 2004. Exported from the November 2, 2004 DOORS database. 3.1.5.1.2 Spacecraft Inertias The ACS shall perform as specified herein with the following deployed spacecraft moments and products of inertia about the spacecraft center of mass: Ixx = 5800 N-m-s2 +- 15% Iyy = 330 N-m-s2 +- 15% Izz = 5700 N-m-s2 +- 15% Ixy = Ixz = Iyz = 0 +- 40 N-m-s2 ProjectA Design Note: Attitude ProjectA Target Pointing Mode Design and Analysis. Project Doc #: DN-ProjectA-ACS-007. Revision: Initial. April 13, 2004. Table 2: Moments of inertia (kg-m2) Life XX YY ZZ BOL 5997.11 381.73 5873.81 EOL 5624.17 273.27 5545.86 Table 3: Products of inertia (kg-m2) Life XY XZ YZ BOL -0.25 1.42 -0.13 EOL 0.69 -0.10 -0.17 ProjectA Design Note: Reaction Control System Design and Analysis for ProjectA. Project Doc #: DN-ProjectA-ACS-012. Revision: Initial. April 15, 2004. Table 4. Physical Parameters Parameter Roll Pitch Yaw Moment of Inertia (kg- m2) 5700, 5620 360, 273 5600, 5546 1st Mode frequency (Hz) 0.14 0.5 0.14 Modal slope at actuator (m-1) 0.06 .06 0.06 Modal slope at sensor (m-1) 0.06 .06 0.06 REA Thrust (N) 0.93, .223 ProjectA Design Note: ProjectA Coarse Sun Pointing Mode Design and Analysis. Project Doc #: DN-ProjectA-ACS-013. Revision: Initial. April 22, 2004. Table 2: Spacecraft Mass Properties Stowed One Array Deployed Both Arrays Deployed, BOL Both Arrays Deployed, EOL Moments of Inertia (kg-m2) XX 452.48 3121.17 5997.11 5624.17 YY 413.10 397.41 381.73 273.27 ZZ 360.55 3013.56 5873.81 5545.86 Products of Inertia (kg-m2) XY -0.25 6.42 -0.25 0.69 XZ 1.28 1.35 1.42 -0.10 YZ -0.13 32.72 -0.13 -0.17 Center of Mass (m) X -0.00671 -0.0074 -0.00800 -0.00765 Y 0.00047 -0.2896 0.00047 -0.00022 Z 0.99132 0.9913 0.99132 1.10447 Center of Mass Uncertainty (m) X 0.038 0.034 0.029 0.028 Y 0.024 0.029 0.033 0.036 Z 0.048 0.048 0.048 0.060 OBC Bld 3.0 AcControlTable.c {{{ 5696.372, 0.686, 0.510}, /* Isc */ { 0.686, 345.487, -0.153}, { 0.510, -0.153, 5580.502}}},",1/28/05
ProjectA - TIM - 1453,"Incorrect inertia used in the attitude control system design note, DN-ProjectA-ACS-006",2,"Description: The spacecraft moment of inertia Iyy listed in Table 1 in DN-ProjectA-ACS-006 Rev C is 640.31 kg-m*m. However, Iyy in section 3.1.5.1.2 Spacecraft Inertia in ProjectA Attitude Control Subsystem Performance Specification is 330+-15% kg-m*m. The spacecraft inertia is also listed and used in several other Design Notes, such as, Table 2 in DN-ProjectA-ACS-007, Table 4 in DN-ProjectA-ACS-012, and Table 2 in DN-ProjectA-ACS-0013. The Iyy values are not the same in the documents, but the minimum value for Iyy is 273.27 kg-m*m and the maximum value is 381.73 kg-m*m. The Iyy value is defined as 345.487 kg-m*m in AcControlTable.c in OBC FSW Build 3.0. The value of Iyy in DN-ProjectA-ACS-006 is about 85% larger than the value used in the code. This difference raises questions as to whether the control system performance can meet the requirements using the control gains designed in DN-ProjectA-ACS-006. In DN-ProjectA-ACS-006, performance analysis is conducted for 10% inertia variation. However, in the ACS Performance Specification, the inertia is allowed to have 15% variation. It seems that the performance analysis for 10% inertia variation is not adequate. Referenced documents: DN-ProjectA-ACS-006 Rev C (3/2/04) ""Attitude Control System Design and Analysis for ProjectA"" Table 1. ProjectA Inertia Properties (Deployed Configuration) kg-m2 (Max) Parameter Units X Y Z Description ISC X 5750.59 -1.29 -30.03 Rigid S/C Inertia Y -1.29 640.31 -.01 Z -30.03 -.01 5311.55 ProjectA Attitude Control Subsystem Performance Specification. Contractor1 Document ID: S912-PF4610. Revision: C. July 30, 2004. Exported from the November 2, 2004 DOORS database. 3.1.5.1.2 Spacecraft Inertias The ACS shall perform as specified herein with the following deployed spacecraft moments and products of inertia about the spacecraft center of mass: Ixx = 5800 N-m-s2 +- 15% Iyy = 330 N-m-s2 +- 15% Izz = 5700 N-m-s2 +- 15% Ixy = Ixz = Iyz = 0 +- 40 N-m-s2 ProjectA Design Note: Attitude ProjectA Target Pointing Mode Design and Analysis. Project Doc #: DN-ProjectA-ACS-007. Revision: Initial. April 13, 2004. Table 2: Moments of inertia (kg-m2) Life XX YY ZZ BOL 5997.11 381.73 5873.81 EOL 5624.17 273.27 5545.86 Table 3: Products of inertia (kg-m2) Life XY XZ YZ BOL -0.25 1.42 -0.13 EOL 0.69 -0.10 -0.17 ProjectA Design Note: Reaction Control System Design and Analysis for ProjectA. Project Doc #: DN-ProjectA-ACS-012. Revision: Initial. April 15, 2004. Table 4. Physical Parameters Parameter Roll Pitch Yaw Moment of Inertia (kg- m2) 5700, 5620 360, 273 5600, 5546 1st Mode frequency (Hz) 0.14 0.5 0.14 Modal slope at actuator (m-1) 0.06 .06 0.06 Modal slope at sensor (m-1) 0.06 .06 0.06 REA Thrust (N) 0.93, .223 ProjectA Design Note: ProjectA Coarse Sun Pointing Mode Design and Analysis. Project Doc #: DN-ProjectA-ACS-013. Revision: Initial. April 22, 2004. Table 2: Spacecraft Mass Properties Stowed One Array Deployed Both Arrays Deployed, BOL Both Arrays Deployed, EOL Moments of Inertia (kg-m2) XX 452.48 3121.17 5997.11 5624.17 YY 413.10 397.41 381.73 273.27 ZZ 360.55 3013.56 5873.81 5545.86 Products of Inertia (kg-m2) XY -0.25 6.42 -0.25 0.69 XZ 1.28 1.35 1.42 -0.10 YZ -0.13 32.72 -0.13 -0.17 Center of Mass (m) X -0.00671 -0.0074 -0.00800 -0.00765 Y 0.00047 -0.2896 0.00047 -0.00022 Z 0.99132 0.9913 0.99132 1.10447 Center of Mass Uncertainty (m) X 0.038 0.034 0.029 0.028 Y 0.024 0.029 0.033 0.036 Z 0.048 0.048 0.048 0.060 OBC Bld 3.0 AcControlTable.c {{{ 5696.372, 0.686, 0.510}, /* Isc */ { 0.686, 345.487, -0.153}, { 0.510, -0.153, 5580.502}}},",1/28/05
ProjectA - TIM - 1452,Inconsistent Maximum Spin Rate,2,"Description: L3-SFS-2383 in the 11-2-04 DOORS version of the SC&FSRD states that the ACS shall be able to survive a spacecraft spin rate of up to 55 RPM about any axis. However, L2-LVI-221 in Launch Vehicle Interface Requirements Document D-25840 states that the current maximum limit on the spin rate for the ProjectA spacecraft/third stage assembly is 60 RPM. In the previous version of L3-SFS-2383, it states that the Flight System shall be able to survive a spin of up to 60 RPM. L3-SFS-2383 changed, but L2-LVI-221 did not. Referenced Requirements: L3-SFS-2382 5.1.8 Maximum Spin Rate The ACS shall be able to survive a spacecraft spin rate of up to 55 RPM about any axis. L2-LVI-221 in L2 - Launch Vehicle Interface Requirements Document D-25840 The current maximum limit on the spin rate for the ProjectA spacecraft/third stage assembly is 60 RPM. This upper RPM limit is due to component limitations on the ProjectA spacecraft. At spacecraft separation from the third stage, the ProjectA spacecraft spin rate must be less than 2 RPM. If the spacecraft separation spin rate is greater than 2 RPM, then the ProjectA attitude control system will not be able sense and remove the tip-off separation spin rate.",1/20/05
ProjectA - TIM - 1451,"ProjectA OBC C&DH Flight Software Test Procedures, ds_release_by_databset_test(), Does Not Fully Verify the Linked SRS Requirements",3,"This test is designed to verify the following SRS requirements: DS016 (L4-SROBC-155) The OBC-C&DH software shall accept and execute a RELEASE_DATA_SET command to release the specified Virtual Recorder's DATASET storage memory, which is then available for re-recording. DS016.1 (L4-SROBC-156) When DATASET_1 is specified by a RELEASE_DATASET command, all memory allocated to DATASET_1, _2, and _3 shall be released for re-recording. DS016.2 (L4-SROBC-157) When DATASET_2 is specified by a RELEASE_DATASET command, all memory allocated to DATASET_2 and _3 shall be released for re-recording. DS016.3 (L4-SROBC-158) When DATASET_3 is specified by a RELEASE_DATASET command, all memory allocated to DATASET_3 shall be released for re-recording. Issues: (1)Section 11.4 states that DS016,DS016.1, DS016.2, DS016.3 are verified. The test script only references DS016. (2) The script does not test all three commands as the test will complete (goto EXIT) when the first VR is found that can perform the ds_release_by_dataset test. For example, in the first test step (if the IF statement is true then only dataset_3 will be released) and the test will complete without showing that that DS016.1 and DS016.2 are verified. The following is an example copied from the test script: if (DS_VR_Status[0].first_seq_nums_d3 <> 0) then @ds:release_by_data_sets DataSet_3 VR1_MASK wait (DS_VR_Status[0].first_seq_nums_d3 = 0) goto <<EXIT>> endif",1/14/05
ProjectA - TIM - 1450,"ProjectA OBC C&DH Flight Software Test Procedures, ds_start_playback_test(), Does Not Fully Verify the Linked SRS Requirements",4,"This test is designed to verify the following SRS requirement: DS011 (L4-SROBC-150) The OBC-C&DH software shall accept and execute a START_RECORDER_PLAYBACK command which starts an initial playback of the specified DATASET for the specified Virtual Recorder. Issue: It appears that data set_0 is always used for each of VR1 – VR10. The Command Dictionary states: ""To playback more than one data set at a time, multiple start commands in continuous order must be sent."". The test does not appear to playback more than one data set for each VR, therefore, it does not address all aspects of the start_dataset_playback command and of DS011 in its entirety.",1/13/05
ProjectA - TIM - 1449,"ProjectA OBC C&DH Flight Software Test Procedures, ds_enable_disable_data_overwrite_test(), Does Not Fully Verify the Linked SRS Requirements",3,"This test is designed to verify the following SRS requirements: DS001 (L4-SROBC-139) The OBC-C&DH software shall provide ground commands to modify the memory quota of an individual Virtual Recorder during run-time operation without disabling the storage into the Virtual Recorder and without disrupting the normal flow of data to the Virtual Recorder. DS002 (L4-SROBC-140) The OBC-C&DH software shall support the options of either autonomously overwriting recorded data (OVERWRITE_ENABLE) or discarding new data (OVERWRITE_DISABLED) when the QUOTA for a given Virtual Recorder becomes exhausted. DS003 (L4-SROBC-141) If a Virtual Recorder with OVERWRITE_DISABLED becomes full, the OBC-C&DH software shall discard newly arriving telemetry data. DS004 (L4-SROBC-142) When a Virtual Recorder operating in OVERWRITE_ENABLE mode becomes full (i.e., its QUOTA becomes exhausted), the OBC-C&DH software shall overwrite data in the oldest recorded block with the newly arriving data. Issues: (1) The test script does not verify DS001. There are no commands sent that modify the VR memory quota. (2) The script (as copied below) appears to be overwriting the last recorded block, not the oldest recorded block as required by DS004. ; *************************************************** ; While DS_VR_Status[3].last_recorded_seq_num is incrementing ; we will send the enable overwrite command. ; *************************************************** wait ( DS_VR_Status[3].last_recorded_seq_num > DS_VR_Status[3].first_seq_nums_d0 ) @ds:enable_data_overwrite VR4_MASK wait R@DS_VR_Status[3].overwrite_enabled = 1 wait DS_VR_Status[3].total_avail_memory_blocks = 1 thisvar1 = DS_VR_Status[3].last_recorded_seq_num wait 5 thisvar2 = DS_VR_Status[3].last_recorded_seq_num wait thisvar2 > thisvar1 ; *************************************************** ; Overwrite is currently enabled and overwriting the ; last VR4 position continuously. ; Now we will disable overwrite. Hit GO!",1/13/05
ProjectA - TIM - 1448,"ProjectA OBC C&DH Flight Software Test Procedures, ds_change_filter_test(), Does Not Fully Verify the Linked SRS Requirement",4,"This test is designed to verify SRS DS020 (L4-SROBC-162) The linked SRS requirement is: DS020 (L4-SROBC-162) The OBC-C&DH software shall accept and execute a SELECT_DS_FILTER command, which selects the specified storage filter table for use in subsequent CCSDS packet filtering operations. The test script states: ; Purpose: This script will verify the following ProjectA Data Storage ; (DS) requirements. ; ; DS020 ; DS021 Select one of the 8 filter tables Issues: The stated requirement number DS021 is incorrect (it should be DS020). The test script does not show that the actual filtering occurs per the table contents; it only shows that the new filter table is initiated. It is unclear where filtering per the table defined parameters is verified.",1/12/05
ProjectA - TIM - 1447,"ProjectA OBC C&DH Flight Software Test Procedures, ds_reset_command_counters (), Does Not Verify the Linked SRS Requirement",3,"This test is designed to verify SRS DS021 (L4-SROBC-163) The linked SRS requirement is: DS021 The OBC-C&DH software shall accept and execute a RESET_DS_HOUSEKEEPING command, which resets housekeeping data that is normally reported in the real-time telemetry stream. Section 8.4 of the test procedure states: This test verifies the following DS functions: Reset Command Counters. It is noted that the Purpose Section of the test script does not state what the purpose is. The script title indicates that the intent is to test ""command counter reset"". The pass/fail identified in the script is: wait (DS_command_executed_cnt = 0) wait (DS_command_rejected_cnt = 0) The test does not appear to reset housekeeping data but rather resets the DS command counters. The linked SRS requirement is not verified by this test. The command dictionary made available to IV&V does not contain a command to reset HK data. It is noted that the SRS does not identify ""reset values"" for the HK data.",1/12/05
ProjectA - TIM - 1446,"EngCntrl v0.2.2: Variable ""next_mode"" used inconsistently in code, and general usage of ""mode"" as mnemonic inconsistent with EngCntrl SRS",4,"SH_SYSTEM.H lines #239-255 defines the 'struct' type, ""NSTAR_DATA_TYPE"". SH_EXTERN.H line #37 declares ""nstar"" as a global structure of type ""NSTAR_DATA_TYPE"". This structure contains the variable ""next_mode"", which seems to take on values corresponding to values defined for ""system_mode"", a variable also residing in the same structure. SH_DEFINE.H lines #493-594 defines these values, which correspond the 7 Engine Modes defined for the Operational Software by the EngCntrl SRS (Note: with the exception of ""BOOTLOAD MODE"", which the EngCntrl SRS references as entirely different application, not a mode). The following files seem to access the ""nstar.next_mode"" variable in one form or another: OP_PROCMODE.C SH_INIT.C SH_PROC_CMD.C The following files contain local variable definitions for a variable named ""next_mode"": OP_CATH_CND.C OP_GRID_CLR.C OP_PROC_ENG.C OP_SAFE_SYS.C OP_SHUTDOWN.C OP_STARTUP.C OP_THROTTLE.C All of the ""next_modes"" referenced by these files are actually sub-modes of each of the 7 Engine modes, or what the EngCntrl SRS seems to refer to as ""steps."" The EngCntrl SRS uses the term ""step(s)"" 214 times; however, this term is not found anywhere either in the EngCntrl code. No direct conflicts were observed among the several different ""next_mode"" variables. So, this issue is mainly targeted at the maintainability and readability of the code. However, consideration should be given when using the same mnemonic for a multitude of variables, as this may lead to misinterpretations by other developers. Minimally, the source code documentation should describe how the mnemonic is used in a given context. However, usage of ""next_mode"" as a local variable would be made more consistent with the EngCntrl SRS by changing mnemonic to ""next_state"". Referenced Source Code: SH_SYSTEM.H: Lines #239-255: typedef struct { XFS_DATA_TYPE xfs; EngCntrl_DATA_TYPE EngCntrl; PPU_DATA_TYPE ppu; INTEGER standby_mainvalve_requested; WORD system_mode; WORD next_mode; THRUST_TYPE thrust; ERROR_TYPE error; WORD accel_startup_voltage; DWORD accel_startup_duration; DWORD accel_startup_time; WORD accel_throttled; WORD power_down_time; } NSTAR_DATA_TYPE; SH_DEFINE.H: Lines #493-594: /*********************************/ /* Define the System Modes */ /*********************************/ #define SAFE_MODE 1 #define STANDBY_MODE 2 #define GRID_CLEAR_MODE 4 #define CATHODE_COND_MODE 8 #define THRUST_MODE 16 #define XFS_ON_MODE 32 #define XFS_INIT_MODE 64 #define BOOTLOAD_MODE 128 SH_EXTERN.H Line #37 extern volatile NSTAR_DATA_TYPE nstar;",1/12/05
ProjectA - TIM - 1445,"EngCntrl v0.2.2: ""XSPLYSET"" command format inconsistent with EngCntrl-S/C ICD",3,"EngCntrl/Spacecraft ICD Section 6.3.1.2.7 ""XPSLYSET,"" Table-6-12, ""XSPLYSET Command Format"" defines the parameters for the ""XPSLYSET"" command. According to this table, Word #2 corresponds to the parameter, ""SPLYNUM"". Then, Table 6-13 ""XSPLYSET Setpoint Scale Factor"" defines the conversion factors for the XPSLYSET parameters. A ""SPLYNUM"" value of ""5"" corresponds to ""Accelerator Voltage."" Table 6-13 indicates that the conversion factor formula for this term is: -250.0 * (Setpoint / 4096) = Volts SH_DEFINE.H line #127 appears to define a macro called ""ACCEL_VOLTAGE_TO_COUNTS"" corresponding to this formula. However, the negative sign is dropped from the -250.0 term in the previous formula. Possibly, this sign is handled in hardware or elsewhere in the code. However, without any explanation in the code, the code and the ICD appear inconsistent. Although the ICD indicates the ""XSPLYSET command is intended for ground test operations,"" usage of the ""ACCEL_VOLTAGE_TO_COUNTS"" macro will extend into the mission. Therefore, incorrect handling of the accelerator voltage polarity could have serious consequences. If the code represents the design intent, then source code comments should describe how the polarity of the accelerator voltage is handled, and possibly an update to the ICD will be required. If the ICD specification was not flowed down as intended, the code should be corrected. If the potential exists for the accelerator voltage polarity to be reversed then the fault protection system should have the robustness to handle this. In addition, the referenced line of code ended with a comment indicating ""// V ???"". This is just an example of the 51 lines containing comments with two or more question marks. Some of these lines surround what is obviously debug code, and for those cases, the question marks are possibly being used by convention; however, the majority of these cases are more like the previous example, which implies there are a number of instances where the developer is unsure on the correct implementation. If the question marks serve as some kind of convention, then the code should document this. Otherwise, an action plan should be undertaken to eliminate any uncertainties regarding the code. All instances of ""??"" embedded within source code comments should be removed and replaced by declarative statements. Referenced Specification: EngCntrl/Spacecraft ICD, Section 6.3.1.2.7 XPSLYSET: Table-6-12, XSPLYSET Command Format (Note: Partial listing only): _______________________________________________________________ Word# Parameter Value/Range Definition _______________________________________________________________ 2 SPLYNUM 0 to 5 0 = Discharge Supply 1 = Discharge Heater Supply 2 = Neutralizer Supply 3 = Neutralizer Heater Supply 4 = Beam Supply 5 = Accelerator Supply Table 6-13 XSPLYSET Setpoint Scale Factor (Note: Partial listing only): __________________________________________________________________ SPLYNUM Supply Definition Engineering Scale Factor Units __________________________________________________________________ WORD 5 Accelerator Voltage -250.0 * (Setpoint / 4096) Volts Referenced Source Code: SH_DEFINE.H: Line #127: #define ACCEL_VOLTAGE_TO_COUNTS(eng) (WORD) (eng * 4096L / 250.0) // V ???",1/12/05
ProjectA - TIM - 1444,"EngCntrl v0.2.2: ""XSCRBMEM"" command format inconsistent with EngCntrl-S/C ICD",3,"According to Table 6-44 ""XSCRBMEM Command Format"" of the ProjectA EngCntrl - Spacecraft ICD dated May 7, 2004, the command XSCRBMEM comprises the following four words: 0 OPCODE 1 OFFSET 2 SEGMENT 3 CHECKSUM However, the source code file, SH_PROC_CMD.C, included in version 0.2.2 of the EngCntrl code, indicates the XSCRBMEM comprises the following five words. // w0 = opcode // w1 = start address (MSW) // w2 = start address (LSW) // w3 = end address (MSW) // w4 = end address (LSW) // w5 = checksum Therefore, these two artifacts are inconsistent. Presumably, the source represents the true decomposition of the XSCRBMEM, in which case the impact is marginal. However, the ProjectA EngCntrl - Spacecraft ICD should still represent the design. The ICD should also distinguish between the Operational mode-specific XSCRBMEM command and the BSCRBMEM Bootloader mode-specific. Currently, it only identifies the former for both Operational and Bootloader modes.",1/12/05
ProjectA - TIM - 1443,"EngCntrl v0.2.2: 112 elements allocated for array of structure type 'NSTAR_CONFIG_DATA_TYPE', but only 16 elements initialized",3,"SH_CONFIG.H defines structure type 'NSTAR_CONFIG_DATA_TYPE'. Line #86 contains the declaration for the array named ""throttle_table"". The number of elements allocated to this array corresponds to the constant ""NUMBER_OF_POWER_LEVELS"", which SH_DEFINE.H defines as 112. SH_CFG_DATA.C lines #140 - 364 initializes ""throttle_table"" array elements 0 through 15. However, the remaining 96 elements do not appear to be initialized elsewhere in the EngCntrl FSW. Possibly, the project intends to populate the remaining table elements in-flight, or the array size was inherited from the DS-1. Given the uncertainties, the impact of this issue is difficult to ascertain with a high level of certainty. Minimally, it will make the code more difficult to maintain. If the code is to contain at least initial values for all ""throttle_table"" entries, then either the remaining uninitialized table entries should be added to SH_CFG_DATA.C or the array size needs to be limited to 16. If the intent is to populate the remaining table elements in-flight, then the code should document this. FlexeLint Message: Message #785: Too few initializers for aggregate (line 26, file OP_HI_SPEED.C) Description: The number of initializers in a brace-enclosed initializer was less than the number of items in the aggregate. Default initialization is taken. An exception is made with the initializer {0}. This is given a separate message number in the Elective Note category ( 943). It is normally considered to be simply a stylized way of initializing all members to 0 Referenced Source Code: SH_CONFIG.H: Lines #56 - 119: typedef struct { . 86 THROTTLE_TABLE_TYPE throttle_table[NUMBER_OF_POWER_LEVELS]; . } NSTAR_CONFIG_DATA_TYPE; SH_DEFINE.H: Line #201: #define NUMBER_OF_POWER_LEVELS 112 SH_CFG_DATA.C: Lines #140 - 364: (Macro ""MAKE_THROTTLE_TABLE_ENTRY"" initializes ""throttle_table"" array elements 0 through 15)",1/12/05
ProjectA - TIM - 1442,"EngCntrl v0.2.2: Variable ""number_of_mae_hits"" used, but never initialized",5,"SH_DATABASE.H line #156 provides the declaration for the variable ""number_of_mae_hits"". SH_EXTERN.H line #120 defines this variable as an 'extern' variable. This variable is used in the EngCntrl FSW, but never initialized. The initial value of this variable should presumedly be ""0"". This variable should be initialized to ""0"" intrinsically, since 'C' allows this. However, this is not good coding practice. Therefore, recommend initializing the variable accordingly in the declaration found in SH_DATABASE.H. FlexeLint Message: Message #729: Symbol 'number_of_mae_hits' (line156, file SH_DATABASE.H, module SH_MAIN.C) not explicitly initialized Description: The named inter-module variable (external variable) was not explicitly initialized. See the comments on message 727 for more details. This message is suppressed for unit checkout (-u). Message ID #727 Description: The named static variable (local to a function) was not explicitly initialized before use. The following remarks apply to messages 728 and 729 as well as 727. By no explicit initialization we mean that there was no initializer present in the definition of the object, no direct assignment to the object, and no address operator applied to the object or, if the address of the object was taken, it was assigned to a pointer to const. These messages do not necessarily signal errors since the implicit initialization for static variables is 0. However, the messages are helpful in indicating those variables that you had forgotten to initialize to a value. To extract the maximum benefit from the messages we suggest that you employ an explicit initializer for those variables that you want to initialize to 0. For example: static int n = 0; For variables that will be initialized dynamically, do not use an explicit initializer as in: static int m; This message will be given for any array, struct or union if no member or element has been assigned a value. Referenced Source Code: SH_DATABASE.H: Line #156: WORD number_of_mae_hits; SH_EXTERN.H: Line #120: extern WORD number_of_mae_hits;",1/12/05
ProjectA - TIM - 1441,"EngCntrl v0.2.2: Variable ""timer_int_slip_count"" used, but never initialized",5,"SH_DATABASE.H line #74 provides the declaration for the variable ""timer_int_slip_count"". SH_EXTERN.H line #43 defines this variable as an 'extern' variable. This variable is used in the EngCntrl FSW, but never initialized. The initial value of this variable should presumedly be ""0"". This variable should be initialized to ""0"" intrinsically, since 'C' allows this. However, this is not good coding practice. Therefore, recommend initializing the variable accordingly in the declaration found in SH_DATABASE.H. FlexeLint Message: Message #729: Symbol 'timer_int_slip_count' (line 74, file SH_DATABASE.H, module SH_MAIN.C) not explicitly initialized Description: The named inter-module variable (external variable) was not explicitly initialized. See the comments on message 727 for more details. This message is suppressed for unit checkout (-u). Message ID #727 Description: The named static variable (local to a function) was not explicitly initialized before use. The following remarks apply to messages 728 and 729 as well as 727. By no explicit initialization we mean that there was no initializer present in the definition of the object, no direct assignment to the object, and no address operator applied to the object or, if the address of the object was taken, it was assigned to a pointer to const. These messages do not necessarily signal errors since the implicit initialization for static variables is 0. However, the messages are helpful in indicating those variables that you had forgotten to initialize to a value. To extract the maximum benefit from the messages we suggest that you employ an explicit initializer for those variables that you want to initialize to 0. For example: static int n = 0; For variables that will be initialized dynamically, do not use an explicit initializer as in: static int m; This message will be given for any array, struct or union if no member or element has been assigned a value. Referenced Source Code: SH_DATABASE.H: Line #74: WORD timer_int_slip_count; SH_EXTERN.H: Line #43: extern WORD timer_int_slip_count;",1/12/05
ProjectA - TIM - 1440,"EngCntrl v0.2.2: Variable ""cycle_overflow_count"" used, but never initialized",5,"SH_DATABASE.H line #73 provides the declaration for the variable ""cycle_overflow_count"". SH_EXTERN.H line #42 defines this variable as an 'extern' variable. This variable is used in the EngCntrl FSW, but never initialized. The initial value of this variable should presumedly be ""0"". This variable should be initialized to ""0"" intrinsically, since 'C' supports this. Consequently, the impact of this issue is marginal. However, this is not good coding practice. Therefore, recommend initializing the variable accordingly in the declaration found in SH_DATABASE.H. FlexeLint Message: Message #729: Symbol 'cycle_overflow_count' (line 73, file SH_DATABASE.H, module SH_MAIN.C) not explicitly initialized Description: The named inter-module variable (external variable) was not explicitly initialized. See the comments on message 727 for more details. This message is suppressed for unit checkout (-u). Message ID #727 Description: The named static variable (local to a function) was not explicitly initialized before use. The following remarks apply to messages 728 and 729 as well as 727. By no explicit initialization we mean that there was no initializer present in the definition of the object, no direct assignment to the object, and no address operator applied to the object or, if the address of the object was taken, it was assigned to a pointer to const. These messages do not necessarily signal errors since the implicit initialization for static variables is 0. However, the messages are helpful in indicating those variables that you had forgotten to initialize to a value. To extract the maximum benefit from the messages we suggest that you employ an explicit initializer for those variables that you want to initialize to 0. For example: static int n = 0; For variables that will be initialized dynamically, do not use an explicit initializer as in: static int m; This message will be given for any array, struct or union if no member or element has been assigned a value. Referenced Source Code: SH_DATABASE.H: Line #73: WORD cycle_overflow_count; SH_EXTERN.H: Line #42: extern WORD cycle_overflow_count;",1/12/05
ProjectA - TIM - 1439,"EngCntrl v0.2.2: Variable ""safe_cmd_loss_timer"" set, but never accessed by Bootloader Software",5,"SH_PROC_CMD.C line #107 increments the counter variable named ""safe_cmd_loss_timer"" and line #138 resets the value to ""0"". This variable is defined as an extern variable by SH_EXTERN.H line #92 and is initialized to ""0"" by SH_DATABASE.H line #126. SH_PROC_CMD.C line #1583 represents the only place in the EngCntrl code that actually accesses this variable. The preprocessor directive on line #1581 of SH_PROC_CMD.C prevents the usage of this variable in line #1583 from being included in the BootLoader software. Therefore, this variable is never accessed anywhere else by the BootLoader software. The purpose and intent of this code should be reassessed to determine if it serves a necessary function. If it does, then presumably additional code will need to be written to support the BootLoader software. If not, the code related to this variable should be excluded from the Bootloader Software by means of preprocessor directives. Lint Warning Message: Message #552: Symbol ""safe_cmd_loss_timer"" (line 126, file SH_DATABASE.H, module SH_MAIN.C) not accessed Description: An external variable was not accessed though the variable was referenced. See the explanation under message 550 above for a description of ""access"". Message #550: A variable (local to some function) was not accessed. This means that the value of a variable was never used. Perhaps the variable was assigned a value but was never used. Note that a variable's value is not considered accessed by autoincrementing or autodecrementing unless the autoincrement/decrement appears within a larger expression, which uses the resulting value. The same applies to a construct of the form: var += expression. If an address of a variable is taken, its value is assumed to be accessed. An array, struct or union is considered accessed if any portion thereof is accessed. Referenced Source Code: SH_PROC_CMD.C: Lines #103-107: /***************************************/ /* Increment Command Loss Timer. */ /***************************************/ ++ safe_cmd_loss_timer; Line #138: safe_cmd_loss_timer = 0; Lines #1581-1584: #if THIS_IS_OP_NOT_BL if ( (safe_cmd_loss_timer >= safe_cmd_loss_timeout) && (nstar.system_mode != SAFE_MODE) ) SH_DATABASE.H: Line #126: DWORD safe_cmd_loss_timer = 0; // units = seconds SH_EXTERN.: Line #92: extern DWORD safe_cmd_loss_timer;",1/12/05
ProjectA - TIM - 1438,"EngCntrl v0.2.2: Variable ""safe_mode_in_effect"" set, but never accessed",4,"OP_PROCMODE.C line #80 sets the value of a variable named ""safe_mode_in_effect"" to ""FALSE"" and line #93 sets the value to ""TRUE"". This variable is defined as an extern variable by SH_EXTERN.H line #90 and is initialized to ""TRUE"" by SH_DATABASE.H line #124. The variable's name suggests that it is flag used to indicate whether the EngCntrl is in SAFE MODE. However, this variable is apparently never accessed elsewhere in the EngCntrl code. Since the intent of this code is unclear, the impact of this apparent issue is uncertain. Minimally, it will make the code more difficult to maintain. If the variable is accessible by some alternate means outside the code or simply serves to make the code more human readable, then the code should document this. Otherwise, the purpose and intent of this code should be reassessed to determine if it serves a necessary function. If it does, then presumably additional code will need to be written. If not, the code related to this variable should be removed from the EngCntrl FSW. FlexeLint Warning Message: Message #552: Symbol 'safe_mode_in_effect' (line 130, file SH_DATABASE.H, module SH_MAIN.C) not accessed Description: An external variable was not accessed though the variable was referenced. See the explanation under message 550 above for a description of ""access"". Message #550: A variable (local to some function) was not accessed. This means that the value of a variable was never used. Perhaps the variable was assigned a value but was never used. Note that a variable's value is not considered accessed by autoincrementing or autodecrementing unless the autoincrement/decrement appears within a larger expression, which uses the resulting value. The same applies to a construct of the form: var += expression. If an address of a variable is taken, its value is assumed to be accessed. An array, struct or union is considered accessed if any portion thereof is accessed. Referenced Source Code: OP_PROCMODE.C: Lines #80: safe_mode_in_effect = FALSE; Lines #93: safe_mode_in_effect = TRUE; SH_DATABASE.H: Line #124: WORD safe_mode_in_effect = TRUE; SH_EXTERN.: Line #90: extern WORD safe_mode_in_effect;",1/12/05
ProjectA - TIM - 1437,"EngCntrl v0.2.2: Variable ""plenum_mode_changed"" set, but never accessed",4,"OP_PROCMODE.C line #771 sets the value of a variable named ""plenum_mode_changed"" to ""FALSE"". This variable is defined as an extern variable by SH_EXTERN.H line #89 and is initialized to ""FALSE"" by SH_DATABASE.H line #97. A source code comment indicates this variable is a ""global flag."" However, this variable is apparently never accessed or set to ""TRUE"" elsewhere in the EngCntrl code. Since the intent of this code is unclear, the impact of this apparent issue is uncertain. Minimally, it will make the code more difficult to maintain. If this variable is accessible by some alternate means outside the code, then the code should document this. Otherwise, the purpose and intent of this code should be reassessed to determine if it serves a necessary function. If it does, then presumably additional code will need to be written. If not, the code related to this variable should be removed from the EngCntrl FSW. FlexeLint Warning Message: Message #552: Symbol 'plenum_mode_changed' (line 129, file SH_DATABASE.H, module SH_MAIN.C) not accessed Description: An external variable was not accessed though the variable was referenced. See the explanation under message 550 above for a description of ""access"". Message #550 Description: A variable (local to some function) was not accessed. This means that the value of a variable was never used. Perhaps the variable was assigned a value but was never used. Note that a variable's value is not considered accessed by autoincrementing or autodecrementing unless the autoincrement/decrement appears within a larger expression, which uses the resulting value. The same applies to a construct of the form: var += expression. If an address of a variable is taken, its value is assumed to be accessed. An array, struct or union is considered accessed if any portion thereof is accessed. Referenced Source Code: OP_PROCMODE.C: Lines #767-771: /*********************************/ /* Reset some global flags */ /*********************************/ plenum_mode_changed = FALSE; SH_DATABASE.H: Line #123: WORD plenum_mode_changed = FALSE; SH_EXTERN.: Line #89: extern WORD plenum_mode_changed",1/12/05
ProjectA - TIM - 1436,"EngCntrl v0.2.2: Variable ""last_adc_status_word"" set, but never accessed",4,"SH_DATA.ACQ.C line #67 sets the value of a variable named ""last_adc_status_word"". This variable is defined as an extern variable by SH_EXTERN.H line #58 and is initialized by SH_DATABASE.H line #97. A source code comment indicates this variable serves as a ""safe place."" However, this variable is apparently never accessed elsewhere in the EngCntrl code. Since the intent of this code is unclear, the impact of this apparent issue is uncertain. Minimally, it will make the code more difficult to maintain. If the data is accessible by some alternate means outside the code, then the code should document this. Otherwise, the purpose and intent of this code should be reassessed to determine if it serves a necessary function. If it does, then presumably additional code will need to be written. If not, the code related to this variable should be removed from the EngCntrl FSW. FlexeLint Warning Message: Message #552: Symbol 'last_adc_status_word' (line 103, file SH_DATABASE.H, module SH_MAIN.C) not accessed Description: An external variable was not accessed though the variable was referenced. See the explanation under message 550 above for a description of ""access"". Message #550 Description: A variable (local to some function) was not accessed. This means that the value of a variable was never used. Perhaps the variable was assigned a value but was never used. Note that a variable's value is not considered accessed by autoincrementing or autodecrementing unless the autoincrement/decrement appears within a larger expression, which uses the resulting value. The same applies to a construct of the form: var += expression. If an address of a variable is taken, its value is assumed to be accessed. An array, struct or union is considered accessed if any portion thereof is accessed. Referenced Source Code: SH_DATA.ACQ.C: Lines #66-67: // Copy ADC status word into a safe place. last_adc_status_word = processor_regs->a2d_control; SH_DATABASE.H: Line #97: WORD last_adc_status_word = 0; SH_EXTERN.: Line #58: extern WORD last_adc_status_word;",1/12/05
ProjectA - TIM - 1435,"EngCntrl v0.2.2: Array ""hi_speed_recycle_data"" set, but never accessed",4,"OP_HI_SPEED.C line #28 defines an array of structures of type HI_SPEED_DATA_TYPE named ""hi_speed_recycle_data"". The three lowest elements of this array (i.e. recycle number, time, and data) are set on lines #65-67, #73-75, and #101-102 respectively. However, this array and its elements are apparently never accessed elsewhere in the EngCntrl code. Source code comments indicate this is recorded data, but no other purpose is described. Since the intent of this code is unclear, the impact of this apparent issue is uncertain. Minimally, it will make the code more difficult to maintain. If the data is accessible by some alternate means outside the code, then the code should document this. Otherwise, the purpose and intent of this code should be reassessed to determine if it serves a necessary function. If it does, then presumably additional code will need to be written. If not, the code related to this array should be removed from the EngCntrl FSW. FlexeLint Warning Message: Message #552: Symbol 'hi_speed_recycle_data' (line 28, file OP_HI_SPEED.C) not accessed Description: An external variable was not accessed though the variable was referenced. See the explanation under message 550 above for a description of ""access"". Message #550 Description: A variable (local to some function) was not accessed. This means that the value of a variable was never used. Perhaps the variable was assigned a value but was never used. Note that a variable's value is not considered accessed by autoincrementing or autodecrementing unless the autoincrement/decrement appears within a larger expression, which uses the resulting value. The same applies to a construct of the form: var += expression. If an address of a variable is taken, its value is assumed to be accessed. An array, struct or union is considered accessed if any portion thereof is accessed. Referenced Source Code: OP_HI_SPEED.C: Line #28: HI_SPEED_DATA_TYPE hi_speed_recycle_data[NUMBER_OF_HIGH_SPEED_EVENTS] Lines #61-67: /************************************/ /* Record the recycle number */ /************************************/ hi_speed_recycle_data[recycle_counter % NUMBER_OF_HIGH_SPEED_EVENTS]. record[i].recycle_number= recycle_counter; Lines #69-75: /***************************/ /* Record the time */ /***************************/ hi_speed_recycle_data[recycle_counter % NUMBER_OF_HIGH_SPEED_EVENTS]. record[i].time = (b1553_registers->time_tag - recycle_start_time); Lines #95-102: /***************************/ /* Record the data */ /***************************/ hi_speed_recycle_data[recycle_counter % NUMBER_OF_HIGH_SPEED_EVENTS]. record[i].data = ppu_data;",1/12/05
ProjectA - TIM - 1434,"EngCntrl v0.2.2: Array ""grid_clear_data"" set, but never accessed",4,"OP_HI_SPEED.C line #26 defines a 2-dimensional array named ""grid_clear_data"". This array is set on lines #154-155, but apparently never used elsewhere in the EngCntrl code. Source code comments indicate this is recorded data, but no other purpose is described. Since the intent of this code is unclear, the impact of this apparent issue is uncertain. Minimally, it will make the code more difficult to maintain. If the data is accessible by some alternate means outside the code, then the code should document this. Otherwise, the purpose and intent of this code should be reassessed to determine if it serves a necessary function. If it does, then presumably additional code will need to be written. If not, the code related to this array should be removed from the EngCntrl FSW. FlexeLint Warning Message: Message #552: Symbol 'grid_clear_data' (line 26, file OP_HI_SPEED.C) not accessed Description: An external variable was not accessed though the variable was referenced. See the explanation under message 550 above for a description of ""access"". Message #550 Description: A variable (local to some function) was not accessed. This means that the value of a variable was never used. Perhaps the variable was assigned a value but was never used. Note that a variable's value is not considered accessed by autoincrementing or autodecrementing unless the autoincrement/decrement appears within a larger expression, which uses the resulting value. The same applies to a construct of the form: var += expression. If an address of a variable is taken, its value is assumed to be accessed. An array, struct or union is considered accessed if any portion thereof is accessed. Referenced Source Code: OP_HI_SPEED.C: Line #26: WORD grid_clear_data[NUMBER_OF_GRID_CLEAR_SAMPLES][2]; Lines #154-155: grid_clear_data[i][0] = b1553_registers->time_tag - grid_clear_start_time; grid_clear_data[i][1] = (get_slice_telemetry() & 0xFFF);",1/12/05
ProjectA - TIM - 1433,"EngCntrl v0.2.2: Constant ""THIS_IS_OP_NOT_BL"" inconsistent usage and missing documentation",5,"The variable, ""THIS_IS_OP_NOT_BL"", appears 45 times in the EngCntrl code, but is never defined in the EngCntrl source code. According to line #4 of the BL.loc and OP.loc, this variable is defined as a command line option. According to these files, setting this value to ""0"" produces the Bootloader Software application, and a value of ""1"" produces the Operational Software application. Typically, the variable appears in a preprocessor directive taking the form '#if-#endif-#else' to support conditional compilation, such that it is never accessed by the compiled versions of the EngCntrl software. However, SH_INIT.C lines #35, 234-235, & 239 and SH_INIT1553.C line #95 access this variable in both the Bootloader Software and Operational Software applications. SH_INIT.C uses it like a boolean for the 'if' conditions of several 'if-then-else' statements; whereas, INIT1553.C uses it as a pointer offset. The various usages of the variable, ""THIS_IS_OP_NOT_BL"", are all syntactically correct. However, the inconsistent usage combined with the lack of source code documentation for this variable makes the code less readable and more difficult to maintain. This could especially have negative consequences for any future reuse of the code. Better documentation of the variable, ""THIS_IS_OP_NOT_BL"", should be added to the EngCntrl source code. For consistency and given the number instances, the cases where this variable is not part of a conditional compilation statement should be converted as such. Referenced Source Code: BL.loc: Line #4: Command line options: C:\PROGRA~1\Paradigm\bin\locate.exe -DTHIS_IS_OP_NOT_BL=0 -cLOCATE.CFG bin\BL.ROM OP.loc: Line #4: Command line options: C:\PROGRA~1\Paradigm\bin\locate.exe -DTHIS_IS_OP_NOT_BL=1 -cLOCATE.CFG bin\OP.ROM SH_INIT.C: Line #34-35: DWORD far * reincarnation_seed_ptr = (DWORD far *)(THIS_IS_OP_NOT_BL ? 0x3000FFFCL : 0x3000FFF8L); Lines #234-235: nstar.system_mode = THIS_IS_OP_NOT_BL ? SAFE_MODE : BOOTLOAD_MODE nstar.next_mode = THIS_IS_OP_NOT_BL ? SAFE_MODE : BOOTLOAD_MODE Line #239: safe_mode = THIS_IS_OP_NOT_BL ? SAFE_START : SAFE_IDLE SH_INIT1553.C: Line #95 PTR[ i + (0x1000 * (THIS_IS_OP_NOT_BL + 1)) ] = PTR[i]",1/12/05
ProjectA - TIM - 1432,EngCntrl v0.2.2: Comparison between integers and unsigned integers,2,"OP_RUN_XFS.C line #451: There are comparisons here between integers (plenum_error_1 and plenum_error_2) and unsigned integer values (xfs_control.max_plenum_high and xfs_control.max_plenum_low). The integer values (plenum_error_1 and plenum_error_2) have the potential to be negative numbers. This is an issue because the promotion of a negative number to unsigned makes the negative number very large and will produce erroneous comparison results. To resolve this problem, either cast the integers (plenum_error_1 and plenum_error_2) to unsigned if you know they can never be less than zero or cast the unsigned (xfs_control.max_plenum_high and xfs_control.max_plenum_low) to int if you know it can never exceed the maximum int. FlexeLint Warning Message: Message #574: Signed-unsigned mix with relational Message #574 Description: 'The four relational operators are: > >= < <= One of the operands to a relational operator was signed and the other unsigned; also, the signed quantity could be negative. For example: if( u > n ) ... where u is unsigned and n is signed will elicit this message whereas: if( u > 12 ) ... will not (even though 12 is officially an int it is obvious that it is not negative). It is not a good idea to mix unsigned quantities with signed quantities in any case (a 737 will also be issued) but, with the four relationals, a negative value can produce obscure results. For example, if the conditional: if( n < 0 ) ... is true then the similar appearing: u = 0; if( n < u ) ... is false because the promotion to unsigned makes n very large. To resolve this problem, either cast the integer to unsigned if you know it can never be less than zero or cast the unsigned to an int if you know it can never exceed the maximum int. Referenced Source Code: OP_RUN_XFS.C line #451: /*********************************/ /* Check for plenum errors */ /*********************************/ 451 if ( (plenum_error_1 >= xfs_control.max_plenum_high) || (plenum_error_2 >= xfs_control.max_plenum_low) ) { xfs_control.main_leak_counter++; } else { xfs_control.main_leak_counter = 0; }",1/10/05
ProjectA - TIM - 1431,Inconsistent Attitude Control Tolerance in Target Pointing Mode with RWA,3,"The attitude controller tolerance allocation for target pointing mode with RWA is 0.250 mrad under section 3.2.1 Pointing Allocations (L4-ACS-456) in the ACS Performance Spec (S912-PF4610 Revision C). However, the allocation is 0.200 mrad defined in L3-SFS-2429 in the Level 3 Spacecraft and Flight System Requirements (SCFSRD, S912-GR 3400, JPL-D-25870), (DOORS export 11/2/04). Referenced Requirements: L4-ACS-456 3.2.1 Pointing Allocations Attitude errors shall be maintained to within the following allocations, all expressed as 3-sigma, zero-to-peak, per axis values: Attitude determination errors: Science mode 0.100 mrad Target Pointing mode, RWA control 0.250 mrad Target Pointing mode, RCS control 0.450 mrad Delta-V mode 0.450 mrad Attitude control tolerances: Science mode 0.200 mrad Target Pointing mode, RWA control 0.250 mrad Target Pointing mode, RCS control 0.450 mrad Delta-V mode, transverse axes 6.000 mrad Delta-V mode, thrust axis, Engine/RWA 6.000 mrad Delta-V mode, thrust axis, Engine/RCS or RCS 94.25 mrad Attitude Transients: RWA torque disturbances* 0.300 mrad Solar array stepping 0.100 mrad Momentum unloading 1.525 mrad Data latency (external torques) 0.001 mrad * RWA torque disturbances include torque errors due to wheel static and dynamic imbalance, zero-speed crossings, drag torque variation, torque ripple, torque noise, and torque quantization. ------------------------- L3-SFS-2429 The attitude controller tolerance1 allocations are as follows: science mode 0.200 mrad target pointing mode, RWA 0.200 mrad target pointing mode, RCS 1.780 mrad delta V mode - X’ and Y’2 6.000 mrad delta V mode - Z’3 94.25 mrad 1) Does not include attitude determination or momentum unloads. 2) X’ and Y’ are the axes perpendicular to the thrust vector. 3) Z’ is the axis parallel to the thrust vector.",1/6/05
ProjectA - TIM - 1430,"ProjectA OBC C&DH Flight Software Test Procedures, tg_test(), Is Not Consistent With The SRS Requirements",4,"Section 5.7.5 in the OBC C&DH SRS states: TG004 (L4-SROBC-95) Flight Software shall collect downlink loopback telemetry via HSS2 (when enabled) and make it available in spacecraft housekeeping telemetry. It is noted that: (1) Section 5.7.3 (HSS2)in the OBC C&DH SRS also states a requirement for the loopback function and (2) Section 5.7.4 (HSS3)does not state a requirment for loopback. These sections are in agreement concerning the loopback function. Issue: Test #8 in the tg_test() performs a loopback test for both HSS2 and HSS3. The script states: HK Telemetry Tested: ; tg_HSS2_loopback_wd - Loopback echo ; tg_HSS3_loopback_wd - Loopback echo ; ; Commands Tested: ; @dl:Write_HSS2_Loopback ; @mu:Write_HSS3_Loopback It is unclear if: (1) the SRS is incorrect, (2) the script is incorrect (e.g., it contains a test from the legacy program that should be removed)or (3) other problems.",1/6/05
ProjectA - TIM - 1428,ProjectA OBC C&DH Flight Software Test Procedures for Telemetry Out Does Not Verify SRS Requirement TO008,3,Requirement TO008 (L4-SROBC-131) states: The OBC-C&DH software shall provide the capability to telemeter data (by Application ID) using packet time based filtering. The Flight Software will use 15 bits out of the 64-bit spacecraft time code field (consisting of 11 bits of the second field and 4 bits of the sub-seconds field) of the spacecraft time code found in the CCSDS packet secondary header. Packets will be recorded if and only if the relevant bits of the packet time stamp modulo X is less than N. It is noted that the test procedures for Telemetry Out (TO) address all TO requirements except TO008. It is unclear if this is an oversight or that TO008 will be tested elsewhere.,12/20/04
ProjectA - TIM - 1427,"ProjectA OBC C&DH Flight Software Test Procedures, to_jam_swap_filter_factor_test(), Does Not Fully Verify the Linked SRS Requirements",4,"This test is designed to verify SRS TO013 (L4-SROBC-135) and TO014 (L4-SROBC-136). The SRS requirements are: TO013 The OBC-C&DH software shall accept and execute a JAM_FILTER factor command, which given the application id of a packet will modify the filter factors for the filter table currently in use. TO014 The OBC-C&DH software shall accept and execute a SWAP_FILTER factor command, which will swap filter factors for the 2 specified application id's for the filter table currently in use. Issue: The initial filter table is 4. Commands @to:jam_filter_factor 115, 2, 1, 0 (;apid=115 range=2 rate=1 offset=0) and jam_filter_factor 117, 3, 1, 0 are sent. The pass/fail is apparently stated as: ""wait; Operator: please note differences in the two tables"". This implies that verification is performed by the operator: noting that changes to the filter tables occurred as commanded. While this shows the tables changed it does not verify that the actual filtering of packets occurred as commanded. The SWAP_FILTER factor test is performed in a similar fashion: apids 115 and 117 are swapped and the resulting tables compared. Again, the actual filtering of packets was not verified. In addition, the pass/fail criteria (""wait; Operator: please note that the filter factors are swapped to apids 33 and 35"") seems incorrect as swapping was commanded for 115 and 117.",12/20/04
ProjectA - TIM - 1426,"ProjectA OBC C&DH Flight Software Test Procedures, to_change_filter_test(), Does Not Fully Verify the Linked SRS Requirements",3,"This test is designed to verify SRS TO009 (L4-SROBC-132) and TO011 (L4-SROBC-134). The SRS requirements are: TO009 The OBC-C&DH software shall provide 8 telemetry filter tables for real-time telemetry transmission. TO011 The OBC-C&DH software shall accept and execute a SELECT_TELEMETRY_FILTER command, which immediately begins filtering telemetry packets according to the parameters stored in the specified filter table index. Issue: The test for (to:change_filter_table $filter_table = 8) seems to fail. This does not verify that 8 tables can be selected as required. The test does not show that the “immediate” part of the requirement is verified (although the SRS does not specifically state a time requirement). The test does not show that the filtering is performed according to the parameters specified in the table index (i.e., the TLM output is not checked to verify that it matches the expected values). The tests only show that the commands are received and executed (in that the ""TO_current_filter_table"" number matches the command).",12/20/04
ProjectA - TIM - 1425,"ProjectA OBC C&DH Flight Software Test Procedures, to_reset_counters_test(), Does Not Verify the Linked SRS Requirement",3,"The linked requirement, TO010 (or L4-SROBC-133) states: ""The OBC-C&DH software shall accept and execute a RESET_TO_HOUSEKEEPING command, which resets housekeeping data that is normally reported in the real-time telemetry stream."" The test is titled: ""TO010 Reset TO Cmd Counters"". The procedure issues the command: @to:reset_counters. Issue: It is unclear if the command @to:reset_counters performs both a ""counter reset"" and a ""RESET_TO_HOUSEKEEPING"". If it does not, then the SRS requirement has not been verified. It is noted that the test procedure does not contain steps to verify if a ""housekkeping reset"" has been performed. In addition, there appears to be no command to perform ""RESET_TO_HOUSEKEEPING"" identified in the version of the command & telemetry dictionary made availble to IV&V.",12/19/04
ProjectA - TIM - 1423,Safe Communication Mode Not Defined in ProjectA Specifications and Design Notes,2,"The documents identified below do not include requirements or definition for the Safe Communication Mode as identified in the Fault Protection System Tagup package dated October 20, 2004 and in the ProjectA Fault Protection (FP) Performance Specification S912-PF3300 (FP Design Note Deliverable TD 009) REVISION A. DN-ProjectA-ACS-001 Attitude Control Subsystem Mode Definition, March 3, 2003 DN-ProjectA-SE-001 CDRL TD-008 Program: ProjectA Title: ProjectA System State and Subsystem Mode Definitions, September 20, 2004 DN-ProjectA-ACS-011 ProjectA Attitude Control Subsystem Fault Detection and Correction Design, April 12, 2004 SFSRD, L3, D-25870, from DOORS Database dated November 2, 2004. ProjectA ACS Subsystem Performance Specification, L4, November 2, 2004 ProjectA Flight System Description Document, CDRL TD-006, S912-GD3200 Revision -, released on September 27, 2004",12/9/04
ProjectA - TIM - 1422,Incomplete Definition for Fault Containment Regions in the ACS Performance Specification,3,"The ACS Performance Specification, Section 3.2.5.8 Failure Propagation, states: “A failure of an ACS component shall not propagate to any other component or subsystem on the spacecraft.” This requirement is basically the same as L3-SFS-887 which addresses “fault containment regions”. When flowed down to the ACS Performance Specification level this requirement should be decomposed into specific requirements for each subsystem/component that will collectively result in “preventing failure propagation”. It is noted that this subject is discussed to some degree in the FP Performance Specification, Sections 3.5 and 4.0. However, if this requirement is to be implemented in the ACS subsystem, then the FP Performance Specification should include detailed requirements that are specific to ACS components. Referenced Requirement: L3-SFS-887 The Flight System shall have Fault Containment Regions (FCR) around each of the following flight system sections: [HW] CEU, ACE, ACE peripherals (reaction wheel, gyro, thruster, sun sensor, SADE/SADA) , SDST, PDU/HVEA, EngCntrl, EngCntrl peripherals (PPU, thruster, gimbal assembly, XFA), and Instruments (FC, VIR, GRaND) - [SW] flight system processors.",12/2/04
ProjectA - TIM - 1421,Inconsistent Definition of IRU Sensing Rate,4,"ACS Performance Specification, Section 3.2.5.2.3 IRU Saturated Rate Data Test, states: “The rate derived from each of the active gyro data words shall be checked to be within the specified range. A gyro assembly fault shall be detected and the gyro data declared INVALID if both of the following conditions are met: The ACS is not in Rate Nulling submode, and The magnitude of the sensed rate on any axis is greater than or equal to the selected saturation rate of the gyro (default is 2.5 degrees/second), and remains saturated for a selected number of samples. This test shall be performed at a frequency of 5 Hz. The gyros may be saturated in Rate Nulling submode, depending on the initial conditions prior to entry, and at least one gyro axis shall most likely be saturated following separation from the launch vehicle upper stage. Hence, if the ACS is in Rate Nulling submode, initially only a telemetry flag is set indicating gyro saturation, and no fault will be detected. However, a fault may be detected if gyro saturation in Rate Nulling submode persists beyond the selected worst-case time for transitioning to Sun Acquisition submode, as described in Section 3.2.5.2.4.” L3-SFS-2383 states that the maximum sensing rate is 15deg/sec or 2.5 RPM. It is unclear which requirement is correct (2.5 degrees/second or 2.5 RPM).",12/2/04
ProjectA - TIM - 1419,OBC C&DH SRS Requirements SC018 and SC019 Are Not Fully Verified by the Linked OBC C&DH Flight Software Test Procedures,3,"The OBC C&DH SRS states: SC018 Flight Software shall stop execution of the requested RTS upon receipt of the real-time command STOP_RTS from either the ground or another on-board software application. SC019 Flight Software shall enable or disable the execution of the requested RTS upon receipt of the real-time commands ENABLE_RTS or DISABLE_RTS from either the ground or another on-board software application. Issue: Test #2 in the Software Test Procedures states: SC018 - RTS stopped by ground command SC019 - RTS enabled/disabled by ground command Test #2 does not appear to verify the ""or another on-board software application"" part of requirement in SC018 and SC019.",12/1/04
ProjectA - TIM - 1418,ProjectA EngCntrl SRS contains several TBDs while the project is already in the implementation phase,3,There are still 6 remaining TBDs within the EngCntrl SRS and the project is already in the software implementation phase for the EngCntrl software.,11/23/04
ProjectA - TIM - 1417,ProjectA EngCntrl Req 3.4.3: The command execution limit is not well defined,4,"ProjectA EngCntrl Software Requirements Specification - Requirement 3.4.3 states: ""3.4.3 Command Execution Limit - The EngCntrl Flight software shall attempt to execute up to 16 commands received from the host spacecraft during each iteration of the 1 Hz control loop."" During the EngCntrl Code Analysis process, portions of the code in the file, SH_PROC_CMD.C appeared directly applicable to Requirement 3.4.3. The following comment was extracted from this file. /* Check if any commands have come in. Process up to */ /* MAX_NUMBER_OF_COMMANDS_PER_SECOND because we must */ /* stay ahead of the S/C command rate capability */ /* The S/C can only send one command/sec, but that will */ /* take forever to download code. Therefore, we'll do */ /* more than that. The control loop for this code will execute MAX_NUMBER_OF_COMMANDS_PER_SECOND, which is currently set to 16 by a preprocessor directive. Without the benefit of the relevant code, the usage of the phrase, ""attempt to execute,"" by requirement 3.4.3 seems ambiguous. However, in light of the code, the intent of requirement seems to be for the EngCntrl FSW to be capable of processing a maximum of 16 commands per cycle. The referenced comment found in SH_PROC_CMD.C seems to expound the intent of requirement 3.4.3. According to this comment, the S/C can only send the EngCntrl one command per second. However, it is unclear whether this translates to one command per 1553 message. The comment also indicates that by handling 16 ""commands"" per second, the EngCntrl FSW will be able to receive a new code upload at a faster rate. Possibly, ""commands"" in this context are simply 1553 data words, which according to the 1553B standard, a maximum of 32 data words can be contained within one 1553 message. However, both requirement 3.4.3 and the code constrain this to 16 words. The ambiguity of this requirement can adversely impact the design and implementation process. Failure to properly define the command execution limit could result in the need for redesign, code changes, and regression testing. Therefore, the ambiguous phrase, ""attempt to,"" should be removed from requirement 3.4.3. Additional requirements should be added that describe processing of 1553 messages containing command(s) versus a new FSW upload. If the comment in SH_PROC_CMD.C is inaccurate, then it should be corrected as well. Referenced Source Code: SH_PROC_CMD.C Lines # 119-126: /****************************************************************************************/ /* Check if any commands have come in. Process up to */ /* MAX_NUMBER_OF_COMMANDS_PER_SECOND because we must */ /* stay ahead of the S/C command rate capability */ /* The S/C can only send one command/sec, but that will */ /* take forever to download code. Therefore, we'll do */ /* more than that. */ /****************************************************************************************/",11/23/04
ProjectA - TIM - 1416,ProjectA EngCntrl Req 3.4.7.1.3: the exceptions to 16-bit words are not defined,3,"ProjectA EngCntrl Requirements Specification - Requirement 3.4.7.1.3 states: 3.4.7.1.3 Data Write: ""The Bootloader software shall write data as 16-bit words when possible, the exception is when the start address is odd or an odd number of bytes are specified."" The exceptions to when the data will not be written as 16-bit words(when the start address is odd or an odd number of bytes are specified) are not defined. The manner in which the bootloader software will handle writing data when the start address is odd or an odd number of bytes are specified should be defined.",11/23/04
ProjectA - TIM - 1415,"OBC Software Test Procedures S912-TP4920, Rev-A, Script TS_test(), Test#7, Does Not Fully Verify the Linked SRS Requirements",3,"Issues: 1. Requirements TS 018 and TS019 are not verified by Test #7 as there are no procedure steps associated with these two requirements. 2. The test for TS024 is designed to verify that the persistence counts for one or all monitors can be reset by command. The procedure resets monitor points 0 and 256. However, it is unclear how (@ts:reset_monitor_point 256) operates in this case as Test #4 showed that monitor 256 is invalid. However, it seems to be used to “reset all monitor points”. If this command does not reset all monitor points, then the test does not verify that all 256 monitors can be reset with a single command. The test success criteria is that TS received a command (e.g., TS_cmd_count = 1). This does not prove that the monitor(s) were in fact reset, only that a command was received. Given this, it appears that requirement TS024 is not verified by Test #7. 3. It is unclear how TS024 and TS025 differ in terms of reset for a single monitor other than TS025 states “when it is enabled”. It is unclear if there a difference between resetting when enabled and disabled. The SRS should clarify this situation. 4. TS026 states, “The Flight Software shall reset the threshold status of an individual telemetry monitor or all telemetry monitors by command”. The term “threshold status’ is not defined in the SRS or in the FP Performance Specification; therefore, it is unclear if this requirement is verified by Test #7. Apparently, the test does not show that the persistence value (see Figure 4-6 in the FP Performance Specification, Rev-B) can be reset autonomously when the raw telemetry monitor value exceeds the monitor threshold and then drops below the threshold but the persistence limit is not exceeded (the case shown in Figure 4-6).",11/10/04
ProjectA - TIM - 1414,"OBC Software Test Procedures S912-TP4920, Rev-A, Script TS_test(), Test#6, Is Inconsistent and Does Not Fully Verify the Linked SRS Requirements",3,"Issues: 1. Requirement TS017, as stated in the test procedure, is inconsistent with the TS017 in the OBC SRS Rev-B which states: “Flight Software shall support the dumping of the accumulated statistics via a system table dump operation.” The test procedure refers to “emergency RTS tables”. This term is not defined in the SRS or in the FP Performance Specification (FPPS). 2. Test Procedure Section 11.6, Test 6, Column3, indicates that the TMON table is to be dumped and differenced. This table is not defined in the SRS or in the FPPS. The comment at the bottom of page 151 seems to indicate that changing the “limit table” is a test objective. 3. The test does not show that RTS initiation, in response to failures, is in fact inhibited and that TMON testing of TLM points continues under Watch Mode. Test pass/fail relies solely on the Enable/Disable flag indication. If this flag is incorrect, the test is not valid.",11/10/04
ProjectA - TIM - 1413,"OBC Software Test Procedures S912-TP4920, Rev-A, Script TS_test(), Test#4, Does Not Fully Verify the Linked SRS Requirement",3,"The test objective is to verify TS003. TS003: Flight Software shall support at least 256 telemetry monitor points. Issue: The test only shows that the first and last monitor in the allowed set is active and can be be enabled and disabled. This does not verify that all 256 monitors can be enabled and active at the same time as required by TS003. In addition, the test pass/fail relies on the correctness of the ""enable/disable"" indication. Since ProjectA FP will use over 200 TMONs, testing should verify that the entire set of 256 can be supported by the software.",11/10/04
ProjectA - TIM - 1412,Potential for Incomplete Verification of OBC C&DH SRS Requirement TS001,3,"Script TS_test(), page 143, states: ""REQUIREMENT TESTS ; --satisfies requirement TS01 (IV&V note: this should be TS001) ; Flight Software shall provide a table driven telemetry monitoring function capable of extracting data from any valid combination of CCSDS telemetry packets and constructing the required monitor point. ; The fact that the deployment process is working (as of now 02/01/2000), verifies this requirement."" Issue: The statement, ""The fact that the deployment process is working (as of now 02/01/2000), verifies this requirement."" is unclear. The statement that ""working in 2002"" does not imply that ""it is working"" for the ProjectA version of TS given that the telemetry, the monitors, etc. have changed since 2002. The statement is not adequate as a replacement for formal verification of TS001. Note: TS001 is equivalent to L4-SROBC-254",11/9/04
ProjectA - TIM - 1411,Information Missing From ProjectA OBC C&DH Flight Software Test Procedures S912-TP4920 Rev-A,4,"Issues; 1. Section 4: The specific versions of the two referenced documents are not defined. The test procedure should be in concert with the requirement source document. 2. Section 4: The FP Performance Specification is not referenced yet it appears in Script_TS (), Test #1. Because the FP Performance Specification contains TS requirement like statements, both the this document and the SRS should be used in concert in deriving test cases for TS functions. 3. Appendix A: The test procedure does not state which of the test environments will be used to run Script TS_test().",11/9/04
ProjectA - TIM - 1410,"OBC Software Test Procedures S912-TP4920, Rev-A, Script TS_test(), Test#2, Does Not Fully Verify the Linked SRS Requirements",3,"OBC Software Test Procedures S912-TP4920, Rev-A, Script TS_test(), Test#2: Test Description: 8.6 Telemetry Monitoring and Statistics Test This test verifies the following TS functions: · the requirements for the Telemetry and Statistics task · that the software can monitor and track statistics on 256 indiviual telemetry points · that an RTS can be initiated by a monitor point value crossing a pre-defined threshold for a defined number of consecutive times This test does not prove that the data in the statistics table is correct and complete. There are no pass/fail for the six items identified in TS016 (L4-SROBC-272 through L4-SROBC-278). Apparently, only monitor point 0 is involved in this test. The test should show that data from all 256 monitors is correct and can be dumped when commanded. Note that the OBC C&DH SRS, Rev-B, did not contain requirement TS015. The 11/02/2004 DOORS archive shows only 26 requirements for TS. It appears that ""015"" was either inadvertantly skipped in Rev. B or the heritage requirement was deleted for ProjectA.",11/8/04
ProjectA - TIM - 1409,"OBC Software Test Procedures S912-TP4920, Rev-A, Script TS_test(), Test#1, Does Not Fully Verify the Linked SRS Requirements",3,"OBC C&DH SRS requirements TS006, 021, 022, 023, 027 are not verified as claimed by this test. TS022 points to the Fault Protection Performance Specification for a definition of derived TMONs. There are many such TMONs associated with OBC; however, this test does not address them.",11/8/04
ProjectA - TIM - 1407,Inconsistent Attitude Stability Requirements for Science Mode,3,"The attitude stability requirement under section 3.2.3.9 Attitude Stability in the ACS Performance Spec (S912-PF4610 Revision C) states that (L4-ACS-352) ""In Science mode in the asteroid orbits the ACS shall be able to maintain pointing stability of the spacecraft attitude reference (navigation base) to within 75 micro-rads / second 3-sigma radial (X and Y) error."" However, the pointing stability requirement in L3-SFS-105 in the Level 3 Spacecraft and Flight System Requirements (SCFSRD, S912-GR 3400, JPL-D-25870), (11/2/04 DOORS version) states that the X and Y errors should be less than 60 micro-rads / second. L3-SFS-105: During science operations, the Spacecraft System shall be able to limit the Flight System's roll (X) and pitch (Y) rate errors to less than 60 microrad/sec (3 sigma) for a period of at least 30 seconds. L4-ACS-352: In Science mode in the asteroid orbits the ACS shall be able to maintain pointing stability of the spacecraft attitude reference (navigation base) to within 75 micro-rads / second 3-sigma radial (X and Y) error.",11/2/04
ProjectA - TIM - 1406,Inconsistent Attitude Determination Algorithm in ACS P-Spec and DN-ProjectA-ACS-005,3,"The attitude determination performance requirements under section 3.2.2.1 Primary Attitude and Rate Determination in the ACS Performance Spec (S912-PF4610 Revision C) states that it shall utilize one of two Kalman filters to estimate the inertial attitude of the spacecraft in the Earth-Mean-Equator 2000 reference frame and the spacecraft body rates from the star tracker and IRU data. The six-state Kalman filter is shown in Figure 7 and the three-state Kalman filter is shown in Figure 8. However, in section 1.3 Kalman Filter Logic in the design note DN-ProjectA-ACS-005, ""Attitude Determination System Design and Analysis for ProjectA"", only the six-state Kalman filter is described. In section 1.3.3.3.1 Gyro Bias or Angular Momentum Update, if gyro is not available the angular momentum correction is obtained from the last three elements of the state vector in the six-state Kalman filter. There seems to be an inconsistency in the ACS design relevant to use of the three-state Kalman filter. The three-state Kalman filter is not included in the DN-ProjectA-ACS-005 design note.",11/2/04
ProjectA - TIM - 1405,Questionable pointing error results,3,"The maximum attitude pointing errors during momentum unloading period are listed in Table 6 in DN-ProjectA-ACS-014. In the Table the Y axis pointing error for target pointing mode with gyros under BOL is 0.078 degrees while the Y axis pointing error for the same mode without gyros is 0.065 degrees, which is smaller than 0.078 degrees. Similarly, the Z axis pointing error without gyros is better than that with gyros. The Y axis pointing error without gyros under EOL is better than that with gyros. The attitude determination errors with gyros should be smaller than those without gyros, which are part of the pointing errors. It seems that the simulation results are questionable. Table 6: Unloading Time and Maximum Attitude Pointing Errors Case Case Description Unloading Amount (N-m-s) Unloading Time (sec) Requirement (degrees) Maximum Attitude Pointing Errors (degrees) X or X’ Axis Y Axis Z or Z’ Axis X or X’ Axis YAxis Z or Z’ Axis 1 Target Point, BOL, Gyros [3.9 2.7 3.3] 538 0.1 0.1 0.1 0.057 0.078 0.046 2 Target Point, BOL, Gyroless [2.0 4.6 3.3] 622 0.1 0.1 0.1 0.062 0.065 0.032 3 DeltaVEngine, BOL, Gyroless [3.9 0.0 3.9] 2432 0.344 0.344 5.44 0.123 0.184 0.032 4 Target Point, EOL, Gyros [2.1 4.6 3.3] 580 0.1 0.1 0.1 0.049 0.077 0.033 5 Target Point, EOL, Gyroless [3.8 2.7 3.2] 554 0.1 0.1 0.1 0.049 0.058 0.049 6 DeltaVEngine, EOL, Gyroless [3.9 0.0 3.8] 2432 0.344 0.344 5.44 0.037 0.222 0.033",10/19/04
ProjectA - TIM - 1404,Questionable pointing accuracy results,2,"The steady-state results of the pointing accuracy for target pointing mode are listed in Table 9 in DN-ProjectA-ACS-007. The pointing accuracies for Gyroless & RWA are much better than those for Gyros & RWA, except for the pitch channel in BOL. The attitude determination errors with gyros should be smaller than those without gyros, which are part of the pointing errors. It seems that the simulation results are questionable. Table 9: Steady-state results over two hours Pointing Accuracy (degrees) Total Jet Propellant Roll Pitch Yaw On Time (s) Usage (g) Gyros & BOL 0.0028 0.0039 0.0023 0.0 0.0 RWA EOL 0.0025 0.0014 0.0026 0.0 0.0 Gyroless BOL 0.0007 0.0054 0.0004 0.0 0.0 & RWA EOL 0.0010 0.0008 0.0002 0.0 0.0 Gyroless BOL 0.0746 0.0702 0.0772 15.6 6.9 & Odd Jet EOL 0.0661 0.1112 0.0745 21.2 2.4 Gyroless & BOL 0.0714 0.0892 0.0735 18.7 8.3 Even Jets EOL 0.0664 0.1004 0.0765 27.0 3.1",10/18/04
ProjectA - TIM - 1403,Unclear explanation of angular rate command,3,"In section 1.5 of DN-ProjectA-ACS-008, it states that the quantity ( Kp x angle error ) may be interpreted as an angular rate command. The rational behind this statement is unclear. The angular rate command can be calculated by the attitude commanding algorithm and is available for the controller.",10/14/04
ProjectA - TIM - 1402,Missing rate command in Simulink control system model,3,"Simulink control system model for RCS is shown in Figure 1 of DN-ProjectA-ACS-012. In the figure true attitude rate is fed into Kr, which is the rate gain. However, in general practice rate error is expected to feed into Kr. The jet control system block diagram in Figure 4 of DN-ProjectA-ACS-006 shows that the rate error is used for control. It seems that the rate command is missing.",10/8/04
ProjectA - TIM - 1401,Two different sets of control gains for RCS are specified,3,"The ACS control gains for RCS are listed in Table 4 in the design note DN-ProjectA-ACS-006 Rev C. However, in the design note DN-ProjectA-ACS-012 Rev Initial, RCS control design and analysis are documented also. Table 7 in the design note DN-ProjectA-ACS-012 lists the control gains for three axes. The numbers in Table 4 and Table 7 are significantly different. It is not clear which set of control gains will be implemented in the final flight software. +=============+===============+=======================+=================+=======+ DN-ProjectA-ACS-012 Table 7. Control system parameters Parameter X axis Y axis Z axis Kp (1/sec2) .00073 0.0089 0.00043 Kr (1/sec) .041 0.14 .031 Ki (1/sec3) 3.5e-6 .00014 2.7e-6 omega_f (Hz.) .059 0.30 0.059 +=============+===============+=======================+=================+=======+ DN-ProjectA-ACS-006 Table 4. Linear Control Analysis Parameters (Spacecraft Deployed) FSW Value Parameter Cmdble Units X Y Z Description omega_c N Hz .0017 .0030 .0017 Bandwidth (Jet) Kp Y 1/sec2 1.1409e-4 3.5531e-4 1.1409e-4 Proportional Gain (Jet) Kd Y 1/sec 0.0203 .03769 0.0203 Derivative Gain (Jet) Ki Y 1/sec3 3.559e-8 7.1180e-7 3.559e-8 Integral Gain (Jet) Intg_limit Y radsec 0.05 1.0 0.05 Integral Limit (Jet) omega_f N Hz .0272 .114 .0272 Filter Break Frequency",10/8/04
ProjectA - TIM - 1400,Inconsistent performance results in Table 3 of DN-ProjectA-ACS-009,3,"In DN-ProjectA-ACS-009 the simulation results of the ACS for the science mode are listed in Table 3. Attitude control errors, attitude estimation errors, attitude pointing errors, rate control errors, rate estimation errors, and rate pointing errors are summarized for 8 test cases. The rate pointing errors are much smaller than either rate control errors or rate estimation errors. This is unusual. In Section 4.3 Performance, the error definitions are included and state that ""control errors are defined as the difference between the commanded and estimated values, estimation errors are the difference between the estimated and true values, while the pointing errors are the difference between the commanded and true values, representing the total error"". Pointing errors should include both control errors and estimation errors and therefore pointing errors should be larger than either of them. The plots in Appendix A for rate pointing errors are consistent with the results in Table 3. +================+===============+==================+=====================+ Table 3. Steady-State Performance Summary (3 sigma Errors) Case Axis Att. Att. Att. Rate Rate Rate Cntrl Est. Pntng Cntrl Est. Pntng asec asec asec asec/sec asec/sec asec/sec 1 X 14.92 9.12 18.56 3.67 3.67 0.176 Y 4.34 6.24 7.96 3.66 3.64 0.286 Z 14.23 4.65 15.26 3.66 3.66 0.214 2 X 13.47 9.12 13.68 3.67 3.66 0.191 Y 4.11 6.24 7.88 3.66 3.65 0.319 Z 12.76 4.65 13.92 3.64 3.64 0.238 3 X 14.80 9.01 15.82 3.71 3.67 0.554 Y 4.25 6.31 7.88 3.68 3.67 0.287 Z 16.15 4.94 16.84 3.69 3.65 0.504 4 X 12.12 9.02 17.24 3.69 3.65 0.476 Y 3.99 6.32 7.82 3.66 3.65 0.320 Z 13.18 4.78 13.95 3.68 3.65 0.487 5 X 8.37 9.53 13.03 3.63 3.63 0.167 Y 4.17 6.12 7.76 3.71 3.70 0.286 Z 13.46 4.44 14.41 3.66 3.66 0.213 6 X 7.88 9.54 12.85 3.66 3.65 0.183 Y 3.93 6.13 7.67 3.70 3.69 0.318 Z 12.54 4.38 13.42 3.66 3.65 0.228 7 X 8.47 9.48 12.97 3.70 3.69 0.166 Y 4.16 6.08 7.68 3.66 3.65 0.287 Z 12.99 4.47 13.90 3.65 3.64 0.208 8 X 7.94 9.49 12.77 3.67 3.67 0.183 Y 3.92 6.07 7.60 3.63 3.61 0.319 Z 11.86 4.43 12.96 3.65 3.65 0.215",10/8/04
ProjectA - TIM - 1399,Inconsistent control laws,3,"The design and performance of the target pointing mode is documented in DN-ProjectA-ACS-007. A simulation was developed with Matlab to test ACS performance in the target pointing mode. The Matlab code is listed in Appendix B, Appendix C, Appendix D, Appendix E, and Appendix F. The control gains Kd, Kp, and Ki for the jets and the RWA in the Matlab code are implemented in the Matlab function “adcs” listed in Appendix D at page 23, which is copied to here as follows: if atc.actuator == 0 % Jets (Rovner) atc.Kd = [0.041 0.14 0.031]'; atc.Kp = [0.00073 0.0089 0.00043]'; atc.Ki = [3.5e-6 1.4e-4 2.7e-6]'; lpf.A0 = [0.0019771 0.0028751 0.0019771]'; lpf.A1 = [ ... -1.91586195 -0.55031712 -1.91586195 -1.98584451 -1.77089189 -1.98584451 -1.99083471 -1.65645869 -1.99083471 ]'; lpf.A2 = ones(3, 3); lpf.B1 = [ ... -1.9890245 -1.83476776 -1.9890245 -1.97529083 -1.80606589 -1.97529083 -1.95830128 -1.78280671 -1.95830128 ]'; lpf.B2 = [ ... 0.99448675 0.97289451 0.99448675 0.97903949 0.89898641 0.97903949 0.95935526 0.80836658 0.95935526 ]'; elseif atc.actuator == 1 % RWA (Singh) atc.Kd = [3.0159e-002 1.0681e-001 3.0159e-002]'; atc.Kp = [2.2740e-004 2.8523e-003 2.2740e-004]'; atc.Ki = [1.8000e-006 3.5590e-005 1.8000e-006]'; The code shows that for the RWA the control gains Kd, Kp, and Ki are taken from Table 4 in DN-ProjectA-ACS-006 Rev C (3/2/04) “Attitude Control System Design and Analysis for ProjectA”. The control gains Kd, Kp, and Ki for the jets are taken from Table 7 in DN-ProjectA-ACS-012 Rev Initial (4/15/04) “Reaction Control System Design and Analysis for ProjectA”. The control gains in Table 7 are Kp, Kr, and Ki. According to the control system shown in Figure 1 of DN-ProjectA-ACS-012, the rate gain Kr is not exactly same as Kd in the Matlab code. In Figure 1 true attitude rate is fed into Kr. However, rate error is fed into Kd as shown in Figure 3 and Figure 4 in DN-ProjectA-ACS-006. The control torque calculation in the Matlab function “adcs” listed in Appendix D at page 26, is shown as follows: % Control torque atc.Tpid = est.I*(atc.Kd.*atc.wErr ... + atc.Kp.*atc.thetaErr ... + atc.Ki.*atc.integralErr); It seems that in the code Kr for the jets is fed with rate error instead of the attitude rate.",10/7/04
ProjectA - TIM - 1398,Pointing accuracy of the attitude controller in target pointing mode with RCS does not meet the high level requirement,2,"Document #: DN-ProjectA-ACS-007 Rev Initial (4/13/04) ""ProjectA Target Pointing Mode Design and Analysis"" The pointing accuracy of the attitude controller specified in the requirement L3-SFS-2429 in the Level 3 Spacecraft and Flight System Requirements (SCFSRD, S912-Gr 3400, JPL-D-25870) is 1.780 mrad (0.102 degrees) for target pointing mode with RCS. The steady-state results of the pointing accuracy for target pointing mode with RCS are listed in Table 9. For pitch channel in EOL, the pointing accuracy is 0.1112 degrees, which is larger than 0.102 degrees. Table 10 lists the results for slews between targets. The pointing errors are much larger than the pointing accuracy in the requirement L3-SFS-2429. It is not clear that the requirement is applicable to the pointing errors for slews. +================+======================+======================+===========+ L3-SFS-2429 5.9.3.0-1 The attitude controller tolerance1 allocations are as follows: science mode 0.200 mrad target pointing mode, RWA 0.200 mrad target pointing mode, RCS 1.780 mrad delta V mode - X’ and Y’2 6.000 mrad delta V mode - Z’3 94.25 mrad 1) Does not include attitude determination or momentum unloads. 2) X’ and Y’ are the axes perpendicular to the thrust vector. 3) Z’ is the axis parallel to the thrust vector. Table 9: Steady-state results over two hours Pointing Accuracy (&#61616;) Total Jet On Time (s) Propellant Usage (g) Roll Pitch Yaw Gyros & RWA BOL 0.0028 0.0039 0.0023 0.0 0.0 EOL 0.0025 0.0014 0.0026 0.0 0.0 Gyroless & RWA BOL 0.0007 0.0054 0.0004 0.0 0.0 EOL 0.0010 0.0008 0.0002 0.0 0.0 Gyroless & Odd Jets BOL 0.0746 0.0702 0.0772 15.6 6.9 EOL 0.0661 0.1112 0.0745 21.2 2.4 Gyroless & Even Jets BOL 0.0714 0.0892 0.0735 18.7 8.3 EOL 0.0664 0.1004 0.0765 27.0 3.1 Table 10: Results with slews between targets Pointing Accuracy (&#61616;) Total Jet On Time (s) Propellant Usage (g) Roll Pitch Yaw Gyros & RWA BOL 0.36 0.20 0.39 0.0 0.0 EOL 0.54 0.37 0.59 0.0 0.0 Gyroless & RWA BOL 0.33 0.14 0.37 0.0 0.0 EOL 0.57 0.43 0.61 0.0 0.0 Gyroless & Odd Jets BOL 0.83 0.47 0.83 140.3 62.2 EOL 1.03 0.46 0.92 323.7 37.1 Gyroless & Even Jets BOL 0.31 0.25 0.75 127.2 56.3 EOL 0.70 0.40 1.05 308.9 35.4",10/6/04
ProjectA - TIM - 1397,Inconsistent gain margins,2,"Document #: DN-ProjectA-ACS-006 Rev C (3/2/04) ""Attitude Control System Design and Analysis for ProjectA"" Table 6 in the Design Note lists the Gain Margin (GM) for the PID control with RWA under the variation in inertia and flexible mode frequencies. The GM for X channel in nominal is -10.59, -9.76 for +10% Isc, 10.61 for -10% Isc, -10.60 for +10% omega_f, and -10.59 for -10% omega_f. The GM changes from negative to positive with small inertia variation. The corresponding frequency omega_GM jumps from 0.01 to 0.09. A smooth variation of the GM is expected. There is no explanation in the document as to why this unexpected variation occured. Further, the negative GM raises the question about the system stability. The Bode plots for X channel in nominal are shown in Figure 9. It can be seen in the figure that the phase curve crosses 180 degrees line four times. Four GM numbers can be obtained. The first number is used in the table for all configurations except -10%Isc. Explanation is needed for the choice. Given this situation, it is uncertain that GM is a legitimate indicator of the stability of the closed-loop system.",10/6/04
ProjectA - TIM - 1395,FC UIRD indicates FC cover may remain open following transition to Emergency Mode,4,"According to requirement L3 FCI-501 the FC camera covers should be closed whenever the instrument is not operational (hibernation/ safe/ standby/ emergency modes ). Requirements FCI-91 specifies that the FC should be able to tolerate an immediate shut-down with no warning, which presumably corresponds to the ""Emergency Mode” case conveyed by L3-FCI-213. However, according to diagram in Figure 3-8 (L3-FCI-210), the FC lens cover is left in an unknown state in Emergency Mode. FC can only transition out of Emergency mode following a S/C command to “Standby Mode,” which Figure 3-8 implies has no lens cover knowledge/control either. So the cover may remain open unnecessarily for a long time until the instrument is commanded by the ground from Standby Mode to “Safe Mode.” Additionally, L3-FCI-91 never explicitly states that ""Anomalous Condition Power Shutdown"" corresponds to an ""Emergency Power Shut Down"" condition, which inherently invokes the FC Emergency Mode. If this is the context of L3-FCI-91, it should state this explicitly. Currently, the only FC UIRD requirement that addresses Emergency Mode directly is L3-FCI-213. Referenced Requirements: [L3-FCI-501] To support the S/C FP actions described previously, the FC will support the requirements listed below. The FC shall safe itself if it does not receive indications of a healthy flight computer within 30 seconds of receiving such an indication (typically 3 samples). Note: safe indicates cover closed. The FC shall safe itself immediately, from any mode of operation, if commanded by the S/C (or ground). Reference section 3.9.1 for more information on FC Safe Mode and transitions. The Framing Camera shall be designed to survive a sudden loss of power with no warning. [L3-FCI-91] The Framing Cameras are considered non-essential loads on the main power bus. In the event of anomalous conditions (battery voltage drops below the low voltage limit), the SC will be driven into a safe condition. This will include turning off all the instrument power, except for survival heaters. If time permits, a shutdown warning will be sent over the 1553 bus to the instrument, which will in turn execute a safing macro (close cover, etc). No such warning is guaranteed, however, and all instruments must be tolerant of having power removed without warning. [L3-FCI-210] Fig 3-8 “Instrument Modes and Transitions” [L3-FCI-213] Transitions between FC Modes are caused mainly by S/C commands. In the case of a sudden Emergency Power Shut Down, the Instrument is in Emergency mode. The DPU may provide sub-modes, e.g. imaging mode is subdivided. The transition between DPU sub-modes is handled autonomously within the DPU SW.",9/24/04
ProjectA - TIM - 1394,Incomplete definition of the keep out zone for the FC in requirement L3-FCI-506,4,"Figure 3-16 (L3-FCI-32) defines the FC keep out zone as a Field of View (FOV). L3-FCl-506 specifies that the MOS will control the keep out zone as a function of sun distance, and also that ""the S/C will safe the FC if an intrusion occurs."" If the keepout zone is a configurable parameter and not just a FOV, it is unclear how the spacecraft will use the information to determine possible Sun intrusions. L3-FCl-506 and Figure 3-16 can not be completely tested as written. Referenced Requirements: [L3-FCI-32] Figure 3-16 shows the Sun Keep-Out FOV: this figure defines the solar keep-out zone. [L3-FCl-506] The S/C shall monitor estimated sun position with respect to pre-defined FC keep out zones. The S/C will safe the FC if an intrusion occurs. The MOS will control the keep out zone if it changes as a function of sun distance.",9/24/04
ProjectA - TIM - 1393,Purpose and intent of FC dual operations not defined by FC UIRD,3,"FC UIRD requirement L3-FCI-11 specifies that the two FC cameras are ""redundant"" sub-systems; L3-FCI-131 indicates that dual operation of the cameras shall be possible. However, the L2 fault protection requirement, L2-FPR-139 precludes dual operation of redundant hardware elements, unless approved by the Project Manager. Consequently, unless the required approval has been received, L3-FCI-131 conflicts with L2-FPR-139. The project should ensure that the implied deviation from the project level requirement was authorized. However, if the project considers L3-FCI-131 valid, then there seems to be a requirement missing from the FC UIRD that sufficiently describes the purpose and intent for dual operations of the FCs. Such a requirement would most likely drive additional L3 requirements. For example, if the intent is to alternate filters between cameras, then this should be specified in order to accomplish this in an effective and efficient manner. Consequently, this area needs additional consideration to ensure mission goals are attainable. Referenced Requirements: [L3-FCI-11] Two identical camera systems, including data processing units, will be delivered to provide redundancy for optical navigation, mission-critical imaging science and topography. One camera head consists of the housing, refractive lens system, filter-wheel, front door, focal plane, and readout electronics with 2.5 kg total mass and typical power consumption of 4W (short peak of 7 W). [L3-FCI-131] The two FC instruments shall be designed for dual cold redundancy operations, i.e. all functions of the two FC shall be identical. Dual operation of the cameras shall be possible. [L2-FPR-139] The ProjectA Project shall only swap to redundant hardware elements for fault recovery actions in order to assure health/ safety. Violations shall be approved by the Project Manager.",9/24/04
ProjectA - TIM - 1392,Incomplete quantitative detection limits in L3-PSR-111,3,"The goal stated for the FC to determine the ""presence"" of olivine and pyroxene (as well as their compositional variations) cannot be quantified without traceable references. Referenced Requirement: [L3-PSR-111] Each FC shall provide a clear filter and at least three color filters, with a goal to determine the presence of olivine and pyroxene, as well as their compositional variations.",9/24/04
ProjectA - TIM - 1391,"Unclear intent of adverb ""clearly"" in telemetry requirement L3-PSR-59",5,"During the implementation of science instruments telemetry, the adverb ""clearly"" in requirement L3-PSR-59 is likely to be ignored. If a particular type of formatting is needed, it should be specified. Referenced Requirement: [L3-PSR-59] In its engineering telemetry each Science Instrument shall clearly indicate whether or not it is in its Safe Mode.",9/24/04
ProjectA - TIM - 1390,Image motion compensation incompletely defined by PSRD,3,"Additional details are needed in requirement L3-PSR-100 for making this requirement traceable and verifiable. If image motion compensation is needed, a reference to suitable analysis should be also included or made traceable. Requirement L3-PSR-100 can be traced back to requirement L2-PRD-269 which is identical with the exception of the note on image motion compensation. The pointing errors are defined in L3-SFS-2138, but this requirement only identifies random pointing errors with null time average. Systematic errors (such as ""image motion compensation"") are not traceable and not testable. Referenced Requirements: [L3-PSR-100] Each FC shall be able to image a resolved object at 3AU from the Sun with an albedo of 0.1, at a solar incidence angle of up to 45 deg, with an integration time of less than 0.5 seconds, with a signal-to-noise ratio of greater than 50 in at least 3 filters. (Note: when using filters, image motion compensation may be required to achieve L1 requirement of SNR of 50 over 80% of the surface). [L2-PRD-269] Allocation: The payload system shall be able to image an object at 3AU from the Sun with an albedo of 0.1, at a solar incidence angle of up to 45 deg, with an integration time of less than 0.5 seconds, with a signal-to-noise ratio of greater than 50 in at least three filters. [L3-SFS-2138] Following standard practice, the errors within each pointing budget shall be grouped into three temporal categories corresponding to their frequency content. The errors within each category are root sum squared (RSS), and the three RSS totals are then summed to arrive at the total error. Static Errors are constant errors (bias). This category includes applicable alignment errors and uncertainties from Ground Operations through launch, and shall include zero G, launch shift, and hygroscopic effects, and alignment measurement uncertainties. Quasi-static Errors include those errors with frequencies slow enough that they can be removed through calibration (< 3 microHz). This category includes all alignment changes from post-launch through the beginning of science operations, and shall include the effects of thermal distortion. Slow Dynamic Errors are those errors with frequency content between 3 microHz and the controller bandwidth (5Hz). All alignment changes during a science interval (i.e. one orbit). The alignment changes shall include thermal distortion. Fast Dynamic Errors are those errors whose frequencies are above the controller bandwidth.",9/24/04
ProjectA - TIM - 1389,Flag reset not traceable between EngCntrl-TRD and EngCntrl-S/C ICD for XTHRSTON and XGRIDCLR,3,"The TRD (section 3.3.7.3.2 -Multiple Recycles) identifies a multiple recycle flag that shall remain set until cleared by the XTHRSTON command, however the flag is not mentioned either in the EngCntrl/Spacecraft ICD or the EngCntrl SRS. Referenced EngCntrl TRD Section: 3.3.7.3.2 Multiple Recycles In the event the thruster does not recover normally from a recycle and 20 recycles accumulate within 80 seconds, the EngCntrl shall set the multiple recycle flag and reprogram the discharge current to the cutback level of 4.0 A. The multiple recycle flag shall remain set until cleared by the XTHRSTON or XGRIDCLR command, defined in DD-510, EngCntrl-Spacecraft ICD.",9/24/04
ProjectA - TIM - 1388,"Ambiguous symbol ""?P"" referenced multiple times in EngCntrl TRD",5,"The EngCntrl TRD contains nine occurrences of the undefined notation ""?P"", which is possibly just an editorial artifact or file conversion problem; however, the absence of more accurate notation (e.g. delta P) or a description describing the intent of this notation, the wording of the requirement remains unclear and impossible to test completely. The unclear notation appears in Section 3.4.2.1 Steady State XFS control items 4 and 5, in Section 3.4.6 ""Fault protection Set Points,"" and in Section 3.4.3.1 item 2 "" Autonomous Fault protection."" Referenced EngCntrl TRD Section: 3.4.2.1 Steady State XFS control 5. Compare PAc obtained in step 4. above with PA Required obtained in step 3. If PAc is greater than PA Required plus some pre-set ?P that indicates leaking up-stream valves, then fault protection is invoked. If not, then proceed with step 6. 6. Again compare PAc obtained in step 4. above with PA Required obtained in step 3. If PAc is less than PA Required minus some pre-set ?P that indicates stuck-closed upstream valves, then fault protection is invoked. If not, then proceed with step 7. 3.4.6 Fault protection Set Points During normal XFS regulator operation, the fault protection trigger points shall be set at 2.0 psi above and 0.2 psi below the nominal required plenum tank pressure. When plenum tank pressures are changed, these set points shall be adjusted to avoid inadvertently triggering fault protection. This shall be handled such that when the thruster set-point is being changed, until the new plenum tank pressure has been reached (to within some tolerance smaller than the fault protection ?P) the fault protection trigger points shall be changed such that they are ?P above the higher of the two plenum tank pressure set points and ?P below the lower of the two plenum tank pressure set points. 3.4.3.1 Autonomous Fault protection The EngCntrl shall autonomously detect and respond to the following faults within the XFS: 2. Internal leakage of LV2, SV5, SV6, SV7 or SV8, or SV4, or failure of LV2, SV5, SV6, SV7 or SV8 to operate. Indication: Pressure in plenum tank below nominal by ?P (0.2 psi) Response: 1. Close LV2 2. Open LV3 3. Operate in single plenum mode using single plenum column of throttling table, normal steady-state control algorithm, and the selected main flow regulator.",9/24/04
ProjectA - TIM - 1387,Incomplete failure conditions during cathode conditioning procedure stated by EngCntrl TRD,4,"EngCntrl TRD Section 3.3.2.2, which is dedicated to the fault recovery of the cathode conditioning procedure, specifies that there is only one failure that need to be detected by the system (""The only failure mode to be detected in this operation is an open cathode heater). EngCntrl/Spacecraft ICD Section 6.3.1.2.3.2, which is dedicated to command restrictions , seems to identify additional faults detected during the cathode conditioning procedure. These faults include cases where the PPU loses either high voltage or low voltage power. If these cases represent additional faults detected during the cathode conditioning procedure beyond that listed by the EngCntrl TRD, then both referenced documents should be made consistent. Referenced EngCntrl TRD Section: 3.3.2.2 Fault Recovery The only failure mode to be detected in this operation is an open cathode heater. A cathode heater will be considered open if the output voltage a cathode heater power supply is in excess of 9.2V and the output current is less than 3.0A. In the event of this failure, the EngCntrl shall exit the cathode conditioning procedure and set a heater failure flag in the PPU telemetry. In the event of a heater short circuit, it is likely that the thruster will not start in the thruster ignition procedure, and this failure will be dealt with at that time. Heater failures are generally non-recoverable; therefore, no recovery procedures are specified at this time. Referenced EngCntrl/Spacecraft ICD Section: 6.3.1.2.3.2 Command Restrictions. The EngCntrl shall only accept a XCATHCND command when the Operational software is in the STANDBY mode. A XCATHCND command issued when the EngCntrl is in any mode other then STANDBY shall result in the EngCntrl rejecting the command. The XCATHCND command shall only be issued after the PPU is enabled with both the low voltage and high voltage power turned on. If the PPU loses either high voltage or low voltage power during Cathode Condition procedure, the algorithm shall wait for the voltage to be reapplied and then shall restart the procedure. If a PPU recycle occurs during Cathode Condition, the procedure is terminated.",9/24/04
ProjectA - TIM - 1386,Inaccurate table of contents in the EngCntrl TRD,5,"The table of content and the text of the document need some editorial refinements: - sections 3.3.7, 3.3.8 are not listed - Figure 5-1 appears repeated three times - Figure 5-1 is mislabeled",9/24/04
ProjectA - TIM - 1385,The use of English units in EngCntrl TRD may need to be revised,4,"SC&FSRD requirement L3-SFS-2093 indicates that the ""Flight System shall use SI units…exceptions to this policy will be considered if implementation is cost prohibitive such as in the use of existing equipment and design documented in English units."" Although not necessarily inconsistent with this policy, the EngCntrl TRD references the English units ""psi"" and ""psia"" 16 times to characterize operating parameters of the Engine. Unlike rocket engines, ion propulsion systems do not have a large user base outside the scientific community. This inherently limits the implementation of ion propulsion systems to space flight applications where trajectories are calculated in SI units. Consequently, the project may want to reassess the long-term implications associated with maintaining consistent unit conversions throughout numerous calculations over the long and complex trajectory. Referenced Requirement: [L3-SFS-2093] The Flight System shall use SI units during the design, fabrication, test, launch and operations of the mission. Exceptions to this policy will be considered if implementation is cost prohibitive such as in the use of existing equipment and design documented in English units. All units used in all specifications and drawings shall be clearly identified.",9/24/04
ProjectA - TIM - 1384,CHECKSUM in progress handling inconsistency between EngCntrl SRS and EngCntrl-S/C ICD,5,"According to EngCntrl/Spacecraft ICD Section 6.3.2.2.2, the XCALCKSM command should always be executable. However, the EngCntrl SRS Section 3.4.6.2.1 specifies that an error message should be generated and the command ignored if a CHECKSUM is in progress. Referenced Sections: EngCntrl/Spacecraft ICD 6.3.2.2.2: Command Restrictions: The EngCntrl shall be able to execute this command at anytime EngCntrl SRS: 3.4.6.2.1 Checksum Calculation In Progress Check The Bootloader shall indicate a CHECKSUM IN PROGRESS error if the Idle Process is calculating the Operational software checksum when a XCALCKSM command is received and the command will be ignored.",9/24/04
ProjectA - TIM - 1383,EngCntrl Software Design Review manual referenced by EngCntrl-S/C ICD missing traceable references,5,"EngCntrl S/C ICD Section 6.3.1.2.4.1 indicates that the ""EngCntrl Software Design Review manual"" provides ""a complete description of the engine startup, throttling, and steady state control algorithms""; however, this manual does not appear in Section 2, ""Applicable Documents."" This specification should be updated with the JPL document ID associated with this manual, and Section 2 of the ICD should be updated accordingly. Referenced EngCntrl S/C ICD Section: 6.3.1.2.4.1 Command Description The XTHRSTON command shall start a procedure for turning on a thruster. The Thrust Control procedure is documented in the EngCntrl Software Requirements Specification, JPL D-27118. A complete description of the engine startup, throttling, and steady state control algorithms is provided in the EngCntrl Software Design Review manual.",9/23/04
ProjectA - TIM - 1382,Unclear delta P signing for command XPAMCLUT in EngCntrl-S/C ICD,4,"According to EngCntrl/Spacecraft ICD Section 6.3.1.4.2.1, the XPAMCLUT command loads one line of data into a pressure set-point correction lookup table. The table values represent pressure value corrections as a function of temperature that must be added or subtracted to a given measured pressure. Table 6-31 ""XPAMCLUT Command Format,"" indicates these values range from 0 to 6553, implying these values are always positive. However, nothing in this table seems to indicate whether the pressure value corrections are added or subtracted. Referenced Section: 6.3.1.4.2.1 Command Description Table 6-29 Lookup Table Format Similarly, P0 through P15 represents the pressure range over which the transducers are corrected. DP0,0 through DP15,15 represent the delta pressure to be added or subtracted to the measured pressure for a given pressure/temperature combination. All values programmed into the table are in counts, where T0 through T15 have the same units as TP1 through TP6, and all pressures (P0 through P15, DP0,0 through DP15,15) have the same units as PA1 through PA6. Table 6-31 XPAMCLUT Command Format",9/23/04
ProjectA - TIM - 1381,Both English and SI units used for XTHROTAB command parameters in EngCntrl-S/C ICD,4,"SC&FSRD requirement L3-SFS-2093 indicates that the ""Flight System shall use SI units…exceptions to this policy will be considered if implementation is cost prohibitive such as in the use of existing equipment and design documented in English units."" Although not necessarily inconsistent with this policy, EngCntrl/Spacecraft ICD Section 6.3.1.4.1.1 provides the description for the XTHROTAB command, which includes Table 6-28 ""XTHROTAB Command Format."" This table provides word numbers 10, 11, and 12 in terms of English units (i.e. PSI/bit). Unlike rocket engines, ion propulsion systems do not have a large user base outside the scientific community. This inherently limits the implementation of ion propulsion systems to space flight applications where trajectories are calculated in SI units. Consequently, the project may want to reassess the long-term implications associated with maintaining consistent unit conversions throughout numerous calculations over the long and complex trajectory. Referenced EngCntrl ICD Section: Table 6 28. XTHROTAB Command Format 10 MAINFLOW 0 to 4095 Main Flow Pressure, 1 LSB = (0.040780276) (PSI/bit) 11 CATHFLOW 0 to 4095 Cathode Flow Pressure, 1 LSB = (0.040780276) (PSI/bit) 12 SNGLFLOW 0 to 4095 Single Flow Pressure, 1 LSB = (0.040780276) (PSI/bit) Referenced L3 SC&FSRD Requirement: [L3-SFS-2093] The Flight System shall use SI units during the design, fabrication, test, launch and operations of the mission. Exceptions to this policy will be considered if implementation is cost prohibitive such as in the use of existing equipment and design documented in English units. All units used in all specifications and drawings shall be clearly identified.",9/23/04
ProjectA - TIM - 1380,Incomplete restrictions for the Cathode Condition Command in EngCntrl SRS and EngCntrl-S/C ICD,3,"EngCntrl/Spacecraft ICD Section 6.3.1.2.3.2 indicates that prior to executing an XCATHCND command the PPU must be enabled with power to both the high and low voltages; however, if during the Cathode Condition Procedure, the PPU loses either high voltage (HV) or low voltage (LV), the algorithm should wait for the voltage to be reapplied before restarting automatically. A time-out waiting period is not specified and without it, it is unclear when and how the EngCntrl will stop waiting. Also, the EngCntrl SRS does not prescribe a check on the PPU HV - LV state before entering the Cathode Condition procedure-start step; therefore, the procedure has no way of distinguishing a power loss (with automatic restart) from a command issued incorrectly when the power status is off. Referenced Section: EngCntrl/Spacecraft ICD: 6.3.1.2.3.2 Command Restrictions The EngCntrl shall only accept a XCATHCND command when the Operational software is in the STANDBY mode. A XCATHCND command issued when the EngCntrl is in any mode other then STANDBY shall result in the EngCntrl rejecting the command.",9/23/04
ProjectA - TIM - 1379,The SRS - EngCntrl requirements deviations from Deep Space 1 are incomplete,4,"Chapter 4 in the SRS is intended to cover requirements on Architecture, Initialization, Processing, Telemetry, Bootloder/Operational SW System Safe Procedure, Operational SW Engine Mode Procedures, Idles processes and Fault Protection. All the eight sections are under development and are incomplete. References from the ICD and TRD to the SRS document can not be traced.",9/23/04
ProjectA - TIM - 1378,XSCRBMEM and XSRBMEM commands intent unclear and inconsistently defined in EngCntrl SRS,3,"EngCntrl/Spacecraft ICD Section 6.2.4 ""Bootload Software Commands,"" identifies the following Bootload Software command: XSRBMEM - Enable Memory Refresh/Memory Scrub function Section 6.2.5 ""Operational Software Commands,"" identifies the following similar command, but for the Operational Software: XSCRBMEM - Perform memory scrub on selected memory region, will refresh EEPROM This implies that the enable for the memory scrub command is only valid during the Bootload process; whereas, the memory scrub command itself is only valid during execution of the operational software. However, subsequent sections of the ICD seem to contradict this assumption. Section 6.3.1 OPERATIONAL SOFTWARE COMMANDS, contains the detailed description (i.e. in Section 6.3.1.5.9.1 Command Description) for the command, ""XSCRBMEM."" Then Section 6.3.2 BOOTLOAD COMMANDS (i.e. in Section 6.3.2.6.1 Command Description), includes a seemingly different command with the same name. This command is not included in Section 6.2.4 ""Bootload Software Commands""; and the ""XSRBMEM"" command referenced by Section 6.2.4 is not included in Section 6.3.2 BOOTLOAD COMMANDS. This implies there may have been a simple typo in Section 6.3.2 (i.e. in Section 6.3.2.6.1 Command Description), where ""XSCRBMEM"" should have actually been ""XSRBMEM"" instead. However, again this assumption proves uncertain, since the descriptions for these commands are essentially the same except one is relative to the Bootload Software, while the other is relative to the Operational Software. These cases considered collectively raises questions over the intent and necessity of both an enable command for the memory scrub command and the command itself, as well as which modes of software execution these commands are valid. The referenced Sections of the EngCntrl/Spacecraft ICD should be reassessed and rewritten as necessary to capture the intended and necessary memory scrub functionality relative to the applicable modes of software execution. Although not considered a technical issue, the section numbers referenced by Table 6-3 ""Bootload Software Command Summary,"" all reference Section 5 when they should reference Section 6 instead. Similarly, the section references for Table 6-4 ""EngCntrl Operational Software Command Summary,"" are all blank. Therefore, these tables should be completed and updated accordingly. Referenced Sections: EngCntrl/Spacecraft ICD: Section 6.2.4 Bootload Software Commands Extracted from Table 6-3: Bootload Software Command Summary Command: XSRBMEM Command: Description Enable Memory Refresh/Memory Scrub function Section: 5.3.2.6 Section 6.2.5 Operational Software Commands Extracted from Table 6-4: EngCntrl Operational Software Command Summary Command: XSCRBMEM Command Description: Perform memory scrub on selected memory region, will refresh EEPROM Section: (Blank) 6.3.1 OPERATIONAL SOFTWARE COMMANDS 6.3.1.5.9 XSCRBMEM 6.3.1.5.9.1 Command Description The XSCRBMEM command shall initiate a background task to perform a single memory scrub of the entire SRAM and EEPROM memory space. The memory scrub task shall only utilize the unused CPU time that is available during each 1Hz iteration of the Operational Software main control loop. The memory scrub operation cannot be stopped once initiated and shall end either when all the SRAM and EEPROM memory space have been successfully scrubbed or when an EDAC error in memory is encountered. A XSCRBMEM command received while the memory scrub operation is busy will be rejected and logged as an error. Table 6-44: XSCRBMEM Command Format 6.3.2 BOOTLOAD COMMANDS 6.3.2.6 XSCRBMEM 6.3.2.6.1 Command Description The XSCRBMEM command shall initiate a background task to perform a single memory scrub of the entire SRAM and EEPROM memory space. The memory scrub task shall only utilize the unused CPU time that is available during each 1Hz iteration of the Bootloader Software main control loop. The memory scrub operation cannot be stopped once initiated and shall end either when all the SRAM and EEPROM memory space have been successfully scrubbed or when an EDAC error in memory is encountered. A XSCRBMEM command received while the memory scrub operation is busy or the calculate checksum operation is busy will be rejected and logged as an error. Table 6-49: XSCRBMEM Command Format",9/23/04
ProjectA - TIM - 1377,"Inconsistent power-off handling during ""start step"" of Cathode Condition Procedure stated in EngCntrl SRS",3,"According to EngCntrl/SC ICD Section 6.3.1.2.3.2, the PPU must be enabled with both low and high voltage powers on, before the XCATHCND command can be issued. EngCntrl SRS Section 3.7.3.7.2.1 contains a block diagram for the start (step 1) of the Cathode Condition Mode, seems consistent with the ICD by checking the PPU power state before continuing. If the check fails, then the process skEngine to the end of step: the same point ultimately reached if step 1 is successful. This implies that in either case, the process continues onto the next step (step 2). However, this seems contrary to Section 3.7.3.7.1 “Procedure Diagram” of the SRS, which implies that transitioning from step 1 to step 2 is contingent on “POWER OK” state. This diagram seems more consistent with the diagram provided by Section 3.7.3.7.4.1 “PPU Power Fault” of the SRS, which implies that if the power check fails during the start step, then the step repeats until the power levels are within range. Aside from these inconsistencies, the SRS never seems to sufficiently address the handling of a PPU power fault that occurs during the step 1 of the Cathode Condition Mode. Referenced Sections: EngCntrl/SC ICD: 6.3.1.2.3.2 Command Restrictions. The EngCntrl shall only accept a XCATHCND command when the Operational software is in the STANDBY mode. A XCATHCND command issued when the EngCntrl is in any mode other then STANDBY shall result in the EngCntrl rejecting the command. The XCATHCND command shall only be issued after the PPU is enabled with both the low voltage and high voltage power turned on. If the PPU loses either high voltage or low voltage power during Cathode Condition procedure, the algorithm shall wait for the voltage to be reapplied and then shall restart the procedure. If a PPU recycle occurs during Cathode Condition, the procedure is terminated. EngCntrl SRS: 3.5.1 Telemetry Collection 3.5.1.1 Analog Telemetry Channels The EngCntrl Flight Software shall collect data digitized analog data from the EngCntrl and XFS using the Analog Controller of the CPU board. 3.5.1.1.1 Analog Data Channels Collected Source Channels EngCntrl 5v, +12v, -12v power monitors 3.5.1.5 PPU Data Process 3.5.1.5.2 High Voltage The EngCntrl Flight Software shall indicate the High Voltage is ON if the measured line voltage is greater than or equal to 50v, otherwise the EngCntrl Flight Software shall indicate the High Voltage is OFF. 3.5.2 Telemetry Update 3.5.2.2.4.1 Error Count The EngCntrl Flight software shall update the Error Count in the EngCntrl telemetry data buffer, packet 0. 3.5.2.2.4.2 Error History The EngCntrl Flight software shall update the Error History list in the EngCntrl telemetry data buffer, packet 0. 3.7.3 Mode Procedures 3.7.3.7 Cathode Condition Mode The Operational software shall perform a Cathode Condition procedure upon transitioning the Engine to the CATHODE CONDITION mode. 3.7.3.7.1 Procedure Diagram 3.7.3.7.2.1 Start (Step 1) The following diagram defines the sequence of checks and commands performed by the Start step of the Cathode Condition procedure. <Summarized from BLOCK DIAGRAM> PPU Slice Power On and High Voltage Power On? IF OFF END STEP 3.7.3.7.4.1 PPU Power Fault When in the Start step, the Cathode Condition Procedure shall repeat until the PPU power levels are in range as indicated by the PPU data processing performed by the Telemetry Update sequence step. When not in the Start step, the Cathode Condition Procedure shall indicate an error and restart the procedure if the PPU power levels are out of range as indicated by the PPU data processing performed by the Telemetry Update sequence step.",9/23/04
ProjectA - TIM - 1376,"Fault flag - ""open cathode heater"" not flowed down to EngCntrl SRS",3,"According to EngCntrl/Spacecraft ICD Section 3.3.2.2 ""Fault Recovery,"" there should be an ""open cathode heater flag"" included in telemetry. However, this fault does not seem to have been flowed down to the telemetry section of the EngCntrl SRS. Referenced EngCntrl/Spacecraft ICD Section: 3.3.2.2 Fault Recovery The only failure mode to be detected in this operation is an open cathode heater. A cathode heater will be considered open if the output voltage a cathode heater power supply is in excess of 9.2V and the output current is less than 3.0A. In the event of this failure, the EngCntrl shall exit the cathode conditioning procedure and set a heater failure flag in the PPU telemetry.",9/23/04
ProjectA - TIM - 1375,Requirement for XMEMPOKE commands missing from EngCntrl SRS and EngCntrl-S/C ICD,3,"EngCntrl SRS Section 4.3.2 mentions the command XMEMPOKE for the Bootloader software as a deviation from the Deep Space 1 design; however, a corresponding requirement/command description is missing from EngCntrl SRS Section 3 ""Requirements"" in Section 6.2.4 of the EngCntrl/Spacecraft ICD. Referenced EngCntrl SRS Section: 4.3.2 XMEMPOKE New command for the Bootloader software",9/23/04
ProjectA - TIM - 1374,Inconsistent MEMORY SCRUB IN PROGRESS handling when commanding XSTARTSW stated in EngCntrl SRS and EngCntrl-S/C ICD,3,"EngCntrl/Spacecraft ICD Section 6.3.2.3.2 indicates that the EngCntrl ""shall be able to execute the (XSTARTSW) command anytime"" and it does not mention possible on-going memory scrub operations. However, EngCntrl SRS Section 3.4.6.3.2 indicates that a MEMORY SCRUB IN PROGRESS condition received while attempting to execute an XSTARTSW command will result in an error and the memory scrub operation will be terminated. The inconsistency between the SRS and the ICD should be resolved. Referenced Sections: EngCntrl/Spacecraft ICD: 6.3.2.3.2. Command Restrictions - The EngCntrl shall be able to execute this command at anytime EngCntrl SRS: 3.4.6.3.2 Memory Scrub In Progress Check The Bootloader shall indicate a MEMORY SCRUB IN PROGRESS error if the Idle Process is currently scrubbing the CPU memory and will terminate the memory scrub operation.",9/23/04
ProjectA - TIM - 1373,Termination of memory scrub inconsistent in EngCntrl-S/C ICD and EngCntrl SRS,3,"EngCntrl/Spacecraft ICD Section 6.3.1.5.9 indicates that a memory scrub command (i.e. ""XSCRMEM"") cannot be terminated. However, EngCntrl SRS Sections 3.4.6.1.5, 3.4.6.3.2, and 3.4.6.2.3 describe cases where memory scrubbing actions are terminated prior to completion. The inconsistencies between the SRS and the ICD should be resolved. Referenced Sections: EngCntrl/Spacecraft ICD: 6.3.1.5.9..The memory scrub operation cannot be stopped once initiated and shall end either when all the SRAM and EEPROM memory space have been successfully scrubbed or when an EDAC error in memory is encountered. A XSCRBMEM command received while the memory scrub operation is busy will be rejected and logged as an error. EngCntrl SRS: 3.4.6.2.3 Memory Scrub In Progress Check The Bootloader shall indicate a MEMORY SCRUB IN PROGRESS error if the Idle Process is currently scrubbing the CPU memory and will terminate the memory scrub operation. The Bootloader software shall enable the Idle Process task to calculate the Operational software. 3.4.6.3.2 Memory Scrub In Progress Check The Bootloader shall indicate a MEMORY SCRUB IN PROGRESS error if the Idle Process is currently scrubbing the CPU memory and will terminate the memory scrub operation. 3.4.6.1.5 Memory Scrub In Progress Check The Bootloader shall indicate a MEMORY SCRUB IN PROGRESS error if the Idle Process is currently scrubbing the CPU memory and will terminate the memory scrub operation. The Bootloader software shall write the data specified in the XLOADCODE command.",9/23/04
ProjectA - TIM - 1369,ProjectA L3 SC&FSRD Rqt: L3-SFS-2014 is not linked to L2 PRD rqts,3,"L3-SFS-2014, which is a HGA pointing accuracy requirement, has not been linked to any requirements in the DOORS module for the Level 2 Project Requirements Document (PRD). Referenced Requirements: [L3-SFS-2014] During HGA communication sessions, the Flight System shall be able to point the HGA, such that the HGA pointing accuracy is better than 3.49 mrad (0.2 deg) radial (3 sigma, zero-to-peak). Note, the accuracy is defined as the total difference between the commanded and actual pointing.",9/7/04
ProjectA - TIM - 1368,ProjectA L3 SC&FSRD Rqt: L3-SFS-68 is not linked to L2 PRD rqts,3,"Requirement L3-SFS-68 has not been linked to any requirements in the DOORS module for the Level 2 Project Requirements Document (PRD). It is not clear which level 2 requirement in the PRD drives the solar arrays pointing accuracy requirement. Referenced Requirements: [L3-SFS-68] During normal operations and safe mode, the Flight System shall meet the load power requirements when the solar arrays are pointed to the sun with an accuracy of 0.1 rads (5.73 degrees), using the SADA rotation and ACS S/C pointing capability.",9/7/04
ProjectA - TIM - 1367,L2-PRD-1541 is not linked to L3 SC&FS rqts,3,"The requirement L2-PRD-1541 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. L2-PRD-1541 is pointing knowledge requirement, which should be linked to the level 3 pointing knowledge requirement L3-SFS-2384. Referenced Requirements: [L2-PRD-1541] Allocation: The Spacecraft System shall be able to estimate, record, and telemeter the inertial attitude of the GRaND mounting reference, with a real-time pointing knowledge error of better than 4 mrad per axis (3 sigma, zero-to-peak). Note: The knowledge error is defined as the difference between the estimated and actual pointing. [L3-SFS-2384] The Spacecraft System shall be able to estimate, record, and telemeter the inertial attitude of the GRaND mounting reference, with a real-time pointing knowledge error of better than 4 mrad per axis (3 sigma, zero-to-peak). Note: The knowledge error is defined as the difference between the estimated and actual pointing.",9/7/04
ProjectA - TIM - 1366,L2-PRD-1538 is not linked to L3 SC&FS rqts,3,Requirement L2-PRD-1538 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. Referenced Requirements: [L2-PRD-1538] Allocation: The Spacecraft System shall provide a resolution of better than 0.005 mrad per axis in its pointing telemetry.,9/7/04
ProjectA - TIM - 1365,L3-SFS-2384 is incorrectly linked to L2-PRD-1537,3,"Requirement L2-PRD-1537 is linked to the requirement L3-SFS-2384 in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. However, the requirement L3-SFS-2384 is pointing knowledge requirement. The requirement L2-PRD-1537 is pointing accuracy requirement, which should be linked to the level 3 pointing accuracy requirement L3-SFS-2011. Referenced Requirements: [L2-PRD-1537] Allocation: The Spacecraft System shall be able to point the GRaND mounting reference at a ground-prescribed inertial orientation, with an accuracy of better than 1 degree per axis (3 sigma, zero-to-peak). Note: The accuracy is defined as the total difference between the commanded and actual pointing. [L3-SFS-2384] The Spacecraft System shall be able to estimate, record, and telemeter the inertial attitude of the GRaND mounting reference, with a real-time pointing knowledge error of better than 4 mrad per axis (3 sigma, zero-to-peak). Note: The knowledge error is defined as the difference between the estimated and actual pointing. [L3-SFS-2011] The Spacecraft System shall be able to point the GRaND mounting reference at a ground-prescribed inertial orientation with an accuracy of better than 1 degree per axis (3 sigma, zero-to-peak). Note: The accuracy is defined as the total difference between the commanded and actual pointing.",9/7/04
ProjectA - TIM - 1364,L2-PRD-1534 is not linked to L3 SC&FS rqts,3,Requirement L2-PRD-1534 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. Referenced Requirement: [L2-PRD-1534] Allocation: The Spacecraft System shall provide a resolution of better than 0.005 mrad per axis in its pointing commands.,9/7/04
ProjectA - TIM - 1363,L3-SFS-2011 is incorrectly linked to L2-PRD-1317,3,"Requirement L2-PRD-1317 seems inappropriately traced to L3-SFS-2011 in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. L2-PRD-1317 is a project level requirement that is allocated within the PRD to several system level requirements including L2-PRD-1537. Since L2-PRD-1537 is directly related to L3-SFS-2011, the link between L2-PRD-1317 and L3-SFS-2011 should be removed and a new link between L2-PRD-1537 and L3-SFS-2011 should be created. Referenced Requirements: [L2-PRD-1317] Requirement: The ProjectA Project shall be able to point the GRaND boresight with a target-relative accuracy of better than 5 degrees per axis (3 sigma, zero-to-peak). Note: The accuracy is defined as the total difference between the actual target direction and actual pointing direction. [L2-PRD-1537] Allocation: The Spacecraft System shall be able to point the GRaND mounting reference at a ground-prescribed inertial orientation, with an accuracy of better than 1 degree per axis (3 sigma, zero-to-peak). Note: The accuracy is defined as the total difference between the commanded and actual pointing. [L3-SFS-2011] The Spacecraft System shall be able to point the GRaND mounting reference at a ground-prescribed inertial orientation with an accuracy of better than 1 degree per axis (3 sigma, zero-to-peak). Note: The accuracy is defined as the total difference between the commanded and actual pointing.",9/7/04
ProjectA - TIM - 1362,L2-PRD-1517 is not linked to L3 SC&FS rqts,4,Requirement L2-PRD-1517 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. Referenced Requirements: [L2-PRD-1517] Allocation: The Spacecraft System shall provide a rate resolution of better than 0.25 microrad/sec per axis in its rate commands.,9/7/04
ProjectA - TIM - 1361,L2-PRD-1502 is not linked to L3 SC&FS rqts,4,Requirement L2-PRD-1502 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. Referenced Requirement: [L2-PRD-1502] Allocation: The Spacecraft System shall provide a rate resolution of better than 0.25 microrad/sec per axis in its rate commands.,9/7/04
ProjectA - TIM - 1360,L2-PRD-1510 is not linked to L3 SC&FS rqts,4,Requirement L2-PRD-1510 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. Referenced Requirement: [L2-PRD-1510] Allocation: The Spacecraft System shall provide a rate resolution of better than 0.25 microrad/sec per axis in its rate commands.,9/7/04
ProjectA - TIM - 1359,L2-PRD-1507 is not linked to L3 SC&FS rqts,4,Requirement L2-PRD-1507 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. Referenced Requirement: [L2-PRD-1507] Allocation: The Spacecraft System shall provide a rate resolution of better than 0.25 microrad/sec per axis for its rate commands.,9/7/04
ProjectA - TIM - 1358,L2-PRD-1495 is not linked to L3 SC&FS rqts,4,"Requirement L2-PRD-1495 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. Referenced Requirement: [L2-PRD-1495] Requirement: During the Earth-Vesta Cruise and Vesta-Ceres Cruise Phases, the ProjectA Project shall be able to limit the target-relative motion of the Framing Camera boresight to less than 300 microrad/sec per axis (3 sigma, zero-to-peak), for intervals of up to 30 seconds. Note: This requirement supports longer duration exposures that will be used for optical navigation.",9/7/04
ProjectA - TIM - 1357,L2-PRD-1498 is not linked to L3 SC&FS rqts,4,Requirement L2-PRD-1498 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. Referenced Requirement: [L2-PRD-1498] Allocation: The Spacecraft System shall provide a rate resolution of better than 0.25 microrad/sec per axis in its rate commands.,9/7/04
ProjectA - TIM - 1356,L2-PRD-1395 is not linked to L3 SC&FS rqts,4,Requirement L2-PRD-1395 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. Referenced Requirement: [L2-PRD-1395] Allocation: The Spacecraft System shall provide a resolution of better than 0.005 mrad per axis in its pointing telemetry.,9/7/04
ProjectA - TIM - 1355,L2-PRD-1391 is not linked to L3 SC&FS rqts,4,Requirement L2-PRD-1391 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. Referenced Requirement: [L2-PRD-1391] Allocation: The Spacecraft System shall provide a resolution of better than 0.005 mrad per axis in its pointing commands.,9/7/04
ProjectA - TIM - 1354,L2-PRD-1386 is not linked to L3 SC&FS rqts,4,Requirement L2-PRD-1386 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. Referenced Requirement: [L2-PRD-1386] Allocation: The Spacecraft System shall provide a resolution of better than 0.005 mrad per axis in its pointing telemetry.,9/7/04
ProjectA - TIM - 1353,L2-PRD-1382 is not linked to L3 SC&FS rqts,4,Requirement L2-PRD-1382 is not linked to any requirements in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. Referenced Requirement: [L2-PRD-1382] Allocation: The Spacecraft System shall provide a resolution of better than 0.005 mrad per axis in its pointing commands.,9/7/04
ProjectA - TIM - 1352,ProjectA L3 SC&FSRD Rqt: L3-SFS-2431 specifies inaccurate attitude transient allocation,3,"The attitude transient allocation specified in the requirement L3-SFS-2431 is 0.300 mrad for RWA effects. However, according to the requirements L3-SFS-2052 and L3-SFS-2051, the error allocation for high frequency reaction wheel assembly, data latency, and attitude transient effects can be calculated by sqrt(0.31*0.31-0.13*0.13), which is equal to 0.2814 mrad. The attitude transient allocation should be less than 0.2814 mrad. Referenced Requirements: [L3-SFS-2431] The attitude transient allocations are as follows: RWA effects1 0.300 mrad Solar array stepping 0.100 mrad Momentum unloading 0.900 mrad Data latency (external torques) 0.001 mrad 1) Includes static and dynamic imbalance, zero speed crossing, data latency to drag torque variation, and data latency to output torque ripple, noise and quantization.",9/7/04
ProjectA - TIM - 1351,ProjectA L3 SC&FSRD Rqt: L3-SFS-108 seems inaccurate,3,"In L3-SFS-108 rates are specified. The rate errors might be more appropriate than rates if rate commands are not zeros. Referenced Requirement: [L3-SFS-108] While it is acquiring opnav images, the Flight System shall be able to limit its roll (X), pitch (Y), and yaw (Z) rates to less than 250 microrad/sec (3 sigma) for a period of at least 30 seconds. Note: Optical navigation is the driver for this requirement.",9/7/04
ProjectA - TIM - 1350,ProjectA L3 SC&FSRD Rqt: L3-SFS-2058 specifies an unnecessary RWA error,3,"Requirement L3-SFS-2058 states that the ACS Fast Dynamic allocation shall include Star Tracker high frequency spatial errors, attitude determination errors, and high frequency reaction wheel assembly, data latency, and attitude transient effects. However, during RCS delta-V maneuvers, the ACS will only use the RCS as control effectors. RWA is not in use. Including high frequency reaction wheel assembly seems unnecessary. Referenced Requirement: [L3-SFS-2058] The RCS Pointing Accuracy budget shall be sub-allocated to the ACS, RCS, and Mechanical subsystems, as shown in the following table: TBD TABLE The ACS static/Quasi-Static allocations shall include the Star Tracker internal misalignments. The ACS Slow Dynamic allocation shall include Star Tracker low frequency, velocity aberration, and star catalog errors, as well as attitude control tolerance errors. The ACS Fast Dynamic allocation shall include Star Tracker high frequency spatial errors, attitude determination errors, and high frequency reaction wheel assembly, data latency, and attitude transient effects. The Mechanical allocations shall include all alignment errors and uncertainties affecting the RCS Thruster to Star Tracker alignments and the IRU to Star Tracker alignments.",9/7/04
ProjectA - TIM - 1349,ProjectA L3 SC&FSRD Rqt: L3-SFS-2057 is inaccurate,3,"Requirement L3-SFS-2057 states that the ACS Fast Dynamic allocation shall include Star Tracker high frequency spatial errors, attitude determination errors, and high frequency reaction wheel assembly, data latency, and attitude transient effects. However, during the Engine thrusting, the ACS will only use the Engine as control effectors. RWA is not in use. Including high frequency reaction wheel assembly seems unnecessary. Referenced Requirements: [L3-SFS-2057] The Engine Pointing Accuracy budget shall be sub-allocated to the ACS, Mechanical and Engine subsystems, as shown in the table below. All errors are in mrad and are defined as 3 sigma, per axis, and zero to peak. _______________________________________________________ Subsystem Static/Quasi-Static Slow Dynamic Fast Dynamic _______________________________________________________ ACS n/a 6.00 1.03] Mechanical n/a 6.00 n/a Engine n/a 0.50 n/a _______________________________________________________ Note that there are no Static or Quasi-static allocations shown as they are to be calibrated out by the MDN team The ACS static/Quasi-Static allocations shall include the Star Tracker internal misalignments. The ACS Slow Dynamic allocation shall include Star Tracker low frequency, velocity aberration, and star catalog errors, as well as attitude control tolerance errors. The ACS Fast Dynamic allocation shall include Star Tracker high frequency spatial errors, attitude determination errors, and high frequency reaction wheel assembly, data latency, and attitude transient effects. The Mechanical allocations shall include all alignment errors and uncertainties affecting the Engine thruster interface to Star Tracker alignment and the IRU to Star Tracker alignment. The Engine Slow Dynamic Errors shall include all alignment variations affecting the Engine thruster to Engine thruster interface.",9/7/04
ProjectA - TIM - 1348,ProjectA L3 SC&FSRD Rqt: L3-SFS-2377 is inaccurate,3,"The numbers 0.10 and 14.00 in the requirement L3-SFS-2377 should be n/a according to the explanation under the numbers in the requirement. Referenced Requirement: [L3-SFS-2377] The GRaND Pointing Knowledge budget shall be sub-allocated to the ACS and Mechanical subsystems, as shown in the table below. All errors are in mrad and are defined as 3 sigma, per axis, and zero to peak. ______________________________________________________ Subsystem Static/Quasi-Static Slow Dynamic Fast Dynamic ______________________________________________________ ACS 0.10 0.15 0.13 Mechanical 14.00 1.60 n/a ______________________________________________________ Note that there are no Static or Quasi-static allocations shown as they are to be calibrated out by the VIR team. The ACS static/Quasi-Static allocations shall include the Star Tracker internal misalignments. The ACS Slow Dynamic allocation shall include Star Tracker low frequency, velocity aberration, and star catalog errors. The ACS Fast Dynamic allocation shall include Star Tracker high frequency spatial errors and attitude determination errors. The Mechanical allocations shall include all alignment errors and uncertainties affecting the VIR to Star Tracker alignment and the IRU to Star Tracker alignment.",9/7/04
ProjectA - TIM - 1347,ProjectA L3 SC&FSRD Rqt: L3-SFS-3153 is inconsistent with L2-PRD-1519,3,"Requirement L2-PRD-1519 is linked to the requirement L3-SFS-2153 in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. However, in L3-SFS-2153 rate errors are specified instead of rates in L2-PRD-1519. The rate errors might be more appropriate than rates if rate commands are not zeros. Referenced Requirements: [L2-PRD-1519] Allocation: The Spacecraft System shall be able to limit its yaw (Z) rate to less than 250 microrad/sec (3 sigma, zero-to-peak), for a period of at least 30 seconds. [L3-SFS-2153] During science operations, the Spacecraft System shall be able to limit the Flight System's yaw (Z) rate error to less than 250 microrad/sec (3 sigma) for a period of at least 30 seconds.",9/7/04
ProjectA - TIM - 1346,ProjectA L3 SC&FSRD Rqt: L3-SFS-105 is inconsistent with L2-PRD-1504,3,"Requirement L2-PRD-1504 is linked to the requirements L3-SFS-105 in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. However, in L3-SFS-105 rate errors are specified instead of rates in L2-PRD-1504. The rate errors might be more appropriate than rates if rate commands are not zeros. Referenced Requirements: [L2-PRD-1504] Allocation: During the Vesta and Ceres Science Phases, the Spacecraft System shall be able to limit its roll (X) and pitch (Y) rates to less than 60 microrad/sec per axis (3 sigma, zero-to-peak), over intervals of up to two seconds. [L3-SFS-105] During science operations, the Spacecraft System shall be able to limit the Flight System's roll (X) and pitch (Y) rate errors to less than 60 microrad/sec (3 sigma) for a period of at least 30 seconds.",9/7/04
ProjectA - TIM - 1345,ProjectA L3 SC&FSRD Rqt: L3-SFS-2153 is inconsistent with L2-PRD-720,3,"Requirement L2-PRD-720 is linked to the requirements L3-SFS-2153 and L3-SFS-108 in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. However, in L3-SFS-2153 rate errors are specified instead of rates in L2-PRD-720. The rate errors might be more appropriate than rates if rate commands are not zeros. Referenced Requirements: [L2-PRD-720] Allocation: The Spacecraft System shall be able to limit its yaw (Z) rate to less than 250 microrad/sec (3 sigma, zero-to-peak), over intervals of up to 30 seconds. [L3-SFS-2153] During science operations, the Spacecraft System shall be able to limit the Flight System's yaw (Z) rate error to less than 250 microrad/sec (3 sigma) for a period of at least 30 seconds.",9/7/04
ProjectA - TIM - 1344,ProjectA L3 SC&FSRD Rqt: L3-SFS-105 is inconsistent with L2-PRD-718,3,"Requirement L2-PRD-718 is linked to the requirement L3-SFS-105 in the DOORS module for the Level 3 Spacecraft and Flight System Requirements Document. However, in L3-SFS-105 rate errors are specified in stead of rates in L2-PRD-718. The rate errors might be more appropriate than rates if rate commands are not zeros. Referenced Requirements: [L2-PRD-718] Allocation: During the Vesta and Ceres Science Phases, the Spacecraft System shall be able to limit its roll (X) and pitch (Y) rates to less than 60 microrad/sec per axis (3 sigma, zero-to-peak) for intervals of up to one second. [L3-SFS-105] During science operations, the Spacecraft System shall be able to limit the Flight System's roll (X) and pitch (Y) rate errors to less than 60 microrad/sec (3 sigma) for a period of at least 30 seconds.",9/7/04
ProjectA - TIM - 1343,ProjectA Spacecraft and Flight System Requirement L3-SFS-2096: has no associated L4 traces,3,Requirement L3-SFS-2096 should flow down to the Uplink SRS. The Uplink SRS should state that the uplink data format shall be in accordance with appropriate CCSDS standards. There are no traces to any Level 4 sofware requirements to satisfy requirement L3-SFS-2096. Referenced Requirements: [L3-SFS-2096] The Flight System uplink and downlink data formats shall be in accordance with appropriate Consultative Committee for Space Data Systems (CCSDS) standards. The appropriate CCSDS standards will be identified in the Flight-Ground ICD.,9/7/04
ProjectA - TIM - 1342,ProjectA OBC ACS Requirement ACS-AN001: Does not properly define when the AN software shall send ephemeris data to AC task,3,Requirement ACS-AN001 is incomplete as written. It may be possible that requirement ACS-AN001 should be rewritten to state that the AN software shall send ephemeris data to AC task every 300 seconds AFTER enabled by AC task. Referenced Requirement: [ACS-AN001] The AN software shall send ephemeris data to AC task every 300 seconds enabled by AC task.,9/7/04
ProjectA - TIM - 1341,ProjectA OBC ACS Requirement ACS-AC098: The exact intent of the requirement is ambiguous,3,"The intent of requirement ACS-AC098 is not clear as written. The run-on sentence lends itself to multiple interpretations of the requirement. Requirement ACS-AC098 should be re-written to address the specific intent of the requirement. Referenced Requirement: [ACS-AC098] The software shall use proportional-integral-derivative (PID) controller for Target Pointing, Delta-V except for Thrust Vector Control (TVC), and Science Mode, proportional-derivative (PD) controller for Acquisition/Coarse Sun Pointing Mode, with only the derivative (rate) term for the Rate Nulling submode. The TVC has a separate controller as described in ACS Performance Specification section 3.2.2.3.",9/7/04
ProjectA - TIM - 1340,ProjectA OBC ACS Requirement ACS-AC081: The exact intent of the requirement is ambiguous,3,"The intent of requirement ACS-AC081 is not clear as written. ""…for a specified time exceeds the maximum expected eclEnginee period."" is ambiguous. Requirement ACS-AC081 should be re-written to address the intent of the requirement. Referenced Requirement: [ACS-AC081] The ACS mode shall transition from Acquisition/Coarse Sun Pointing, Sun Pointing Submode to Sun Acquisition Submode when the Y and Z axis attitude errors exceed specified (table) values for a specified time or there is no Sun presence detected from any CSS 'eyes' for a specified time exceeds the maximum expected eclEnginee period.",9/7/04
ProjectA - TIM - 1339,L2-FPR-5 does not appear to be satisfied by the linked requirements (L3-SFS-888 & L3-SFS-951),3,"With the ambiguity of L2-FPR-5, it is difficult to determine if The two traced requirements (L3-SFS-888 & L3-SFS-951) satisfy requirement L2-FPR-5. Referenced Requirements: [L2-FPR-5] The system design shall consider the use of proven reliable interface types where fault issues, etc. have already been addressed, e.g., 1553 data bus or other avionics standards. [L3-SFS-888] The Spacecraft design shall ensure that faults in nonessential circuitry do not propagate to essential functional elements (e.g. failure of a telemetry monitor circuit shall not propagate to the functional element whose performance is being monitored)."" [L3-SFS-951] The Spacecraft solar array input power to the Engine system shall be fused and switched.",9/7/04
ProjectA - TIM - 1338,ProjectA L3 SC&FSRD Rqt: L3-SFS-698 is missing links to L4 C&DH SRS requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. Since L3-SFS-698 is concerned only with command errors, all the requirements that do not directly pertain to commanding in the L4 C&DH SRS should be removed from linkage. Thus, the requirements in categories S2, S3, TG, TC, TO, DS, TCS, TS, HS and MS should be removed from linkage. The requirements in category SC and CS should be retained. The presently linked category SM requirements should also be omitted and be replaced by the ones in section 5.7.9.1 labeled as ""SM General Requirements"". In addition, the requirements in category S1 should be linked which are labeled as ""HSS1 Task"". Referenced Requirements: [L3-SFS-698] The Flight Software shall have the ability to detect and report invalid opcodes and out of range errors for commands.",9/7/04
ProjectA - TIM - 1337,ProjectA L3 SC&FSRD Rqt: L3-SFS-877 is missing links to L4 C&DH SRS requirements,4,"L3-SFS-877 addresses stored sequences. However, according to the traceability matix within L4 OBC C&DH SRS, the L3 SC&FSRD section corresponding to requirement L3-SFS-877 is not traced to any L4 C&DH SRS requirements in Section 5.7.9.2.1 ""Memory Loads"" and Section 5.7.9.2.2, ""Memory Dumps."" L3-SFS-877 should be traced to all applicable L4 C&DH SRS requirements in this section. Referenced Requirements: [L3-SFS-877] The Flight Software shall provide the capability to read out a list of the stored sequence and their sizes.",9/7/04
ProjectA - TIM - 1336,ProjectA L3 SC&FSRD Rqt: L3-SFS-875 is missing links to L4 C&DH SRS requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. L3-SFS-875 should also be linked to section 5.7.9.1 in the L4 C&DH SRS labeled as ""SM General Requirements"". It is in this section where requirements exist that describe the generation of event messages for faulty Software Manager commands. Such command errors include the mishandling of loads of sequences. Referenced Requirements: [L3-SFS-875] If the Flight Software is unable to load a sequence as commanded, the Flight Software shall notify the Ground System of the error.",9/7/04
ProjectA - TIM - 1335,ProjectA L3 SC&FSRD Rqt: L3-SFS-873 does not flow down to the L4 C&DH SRS,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. L3-SFS-873 is not covered in the L4 C&DH SRS. It should be covered in section 5.7.11.1 labeled as ""Telemetry and Statistics Monitoring"". Referenced Requirements: [L3-SFS-873] The Flight Software shall support retention of the current sequence memory content in CEU DRAM following a fault protection initiated reset that does not cycle power.",9/7/04
ProjectA - TIM - 1334,ProjectA L3 SC&FSRD Rqt: L3-SFS-872 is linked to unnecessary requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. Since L3-SFS-872 concerns only data storage capacity, only sections 5.7.9.1, 5.7.9.2.1, 5.7.9.2.2 and 5.7.9.2.3 should be retained in linkage with the L4 C&DH SRS. The other sections in category SM, concerning table operations, should be removed from linkage. Referenced Requirements: [L3-SFS-872] The spacecraft shall provide 4 Mbytes of sequence and data storage capacity in DRAM for MOS use and 200 Kbytes in SRAM for the VMLFC application code.",9/7/04
ProjectA - TIM - 1333,ProjectA L3 SC&FSRD Rqt: L3-SFS-849 has been deleted but still has linked requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. Since L3-SFS-849 has been deleted, all links to it should be removed in the L4 C&DH SRS. Referenced Requirements: [L3-SFS-849] Deleted in FGICD.",9/7/04
ProjectA - TIM - 1331,ProjectA L3 SC&FSRD Rqt: L3-SFS-843 is linked to unnecessary requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. L3-SFS-842 should only be mapped to sections 5.7.9.2.1 and 5.7.9.2.2 in the L4 C&DH SRS. These sections are labeled ""Memory Loads"" and ""Memory Dumps"". The other sections in category SM are irrelevant and should be removed from linkage. In addition, L3-SFS-842 should be linked to section 5.7.8.2 labeled as ""Data Storage"". This section pertains specifically to gathered telemetry data whereas the SM sections pertain to the storage of flight software in general, including telemetry data. Referenced Requirements: [L3-SFS-843] The Flight Software shall allow the transmission of stored data to be paused or aborted by command while in progress.",9/7/04
ProjectA - TIM - 1330,ProjectA L3 SC&FSRD Rqt: L3-SFS-842 does not flow down to the L4 C&DH SRS,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. L3-SFS-842 is not covered in the L4 C&DH SRS. It should be covered in section 5.7.8.1 of the L4 labeled as ""Telemetry Output"". Referenced Requirements: [L3-SFS-842] The Flight Software shall not interrupt downlink of telemetry based on the status of uplink lock.",9/7/04
ProjectA - TIM - 1329,ProjectA L3 SC&FSRD Rqt: L3-SFS-831 is missing links to L4 C&DH SRS requirements,4,"L3-SFS-831 addresses the termination of command sequences. However, according to the traceability matrix within L4 OBC C&DH SRS, the L3 SC&FSRD section corresponding to requirement L3-SFS-831 is not traced to any L4 C&DH SRS requirements in section 5.7.7.1 - Relative Time Sequences. L3-SFS-831 should be traced to all applicable L4 C&DH SRS requirements in this section. Referenced Requirements: [L3-SFS-831] The Flight Software shall be able to terminate a sequence with either a single command or single sequence instruction.",9/7/04
ProjectA - TIM - 1328,ProjectA L3 SC&FSRD Rqt: L3-SFS-830 is missing links to L4 C&DH SRS requirements,4,"L3-SFS-830 addresses the termination of command sequences. However, according to the traceability matrix within L4 OBC C&DH SRS, the L3 SC&FSRD section corresponding to requirement L3-SFS-830 is not traced to any L4 C&DH SRS requirements in section 5.7.7.1 - Relative Time Sequences. L3-SFS-830 should be traced to all applicable L4 C&DH SRS requirements in this section. Referenced Requirements: [L3-SFS-830] The Flight Software shall provide the capability to terminate a sequence regardless of its present state.",9/7/04
ProjectA - TIM - 1327,ProjectA L3 SC&FSRD Rqt: L3-SFS-829 is missing links to L4 C&DH SRS requirements,4,"L3-SFS-829 addresses loading a sequence file and starting execution. However, according to the traceability matrix within L4 OBC C&DH SRS, the L3 SC&FSRD section corresponding to requirement L3-SFS-829 is not traced to any L4 C&DH SRS requirements in section 5.7.7.1 - Relative Time Sequences. L3-SFS-829 should be traced to all applicable L4 C&DH SRS requirements in this section. Referenced Requirements: [L3-SFS-829] The Flight Software shall provide the capability to load a sequence file and start execution of the first function it contains as a single action (called ""autoexecute"").",9/7/04
ProjectA - TIM - 1326,ProjectA L3 SC&FSRD Rqt: L3-SFS-2339 is missing links to L4 C&DH SRS requirements,4,"L3-SFS-2339 addresses modifying or replacing RTSs by the ground. However, according to the traceability matrix within L4 OBC C&DH SRS, the L3 SC&FSRD section corresponding to requirement L3-SFS-2339 is not traced to any L4 C&DH SRS requirements in sections 5.7.9.2.1 - Memory Loads, 5.7.9.2.2 - Memory Dumps, and 5.7.9.2.3 - Memory Copies. L3-SFS-2339 should be traced to all applicable L4 C&DH SRS requirements in these sections. Referenced Requirements: [L3-SFS-2339] The Flight System shall allow the ground to modify or replace RTSs",9/7/04
ProjectA - TIM - 1325,ProjectA L3 SC&FSRD Rqt: L3-SFS-2338 is missing links to L4 C&DH SRS requirements,4,"L3-SFS-2338 addresses providing RTSs. However, according to the traceability matrix within L4 OBC C&DH SRS, the L3 SC&FSRD section corresponding to requirement L3-SFS-2338 is not traced to any L4 C&DH SRS requirements in section 5.7.7.1 - Relative Time Sequences. L3-SFS-2338 should be traced to all applicable L4 C&DH SRS requirements in this section. Referenced Requirements: [L3-SFS-2338] The Flight System shall provide RTSs using Orbital heritage flight software",9/7/04
ProjectA - TIM - 1324,ProjectA L3 SC&FSRD Rqt: L3-SFS-825 is missing links to L4 C&DH SRS requirements,4,"L3-SFS-825 addresses calling onboard blocks. However, according to the traceability matrix within L4 OBC C&DH SRS, the L3 SC&FSRD section corresponding to requirement L3-SFS-825 is not traced to any L4 C&DH SRS requirements in section 5.7.7.1 - Relative Time Sequences. L3-SFS-825 should be traced to all applicable L4 C&DH SRS requirements in this section. Referenced Requirements: [L3-SFS-825] The Flight System shall allow onboard blocks to be called by sequence instruction or command.",9/7/04
ProjectA - TIM - 1323,ProjectA L3 SC&FSRD Rqt: L3-SFS-824 does not flow down to the L4 C&DH SRS,4,"L3-SFS-824 addresses sequence instructions. However, according to the traceability matrix within L4 OBC C&DH SRS, the L3 SC&FSRD section corresponding to requirement L3-SFS-824 is not traced to any L4 C&DH SRS requirements in section 5.7.7.1 - Relative Time Sequences. L3-SFS-824 should be traced to all applicable L4 C&DH SRS requirements in this section. Referenced Requirements: [L3-SFS-824] The Flight System shall provide the capability for at least 64 arguments to be passed to a block within the sequence instruction that calls it.",9/7/04
ProjectA - TIM - 1322,ProjectA L3 SC&FSRD Rqt: L3-SFS-823 is missing links to L4 C&DH SRS requirements,4,"L3-SFS-823 addresses relative-time sequences. However, according to the traceability matrix within L4 OBC C&DH SRS, the L3 SC&FSRD section corresponding to requirement L3-SFS-823 is not traced to any L4 C&DH SRS requirements in section 5.7.7.1 - Relative Time Sequences. L3-SFS-823 should be traced to all applicable L4 C&DH SRS requirements in this section. Referenced Requirements: [L3-SFS-823] The Flight System shall support parameterized, reusable relative-time sequences (i.e., blocks). Blocks may accept parameters (a parameterized block), return a value (a block with a returned value), or both (a parameterized block with a returned value).",9/7/04
ProjectA - TIM - 1320,ProjectA L3 SC&FSRD Rqt: L3-SFS-780 needs requirement links added and some removed,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. Since L3-SFS-780 is concerned only with commands, only the categories SB and SC should be kept in linkage to the L4 C&DH SRS. All other categories should be removed from linkage. SB and SC are labeled ""Software Bus"" and ""Relative Time Sequences"" respectively. Also, the category S1, which is uplink processing, should be linked to L3-SFS-780. Referenced Requirements: [L3-SFS-780] The Flight Software shall be able to process any command in the Command and Telemetry Dictionary",9/7/04
ProjectA - TIM - 1319,ProjectA L3 SC&FSRD Rqt: L3-SFS-777 needs requirement links added and some removed,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. L3-SFS-777, which concerns with the formatting of ground commands, should not be linked with the category CS requirements in the L4 C&DH SRS. These pertain to the checksum verifications of memory locations and do not have a direct connection with L3-SFS-777. Instead, all of the requirements in category S1, which concern uplink processing, should be linked to L3-SFS-777. It should also be linked to SC010. Referenced Requirements: [L3-SFS-777] The Flight Software shall accept Command Link Transfer Units (CLTU) data from the ground in the fromat described in the Command and Telemetry Dictionary.",9/7/04
ProjectA - TIM - 1318,ProjectA L3 SC&FSRD Rqt: L3-SFS-761 is linked to unnecessary requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. The RTS commands are not too directly connected with the startup procedure conditions of L3-SFS-761. Therefore, all requirements in the category SC should be removed from linkage in the C&DH SRS. Referenced Requirements: [L3-SFS-761] The Flight Software shall include system startup procedures that contain default control capabilities sufficient to place the flight software into a safe and deterministic system configuration without any ground intervention following power-up or reset.",9/7/04
ProjectA - TIM - 1317,ProjectA L3 SC&FSRD Rqt: L3-SFS-755 is missing a link to L4 C&DH SRS requirement SB010.,4,Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. L3-SFS-755 should be linked to the L4 C&DH SRS requirement SB010. Referenced Requirements: [L3-SFS-755] The Flight Software shall monitor OBC utilization and telemeter for ground analysis.,9/7/04
ProjectA - TIM - 1316,ProjectA L3 SC&FSRD Rqt: L3-SFS-754 needs requirement links added and some removed,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. L3-SFS-754 is concerned only with the time tagging of telemetry packets, not how these packets are generated, stored or transmitted. Therefore, all L4 C&DH requirements in the categories of TG, TO, DS, TCS, TS HS CS and EV should be removed from linkage. However, in addition to the remaining requirements, TC005, TO008, TO009 TCS101 and TCS102 should be linked also. Referenced Requirements: [L3-SFS-754] General flight software telemetry packets shall be timed tagged to a minimum resolution of 1.0 seconds with respect to spacecraft time.",9/7/04
ProjectA - TIM - 1315,ProjectA L3 SC&FSRD Rqt: L3-SFS-749 is missing several C&DH requirement links,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. The following L4 C&DH SRS requirements should be linked to L3-SFS-749: XB001, XB008 to XB010, XB013, S2004 to S2006, S3009, S3009.1, S3009.2, TG002 to TG004, TG006, TO001, TO006 to TO011, TO013, TO014, DS029, DS001 to DS006, DS008 to DS013, DS026. Referenced Requirements: [L3-SFS-749] The Flight Software shall support data collection and/or storage and transmission of all subsystem and science instrument telemetry.",9/7/04
ProjectA - TIM - 1314,ProjectA L3 SC&FSRD Rqt: L3-SFS-2241 is missing C&DH requirement links,4,Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. The following requirements in the C&DH SRS should be linked to L3-SFS-224: S1001 and S1004. Referenced Requirements: [L3-SFS-2241] The Flight Software shall be capable of accepting uplinked CCSDS command frames at up to 2000 bits per second.,9/7/04
ProjectA - TIM - 1313,ProjectA L3 SC&FSRD Rqt: L3-SFS-747 is missing several C&DH requirement links,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. The following C&DH SRS requirements should be linked to L3-SFS-747: SB001, SB005, SB006, SC013, SC014, SC014.1 to SC014.4, SC020, SM004, SM038, SM039, SM033 and CS007. Referenced Requirements: [L3-SFS-747] The Flight Software shall provide command accept and reject counters for subsystem tasks and interfaces.",9/7/04
ProjectA - TIM - 1312,ProjectA L3 SC&FSRD Rqt: L3-SFS-746 is linked to unnecessary requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. SB003 and SB010 in the OBC C&DH SRS should be removed from linkage to L3-SFS-746. These two requirements, which relate to housekeeping data and CPU utilization, are not directly connected to L3-SFS-746 which involves real-time and stored commands. Referenced Requirements: [L3-SFS-746] The Flight Software shall provide command handling in the form of real-time command processing (distribution to subsystem functions and instruments), and stored capability (relative and absolute).",9/7/04
ProjectA - TIM - 1310,ProjectA L3 SC&FSRD Rqt: L3-SFS-1740 has been deleted but still has linked requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. Since L3-SFS-1740 has been deleted, all requirements to it should be removed from linkage in the OBC C&DH SRS. These are the L4 requirements that are currently linked: DS001 to DS006, DS008 to DS027 and DS029. Referenced Requirements: [L3-SFS-1740] 10.2.4.2 Deleted",9/7/04
ProjectA - TIM - 1309,ProjectA L3 SC&FSRD Rqt: L3-SFS-736 is linked to unnecessary requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. Since L3-SFS-736 is concerned only with memory retention, the requirements that relate to memory dumps, playback and retransmit of data should be removed from linkage in the OBC C&DH SRS. Thus, the following C&DH requirements should be removed from linkage: DS009, DS011 to DS015, DS018, DS019, DS021 to DS023, DS026 and DS027. Referenced Requirements: [L3-SFS-736] The Flight Software shall support DRAM memory retention following an OBC reset (I.e. do not overwrite old data).",9/7/04
ProjectA - TIM - 1308,ProjectA L3 SC&FSRD Rqt: L3-SFS-735 is linked to unnecessary requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. L3-SFS-735 is concerned only with memory storage. All requirements in the OBC C&DH SRS that relate to table operations, memory dump, playback and retransmit of data should be removed from linkage to L3-SFS-735. The requirements that are to be removed from linkage are as follows: DS009, DS011 to DS015, DS018, DS019, DS021 to DS023, DS026, DS027, SM004, SM006, SM007, SM011, SM013 to SM015, SM017, SM019 to SM032, SM036, SM042 to SM046. Referenced Requirements: [L3-SFS-735] The flight software shall manage an 8.0 Gigabit Bulk Memory Space to store information on the spacecraft including engineering, housekeeping, VML data, ephemeris data, thrust tables, and science data from the instruments..",9/7/04
ProjectA - TIM - 1307,ProjectA L3 SC&FSRD Rqt: L3-SFS-734 is linked to unnecessary requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. L3-SFS-734 is concerned only with the storage of data in memory. All requirements relating to memory dumps, table operations, playback and retransmit of data do not have that much of a direct connection to L3-SFS-734. Therefore, these requirements should be removed from linkage in the OBC C&DH SRS. The requirements to be removed are as follows: DS009, DS011 to DS015, DS018, DS019, DS021 to DS023, DS026, DS027, SM006, SM007, SM011, SM013 to SM015, SM017, SM019 to SM024, SM034 to SM036, SM042 to SM046. Referenced Requirements: [L3-SFS-734] The Flight Software FSW shall support memory storage using partitions that are on-orbit configurable.",9/7/04
ProjectA - TIM - 1306,ProjectA L3 SC&FSRD Rqt: L3-SFS-724 is linked to unnecessary requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. All of the RTS related requirements that link to L3-SFS-724 in the OBC C&DH SRS should be removed. These requirements are too general for them to be directly linked to L3-SFS-724. Therefore, the requirements SC010 to SC021 should be removed from linkage. Referenced Requirements: [L3-SFS-724] The Flight Software shall support control the UTC-relative execution time of a Flight System event to within 5 minutes.",9/7/04
ProjectA - TIM - 1305,ProjectA L3 SC&FSRD Rqt: L3-SFS-704 is linked to unnecessary requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. All of the RTS related requirements can be removed from the trace of L3-SFS-704. These requirements are too general for them to have direct linkage with a requirement concerning Critical Inhibits. The following requirements should be removed: SC010 to SC014, SC014.1 to SC014.4, and SC015 to SC021. Referenced Requirements: [L3-SFS-704] The Flight Software shall support inhibits as required by the flight system for all critical events (Category B*), which could result in serious injury, ProjectA Flight System, damage, or in the unscheduled use of safing procedures. The total requirements is two inhibits (single fault tolerant). Inhibits include Reaction Wheels and IRU.",9/7/04
ProjectA - TIM - 1304,ProjectA L3 SC&FSRD Rqt: L3-SFS-703 is linked to unnecessary requirements,4,"Note: The IV&V team generated this issue based on a traceability matrix created by the IV&V team from the traceability matrix provided by the L4 OBC C&DH SRS. L4 section numbers were correlated to the unique requirement identifiers in the SRS. L3 SC&FS RD section numbers were correlated to the corresponding L3 requirement DOORS IDs. All of the RTS related requirements can be removed from the trace of L3-SFS-703. These requirements are too general for them to have direct linkage with a requirement concerning Catastrophic Inhibits. The following requirements should be removed: SC010 to SC014, SC014.1 to SC014.4, and SC015 to SC021. Referenced Requirements: [L3-SFS-703] The Flight Software shall support inhibits as required by the flight system for all catastrophic events (Category A*) which could result in a fatal or disabling injury, total loss of the ProjectA Flight System or major facility damage. The total requirement is three inhibits (dual fault tolerant). Inhibits include Engine, RCS Thrusters, Solar Array Deployment and RF Transmit.",9/7/04
ProjectA - TIM - 1303,ProjectA L3 SC&FSRD Rqt: L3-SFS-697 is linked to unnecessary requirements,4,"According to the traceability matrix within L4 OBC C&DH SRS, the L3 SC&FSRD section corresponding to requirement L3-SFS-697 is traced to the following L4 OBC C&DH SRS sections: 5.7.9.2, Memory Operations 5.7.3, HSS2 TASK 5.7.4, HSS3 TASK 5.7.5, TELEMETRY GATHERER 5.7.6, TIME MANAGEMENT AND DISTRIBUTION 5.7.7.1, Relative Time Sequences 5.7.8.1, Telemetry Output 5.7.8.2, Data Storage 5.7.10.4, Heater On/Off FET Control 5.7.11.1, Telemetry and Statistics Monitoring 5.1.11.2, Health & Safety Task 5.1.11.3, Memory Scrub 5.1.11.4, Checksum 5.7.9.4, Memory Dwell & Diagnostics The L3 requirement should only be traced to those requirements that resulted from its flow-down. Therefore, only the L4 requirement links associated with table loads and table commits should be traced to L3-SFS-697. These requirements are: SM011, SM013, SM014, SM020, SM043, SM044, SM046, SM022, SM023 and SM024. The requirements that concern table dumps and checksums should be deleted from linkage. These requirements are SM015, SM042, SM035, SM017, SM019, SM021, SM021.1, SM021.2 and SM045. The benefits of a requirements traceability matrix depends largely on the quality and completeness of the traces established between each level of requirements. This can generally be defined as the extent to which traces exist between all parent requirements and the directly related flowed down requirement. Tracing entire sections of requirements to one parent requirement lends itself to “over-tracing.” Over-tracing represents a case where requirements may or may not be satisfied by the traced children, but where requirements are traced to several children that are not directly associated with the accomplishment of the functionality levied by the parent. This approach results in non-concise traceability, which compromises the ability a traceability matrix to support verification of requirements flow-down from design through test. Referenced Requirements: [L3-SFS-697] The Flight Software shall allow on-orbit modifications to operational heater set points by table commands.",9/7/04
ProjectA - TIM - 1302,ProjectA L3 SC&FSRD Rqt: L3-SFS-696 is linked to unnecessary requirements,4,"According to the traceability matrix within L4 OBC C&DH SRS, the L3 SC&FSRD section corresponding to requirement L3-SFS-696 is traced L4 OBC C&DH SRS Section 5.7.9.3 “System Table Operations,” which comprises approximate 20 requirements. The L3 requirement should only be traced to those requirements that resulted from its flow-down. Therefore, only the L4 requirement links associated with table loads and table commits should be traced to L3-SFS-696. These requirements are: SM011, SM013, SM014, SM020, SM043, SM044, SM046, SM022, SM023 and SM024. The requirements that are concerned with table dumps and checksums should be deleted from linkage. These requirements are SM015, SM042, SM035, SM017, SM019, SM021, SM021.1, SM021.2, and SM045. The benefits of a requirements traceability matrix depends largely on the quality and completeness of the traces established between each level of requirements. This can generally be defined as the extent to which traces exist between all parent requirements and the directly related flowed down requirement. Tracing entire sections of requirements to one parent requirement lends itself to “over-tracing.” Over-tracing represents a case where requirements may or may not be satisfied by the traced children, but where requirements are traced to several children that are not directly associated with the accomplishment of the functionality levied by the parent. This approach results in non-concise traceability, which compromises the ability a traceability matrix to support verification of requirements flow-down from design through test. Referenced Requirements: [L3-SFS-696] The Flight Software shall allow on-orbit modifications to all primary function parameters used by ACS, including gains, inertias, timers, and limits.",9/7/04
ProjectA - TIM - 1301,ProjectA L3 SC&FSRD Rqt: L3-SFS-876 is missing a link to L2-FGI-287,4,"L3-SFS-876 was previously linked with L2-FGI-289 which has been deleted. L3-SFS-876 should now be linked with to L2-FGI-287. Referenced Requirements: [L3-SFS-876] Sequences and blocks shall be detectable from the ground. This may be via overwriting the CRC information with zeroes. [L2-FGI-289] DELETED. (combined with 3.1.7.2-4) [L2-FGI-287] The spacecraft shall provide capabilities to allow the MOS to load sequences, delete sequences and request sequence buffer directory listings. Sequence deletions may be via overwriting the CRC information with zeroes. Directory listing may be done via memory dumps.",9/7/04
ProjectA - TIM - 1300,ProjectA L3 SC&FSRD Rqt: L3-SFS-861functionality is no longer addressed by L2 requirements,4,"The link between L3-SFS-861 and L2-FGI-262 is no longer valid, since the parent is now marked ""DELTED."" Therefore, recommend evaluating whether L3-SFS-861 is still valid. If so, either L2-FGI-262 should be reinstated or the child should be mapped to another parent. Otherwise, L3-SFS-861 should also be deleted. Referenced Requirements: [L3-SFS-861] The Ground Segment shall provide ephemeris tables that internally identify the object, central-body, and time ranges for which, and over which, the ephemeris data pertains. [L2-FGI-262] DELETED.",9/7/04
ProjectA - TIM - 1299,ProjectA L3 SC&FSRD Rqt: L3-SFS-840 is missing a link to L2-FGI-784,4,"The link between L3-SFS-840 and L2-FGI-218 is no longer valid, since the parent is now marked "" MOVED TO 3.1.2.3."" L3-SFS-840 should now be linked to L2-FGI-784. Referenced Requirements: [L3-SFS-840] The Flight Software, by MOS command, shall be capable of retransmitting a specified stored VCDU. [L2-FGI-784] The spacecraft, by MOS command, shall be capable of retransmitting one or more specified VCDUs. [L2-FGI-218] MOVED TO 3.1.2.3",9/7/04
ProjectA - TIM - 1298,ProjectA L3 SC&FSRD Rqt: L3-SFS-834 is missing a link to L2-FGI-784,4,"The link between L3-SFS-834 and L2-FGI-182 is no longer valid, since the parent is now marked ""DELETED."" L3-SFS-834 should now be linked to L2-FGI-784 which states, ""The spacecraft, by MOS command, shall be capable of retransmitting one or more specified VCDUs"". Referenced Requirements: [L3-SFS-834] The spacecraft shall provide frame retransmission via commands specifying VR and sequence numbers. [L2-FGI-784] The spacecraft, by MOS command, shall be capable of retransmitting one or more specified VCDUs. [L2-FGI-182] DELETED",9/7/04
ProjectA - TIM - 1297,ProjectA L3 SC&FSRD Rqt: L3-SFS-874 is Inconsistent with L2-FGI-287,4,"L3-SFS-874 is inaccurately being flowed down from L2-FGI-287. L3-SFS-874 implies that both sequence deletions and directory listings are accomplished by a memory dump. However, L2-FGI-287 indicates that only the directory listing is done with a memory dump - sequence deletions are performed by overwriting the CRC information with zeroes. These specifications should be made consistent. Also, the phrase ""sequence buffer"" should be inserted before the phrase ""directory listings"" in L3-SFS-874, (i.e. as it appears in L2-FGI-287) such that the child is at least as concise as the parent Referenced Requirements: [L3-SFS-874] The Flight Software shall provide capabilities to allow the MOS to load and delete sequences and request directory listings, all via memory dump. [L2-FGI-287] The spacecraft shall provide capabilities to allow the MOS to load sequences, delete sequences and request sequence buffer directory listings. Sequence deletions may be via overwriting the CRC information with zeroes. Directory listing may be done via memory dumps.",9/7/04
ProjectA - TIM - 1296,ProjectA L2 FGICD Rqt: L2-FGI-349 functionality is missing in L3 SC&FSRD,4,"L2-FGI-349 has not been flowed down to L3 Spacecraft & Flight Systems Requirements Document (SC&FS RD). Recommend inserting requirement(s) to address this requirement in SC&FS RD Section 10.9 ""Time References"". Referenced Requirement: [L2-FGI-349] 8. The spacecraft shall format packet time tags using the unsegmented time code format in the CCSDS Time Code Formats standard listed in section 1.3.1 of this FGICD.",9/7/04
ProjectA - TIM - 1295,ProjectA L2 FGICD Rqt: L2-FGI-778 is missing a link to L3-SFS-2339,4,"L2-FGI-778 is the same requirement as L3-SFS-2339. Consequently, a link should be added between these two requirements. Also, L3-SFS-2339 is currently linked to L2-FGI-531 which has been deleted and; therefore, the link should be removed. Referenced Requirements: [L2-FGI-778] The Flight System shall allow the ground to modify or replace RTSs. [L3-SFS-2339] The Flight System shall allow the ground to modify or replace RTSs",9/7/04
ProjectA - TIM - 1294,ProjectA L2 FGICD Rqt: L2-FGI-777 is missing a link to L3-SFS-2338,4,"L2-FGI-777 is at least partially addressed by requirement L3-SFS-2338. Consequently, this child should be linked to L2-FGI-777. Also, recommend assessing whether additional links are necessary to satisfy this parent. Referenced Requirements: [L2-FGI-777] The Flight System shall provide RTSs for fault protection, fault recovery, and launch/initial-acquisition activities. [L3-SFS-2338] The Flight Software shall provide RTSs using Orbital heritage flight software.",9/7/04
ProjectA - TIM - 1293,ProjectA L2 FGICD Rqt: Intent of L2-FGI-146 unclear with respect to L2-FGI-145,4,"The text of L2-FGI-146 is included within L2-FGI-145; however, the latter excludes the termination of the master thread. It's unclear whether the intent of L2-FGI-146 is to terminate all threads of execution including the master sequence or whether L2-FGI-145 simply represents a more complete requirement than L2-FGI-146, making L2-FGI-146 redundant to L2-FGI-145. Recommend clarifying the intent of L2-FGI-146 if it is referencing a command that is mutually excusive of the command referenced by L2-FGI-145. Otherwise, L2-FGI-146 should be deleted. Referenced Requirements: [L2-FGI-145] The spacecraft shall terminate all threads of VML execution except the master sequence thread upon command. The Master sequence is identified to the spacecraft via a global variable set by the ground. [L2-FGI-146] The spacecraft shall terminate all threads of VML execution upon command.",9/7/04
ProjectA - TIM - 1292,ProjectA L3 SC&FSRD Rqt: L3-SFS-810 seems inconsistent with L3-SFS-809,4,"The text of L3-SFS-810 is included within L3-SFS-809; however, the latter excludes the termination of the master thread. It's unclear whether the intent of L3-SFS-810 is to terminate all threads of execution including the master sequence or whether L3-SFS-809 simply represents a more complete requirement than L3-SFS-810, making L3-SFS-810 redundant to L3-SFS-809. Recommend clarifying the intent of L3-SFS-810 if it is referencing a command that is mutually exclusive of the command referenced by L3-SFS-809. Otherwise, L3-SFS-810 should be deleted. Referenced Requirements: [L3-SFS-809] The Flight Software shall terminate all threads of execution except the master sequence thread upon command. The Master sequence is identified to the Flight Software via a global variable set by the ground. [L3-SFS-810] The Flight Software shall terminate all threads of execution upon command.",9/7/04
ProjectA - TIM - 1291,ProjectA L3 SC&FSRD Rqt: L3-SFS-798 is Inconsistent with the deletion of L2-FGI-133,4,"Currently L2-FGI-133 is the only parent linked to L3-SFS-798; however, this L2-FGI-133 is marked as 'DELETED.' If this capability is no longer necessary, then L3-SFS-798 should also be deleted. Otherwise, either the deleted FGICD requirement should be reinstated or a new L2 requirement that flows down to L3-SFS-798 should be created and traced accordingly. Referenced Requirements: [L3-SFS-798] The Flight Software shall record the total number of uncorrectable uplink handling errors detected in the uplink telemetry [L2-FGI-133] DELETED",9/7/04
ProjectA - TIM - 1290,ProjectA L3 SC&FSRD Rqt: L3-SFS-797 is Inconsistent with the deletion of L2-FGI-132,4,"Currently L2-FGI-132 is the only parent linked to L3-SFS-797; however, this L2-FGI-132 is marked as 'DELETED.' If this capability is no longer necessary, then L3-SFS-797 should also be deleted. Otherwise, either the deleted FGICD requirement should be reinstated or a new L2 requirement that flows down to L3-SFS-797 should be created and traced accordingly. Referenced Requirements: [L3-SFS-797] The Flight Software shall preserve the contents of the command history log through a Power On Reset. [L2-FGI-132] DELETED",9/7/04
ProjectA - TIM - 1289,ProjectA L3 SC&FSRD Rqt: L3-SFS-796 is conveying inaccurate information on the most recently executed commands,4,"In L3-SFS-796, the phrase ""40 Mbits of recently executed commands"" should be changed to: ""40 Mbits of the most recently executed commands"". The statement is conveying inaccurate information without this modification. Referenced Requirements: [L3-SFS-796] The command history log shall store up to 40 Mbits of recently executed commands.",9/7/04
ProjectA - TIM - 1288,ProjectA L2 PRD Rqt: L2-PRD-831 requirements trace is Incomplete.,4,"Currently, L2-PRD-831 is not linked to the Level 3 SC&FS RD DOORS module. L3-SFS-205 and L3-SFS-841 both address the flight systems capability to remain receptive to uplinked commands/data at all times during mission, which is directly applicability to L2-PRD-831. Therefore, links should be added between the parent requirement, L2-PRD-831 and the two children requirements, L3-SFS-205 and L3-SFS-841. Referenced Requirements: [L2-PRD-831] Allocation: The Spacecraft System shall remain receptive to commands at all times during the mission. [L3-SFS-205] The Spacecraft shall be configured to receive command data at all times. [L3-SFS-841] The Flight Software shall be configure to receive uplink data at any time following processor initialization",9/7/04
ProjectA - TIM - 1287,ProjectA L3 SC&FSRD Rqt: L3-SFS-732 is Inconsistent with L2-FGI-312,4,"The FGICD requirement L2-FGI-312, from which L3-SFS-732 flows down, does not specify any Flight Software functions. L2-FGI-312 is stated thus: "" MOS shall operate the Reaction Control Subsystem (RCS) as required for the Flight System to complete the baseline mission"". Therefore, L3-SFS-732 should be removed from the Flight Software section and be inserted in section 6 which is the RCS section. The ""Flight Software"" phrase in the requirement should be changed to match the FGICD. Referenced Requirements: [L3-SFS-732] The Flight Software shall support operation of the Reaction Control Subsystem (RCS) as required for the Flight System to complete the baseline mission.",9/7/04
ProjectA - TIM - 1286,ProjectA L3 SC&FSRD Rqt: L3-SFS-724 is Inconsistent with L2-PRD-756.,4,"The phrase ""during cruise phases"" should be inserted here in L3-SFS-724 as it is in L2-PRD-756. Also, the word ""support"" should be deleted. Referenced Requirement: [L3-SFS-724] The Flight Software shall support control the UTC-relative execution time of a Flight System event to within 5 minutes.",9/7/04
ProjectA - TIM - 1285,ProjectA L3 SC&FSRD Rqt: L3-SFS-705 is Inconsistent with L2-PRD-215.,4,"Currently, L3-SFS-705 is linked to L2-PRD-215. L2-PRD-215 requires a pointing knowledge accuracy of 1 mrad per axis; whereas, L3-SFS-705 only provides a pointing knowledge accuracy of 1.5 mrad per axis making the parent L2 requirement stricter than the child L3 requirement. Recommend determining the actual pointing knowledge accuracy required to accomplish mission and updating both requirements accordingly. Referenced Requirements: [L3-SFS-705] The Flight Software shall include the following ancillary engineering data in its telemetry: Flight System pointing knowledge, accurate to 1.5 mrad (3 sigma), recorded at least once per second [L2-PRD-215] Allocation: The Flight System shall include the following ancillary engineering data in its telemetry: Spacecraft pointing knowledge (i.e. the estimated orientation of the spacecraft reference frame), accurate to 1 mrad per axis (3 sigma, zero-to-peak), recorded at least once per second",9/7/04
ProjectA - TIM - 1284,ProjectA L2 PRD Rqt: L2-PRD-565 is missing flowdown to the L3 SC&FSRD,4,"L2-PRD-565 has not been flowed down to the L3 SC&FS RD. Recommend adding requirement(s) to L3 SC&FS RD Section 10.11, ""Onboard Ephemeris"" to address this functionality. Referenced Requirement: [L2-PRD-565] Allocation: The Spacecraft System shall be able to accept thrust profiles that are uplinked outside of the backbone sequence.",9/7/04
ProjectA - TIM - 1279,ProjectA Spacecraft and Flight System Req L3-SFS-94: has no associated L4 traces,3,"ProjectA Spacecraft and Flight System Req L3-SFS-94: has no accociated L4 traces. Requirement L3-SFS-94 states: ""The spacecraft shall provide a capability to derive the spacecraft attitude quaternion during applicable mission phases.""",8/27/04
ProjectA - TIM - 1278,L3-SFS-2427: Incomplete attitude determination accuracy requirement,4,"In Requirement L3-SFS-2427, the attitude determination error for target pointing and delta V modes without IRUs is specified. However, the attitude determination error for target pointing with IRUs is not specified. Section 3.1.3.3 Target Pointing Mode in the ACS Performance Spec (S912-PF4610 Revision B) indicates that the IRUs are used in target pointing mode to provide the attitude and rate reference. A requirement should be added to specify the attitude determination error for target pointing with IRUs. Referenced Requirement: [L3-SFS-2427] The attitude determination error allocations are as follows: science mode, RWA, 2 IRUs: 0.100 mrad target pointing mode, RWA, no IRUs: 0.250 mrad target pointing mode, RCS, no IRUs: 0.450 mrad delta V mode, no IRUs: 0.450 mrad",8/26/04
ProjectA - TIM - 1277,Unclear attitude determination accuracy requirement,4,"The Requirement L3-SFS-2427 specifies attitude determination performance for different modes. L3-SFS-2425 specifies high frequency spatial errors for Star Tracker. For science mode, the attitude determination error 0.100 mrad and Star Tracker high frequency spatial error 0.075 mrad meet the 0.13 mrad Pointing Knowledge budget allocation for the ACS specified in the requirements L3-SFS-1984, L3-SFS-2054, and L3-SFS-2377. However, it is unclear how the attitude determination error 0.450 mrad for target pointing and delta V modes is derived. Referenced Requirements: [L3-SFS-2427] The attitude determination error allocations are as follows: science mode, RWA, 2 IRUs: 0.100 mrad target pointing mode, RWA, no IRUs: 0.250 mrad target pointing mode, RCS, no IRUs: 0.450 mrad delta V mode, no IRUs: 0.450 mrad [L3-SFS-2425] The star tracker error allocations are as follows: internal alignment knowledge(1): 0.100 mrad slow dynamic(2): 0.150 mrad high-frequency spatial(3): 0.075 mrad 1) Includes error in measuring the boresight alignment relative to the unit alignment cube as well as any shifts in alignment that occur during S/C integration and test, launch, and post-launch operations. 2) Includes low-frequency, velocity aberration correction, and star catalog errors 3) Includes centroiding errors [L3-SFS-2054] The VIR Pointing Knowledge budget shall be sub-allocated to the ACS and Mechanical subsystems, as shown in the table below. All errors are in mrad and are defined as 3 sigma, per axis, and zero to peak. Subsystem Static/Quasi-Static Slow Dynamic Fast Dynamic ACS n/a 0.15 0.13 Mechanical n/a 0.50 n/a Note that there are no Static or Quasi-static allocations shown as they are to be calibrated out by the VIR team. The ACS static/Quasi-Static allocations shall include the Star Tracker internal misalignments. The ACS Slow Dynamic allocation shall include Star Tracker low frequency, velocity aberration, and star catalog errors. The ACS Fast Dynamic allocation shall include Star Tracker high frequency spatial errors and attitude determination errors. The Mechanical allocations shall include all alignment errors and uncertainties affecting the VIR to Star Tracker alignment and the IRU to Star Tracker alignment.",8/26/04
ProjectA - TIM - 1276,Unclear attitude control tolerance requirement,4,"The attitude controller tolerance specified in the requirement L3-SFS-2429 is 0.200 mrad for science mode and target pointing mode with RWA. The number can be derived by using the pointing accuracy 0.25 mrad in the requirement L3-SFS-2052 and the pointing knowledge 0.15 mrad in the requirement L3-SFS-2051. However, it is unclear how the attitude controller tolerance 1.780 mrad for target pointing mode with RCS is derived. Referenced Requirements: [L3-SFS-2429] The attitude controller tolerance(1) allocations are as follows: science mode: 0.200 mrad target pointing mode, RWA: 0.200 mrad target pointing mode, RCS: 1.780 mrad delta V mode - X' and Y'(2): 6.000 mrad delta V mode - Z'(3): 94.250 mrad 1) Does not include attitude determination or momentum unloads. 2) X' and Y' are the axes perpendicular to the thrust vector. 3) Z' is the axis parallel to the thrust vector. [L3-SFS-2051] The Framing Camera Pointing Knowledge budget shall be sub-allocated to the ACS and Mechanical subsystems, as shown in the table below. All errors are in mrad and are defined as 3 sigma, per axis, and zero to peak. Subsystem Static/Quasi-Static Slow Dynamic Fast Dynamic ACS n/a 0.15 0.13 Mechanical n/a 0.35 n/a Note that there are no Static or Quasi-static allocations shown as they are to be calibrated out by the FC team. The ACS static/Quasi-Static allocations shall include the Star Tracker internal misalignments. The ACS Slow Dynamic allocation shall include Star Tracker low frequency, velocity aberration, and star catalog errors. The ACS Fast Dynamic allocation shall include Star Tracker high frequency spatial errors and attitude determination errors. The Mechanical allocations shall include all alignment errors and uncertainties affecting the Framing Camera to Star Tracker alignment and the IRU to Star Tracker alignment. [L3-SFS-2052] The Framing Camera Pointing Accuracy budget shall be sub-allocated to the ACS and Mechanical subsystems, as shown in the table below. All errors are in mrad and are defined as 3 sigma, per axis, and zero to peak. Subsystem Static/Quasi-Static Slow Dynamic Fast Dynamic ACS 0.10 0.25 0.34 Mechanical 1.48 0.35 n/a The ACS Static/Quasi-Static allocations shall include the Star Tracker internal misalignments. The ACS Slow Dynamic allocation shall include Star Tracker low frequency, velocity aberration, and star catalog errors, as well as attitude control tolerance errors. The ACS Fast Dynamic allocation shall include Star Tracker high frequency spatial errors, attitude determination errors, and high frequency reaction wheel assembly, data latency, and attitude transient effects. The Mechanical allocations shall include all alignment errors and uncertainties affecting the Framing Camera to Star Tracker alignment and the IRU to Star Tracker alignment.",8/26/04
ProjectA - TIM - 1275,Inconsistent attitude control tolerance requirement,4,"The attitude controller tolerance specified in the requirement L3-SFS-2429 is 6.000 mrad for X and Y in delta V mode and 94.25 mrad for Z in delta V mode. However, the Engine pointing accuracy requirement in L3-SFS-2057 states that the ACS slow dynamic allocation is 6.00 mrad per axis, which includes Star Tracker low frequency, velocity aberration, and star catalog errors, as well as attitude control tolerance errors. Therefore, the attitude controller tolerance for the delta V mode specified in the requirement L3-SFS-2429 should be less than 6.000 mrad for X, Y, and Z axes. Referenced Requirements: [L3-SFS-2429] The attitude controller tolerance (1) allocations are as follows: science mode: 0.200 mrad target pointing mode, RWA: 0.200 mrad target pointing mode, RCS: 1.780 mrad delta V mode - X' and Y'(2): 6.000 mrad delta V mode - Z'(3): 94.250 mrad 1) Does not include attitude determination or momentum unloads. 2) X' and Y' are the axes perpendicular to the thrust vector. 3) Z' is the axis parallel to the thrust vector. [L3-SFS-2057] The Engine Pointing Accuracy budget shall be sub-allocated to the ACS, Mechanical and Engine subsystems, as shown in the table below. All errors are in mrad and are defined as 3 sigma, per axis, and zero to peak. Subsystem Static/Quasi-Static Slow Dynamic Fast Dynamic ACS n/a 6.00 1.62 Mechanical n/a 6.00 n/a Engine n/a 0.50 n/a Note that there are no Static or Quasi-static allocations shown as they are to be calibrated out by the MDN team The ACS static/Quasi-Static allocations shall include the Star Tracker internal misalignments. The ACS Slow Dynamic allocation shall include Star Tracker low frequency, velocity aberration, and star catalog errors, as well as attitude control tolerance errors. The ACS Fast Dynamic allocation shall include Star Tracker high frequency spatial errors, attitude determination errors, and high frequency reaction wheel assembly, data latency, and attitude transient effects. The Mechanical allocations shall include all alignment errors and uncertainties affecting the Engine thruster interface to Star Tracker alignment and the IRU to Star Tracker alignment. The Engine Slow Dynamic Errors shall include all alignment variations affecting the Engine thruster to Engine thruster interface.",8/26/04
ProjectA - TIM - 1274,Invalid L3 SCFSRD Paragraph numbers used in ACS SRS RTM Appendix A,4,"The ACS SRS Requirements Traceability Matrix in Appendix A contains invalid paragraph numbers from the L3 Spacecraft and Flight Systems Requirement Document (SCFSRD). Specifically, the following paragraph numbers listed in the L3 Req # column of the ACS SRS Appendix A are inconsistent with the L3 SCFSRD currently in the DOORS database: 10.11.1.1 Spacecraft Position 10.11.1.2 Solar System Bodies 10.11.1.3 Engine Thrust Vector 10.11.1.4 Target Vector 10.11.2 Ephemeris Uplink 10.11.3 Reference Frame 10.11.4 Reference Epoch 10.11.5 Spacecraft State 10.11.6 Solar System Body State 10.11.7 Ephemeris Tables 10.11.8 Ephemeris Table Contents 10.11.9 Uplink of Ephemeris Information (PRD 9.1.6.3) 10.11.10 Pointing to Stored Body Ephemeris (PRD 9.1.6.4) 10.11.11 Engine Thruster Pointing Commands The use of invalid paragraph numbers affects the accuracy of the ACS SRS RTM, because paragraph numbers 10.11.2 - 10.11.11 are valid paragraphs in the current SCFSRD; however the requirements associated with these paragraph numbers are not the same as what is shown in the ACS SRS RTM.",8/6/04
ProjectA - TIM - 1273,Inconsistent slew capability requirement,4,"Inconsistent slew capability requirements for use of RWAs. The slew capability requirement in the ACS Performance Spec (S912-PF4610 Revision B) on page 29 states that an average slew rate of 5.24 milli-rads / second shall be achievable using thrusters. However, the slew capability requirement in L3-SFS-2116 in the Level 3 Spacecraft and Flight System Requirements (SCFSRD, S912-Gr 3400, JPL-D-25870), (6/7/04 DOORS version) states that the “ACS shall be able to rotate about any axis at an average rate of up to 0.3 deg/sec. The ACS shall be able to achieve this using the RWAs or the RCS.” The use of RWAs is not included in the ACS Performance Spec.",8/5/04
ProjectA - TIM - 1272,Inconsistent attitude control accuracy requirement,4,"The attitude control accuracy for RCS, TVC, and momentum control as specified in the ACS Performance Specification does not match the number provided in the Level 3 Spacecraft and Flight System Requirements (SCFSRD, S912-Gr 3400, JPL-D-25870), (7/15/04 DOORS version). The attitude control accuracy requirement for RCS Control in the ACS Performance Spec (S912-PF4610 Revision B) on page 26 states that in Delta-V mode, RCS submode, the thruster controller shall have a control accuracy of 6.0 milli-rads 3-sigma per lateral axis and 100 milli-rads 3-sigma about the thrust axis. The attitude control accuracy requirement for TVC in the ACS Performance Spec (S912-PF4610 Revision B) on page 27 states that during Engine burns control accuracy about the thrust axis using either RWAs or thrusters as the actuators shall be 100 milli-rads 3-sigma. The attitude control accuracy requirement for Momentum Control in the ACS Performance Spec (S912-PF4610 Revision B) on page 28 states that while unloading momentum the ACS shall maintain a pointing accuracy of 1.75 milli-rads 3-sigma per axis while in Target Pointing mode, and 100 milli-rads 3-sigma about the thrust axis while in Delta-V mode, Engine submode. However, the attitude control tolerance requirement L3-SFS-2429 in the SCFSRD shows that the control tolerance about the thrust axis is 94.25 mrad. 100 mrad should be replaced by a number less than or equal to 94.25 mrad.",8/5/04
ProjectA - TIM - 1271,Inconsistent attitude determination accuracy requirement,4,"The attitude determination accuracy does not match the number in the Level 3 Spacecraft and Flight System Requirements (SCFSRD, S912-Gr 3400, JPL-D-25870), (7/15/04 DOORS version). The attitude determination accuracy requirement in the ACS Performance Spec (S912-PF4610 Revision B) on page 22 states that the attitude determination accuracy, i.e., the algorithmic performance, shall be 0.10 milli-rad 3-sigma per axis when gyros are available and 0.75 milli-rad 3-sigma per axis when gyros are not available. However, the attitude determination performance requirement L3-SFS-2427 in the SCFSRD shows that the error is 0.450 mrad for target pointing and delta V modes without IRUs. The 0.75 mrad specification should be replaced by a number less than or equal to 0.45 mrad.",8/5/04
ProjectA - TIM - 1270,UPL HLP Command Set Not Consistently Defined,3,"The HLP command definitions in the UPL Card SRS, Section OV4-UPC007, do not accord with those identified in the FP Performance Specification, Tables 4-1 and 4-2. For example both references identify the ACE Safehold On HLP command but the SRS contains commands (e.g., ACE LVPS Power Control A-On / B-Off) that are not found in the FP Performance Specification. It is unclear which document contains the correct and complete set of HLP commands.",7/12/04
ProjectA - TIM - 1269,ProjectA OBC SuROM Req SU017: The exact intent of the requirement is ambiguous,4,"ProjectA OBC SuROM Flight Firmware Requirements Specification - Requirement SU017 states: ""The Flight Software exception log shall fill each entry until it reaches the last entry (23); all subsequent entries are written in the same location."" It is not clear as to what is meant by "" all subsequent entries are written in the same location"". IV&V suggests providing details of the statement ""subsequent entries are written in the same location"". The exact intent of this requirement is ambiguous in that it is not clear whether or not all entries in the exception log are overwritten after the last entry is filled or just the last entry is overwritten.",7/7/04
ProjectA - TIM - 1268,ProjectA OBC SuROM Req SU022: The various Boot Descriptor copies are not defined.,4,"ProjectA OBC SuROM Flight Firmware Requirements Specification - Requirement SU022 states: ""Flight Software Startup shall continuously cycle through the various Boot Descriptor copies until a successful boot is accomplished."" Requirement SU022 is incomplete. The term ""various Boot Descriptor"" does not provide enough detail. All of the Boot Descriptor copies should be identified.",7/7/04
ProjectA - TIM - 1267,ProjectA OBC SuROM Req SU004: What Flight Software Startup shall load is not defined.,4,"ProjectA OBC SuROM Flight Firmware Requirements Specification - Requirement SU004 states: ""Depending on the value of externally driven discrete inputs, Flight Software Startup shall load the Boot Loader, Operating System, and/or Flight Software images into the SRAM."" The ""and/or"" adds a level of confusion to the requirement. There can be multiple interpretations. It is not clear if the Boot Loader, Operating System, and Flight Software images can all be loaded at the same time, independently, or in what combination. Requirement SU004 should be rewritten to state what combinations are acceptable to be loaded into the SRAM.",7/7/04
ProjectA - TIM - 1261,C&DH SRS Rqt: OS017 missing OS-specific responsibility relative to the FSW exception log,4,Issue: OS017 and SU017 are the same requirement. OS017 should specify the OS-specific responsibility relative to the Flight Software exception log. Referenced Requirements: Referenced C&DH SRS Requirement: [OS017] The Flight Software exception log shall fill each entry until it reaches the last entry (23); all subsequent entries are written in the same location. SuROM SRS Requirement: [SU017] The Flight Software exception log shall fill each entry until it reaches the last entry (23); all subsequent entries are written in the same location.,7/7/04
ProjectA - TIM - 1259,C&DH SRS Rqt: OS013 and its subrequirements missing OS-specific responsibility,4,"Issue: OS013 and its sub-requirements OS013.1, OS013.2, OS013.3, OS013.4, OS013.5, OS013.6, OS013.7, OS013.8, OS013.9, and OS013.10 were the same as SU013 and its sub-requirements in Rev. A of the respective SRSs. SU013 and its sub-requirements have been updated, while OS013 remains unchanged in Rev. B of the respective SRSs. The updates to SU013 and its sub-requirements imply that SuROM is responsible for trapping processor interrupts and making an exception log entry, but is no longer responsible for providing any additional response. In addition to providing the same functionality as SuROM, OS013 and its sub-requirements still indicate that the OS is responsible for responding to each type of interrupt with a specific action. The specific responsibilities of the OS FSW tasks should be defined by OS013 and its subrequirements for the redundant aspects of the previously referenced set of requirements in order to clearly delineate the responsibilities for each task. If this detail is provided elsewhere, OS013 should be updated with the appropriate reference. Referenced Requirements: C&DH SRS Requirements: [OS013] Flight Software shall trap processor interrupts, make an Exception Log entry, and respond according to the following Exception/Required Action Tables: [OS013.1] System Reset Interrupt COLD_RESTART [OS013.2] Machine Check Interrupt Suspend Offending Task [OS013.3] Data Storage Interrupt Suspend Offending Task [OS013.4] Instruction Storage Interrupt Suspend Offending Task [OS013.5] External Interrupt INTERRUPT SERVICE [OS013.6] Alignment Interrupt Suspend Offending Task [OS013.7] Program Interrupt Suspend Offending Task [OS013.8] Floating-Point Unavailable Intrpt Suspend Offending Task [OS013.9] Supervisor Call Interrupt Restart as Cold Boot [OS013.10] Floating-Point Exception Intrpt Currently Masked? SuROM SRS Requirements: [SU013] Flight Software shall trap the processor interrupts and make an Exception Log entry: [SU013.1] System Reset Interrupt [SU013.2] Machine Check Interrupt [SU013.3] Data Storage Interrupt [SU013.4] Instruction Storage Interrupt [SU013.5] External Interrupt [SU013.6] Alignment Interrupt [SU013.7] Program Interrupt [SU013.8] Floating-Point Unavailable Interrupt [SU013.9] Supervisor Call Interrupt [SU013.10] Floating-Point Exception Interrupt Currently Masked",7/7/04
ProjectA - TIM - 1257,C&DH SRS Rqt: OS006 missing maximum number of FSW images,4,"Issue: OS006 seems incomplete as written. The requirement implies that multiple copies of the flight software image exist, but the SRS never indicates the allowable number of images. Note: OS006 is similar to SU006. Referenced C&DH SRS Requirement: [OS006] For the Operating System, Flight Software startup procedures shall select for loading, the first copy of this image that completes verification without error.",7/7/04
ProjectA - TIM - 1256,ProjectA OBC C&DH Req HS001: The number of times the health monitoring function shall request data is not defined.,4,"ProjectA OBC C&DH Flight Software Requirements Specification - Requirement HS001 states: ""Flight Software associated with the software health monitoring function shall periodically request and collect software execution status and housekeeping data from a predetermined list of Flight Software components."" Requirement HS001 is incomplete. The term ""periodically"" does not provide enough detail. The actual number of times the health monitoring function shall request and collect software execution status and housekeeping data from a predetermined list of Flight Software components should be specified.",7/7/04
ProjectA - TIM - 1254,SuROM SRS Rqt: SU104 missing SuROM-specific responsibility,4,"Issue: SU104 and DI004 are the same requirement. SU0104 should specify the specific Hardware Diagnostics tests reported by the SuROM module, especially if this is considered a mission requirement. Referenced Requirements: SuROM SRS Requirement: [SU104] The results of the Hardware Diagnostics tests conducted during nominal operations shall be inserted into the designated portion of telemetry streams. C&DH SRS Requirement: [DI004] The results of the Hardware Diagnostics tests conducted during nominal operations shall be inserted into the designated portion of telemetry streams.",7/7/04
ProjectA - TIM - 1253,SuROM SRS Rqt: SU0103 missing SuROM-specific responsibility,4,"Issue: SU0103 and DI003 are the same requirement. SU0103 should specify the storage of the Hardware Diagnostics test results relative to the SuROM module, especially if this is considered a mission requirement. Referenced Requirements: SuROM SRS Requirement: [SU103] The results of Hardware Diagnostics tests conducted during start-up shall be stored in fixed memory locations that will not be modified by processor resets. C&DH SRS Requirement: [DI003] The results of Hardware Diagnostics tests conducted during start-up shall be stored in fixed memory locations that will not be modified by processor resets",7/7/04
ProjectA - TIM - 1252,"SuROM SRS Rqt: SU019 missing SuROM responsibility relative to ""machine error interrupt services""",4,"Issue: SU019 and OS019 are the same requirement. SU019 should specify the SuROM-specific ""machine error interrupt services."" Referenced Requirements: [SU019] Machine error interrupt services shall leave the processor in a known repeatable state. No service routine will be designed to skip command execution. [OS019] All machine error interrupt services shall leave the processor in a known repeatable state. No service routine will be designed to skip command execution.",7/7/04
ProjectA - TIM - 1251,SuROM SRS Rqt: SU018 and its subrequirements missing SuROM-specific responsibility,4,"Issue: SU018, and its subrequirement SU018.1 are the same as OS018 and its subrequirement. SU018 and its subrequirement should specify the SuROM-specific responsibilities for satisfying this requirement. Referenced Requirements: [SU018] If sufficient RAD6000 and LIO processing resources are operable, restart operations shall progress to completion in SuROM Diagnostic (Monitor) Mode or Normal Mode. [SU018.1] Unless physically unavoidable, errors detected during startup processes shall not cause the restart processes to terminate before reaching their commanded termination location. [OS018] If sufficient RAD-6000 and LIO processing resources are operable, restart operations shall progress to completion in SuROM Diagnostic (Monitor) Mode or Normal Mode. [OS018.1] Unless physically unavoidable, errors detected during startup processes shall not cause the restart processes to terminate before reaching their commanded termination location.",7/7/04
ProjectA - TIM - 1250,SuROM SRS Rqt: SU017 missing SuROM responsibility relative to the FSW exception log,4,Issue: SU017 and OS017 are the same requirement. SU017 should specify the SuROM-specific responsibility relative to the Flight Software exception log. Referenced Requirements: SuROM SRS Requirement: [SU017] The Flight Software exception log shall fill each entry until it reaches the last entry (23); all subsequent entries are written in the same location. C&DH SRS Requirement: [OS017] The Flight Software exception log shall fill each entry until it reaches the last entry (23); all subsequent entries are written in the same location.,7/7/04
ProjectA - TIM - 1249,"SuROM SRS Rqt: SU016 usage of the phrase ""RAD-6000 processor exception data"" non-determinate",4,"Issue: SU016 and OS016 are the same requirement. SU016 should specify the SuROM-specific ""RAD-6000 processor exception data"" that the SuROM module will store in a log. Referenced Requirements: SuROM SRS Requirement: [SU016] Flight Software shall store RAD6000 processor exception data in a log. C&DH SRS Requirement: [OS016] Flight Software shall store RAD-6000 processor exception data in a log.",7/7/04
ProjectA - TIM - 1248,SuROM SRS Rqt: SU013 missing SuROM responsibility relative to the FSW exception log,4,"Issue: SU013 and its sub-requirements SU013.1, SU013.2, SU013.3, SU013.4, SU013.5, SU013.6, SU013.7, SU013.8, SU013.9, and SU013.10 were the same as OS013 and its sub-requirements in Rev. A of the respective SRSs. SU013 and its sub-requirements have been updated, while OS013 remains unchanged in Rev. B of the respective SRSs. The updates to SU013 and its sub-requirements imply that SuROM is responsible for trapping processor interrupts and making an exception log entry, but is no longer responsible for providing any additional response. In addition to providing the same functionality as SuROM, OS013 and its sub-requirements still indicate that the OS is responsible for responding to each type of interrupt with a specific action. The specific responsibilities of the SuROM FSW task should be defined by SU013 and its subrequirements for the redundant aspects of the previously referenced set of requirements in order to clearly delineate the responsibilities for each task. If this detail is provided elsewhere, the parent requirements should be updated with the appropriate reference. Referenced Requirements: SuROM SRS Requirements: [SU013] Flight Software shall trap the processor interrupts and make an Exception Log entry: [SU013.1] System Reset Interrupt [SU013.2] Machine Check Interrupt [SU013.3] Data Storage Interrupt [SU013.4] Instruction Storage Interrupt [SU013.5] External Interrupt [SU013.6] Alignment Interrupt [SU013.7] Program Interrupt [SU013.8] Floating-Point Unavailable Interrupt [SU013.9] Supervisor Call Interrupt [SU013.10] Floating-Point Exception Interrupt Currently Masked OBC C&DH SRS Requirements: [OS013] Flight Software shall trap processor interrupts, make an Exception Log entry, and respond according to the following Exception/Required Action Tables: [OS013.1] System Reset Interrupt COLD_RESTART [OS013.2] Machine Check Interrupt Suspend Offending Task [OS013.3] Data Storage Interrupt Suspend Offending Task [OS013.4] Instruction Storage Interrupt Suspend Offending Task [OS013.5] External Interrupt INTERRUPT SERVICE [OS013.6] Alignment Interrupt Suspend Offending Task [OS013.7] Program Interrupt Suspend Offending Task [OS013.8] Floating-Point Unavailable Intrpt Suspend Offending Task [OS013.9] Supervisor Call Interrupt Restart as Cold Boot [OS013.10] Floating-Point Exception Intrpt Currently Masked?",7/7/04
ProjectA - TIM - 1247,SuROM SRS Rqt: SU006 missing maximum number of number of boot loader images,4,"SU006 seems incomplete as written. The requirement implies that multiple copies of the boot loader image exist, but the SRS never indicates the allowable number of images. Note: SU006 is similar to OS006 . Referenced SuROM SRS Requirement: [SU006] For the Boot Loader from remote EEPROM, Flight Software startup procedures shall select for loading the first copy of the Boot Loader image that completes verification without error.",7/7/04
ProjectA - TIM - 1246,"SuROM SRS Rqt: SU002 usage of the phrase ""known state"" non-determinate",4,"Issue: SU002 contains the phrase ""known state,"" which does not seem to provide sufficient detail to support implementation. This requirement should specify the specific hardware components and initialization states following a restart/reset relative to the SuROM's responsibilities. Also, since C&DH requirement OS002 is identical to SU002, additional detail should be added to delineate these two requirements. Referenced Requirements: SuROM SRS Requirement: [SU002] Flight Software shall reset/restart and initialize all Flight Computer hardware components on the processor board to a known state. C&DH SRS Requirement: [OS002] Flight Software shall reset/restart and initialize all Flight Computer hardware components on the processor board to a known state.",7/7/04
ProjectA - TIM - 1245,ProjectA OBC C&DH Req SM036: The number of memory locations is not defined.,4,"ProjectA OBC C&DH Flight Software Requirements Specification - Requirement SM036 states: ""Flight Software shall accept and execute a Dump Memory in Event command, that returns in an event message the data resident in a limited number of memory locations."" Requirement SM036 is incomplete. ""limited number of memory locations"" does not provide enough detail. The range or actual number of memory locations should be specified.",7/7/04
ProjectA - TIM - 1242,ProjectA OBC C&DH Req DS012: Applicable function to which the 1553 slot is allocated is not defined.,4,"ProjectA OBC C&DH Flight Software Requirements Specification - Requirement DS012 states: ""The OBC-C&DH software shall accept and execute a STOP_RECORDER_PLAYBACK command, which aborts the playback and/or retransmissions of the specified Virtual Recorders. Note that this command performs different functions when the Virtual Recorder is in CONTINUOUS_PLAYBACK mode."" The term ""different functions"" needs to be specified. A requirement is missing. A requirement should be written to specify the exception case for executing the STOP_RECORDER_PLAYBACK command to ensure that the different functionality is implemented and tested.",7/6/04
ProjectA - TIM - 1241,ProjectA OBC C&DH Req TO014 is redundant with DS025,4,"ProjectA OBC C&DH Flight Software Requirements Specification - Requirement TO014 is redundant with DS025. Both requirements state the following: ""The OBC-C&DH software shall accept and execute a SWAP_FILTER factor command, which will swap filter factors for the 2 specified application id's for the filter table currently in use."" The requirement does not define what specific functionality is required to be implemented in the Telemetry Output and Data Storage components of the FSW to support acceptance and execution of a SWAP_FILTER factor command.",7/6/04
ProjectA - TIM - 1240,ProjectA OBC C&DH Req TC002: Applicable function to which the 1553 slot is allocated is not defined.,4,"ProjectA OBC C&DH Flight Software Requirements Specification - Requirement TC002 states: ""Flight Software shall send the time of the next 1 Hz pulse to the Framing Camera/Mapping Spectrometer instrument via the 1553 bus, prior to the 1553 slot allocated to this function (currently at 0 milliseconds)."" Requirement TC002 is incomplete. The term ""this function "" does not refer to the specific function. The requirement is not complete as written,Requirement TC002 should identifying the applicable function to which the 1553 slot is allocated.",7/6/04
ProjectA - TIM - 1238,ProjectA OBC C&DH Req S3009: Read frequency maximum value that avoids FIFO overflow is not defined.,4,"ProjectA OBC C&DH Flight Software Requirements Specification - Requirement S3009 states: ""S3 task shall read Gamma Ray and Neutron Detector (GRAND) telemetry, MUC GRAND TLM FIFO, with a read frequency that avoids FIFO overflow."" The requirement is not complete as written, because the actual read frequency maximum value that avoids FIFO overflow is not defined.",7/6/04
ProjectA - TIM - 1234,ProjectA OBC C&DH Req OS017: The exact intent of the requirement is ambiguous,4,"ProjectA OBC C&DH Flight Software Requirements Specification - Requirement OS017 states: ""The Flight Software exception log shall fill each entry until it reaches the last entry (23); all subsequent entries are written in the same location."" It is not clear as to what is meant by "" all subsequent entries are written in the same location"". IV&V suggests providing details of the statement ""subsequent entries are written in the same location"". The exact intent of this requirement is ambiguous in that it is not clear whether or not all entries in the exception log are overwritten after the last entry is filled or just the last entry is overwritten.",7/6/04
ProjectA - TIM - 1232,ProjectA OBC C&DH Req OS006: Intended Image to be selected for loading is not specified,4,"ProjectA OBC C&DH Flight Software Requirements Specification - Requirement OS006 states: ""For the Operating System, Flight Software startup procedures shall select for loading, the first copy of this image that completes verification without error."" Requirement OS006 does not define the Intended Image to be selected for loading. ""this image"" does not specify the actual intended image to be selected for loading.",7/6/04
ProjectA - TIM - 1231,Dump Memory in Event command in C&DH SRS should give same details as in FSW CDR,5,"Requirement SM036 in the C&DH SRS states: ""Flight Software shall accept and execute a Dump Memory in Event command, that returns in an event message the data resident in a limited number of memory locations"". According to the FSW CDR package, 16 bytes of data are placed in the event message represented as ASCII characters. This fact can now be placed in the requirement above in place of the limited number of memory locations that it states.",7/6/04
ProjectA - TIM - 1230,Incomplete OBC C&DH and Uplink Card SRS Requirements for Fault Protection,2,"The ProjectA FP Requirements where provided in an Excel sheet containing updated FP requirements in May 2004. This Excel sheet seems to provide new/updated FP requirements for OBC C&DH and Uplink Card SRSs. Some of these requirements are repeats of existing SRS requirements and others are new requirements. The majority of the changes are directed at the Uplink Card SRS. Apparently, Orbital intends to place these requirements in the CM system; however, it is unclear if the SRSs will be updated. At the present time software FP related requirements are not complete in the OBC C&DH and Uplink Card SRSs. Reference #3 contains FP requirements. In addition, there are implied FP requirements stated in the briefing charts from the FP CDR, the FSW CDR and the Project CDR. For example, an important function, autonomous redundancy management, is discussed in the Project CDR (FP section)but this subject does not appear in any of the Revision B SRSs.",7/5/04
ProjectA - TIM - 1228,The Load Memory command in SRS not described as in FSW CDR,3,"Requirement SM002 in the OBC C&DH SRS states: ""Flight Software shall accept and execute a Load Memory command to load SRAM, DRAM, EEPROM, and Working Buffer Flight Computer memory locations"". This requirement is in partial conflict with the FSW CDR package of 5/26/04. According to the CDR material on page 336, the Load Memory command loads only SRAM directly. In order to load DRAM, the Transfer Memory command should be used after SRAM is first loaded. Also, in order to load EEPROM, the Write EEPROM command should be used instead of Load Memory.",7/2/04
ProjectA - TIM - 1227,C&DH SRS must state how a Virtual Recorder is specified,3,"Requirement DS011 in the OBC C&DH states: ""The OBC-C&DH software shall accept and execute a START_RECORDER_PLAYBACK command which starts an initial playback of the specified DATASET for the specified Virtual Recorder"". It is not stated in this requirement or in any of the preceding requirements as to how a particular Virtual Recorder is to be specified. The CLOSE_DATASET command identifies a particular dataset in a particular Virtual Recorder but there is no indication of how that Virtual Recorder is to be specified. These same comments also apply to DS010 and DS010.2",7/2/04
ProjectA - TIM - 1222,The Virtual Recorder mechanism should be defined in C&DH SRS,4,"Requirement DS027 in the OBC C&DH SRS states: ""The OBC-C&DH software shall implement TBD Virtual Recorders in DRAM"". It should be explained in the requirement what function the Virtual Recorder performs and how it relates to a VCDU. The VCDU, or virtual channel data unit, apparently is the reformatting of telemetry data into groups that belong to a channel which is defined by the software. The Virtual Recorder is assumed to record these VCDUs in some fashion which should be explained in the requirement above.",7/1/04
ProjectA - TIM - 1221,L3 to L4 FP - Incomplete SRS Requirements for Storing Exception Logs,3,"L3-SFS-992, Section 11.5.25: The Spacecraft shall store an exception log detailing software processing status in the event of a run-time error causing the flight computer to reset. Traced to: ProjectA, S912-SRS4920 - OBC C&DH, 5.7.1.2, Exceptions ProjectA, S912-SRS4921 - OBC SuROM, 5.7.2, Exceptions Issue: The two linked SRS sections state the requirement for logging exception data; however, the specific data is not defined. One would expect that similar requirements would be found in the UPL Card SRS and in the ACE and Uplink BootROM SRS, they are not.",7/1/04
ProjectA - TIM - 1220,Incomplete SRS Requirements for Uplink Card to Store a Log of Hi/Low Water Marks,4,"L3.11.5.22. The Spacecraft FP shall store a log of hi/low water marks for data being monitored which can be downlinked in real time telemetry. ProjectA, S912-SRS4920 - OBC C&DH, 5.7.11.1, Telemetry and Statistics Monitoring ProjectA, S912-SRS4420 - Uplink Card, 5.7.9.3, Telemetry and Statistics Monitoring Issue: UPL Card SRS 5.7.9.3 contains numerous sub-requirements, none of which address the L3 requirement.",7/1/04
ProjectA - TIM - 1219,"Incomplete SRS Requirements for Rejecting Iinvalid Commands, and Terminating Sequences",3,"L3-SFS-987, Section 11.5.20: The Spacecraft shall reject all invalid commands, and shall terminate any sequence that issues an invalid command. Definition: An invalid command is defined as being a command checksum failure, other aspects will be covered by the ground system Traced to: ProjectA, S912-SRS4920 - OBC C&DH, 5.7.7.1, Relative Time Sequences ProjectA, S912-SRS4970 - VML, 5.7.4, VM004 – VM Task Command Requirements Issue: VM004 contains three sub-requirements, none of which address the L3 requirement. This L3 should be linked to the UPL card SRS also.",6/30/04
ProjectA - TIM - 1218,Incomplete SRS Requirements for Monitored Telemetry Stored in DRAM,3,"L3.11.5.19. The Spacecraft FP monitored telemetry shall be stored in spacecraft mass memory (DRAM) for later transmition. ProjectA, S912-SRS4920 - OBC C&DH, 5.7.8.2, Data Storage Issue: The linked OBC C&DH section contains numerous sub-requirements, none of which address the storage of FP monitored telemetry in DRAM.",6/30/04
ProjectA - TIM - 1217,The playback of recorded data not fully explained in C&DH SRS,4,"In the C&DH SRS, requirement DS009 states: ""Commands to start a playback shall distinguish between playback and retransmit"". Apparently, playback is the first transmission of recorded data as opposed to retransmit. This explanation should be inserted in the requirement to remove the confusion over the meaning of playback. Thus, DS009 should be restated as: ""Commands to start a playback, which is the first transmission of recorded telemetry data, shall distinguish between playback and retransmit"".",6/30/04
ProjectA - TIM - 1216,Incomplete SRS Requirements for Generating Event Messages,3,"L3-SFS-979, Section 11.5.12: Spacecraft FP shall generate messages for every significant event observed (by UL or OBC monitors) and for every subsequent response. The message shall include at a minimum the monitor id, threshold, and monitor value. Traced to: ProjectA, S912-SRS4920 - OBC C&DH, 5.7.11.1, Telemetry and Statistics Monitoring ProjectA, S912-SRS4420 - Uplink Card, 5.7.9.3, Telemetry and Statistics Monitoring Issue: The linked SRS sections contain numerous sub-requirements. The L3 requires at least three message components; the linked SRSs do not address them completely. The SRSs do not identify the totality of the event messages to be generated or their contents.",6/30/04
ProjectA - TIM - 1215,Incomplete SRS Requirements for Accommodating Processor Resets During Mission-Critical Events,3,"L3.11.5.7. The Spacecraft FSW shall be designed to accommodate processor resets during mission-critical events, such as launch and solar array deployments. ProjectA, S912-SRS4420 - Uplink Card, 5.7.9.1, Redundant Uplink Card Communications ProjectA, S912-SRS4420 - Uplink Card, 5.7.9.3, Telemetry and Statistics Monitoring ProjectA, S912-SRS4420 - Uplink Card, 5.7.9.4, Relative Time Sequences Issue: The linked UPL Card sections contain numerous sub-requirements, none of which specifically address the intent of the L3 requirement.",6/30/04
ProjectA - TIM - 1214,Incomplete SRS Requirements for Range Checking to Detect Failed or Corrupted Sensor Data,3,"L3.11.5.6. The Spacecraft FP shall perform range checking to detect failed or corrupted sensor data where redundant sensors are used. ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.1, Fault Detection, Isolation, and Recovery (FDIR) The linked OBC ACS section contains numerous sub-requirements, none of which address the intent of the L3 requirement.",6/30/04
ProjectA - TIM - 1213,Incomplete SRS Requirements for Memory Scrub at a Ground Selectable Rate,3,"L3.11.5.5. The Spacecraft shall perform memory scrub of static memory at a ground selectable rate, to detect and correct single bit flEngine. ProjectA, S912-SRS4920 - OBC C&DH, 5.7.11.3, Memory Scrub The linked SRS section contains numerous sub-requirements, none of which state the requirement to “scrub at a ground selectable rate”.",6/30/04
ProjectA - TIM - 1211,Telemetry filter parameters not defined in C&DH SRS,3,"Requirement TO007 states: ""The OBC-C&DH software shall provide the capability to filter telemetry data (by Application-ID) based on packet sequence number. If X is zero, the packet will not be stored. If X is greater than zero, the packet will be recorded if and only if the Sequence Number of the packet modulo X is less than N"". In this statement N and X are not being defined. The sequence number can be confused with N but, apparently, they are different since the sequence number modulo X is being compared to N. According to the Flight Software CDR of May 26, 2004, these parameters come from a filter table, a fact which should be stated in the requirement above. Also, the CDR states that there are three parameters, not two as it is stated in the requirement. The three parameters are N, X and O and these should be stated and defined in the requirement also. Another check should be made on the exact algorithm that is being employed. The FSW CDR describes the algorithm as ""first N out of X packets starting at offset O"". This may not match the description in the requirement above which states that the ""Sequence Number of the packet modulo X"" is to be less than N. Requirement TO008 should likewise be corrected with whatever algorithm and parameters are appropriate for that requirement. Also, requirements DS005 and DS006 deserve similar comments because they are analogous to TO007 and TO008 for data storage instead of telemetry.",6/30/04
ProjectA - TIM - 1210,CM Requirement Missing in RMS Issue: EV005,2,The following requirement is found within the ProjectA OBC C&DH Flight Software Requirements Specification (Rev A and Rev B) but not within RMS: [EV005] Each Event Message shall be available for inclusion in Real-Time Telemetry.,6/30/04
ProjectA - TIM - 1209,Incomplete SRS Requirements for Monitors to Handle Temporarily Missing Inputs,3,"L3.11.5.3. The Spacecraft FP monitors shall be designed to tolerate and continue functioning in situations where inputs are temporarily missing and respond accordingly. ProjectA, S912-SRS4920 - OBC C&DH, 5.7.11.1, Telemetry and Statistics Monitoring Issue: The linked OBC C&DH 5.7.11.1 contains numerous sub-requirements. Although they state various requirements for FP monitors, none address the requirement to handle “inputs that are temporarily missing”.",6/30/04
ProjectA - TIM - 1208,CM Requirement Missing in RMS Issue: SU210,2,The following requirement is found within the ProjectA OBC SuROM Flight Firmware Requirements Specification (Rev A and Rev B) but not within RMS: [SU210] The SuROM Monitor Mode shall support a command that causes an initialization of SuROM telemetry data.,6/30/04
ProjectA - TIM - 1207,CM Requirement Missing in RMS Issue: ACS-AN007,2,"The following requirement is found within the ProjectA OBC ACS Flight Software Requirements Specification (Rev A and Rev B) but not within RMS: [ACS-AN007] AN software shall generate synchronous telemetry to support ground monitoring and analysis of both spacecraft performance and ACS software performance. This telemetry includes, at a minimum: o FDIR Status, o Ephemeris and Thruster telemetry packets sent to AC, o Table management status telemetry o Statistic telemetry.",6/30/04
ProjectA - TIM - 1206,CM Requirement Missing in RMS Issue: DWN-UPL203.12,2,The following requirement is found within the ProjectA Uplink Card Software Requirements Specification but not within RMS: [DWN-UPL203] The Uplink FSW shall maintain a status message containing the following parameters: [DWN-UPL203.12] 1553 Status.,6/30/04
ProjectA - TIM - 1205,Incomplete SRS Requirements for Modifying ACS Monitor Thresholds & Persistances,4,"L3-SFS-936, Section 11.2.6. All Spacecraft ACS performance and component monitor thresholds and persistances shall be in-flight modifiable via commands or table/parameter loads. Traced to: ProjectA, S912-SRS4920 - OBC C&DH, 5.7.9.3, System Table Operations ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.1, Fault Detection, Isolation, and Recovery (FDIR) Issue: OBC C&DH 5.7.9.3 provides for manipulation of tables; presumably, this will allow modification of thresholds and persistances. However, this reference provides for “generic” type functionality and does not specifically address the ACS monitors. OBC ACS 5.7.1.1 does not address the topic of ""modifying thresholds and persistances"".",6/30/04
ProjectA - TIM - 1204,Incomplete SRS Requirements for Providing ACS Health & Status,4,"L3.11.2.3 The spacecraft shall provide health status on all ACS components when active. ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.4, Attitude Control Electronics (ACE) Data ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.5, Star Trackers (STR) Issue: The referenced SRS sections contain numerous sub-requirements, some of which infer the existence of this data, but none specifically state the requirement to “provide health status”.",6/30/04
ProjectA - TIM - 1202,Incomplete SRS Requirements for Enabling Monitors,4,"L3. 11.1.44. Spacecraft FP shall autonomously enable all monitors required for critical unit health and safety including after critical unit resets or boot-ups. Critical unit definition: Components that are required to maintain a power/thermal safe environment allowing operator communication (e.g. CEU, ACE, PDU, HVEA, IRU, RCS, TWTA, SDST). ProjectA, S912-SRS4920 - OBC C&DH, 5.7.11.1, Telemetry and Statistics Monitoring Issue: The linked OBC 5.7.11.1 contains numerous sub-requirements, and while it defines “tools” that may be used to implement the L3 requirement, none of the SRS requirements specifically address the intent of the parent L3 (“--- autonomously enable --- after critical unit resets or boot-ups“). Critical units are not defined in the SRS.",6/30/04
ProjectA - TIM - 1201,Inconsistency in Requirements/Design for Fail Operational,4,"It is unclear if the L2 requirement is being implemented in the fault protection software requirements/design. Referenced Requirements/Design Specs: [L2-FPR-7] The ProjectA Spacecraft shall fail safe for critical faults and shall have the ability to fail operational for specific non-critical faults. Definition: critical faults are those that may endanger s/c health if not responded to, where that response interrupts normal operations or impairs execution of future (pre-loaded) operational sequences. Slide #3 in the Project CDR, FP Section states: Fault Protection Design Concept Fail safe: no time-critical sequences requiring fail operational (launch is event critical) Slide #6 in the Project CDR, FP Section states: The ProjectA spacecraft shall fail safe for critical faults and have the ability to fail operational for specific non-critical faults. The FP Performance Specification, Section 2.1, states' ""The Flight System is not required to fail operational for most faults"".",6/30/04
ProjectA - TIM - 1199,Missing L3 to L4 Traceability Links,2,"The following L3 sections/requirements have no linked SRS requirements/children. These L3 requirements imply a full or partial software implementation. Several of the L3 requirements are ""new for ProjectA"". 11.1.11, 11.1.27, 11.1.28, 11.1.30, 11.1.31, 11.1.33, 11.1.34, 11.1.35, 11.1.36, 11.1.38, 11.1.39, 11.1.40, 11.1.41, 11.1.47. 11.2.4, 11.2.5. 11.3.6. 11.4.3, 11.4.17. 11.5.1, 11.5.17, 11.5.23, 11.5.24. 11.6.3, 11.6.4, 11.6.5. 11.7.5, 11.7.6, 11.7.10, 11.7.13. 11.8.4. 11.9.2.",6/29/04
ProjectA - TIM - 1198,Incomplete SRS Requirements for Executing Ground Commands,3,"L3-SFS-922, section 11.1.37. The Spacecraft shall execute any ground commands it receives while FP responses are in progress, and after responses are complete. Traced to: ProjectA, S912-SRS4920 - OBC C&DH, 5.7.7.1, Relative Time Sequences ProjectA, S912-SRS4420 - Uplink Card, 5.7.9.4, Relative Time Sequences Issue: OBC 5.7.7.1 sub-requirement SC011 states, “Flight Software shall execute the requested RTS upon receipt of the real-time command (START_RTS directive) from either the ground or another on-board software application.”. Beyond this statement there is no mention in either reference about “executing ground commands while FP responses are in progress”. The linked SRS references do not fully address the intent of the parent L3. UPL Card SRS 5.7.9.4 contains numerous sub-requirements, none of which seem to specifically address the parent L3.",6/29/04
ProjectA - TIM - 1197,CM Requirement Missing in RMS Issue: SU209,2,"The following requirement is found within the ProjectA OBC SuROM Flight Firmware Requirements Specification but not within RMS: Referenced Requirement: [SU209] The SuROM Monitor Mode shall support the ability to ""boot"" the OBC application software from either SRAM or EEPROM.",6/29/04
ProjectA - TIM - 1196,CM Requirement Missing in RMS Issue: SU208,2,"The following requirement is found within the ProjectA OBC SuROM Flight Firmware Requirements Specification but not within RMS: Referenced Requirement: [SU208] The SuROM Monitor Mode shall support a command that requests the calculation of a CCITT-16 CRC for any SRAM, EEPROM, or DRAM memory range. The CRC value is placed in normal SuROM telemetry.",6/29/04
ProjectA - TIM - 1195,CM Requirement Missing in RMS Issue: SU207,2,"The following requirement is found within the ProjectA OBC SuROM Flight Firmware Requirements Specification but not within RMS: [SU207] The SuROM Monitor Mode shall support a ""POKE"" command, placing specified data into SRAM or DRAM.",6/29/04
ProjectA - TIM - 1194,CM Requirement Missing in RMS Issue: ACS-AN006,2,"The following requirement is found within the ProjectA OBC ACS Flight Software Requirements Specification but not within RMS: [ACS-AN006] AN software shall accept AN task commands which initialize, activate, inhibit, or otherwise control the individual AN task software processes. These commands are: o Initialize, o Enable/Disable telemetry packet generation, o DRAM table management commands, o Reset Telemetry Statistics.",6/29/04
ProjectA - TIM - 1193,CM Requirement Missing in RMS Issue: ACS-AN005,2,The following requirement is found within the ProjectA OBC ACS Flight Software Requirements Specification but not within RMS: [ACS-AN005] AC software shall propagate the spacecraft ephemeris every ACS control cycle (5 Hz).,6/29/04
ProjectA - TIM - 1192,CM Requirement Missing in RMS Issue: ACS-AN004,2,"The following requirement is found within the ProjectA OBC ACS Flight Software Requirements Specification but not within RMS: [ACS-AN004] A newly uplinked ephemeris table shall be verified using a ""continuity"" check. The new table shall not be used if continuity is out of range.",6/29/04
ProjectA - TIM - 1191,CM Requirement Missing in RMS Issue: ACS-AN003,2,The following requirement is found within the ProjectA OBC ACS Flight Software Requirements Specification but not within RMS: [ACS-AN003] AN software shall send thruster vector data and thruster schedule data to AC task every 300 seconds after enabled by AC task.,6/29/04
ProjectA - TIM - 1190,CM Requirement Missing in RMS Issue: ACS-AN002,2,The following requirement is found within the ProjectA OBC ACS Flight Software Requirements Specification but not within RMS: [ACS-AN002] AN software shall perform ephemeris and thruster table management.,6/29/04
ProjectA - TIM - 1189,CM Requirement Missing in RMS Issue: ACS-AN001,2,The following requirement is found within the ProjectA OBC ACS Flight Software Requirements Specification but not within RMS: [ACS-AN001] The AN software shall send ephemeris data to AC task every 300 seconds enabled by AC task.,6/29/04
ProjectA - TIM - 1188,CM Requirement Missing in RMS Issue: ACS-AC105,2,The following requirement is found within the ProjectA OBC ACS Flight Software Requirements Specification but not within RMS: [ACS-AC105] The ACS software shall support telemetry required to report onboard RCS and Engine thruster activity to the MOS.,6/29/04
ProjectA - TIM - 1187,CM Requirement Missing in RMS Issue: DWN-UPL203.11,2,The following requirement is found within the ProjectA Uplink Card Software Requirements Specification but not within RMS: [DWN-UPL203.11] Command Timeout.,6/29/04
ProjectA - TIM - 1186,CM Requirement Missing in RMS Issue: DWN-UPL203.10,2,The following requirement is found within the ProjectA Uplink Card Software Requirements Specification but not within RMS: [DWN-UPL203.10] Uplink Reset Count.,6/29/04
ProjectA - TIM - 1185,CM Requirement Missing in RMS Issue: DWN-UPL203.9,2,The following requirement is found within the ProjectA Uplink Card Software Requirements Specification but not within RMS: [DWN-UPL203.9] OBC WDT Status.,6/29/04
ProjectA - TIM - 1184,CM Requirement Missing in RMS Issue: DWN-UPL203.8,2,The following requirement is found within the ProjectA Uplink Card Software Requirements Specification but not within RMS: [DWN-UPL203.8] OBC Monitor Status.,6/29/04
ProjectA - TIM - 1181,CM Requirement Text Issue: Proj CDR differs from RMS/SRS DS029,2,The RMS text and the SRS text are the same for requirement number DS029. However the Project CDR text for requirement number DS029 does not agree with the SRS or RMS. This indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: Referenced Requirements: RMS and OCB C&DH SRS: [DS029] The OBC-C&DH software shall implement 8 Virtual Recorders in DRAM. Project CDR: [DS029] The OBC-C&DH software shall implement 10 Virtual Recorders in DRAM.,6/29/04
ProjectA - TIM - 1180,Incomplete/Incorrect OBC C&DH SRS Command Verification Requirement,4,"The SRS and the CDR material do not agree on the criteria needed to verify each command. It appears that the SRS is incomplete and/or inconsistent with the CDR material. Referenced Requirement/Design Spec: [SC013] Prior to the execution of each individual RTS command, the Flight Software shall verify the validity of the following command parameters: RTS command length, and Embedded command checksum The FSW CDR, slide 383, states: o Where appropriate, individual tasks share some of the burden of fault detection - Telemetry filtering (including range checking and handling missing packets) - Command Rejection (incorrect App ID, incorrect Function Code, invalid parameters",6/29/04
ProjectA - TIM - 1178,Incomplete/Incorrect OBC C&DH SRS Checksum Requirement,4,"The FSW CDR, slide 377 states: Checksum task continuously checksums regions of OBC SRAM. The Regions are: 1. Code, Static Data (Tables), and EEPROM 2. Each region is broken into segments 3. Each region can be enabled/disabled 4. Checksums are initialized at start-up or when a region is enabled; initialized checksums are used for comparison on future passes Issue: The OBC SRS, Section 5.7.11.4 does not fully address Items 2 and 3 in that it does not state that EEPROM and static tables can be ""broken into segments"".",6/28/04
ProjectA - TIM - 1177,Timing command needs to be described in the C&DH SRS,5,"Requirement TC001 of the C&DH SRS states: ""Flight Software shall accept and execute a JAM_SECONDS command to jam the seconds field of the spacecraft clock"". It should be explained that the JAM_SECONDS command, received from the ground, sets the seconds field of the spacecraft clock to the value in the command. This explanation appears on page 444 of the FSW CDR package of 5/26/04.",6/28/04
ProjectA - TIM - 1175,OBC C&DH SRS Not Referenced as Providing 1553 Bus FP,4,"L3.11.1.25. Spacecraft FP shall respond to all credible 1553 bus failures. ProjectA, S912-SRS4420 - Uplink Card, 5.7.9, Fault Protection Issue: The FP CDR charts (e.g., page 53) show that the OBC is also involved in responding to 1553 bus faults.",6/28/04
ProjectA - TIM - 1174,SRS Does Not Include Complete Requirements for Initializing to Safe State,3,"L3-SFS-909, Section 11.1.24: The Flight System shall initialize to a safe state following initial powerup, component reset or switch or recovery from Phoenix mode. Safe State: prevent powering previously failed unit, use of actuators while mated, monitor separation and initiate separation sequence and transition to Safe Mode when appropriate. Traced to: ProjectA, S912-SRS4920 - OBC C&DH, 5.7.1.1, Startup Processing ProjectA, S912-SRS4920 - OBC C&DH, 5.7.11.1, Telemetry and Statistics Monitoring ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.2, Processor Power-on/Restart ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.8.1.4, Autonomous Transition Requirements Issue: OBC C&DH 5.7.1.1. The closest child requirement appears to be OS001 - Flight Computer startup applications shall place the spacecraft into a safe system configuration without any ground intervention following power-up or a temporary power bus fault (cold-boot). This sub-requirement does not address “component reset or switch” or “recovery from Phoenix Mode”. Note, the term “Phoenix Mode” is not defined in the SRS. OBC 5.7.11.1. This section contains numerous sub-requirements. It deals with monitors, responses and controlling them. It does not address “flight system initialization to a safe state following -----“ ASC 5.7.1.2. This section contains 5 sub-requirements: none of which address the intent of the parent L3. It addresses ACS unique power on/reset requirements. ACS 5.7.1.8.1.4. A default set of components shall be powered and selected for use upon transition to Acquisition/Coarse Sun Pointing Rate Nulling Submode. This refers to ACS components, is not specific which are powered, and does not address the full intent of the L3. In summary, separately, and together, the linked SRS requirements do not fully address the parent L3.",6/28/04
ProjectA - TIM - 1173,More details needed in the Loopback Register Write command in C&DH SRS,4,"Requirement S2001 in the C&DH SRS states: ""S2 task shall be able to receive a Downlink Card Loopback Register Write command from the Software Bus and send the command via the S2 serial interface to the Downlink Card"". This command is assumed to write the data that is being telemetered to the ground in a register for verification purposes. This fact should be explained in the requirement. Also, the register to which it writes can reside either in the downlink card, OBC or elsewhere. It needs to specify where it resides. It also needs to specify whether the register is a single register or multiple registers and what happens if subsequent data attempts to override its contents.",6/28/04
ProjectA - TIM - 1172,SRS Does Not Include Requirements for Preventing Two Bus Controllers,4,"L3. 11.1.26. Spacecraft design or FP shall prevent or respond to the scenario where both OBCs are powered and configured as 1553 bus controllers. ProjectA, S912-SRS4420 - Uplink Card, 5.7.9, Fault Protection Issue: UPL 5.7.9 contains numerous sub-requirements and there is no mention of “preventing both OBCs from being configured as bus controllers”. This section addresses monitors, responses and other generic FP related requirements. While Section 5.7.9 may provide for the “tools” needed to accomplish this function, the linked SRS section does not address the intent of the L3.",6/28/04
ProjectA - TIM - 1170,SRSs Do Not Contain Safe Mode Exit Constraint,3,"L3-SFS-902, section 11.1.17: The Flight System shall not exit Safe Mode until either (1) Normal operations entry is initiated by ground command, or (2) A subsequent fault results in flight computer reset/swap. Traced to: ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.8.1.3, Commanded Transition Requirements ProjectA, S912-SRS4420 - Uplink Card, 5.7.9, Fault Protection Issue: OBC ACS 5.7.1.8.1.3 does not mention exit from Safe Mode; therefore, this reference is invalid. Uplink Card 5.7.9 contains numerous sub-requirements and there is no mention of Safe Mode in the entire section. The L3 constraint on Safe Mode exit is not addressed by either of the referenced SRSs. Item (2) in L3 11.1.17 is not consistent with the FP L2 specification, which states that exit from Safe Mode, can only be accomplished by ground command (L2 FPR-65).",6/28/04
ProjectA - TIM - 1169,Missing FSW Requirements to Implement ATLO and Launch Safety Constraints,2,"L3. 11.1.11 The Flight System shall initialize, upon powerup or reset of any electronic assemblies, to a state which does not violate any safety constraints for ATLO and Launch. Issue: There are no SRS requirements linked to this L3. The FSW undoubtedly has a role in preventing safety constraint violations. In this case the L3 places additional restrictions that apply during ATLO and launch. The SRS should reflect these restrictions.",6/28/04
ProjectA - TIM - 1167,Powering Off Both OBCs,3,"L3.11.1.9 The Spacecraft FP shall not allow autonomous actions to result in powering off both OBCs (neither active). ProjectA, S912-SRS4420 - Uplink Card, 5.7.2.11.4.4, Standard Format PCC Commands Issue: Section 5.7.2.11.4.4 is not present in the UPL card SRS (should be 5.7.2.1.1.1). However, OV4-UPC007.B6.07 (PCC HLP Function: CEU A-OFF, B-OFF.) seems to provide a command that can power off both CEUs (and OBCs). There appears to be no specific UPL Card SRS FSW requirement that prevents an autonomous “power off” of both OBCs.",6/28/04
ProjectA - TIM - 1166,Processing Uplinked Commands,3,"L3-SFS-792, section 10.6.3.5: The Flight Software shall allow execution of uplinked commands while an onboard sequence is executing. Traced to: ProjectA, S912-SRS4920 - OBC C&DH, 5.7.7.1, Relative Time Sequences ProjectA, S912-SRS4420 - Uplink Card, 5.7.9.4, Relative Time Sequences ProjectA, S912-SRS4970 - VML, 5.7.1, VM001 - VM Task Interface Requirements Issue: The referenced SRS sections contain numerous sub-requirements. A review of all the sub-requirements indicates that none of the three linked SRS addresses the intent of the parent L3 requirement.",6/28/04
ProjectA - TIM - 1165,OBC Monitoring Separation Signals,4,"L3-SFS-762, section 10.4.2: The Flight Software shall support a startup configuration of safe mode such that the OBC is monitoring separation and controlling basic ACS functions and is the bus controller. Traced to: ProjectA, S912-SRS4920 - OBC C&DH, 5.7.1.5, 1553 Bus Controller (XB) ProjectA, S912-SRS4920 - OBC C&DH, 5.7.7.1, Relative Time Sequences ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.8.1.4, Autonomous Transition Requirements ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.8.1.4.1, ACS-AC075 ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.8.2.1, Launch Mode ProjectA, S912-SRS4920 - OBC C&DH, 5.7.1.5.1, XB011 Issue: The referenced SRS sections do not fully address the intent of the L3: “support a startup configuration of safe mode such that the OBC is monitoring separation and controlling basic ACS functions and is the bus controller”. The linked SRS sections do not mention the requirement to “monitor the separation signals”, yet the ACS SRS (5.7.1.8.1.3) states that the C&DH provides ACS with a separation indication. OBC C&DH 5.7.7.1 addresses RTSs and this appears to be the mechanism by which ""separation"" is monitored (based on the CDR and FP Performance Specification material). Note: the term “safe mode” is not found in the OBC C&DH or ACS SRSs, Sections 5.7. Section 5.7.1.5.1 do not exist in the OBC C&DH SRS.",6/28/04
ProjectA - TIM - 1164,Requirements in OBC C&DH SRS concerning 1553 bus selection need clarification,4,"'Requirements XB005 and XB006 in the OBC C&DH SRS state the selection of the ""1553 preferred bus side(A or B)"". Since there are two redundant 1553 buses on the spacecraft, the phrase ""preferred bus side"" is giving an ambiguous meaning. It can mean the selection of a capability on a single bus or it can mean the selection of one bus out of the two redundant buses. This ambiguity should be removed by clearly stating which selection is intended. Referenced Requirements: [XB005] The OBC C&DH software shall provide a command to globally select the 1553 preferred bus side (A or B). This command affects all RT's on the 1553 bus. [XB006] The OBC C&DH software shall provide a command to select the 1553 preferred bus side(A or B) for a single RT.",6/28/04
ProjectA - TIM - 1163,"FSW Does Not Support ""Inhibits"" as Required by the SFS L3",3,"1.) L3, 10.1.8.1 The Flight Software shall support inhibits as required by the flight system for all catastrophic events (Category A*) which could result in a fatal or disabling injury, total loss of the ProjectA Flight System or major facility damage. The total requirement is three inhibits (dual fault tolerant). Inhibits include Engine, RCS Thrusters, Solar Array Deployment and RF Transmit. ProjectA, S912-SRS4920 - OBC C&DH, 5.7.7.1, Relative Time Sequences ProjectA, S912-SRS4920 - OBC C&DH, 5.7.11.1, Telemetry and Statistics Monitoring ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.6.2, Generate Thruster Commands Issue #1: The two referenced OBC C&DH paragraphs contain numerous sub-requirements. A review of all the sub-paragraphs shows no specific FSW requirements that provide for three inhibits. (Note: OBC C&DH 5.7.1.1, OS001, simply states, “--place the spacecraft into a safe system configuration --“). It is possible that RTSs can serve this purpose but the RTS requirements are somewhat ""generic"" in content and do not specifically address this topic. The OBC ACS referenced paragraph has four sub-requirements, none of which addresses “inhibits”. The referenced SRS requirements do not fully address the intent of the L3. --------------- 2.) L3, 10.1.8.2. The Flight Software shall support inhibits as required by the flight system for all critical events (Category B*), which could result in serious injury, ProjectA Flight System, damage, or in the unscheduled use of safing procedures. The total requirements are two inhibits (single fault tolerant). Inhibits include Reaction Wheels and IRU. ProjectA, S912-SRS4920 - OBC C&DH, 5.7.7.1, Relative Time Sequences ProjectA, S912-SRS4920 - OBC C&DH, 5.7.11.1, Telemetry and Statistics Monitoring ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.1, Fault Detection, Isolation, and Recovery (FDIR) ProjectA, S912-SRS4930 - OBC ACS, 5.7.1.6.1, Generate RWA Commands Issue #2: The two referenced OBC C&DH paragraphs contain numerous sub-requirements; hence, it is unclear which requirements are pertinent. A review of all the sub-paragraphs shows no specific FSW requirements that provide for two inhibits. OBC ACS 5.7.1.1 has ten sub-requirements, none of which addresses the need for inhibits. OBC ACS 5.7.1.6.1 contains 5 sub-requirements, none of which address the need for inhibits. The referenced SRS requirements do not address the intent of the L3.",6/28/04
ProjectA - TIM - 1162,CM of unique requirement identifiers: UBM vs. UMB,2,"1. The ""ACE and Uplink Boot ROM Firmware Requirements Specification"" contains requirements referred to as UMB026 - UMB032. The RMS output file ""L4 to L3_Requirements_Updated_Polished.xls"" refers to these same requirements as UBM026 - UBM032. The ""UMB"" prefix from the SRS is not consistent with the ""UBM"" prefix in RMS. 2. The ""ACE and Uplink Boot ROM Firmware Requirements Specification"" and the RMS output file ""L4 to L3_Requirements_Updated_Polished.xls"" refer to requirement UMB025 with the ""UMB"" prefix which is inconsistent with the ""UBM"" prefix used in the surrounding requirements. The two instances above indicate the existence of a configuration management issue relative to the Level 4 SRS requirements.",6/28/04
ProjectA - TIM - 1161,CM Requirement Heritage Issue: ACS-AC105,5,"Requirement ACS-AC105 is present in the SRS, however it does not contain a heritage entry in Appendix B. 5.7.1.6.2 Generate Thruster Commands ACS-AC105 The ACS software shall support telemetry required to report onboard RCS and Engine thruster activity to the MOS.",6/28/04
ProjectA - TIM - 1159,L4 requirement concerning XB Bus Controller not accurate,5,"The OBC C&DH requirement XB011 states: ""The OBC-C&DH software shall configure the OBC 1553 upon FSW initialization as Bus Controller"". The wording of this requirement implies that the 1553 is being configured as Bus Controller along with the OBC. However, the fact is that only the OBC can be configured as Bus Controller of the 1553 bus, meaning the 1553 should not itself be called a Bus Controller. The spacecraft has two redundant 1553 buses where only one of them can be selected as the active bus at any given time. There are also two OBC computers where, although not clearly explained in the artifacts, one of them can be selected as the Bus Controller on the active bus and the other one can be made a remote terminal on the same bus, not on the other bus. Thus, the requirement above should probably be rephrased as follows: ""The OBC-C&DH software shall configure the OBC upon FSW initialization as either Bus Controller or a Remote Terminal of the 1553 bus"".",6/25/04
ProjectA - TIM - 1158,CM Requirement Text Issue: VM001.1,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [VM001.1] Sequence Execution Capabilities: VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 10 (ten) Virtual Machines, capable of executing on-board blocks and sequences. VML SRS: [VM001.1] Sequence Execution Capabilities: VM Task shall integrate the Virtual Machine Language Flight Component (VMLFC) with ProjectA Flight Software. The VMLFC shall be configured with 12 (twelve) Virtual Machines, capable of executing on-board blocks and sequences.",6/24/04
ProjectA - TIM - 1157,CM Requirement Text Issue: UBM010,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [UBM010] The Boot program shall reset/restart 69R000 hardware components and initialize them to a known state. UPLC SRS: [UBM010] The Boot program shall reset/restart 69R000 hardware components and initialize them to some known state.",6/24/04
ProjectA - TIM - 1156,CM Requirement Text Issue: SU020,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [SU020] Flight Software shall accept an initialization parameter block via ground command, including Spacecraft ID (Default=0x75), VCDU RS Code(Default=0x4D47), VCDU Size (Default=1084), Downlink Card VCDU Rate (Default=1 per second), Uplink Card VCDU Rate (Default= 1 per 4 seconds), Time (Default=0), with no Insert Zone, and RT-Primary, where the Spacecraft ID and RT-Primary values are stored in EEPROM memory. SuROM SRS: [SU020] Flight Software shall accept an initialization parameter block via ground command, and/or from Uplink Card directly during OBC cold boot, including Spacecraft ID (Default=0x75), VCDU RS Code(Default=0x4D47), VCDU Size (Default=444), Downlink Card VCDU Rate (Default=1 per 378 second), Uplink Card VCDU Rate (Default= 1 per 378 seconds), Time (Default=0), with no Insert Zone, and RT-Primary, where the Spacecraft ID and RT-Primary values are stored in nonvolatile memory.",6/24/04
ProjectA - TIM - 1155,CM Requirement Duplicate Issue: SRC-UPC002,2,"RMS and the SRS contain 2 Requirements each with the same requirement ID number assigned (SRC-UPC002), which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS and UPLC SRS: [SRC-UPC002] The Uplink FSW shall process the function codes in a Local PCC command in accordance with the following: [SRC-UPC002] The Uplink FSW shall write the contents of the HLP Extended Code Field into a hardware defined I/O address prior to writing the HLP command into the HLP Control register if the HLP command is HLP_GRPA_2.",6/24/04
ProjectA - TIM - 1154,CM Requirement Text Issue: OV4-UBM006,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [OV4-UBM006] The Boot/Monitor shall support a Copy function which copies from Instruction space or Data space to EEPROM. UPLC SRS: [OV4-UBM006] The Boot/Monitor shall support a Copy function which copies from Instruction space to Data space only.",6/24/04
ProjectA - TIM - 1153,CM Requirement Text Issue: OV4-UBM001,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [OV4-UBM001] The Boot program shall start the Boot Monitor function if 3 or more space characters (20 hex) are transmitted to the 69R000 onboard UART within 0.75 (± 0.25) seconds of resetting the microprocessor. UPLC SRS: [OV4-UBM001] The Boot program shall start the Boot Monitor function if 3 or more space characters (20 hex) are presented to the 69R000 onboard UART within 0.75 (± 0.25) seconds of resetting the microprocessor.",6/24/04
ProjectA - TIM - 1152,Erroneous requirement in telemetry of consumable (hydrazine mass),5,"The available amount of hydrazine cannot be determined with the precision of 5% when the consumable is almost all used. Section 8.1.1.8 reported below is incorrect leaving the requirement incomplete. 8.1.1.8 Satisfier Allocation: The Flight System shall telemeter information that is sufficient to estimate the remaining hydrazine mass to within 10 kg or 5%, whichever is smaller.",6/24/04
ProjectA - TIM - 1151,CM Requirement Duplicate Issue: DWN-SC021,2,"RMS and the SRS contain 2 Requirements each with the same requirement ID number assigned (DWN-SC021)which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS and the UPLC SRS [DWN-SC021] The Flight Software shall pause or restart execution of an RTS on command. [DWN-SC021] Flight Software shall interpret the RTS time-tag as the number of seconds to delay ""relative"" to the previous RTS command execution, or, in the case of the first command in a sequence, the number of seconds to delay after the receipt of the RTS execution request.",6/24/04
ProjectA - TIM - 1150,CM Requirement Text Issue: ACS-AD004,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AD004] The AD software shall verify IRU and Star Tracker data validity status before using the data. ACS SRS: [ACS-AD004] The AD software shall verify IRU and Star Tracker data validity before using the data.",6/24/04
ProjectA - TIM - 1149,CM Requirement Text Issue: ACS-AD002,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AD002] The AD software for three-state Kalman Filter shall receive as input: Measured Rates derived from Corrected Inertial-to-Tracker Quaternions from STR1 and STR2 at 5 Hz, Estimated Rates. ACS SRS: [ACS-AD002] The AD software for three-state Kalman Filter shall receive as input: Measured Rates derived from Corrected Inertial-to-Tracker Quaternions from STR1 and/or STR2 at 1 Hz, and Estimated Rates.",6/24/04
ProjectA - TIM - 1148,CM Requirement Text Issue: ACS-AD001,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AD001] The AD software for six-state Kalman Filter shall receive as input: Estimated IRU Rates, Corrected Inertial-to-Tracker Quaternions from STR1 and STR2, Propagated Quaternion. ACS SRS: [ACS-AD001] The AD software for six-state Kalman Filter shall receive as input: Estimated IRU Rates, Corrected Inertial-to-Tracker Quaternions from STR1 and/or STR2, and Propagated Quaternion.",6/24/04
ProjectA - TIM - 1147,CM Requirement Text Issue: ACS-AC104,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC104] The AC software shall record the total test failure count for each FDC test. ACS SRS: [ACS-AC104] The ACS software shall be able to record onboard RCS and Engine thruster activity at a varying and settable precision, and report this activity to the ground segment. This is another case where the same requirement ID was assigned to two entirely different requirement statements.",6/24/04
ProjectA - TIM - 1146,CM Requirement Text Issue: ACS-AC098,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC098] The software shall use proportional-integral-derivative (PID) controller for Target Pointing, Delta-V, and Science Mode, and proportional-derivative (PD) controller for Acquisition/Coarse Sun Pointing Mode. ACS SRS: [ACS-AC098] The software shall use proportional-integral-derivative (PID) controller for Target Pointing, Delta-V except for Thrust Vector Control (TVC), and Science Mode, proportional-derivative (PD) controller for Acquisition/Coarse Sun Pointing Mode, with only the derivative (rate) term for the Rate Nulling submode. The TVC has a separate controller as described in ACS Performance Specification section 3.2.2.3.",6/24/04
ProjectA - TIM - 1145,CM Requirement Text Issue: ACS-AC097,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC097] Three-state Kalman Filter shall be used in Delta-V and Science Mode, executing at 5 Hz, if attitude and rate determination is using only star tracker data. ACS SRS: [ACS-AC097] Three-state Kalman Filter shall be used in Delta-V and Science Mode, executing at 1 Hz, if attitude and rate determination is using only star tracker data.",6/24/04
ProjectA - TIM - 1144,CM Requirement Text Issue: ACS-AC095,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC095] Three-state Kalman Filter shall be used in Target Pointing Mode, executing at 5 Hz, if attitude and rate determination is using only star tracker data. ACS SRS: [ACS-AC095] A three-state Kalman Filter shall be used in Target Pointing Mode, executing at 1 Hz, if attitude and rate determination is using only star tracker data.",6/24/04
ProjectA - TIM - 1143,CM Requirement Text Issue: ACS-AC094,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC094] Six-state Kalman Filter shall be used in Target Pointing Mode, executing at 1 Hz, if attitude and rate determination is using star tracker and IRU data. ACS SRS: [ACS-AC094] A six-state Kalman Filter shall be used in Target Pointing Mode, executing at 1 Hz, if attitude and rate determination is using star tracker and IRU data.",6/24/04
ProjectA - TIM - 1142,CM Requirement Text Issue: ACS-AC089,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC089] Transition to Science or Delta-V Mode shall be disallowed if spacecraft loss of attitude reference as defined in ACS Performance Specification section 3.2.4.6. ACS SRS: [ACS-AC089] Transition to Science or Delta-V Mode shall be rejected if spacecraft loss of attitude reference is detected.",6/24/04
ProjectA - TIM - 1141,CM Requirement Text Issue: ACS-AC088,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC088] Transition to Target Pointing Mode shall be rejected if there is Kalman Filter divergence. ACS SRS: [ACS-AC088] Transition to Target Pointing Mode shall be rejected if Kalman Filter diverges.",6/24/04
ProjectA - TIM - 1140,CM Requirement Text Issue: ACS-AC087,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC087] Transition to Target Pointing Mode shall be rejected if spacecraft loss of attitude reference as defined in ACS Performance Specification section 3.2.4.6. ACS SRS: [ACS-AC087] Transition to Target Pointing Mode shall be rejected if spacecraft loss of attitude reference is detected.",6/24/04
ProjectA - TIM - 1139,CM Requirement Text Issue: ACS-AC084,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC084] Transition from Science or Delta-V Mode to Acquisition/Coarse Sun Pointing Rate Nulling Submode shall be: (1) autonomous, via detection of Kalman Filter divergence or loss of attitude reference defined in ACS Performance Specification section 3.2.4.6 for a specified time, or (2) explicit, via ground-command. ACS SRS: [ACS-AC084] Transition from Science or Delta-V Mode to Acquisition/Coarse Sun Pointing Rate Nulling Submode shall be: (1) autonomous, via detection of Kalman Filter divergence or loss of attitude reference for a specified time, or (2) explicit, via ground-command.",6/24/04
ProjectA - TIM - 1138,CM Requirement Text Issue: ACS-AC083.4,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC083.4] Loss of attitude reference defined in ACS Performance Specification section 3.2.4.6. ACS SRS: [ACS-AC083.4] Loss of attitude reference.",6/24/04
ProjectA - TIM - 1137,CM Requirement Text Issue: ACS-AC083.2,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC083.2] Body rate errors exceed a specified value for a specified time. ACS SRS: [ACS-AC083.2] Invalid ephemeris.",6/24/04
ProjectA - TIM - 1136,CM Requirement Text Issue: ACS-AC083.1,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC083.1] Attitude errors exceed a specified value for a specified time. ACS SRS: [ACS-AC083.1] Attitude errors or body rate errors exceed a specified value for a specified time.",6/24/04
ProjectA - TIM - 1135,CM Requirement Text Issue: ACS-AC074,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC074] The software shall allow commanded transitions between Target Pointing Mode and Delta-V Mode or Science Mode. ACS SRS: [ACS-AC074] The software shall allow commanded transitions between Target Pointing Mode, Delta-V Mode or Science Mode.",6/24/04
ProjectA - TIM - 1134,CM Requirement Text Issue: ACS-AC068,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC068] AC software shall perform mode transition FDIR defined in ACS performance specification section 3.2.4.7 and 3.1.3.2.4. ACS SRS: [ACS-AC068] AC software shall perform mode transition FDIR defined in ACS performance specification section 3.1.3.6 and 3.1.3.2.4.",6/24/04
ProjectA - TIM - 1133,CM Requirement Text Issue: ACS-AC064,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC064] The ACS Software shall generate a status message and send it to the instrument every 1Hz. ACS SRS: [ACS-AC064] The ACS Software shall generate an ancillary telemetry packet.",6/24/04
ProjectA - TIM - 1132,L3-PSR-39: Negative requirement untestable.,5,L3-PSR-39 is unverifiable as written. L3-PSR-39 The Science Instruments shall not require an atypical power-up procedure following sudden removal of power.,6/24/04
ProjectA - TIM - 1131,CM Requirement Text Issue: ACS-AC061,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC061] SAD commands shall be output to the ACE in all ACS modes, except Launch Mode. ACS SRS: [ACS-AC061] SAD commands shall be output to the ACE in all ACS modes.",6/24/04
ProjectA - TIM - 1130,CM Requirement Text Issue: ACS-AC060,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC060] ACS FSW shall generate Solar Array commands to maintain proper orientation of the solar arrays for power generation. ACS SRS: [ACS-AC060] ACS FSW shall generate Solar Array Commands to maintain proper orientation of the solar arrays for power generation at 1 Hz.",6/24/04
ProjectA - TIM - 1129,CM Requirement Text Issue: ACS-AC059,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC059] A 1Hz update command shall be output to both Star Trackers at 5 Hz. ACS SRS: [ACS-AC059] A linear velocity update command shall be output to both Star Trackers at 1 Hz.",6/24/04
ProjectA - TIM - 1128,CM Requirement Text Issue: ACS-AC049,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC049] The spacecraft rate from each STR shall be converted to the spacecraft body frame. ACS SRS: [ACS-AC049] The spacecraft rate from each STR shall be converted to the body frame.",6/24/04
ProjectA - TIM - 1127,CM Requirement Text Issue: ACS-AC048,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC048] The following items in STR telemetry shall be checked to ensure data validity: status, temperature, and quaternion data. ACS SRS: [ACS-AC048] The following items in STR telemetry shall be checked to ensure data validity: status, and quaternion data.",6/24/04
ProjectA - TIM - 1126,CM Requirement Text Issue: ACS-AC036,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC036] The last valid CSS data shall be used when CSS data is declared invalid. ACS SRS: [ACS-AC036] The last valid CSS data shall be used for that processing cycle when CSS data is declared invalid.",6/24/04
ProjectA - TIM - 1125,CM Requirement Text Issue: ACS-AC021,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC021] The AC software shall verify received ACS command data is within specific (table) values for commands defined in requirements ACS-AC020.5 and ACS-AC020.8. ACS SRS: [ACS-AC021] The AC software shall verify received ACS command data is within specific (table) values for commands defined in requirements ACS-AC020.4 and ACS-AC020.10.",6/24/04
ProjectA - TIM - 1124,CM Requirement Text Issue: ACS-AC020.9,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC020.9] Enable or disable autonomous thruster momentum control. ACS SRS: [ACS-AC020.9] ACS Momentum Control Commands: o Enable/Disable autonomous momentum control o Enable/Disable momentum adjust o Momentum command o Set momentum error limit threshold commands o Momentum torque magnitude command",6/24/04
ProjectA - TIM - 1123,CM Requirement Text Issue: ACS-AC020.8,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC020.8] Apply +X rotation in Rate Nulling or Sun Pointing submode: Rate (radians/second), Timer (seconds). ACS SRS: [ACS-AC020.8] ACS Jet Commands: o Set Jet Pulse Period, o Set DeltaV Jet Seconds, o Stationkeep Pulse Period",6/24/04
ProjectA - TIM - 1122,CM Requirement Text Issue: ACS-AC020.5,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC020.5] Enable ground control of actuators: RWA Speed (set RWA speed bias, or set RWA speed output), RWA Torque (set RWA torque output), Thruster Commands, Engine engines Commands, Engine gimbal Commands, Solar Array Commands. ACS SRS: [ACS-AC020.5] Enable ground control of actuators: o RWA Speed (set RWA speed bias, or set RWA speed output), o RWA Torque (set RWA torque output), o Thruster Commands, o Engine Commands, o Solar Array Commands.",6/24/04
ProjectA - TIM - 1121,CM Requirement Text Issue: ACS-AC020.4,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC020.4] Set AC control mode: Launch Mode, Acquisition/Coarse Sun Pointing Mode - Rate Nulling Submode, Acquisition/Coarse Sun Pointing Mode - Sun Acquisition Submode, Acquisition/Coarse Sun Pointing Mode - Sun Pointing Submode, Target Pointing Mode - Attitude Steering Submode, Target Pointing Mode - Inertial Target Submode, Delta-V Mode - Engine Submode, Delta-V Mode - RCS Submode, Science Mode - Asteroid Nadir Pointing Submode, Science Mode - Asteroid Target Tracking Submode. ACS SRS: [ACS-AC020.4] Set AC control mode: o Launch Mode, o Acquisition/Coarse Sun Pointing Mode - Rate Nulling Submode, o Acquisition/Coarse Sun Pointing Mode - Sun Acquisition Submode, o Acquisition/Coarse Sun Pointing Mode - Sun Pointing Submode, o Target Pointing Mode o Delta-V Mode - Engine Submode, o Delta-V Mode - RCS Submode, o Science Mode - Asteroid Nadir Pointing Submode, o Science Mode - Asteroid Target Tracking Submode.",6/24/04
ProjectA - TIM - 1120,CM Requirement Text Issue: ACS-AC020.10,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC020.10] Set ACS Target Mode: Target Pointing Mode - Attitude Steering Submode, Target Pointing Mode - Inertial Target Submode. ACS SRS: [ACS-AC020.10] Set ACS Target Mode: o Target Pointing Mode",6/24/04
ProjectA - TIM - 1119,CM Requirement Text Issue: ACS-AC013,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC013] After initialization is complete, the ACS software shall begin to generate telemetry, including responses to C&DH housekeeping requests. ACS SRS: [ACS-AC013] After initialization is complete, the ACS software shall start generating telemetry, including responses to C&DH housekeeping requests.",6/24/04
ProjectA - TIM - 1118,CM Requirement Text Issue: ACS-AC012,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC012] The AC software shall generate an event message to signify ACS software completion of a power-on or re-boot. ACS SRS: [ACS-AC012] The AC software shall generate an event message to signify ACS software has completed initialization after a power-on or re-boot.",6/24/04
ProjectA - TIM - 1117,CM Requirement Text Issue: ACS-AC010,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC010] When the C&DH software indicates that a power-on or re-boot has occurred, selected (table) ACS FDIR processing shall be initialized as disabled. ACS SRS: [ACS-AC010] When the C&DH software indicates that a power-on or re-boot has occurred, selected ACS FDIR processing shall be initialized as disabled.",6/24/04
ProjectA - TIM - 1115,CM Requirement Text Issue: ACS-AC008,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC008] Autonomous transition from a higher mode to a lower mode, i.e., Science Mode to Acquisition and Coarse Sun Pointing Mode shall occur under the conditions outlined in ACS Performance Specification section 3.2.4.7. ACS SRS: [ACS-AC008] Autonomous transition from a ""higher"" mode to a ""lower"" mode, i.e., Science Mode to Acquisition and Coarse Sun Pointing Mode shall occur under the conditions outlined in ACS Performance Specification section 3.1.3.6.",6/24/04
ProjectA - TIM - 1114,CM Requirement Text Issue: ACS-AC007,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC007] ACS FSW fault detection and correction shall incorporate Limits Data, which is protected (checksum) and configurable from the ground, and against which measured and processed data are compared. ACS SRS: [ACS-AC007] ACS FSW fault detection and correction shall incorporate ""Limits Data"", which is checksum protected and configurable from the ground, and against which measured and processed data are compared.",6/24/04
ProjectA - TIM - 1113,CM Requirement Text Issue: ACS-AC002,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC002] The ACS software shall provide a latched FDIR status telemetry that reflects the FDIR status since last reset or until cleared by command. ACS SRS: [ACS-AC002] The ACS software shall provide a latched FDIR status telemetry that reflects the FDIR status since last reset or until cleared by ground command.",6/24/04
ProjectA - TIM - 1112,CM Requirement Text Issue: ACS-AC001,2,"RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACS-AC001] During each 5 Hz cycle, the ACS software shall generate a FDIR status packet to identify which fault monitors failed their FDIR checks and which did not. ACS SRS: [ACS-AC001] During each 5 Hz cycle, the ACS software shall generate a FDIR status packet to identify which faults failed their FDIR checks and which did not.",6/24/04
ProjectA - TIM - 1111,CM Requirement Text Issue: ACE-EXEC019.3,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACE-EXEC019.3] If the memory load CRC check fails, the ACE Executive shall reject the load, increment an error counter, calculate a CRC for each 4K-bytes of the load, and transmit the CRCs in telemetry for ground analysis. ACE SRS: [ACE-EXEC019.3] If the memory load checksum check fails, the ACE Executive shall reject the load, increment an error counter, calculate a CRC for each 4K-bytes of the load, and transmit the CRCs in telemetry for ground analysis.",6/24/04
ProjectA - TIM - 1110,CM Requirement Text Issue: ACE-EXEC017,2,"The RMS text and the SRS text differ for the same requirement number, which indicates that the Project has a configuration management issue with the L4 Flight Software Requirements: RMS: [ACE-EXEC017] The ACE Executive shall schedule all ACE application software at a maximum rate of 5 hz. ACE SRS: [ACE-EXEC017] The ACE Executive shall schedule all ACE application software at a maximum rate of 5 Hz. in both Normal and Safehold modes.",6/23/04
ProjectA - TIM - 1109,Conflicting requirements on redundant hardware in L2-FPR-139 and L3-PSR-239,3,"The two FC instruments are classified as redundant hardware therefore the simultaneous operation required in L3-PSR-239 needs to be approved by the Project Manager. The Project Manager approval is required by L2-FP-139. There is only one L3 requirement (i.e., L3-SFS-1034) traced to L2-FPR-139 and it does not appear to be applicable. Reference Requirements: [L2-FPR-139] The ProjectA Project shall only swap to redundant hardware elements for fault recovery actions in order to assure health/ safety. Violations shall be approved by the Project Manager. [L3-PSR-239] Goal: The payload system's two imaging cameras shall be able to acquire images concurrently (i.e. within 100 msec of each other). [L3-SFS-1034] Redundant Flight System electrical components shall undergo 500 hours of accumulated operating/power-on time prior to launch using a combination of component and spacecraft level test time.",6/22/04
ProjectA - TIM - 1108,ACS FP Monitors/Responses Not Controlled as Defined in the SFS L3,3,"The FSW CDR slide 137 states, ""A) ACS FDC tests is performed all the time without enable or disable flag. The FDC tests evaluation which yields to FDC action can be enabled or disabled as a group (e.g. RWA, CSS, etc.)."" There appears to be a disconnect between the CDR defined approach to disabling/enabling monitors and responses (enables/disables as a group) and the L3 requirements (ability to disable/enable individual monitors and responses). Based on the CDR material, the design does not meet the intent of the L3. Referenced Requirements: [L3-SFS-770] 1) The Flight Software shall allow ground operators to disable the following autonomous capabilities: [L3-SFS-771] Fault Protection: individual monitors and responses [L3-SFS-978] Spacecraft FSW FP monitors and responses shall be individually enabled and disabled via command.",6/16/04
ProjectA - TIM - 1107,L2-FGI-773 not flowed down to the L3 SCFSRD,2,"The flow-down of L2-FGI-773 is incomplete. In the July 15, 2004 DOORS database there were no inlinks for L2-FGI-773. After review of the L3 Spacecraft and Flight System Requirements Document (SCFSRD) no L3 requirements were identified to address L2-FGI-773. Referenced Requirements: [L2-FGI-773] The spacecraft shall report in downlink engineering telemetry the number of successfully received telecommand frames.",6/9/04
ProjectA - TIM - 1106,L2-FGI-774 not flowed down to the L3 SCFSRD,2,"The flow-down of L2-FGI-774 is incomplete. In the July 15, 2004 DOORS database there were no inlinks for L2-FGI-774. After review of the L3 Spacecraft and Flight System Requirements Document (SCFSRD) no L3 requirements were identified to address L2-FGI-774. Referenced Requirement: [L2-FGI-774] The spacecraft shall report in downlink engineering telemetry the number of uplink commands that were successfully or unsuccessfully processed.",6/9/04
ProjectA - TIM - 1105,The payload should be included in L3 SFS requirement,4,"In the Spacecraft and Flight Systems Requirements Document requirement L3-SFS-758 states: ""All Flight Software shall be patchable and have the patches survive a computer reset with the exception of computer SUROM. Specifically for the flight software: OBC, ACE, Uplink Card, EngCntrl and instruments as required"". This requirement should have the payload included in the exception list regarding a computer reset. This is due to requirement L3-PSR-226 in the Payload Systems Requirements Document which states: ""Each instrument shall be able to accept patches(code or parameters) to the operational FSW image, i.e. the FSW image that it is currently executing. Such patches are not required to survive an instrument reset."" Thus, the SC&FSRD requirement L3-SFS-758 should be modified as follows: ""All Flight Software shall be patchable and have the patches survive a computer reset with the exception of computer SUROM and the payload instruments. Specifically for the flight software: OBC, ACE, Uplink Card, EngCntrl and instruments as required"".",6/8/04
ProjectA - TIM - 1104,Incomplete Traceability Links Between L3 SC&FSRD and L2-FGI-315,3,"The traceability links for L2-FGI-315 are incomplete. L2-FGI-315 should be linked to L3-SFS-2248 in the Systems section and L3-SFS-756 in the Flight Software section of the Spacecraft & Flight Systems Requirements Document. L2-FGI-315 is not linked to L3-SFS-756 in the 7-15-04 DOORS database. In addition, the list of applicable components in L3-SFS-2248 and L3-SFS-756 is not consistent with L2-FGI-315. L2-FGI-315 includes the Framing Camera in the list of applicable components; however, neither L3-SFS-2248 nor L3-SFS-756 includes the Framing Camera. It appears that L3-FGI-315 should also be linked to requirements in the PSRD. ""ACE"" is included in L3-SFS-756 as an applicable component, but L2-FGI-315 does not include ""ACE"". L3-SFS-756 satisfies L2-FGI-315, but also introduces new functionality for ""ACE"", which is inconsistent with the parent requirement, L2-FGI-315. Referenced Requirements: [L2-FGI-315] 1. The Flight System shall be able to Load and Patch FSW on powered but non controlling critical components in a normal operational configuration. Specifically OBC, Uplink Card, EngCntrl, and Framing Camera. [L3-SFS-2248] The Spacecraft shall be able to Load and Patch FSW on powered but non controlling components in a normal operational configuration. Specifically for the spacecraft: OBC, Uplink Card, EngCntrl. [L3-SFS-756] Spacecraft shall support FSW Load and Patch on powered but non controlling components in a normal operational configuration. Specifically for the flight software: OBC, ACE, Uplink Card, and EngCntrl.",6/8/04
ProjectA - TIM - 1103,L3-SFS-876: Misspelling is communicating the wrong information,4,"There is a misspelled word in L3-SFS-876, which is conveying the wrong meaning. The misspelled word is ""detectable"", which should be ""deletable"". Referenced Requirement: [L3-SFS-876] Sequences and blocks shall be detectable from the ground. This may be via overwriting the CRC information with zeroes.",6/7/04
ProjectA - TIM - 1102,L2-FGI-771 is not flowed down to the L3 SC&FSRD,3,L2-FGI-771 is not linked to any requirements in the L3 Spacecraft and Flight Systems Requirements Document (SC&FS RD). L2-FGI-771 seems to imply software functionality. Referenced Requirements: [L2-FGI-771] The spacecraft shall prioritize Virtual Recorder playback via a loadable table.,6/7/04
ProjectA - TIM - 1100,L2-FPR-135 Not Adequately Addressed in the L3 SFS,2,"The intent of the L2 is to ""verify timeliness of switching between redundant elements and the availability of them, at the system level"". The two linked L3s provide test bed requirements and therefore do not address the intent of the linked L2. Referenced Requirements: [L2-FPR-135] For the ProjectA Project, when redundancy has been used in the flight system design to provide fault tolerance, system fault protection testing shall verify the timeliness of switching between redundant elements, in addition to verifying the availability of the redundant functionality. [L3-SFS-2196] The testbed shall provide hardware/software necessary to verify complete Fault Protection regression testing. This capability will be provided on all testbeds so that early verification can be performed prior to spacecraft testing. [L3-SFS-1038] The Flight System shall use a Flight System Testbed (a scaled down, non-flight version of the Flight System) to provide early confidence in bus hardware and software design.",6/6/04
ProjectA - TIM - 1099,L2-FPR-134 Not Adequately Addressed in the L3 SFS,3,"There is no linked L3 for this L2 requirement. Referenced Requirements: [L2-FPR-134] The ProjectA Project's software fault protection test planning shall be guided by a failure modes and effects analysis (FMEA) and/or fault tree analysis (FTA) that considers 1) possible failure modes and 2) both failure and off-nominal behavior of interfacing hardware components. The test plan should specify the extent of exception testing, error injection testing, and transient testing.",6/6/04
ProjectA - TIM - 1098,L2-FPR-133 Not Adequately Addressed in the L3 SFS,3,"This L2 requirement focuses on FP design attributes (it is to enable FP testing at all levels of development from unit through system test bed). The single linked L3 addresses test bed capability, not the FP design; hence, it does not reflect the parent L2. Referenced Requirements: [L2-FPR-133] The ProjectA FP design shall enable early and often software testing at unit, module, subsystem test bed and system test bed levels to incrementally verify functionality/operability. It is recognized that a full end-to-end system test is required to completely validate the final FP design. [L3-SFS-2196] The testbed shall provide hardware/software necessary to verify complete Fault Protection regression testing. This capability will be provided on all testbeds so that early verification can be performed prior to spacecraft testing",6/6/04
ProjectA - TIM - 1096,L2-FPR-125/126/127/129/130 Not Adequately Addressed in the L3 SFS,3,The specific testing objectives in the L2 are mapped to two generic L3s (stating that a CPT would be performed and that the test bed shall provide components for complete FP regression testing) that do not address the intent of the parent L2. It is unclear how these five L2 requirements will be carried into the test program due to the lack of specificity in the L3s.,6/6/04
ProjectA - TIM - 1095,L2-FPR-112 Not Adequately Addressed in the L3 SFS,3,This L2 has only been flowed down to the GS and the PSR L3s. Since FP counters also reside in the S/C FSW this L2 should also influence the L3-SFS. Referenced Requirements: [L2-FPR-112] The ProjectA Project shall be able to clear all fault protection counters via ground command. [L3-GS-1345] The MOS shall be able to clear all fault protection counters by ground command. [L3-PSR-251] The ProjectA Project shall be able to clear all instrument fault protection counters via ground command. [L3-GS-750] The MOS shall be able to generate all the spacecraft commands defined in the Command Dictionary. [L3-GS-77] The MOS shall have the capability to generate and radiate commands that respond to high-priority spacecraft events or activities (including TCMs) within 12 hours of the decision to send the commands.,6/6/04
ProjectA - TIM - 1094,L2-FPR-109 Not Adequately Addressed in the L3 SFS,4,"The L2 addresses monitoring science instrument engineering data and if the data indicates problems then the S/C shall issue an instrument safing command, power the offending unit of, safe the flight system (FS), etc. L3-SFS-996 states that the response is just to, ""safe the FS"". It appears that the objective of the L2 is to ""safe the instrument"". The L3 requirement seems to address the ""FS"". Clarification is needed. Referenced Requirements: [L2-FPR-109] The Spacecraft shall monitor a limited set of each Science Instrument's engineering data (e.g. electronics temperature, current and command interface). If any of the measurements in an Science Instrument's engineering data exceeds acceptable bounds for a prescribed duration, the Spacecraft shall execute that Science Instrument's .safe. command block and/or may power the unit off and/or take other actions to safe the flight system. [L3-SFS-996] The Spacecraft FP shall monitor a limited set of engineering and interface data for each instrument, as provided by Spacecraft sensors, and respond in a simple manner to safe the FS. [L3-SFS-913] The Spacecraft shall inform the necessary Flight System components (Payload and Engine) of an impending power down prior to power off when possible.",6/6/04
ProjectA - TIM - 1093,L2-FPR-106 Not Adequately Addressed in the L3 SFS,4,"The L2 states that ""no single failure of the Flight System shall cause the loss of more than one science instrument"". The single linked L3 restricts the loss of functionality to only the FCs. In addition, the L3 does not specifically state what has faulted (e.g., the Flight System, the FC, etc.). Referenced Requirements: [L2-FPR-106] To meet minimum mission requirements, no single failure of the Flight System shall cause the loss of more than one science instrument.[L3-PSR-123] The FC system shall be block redundant, such that no single fault will compromise the functionality or performance of both FCs",6/6/04
ProjectA - TIM - 1092,L2-FPR-105 Not Adequately Addressed in the L3 SFS,3,"It appears that the intent of the L2 is to state that a failure in one instrument shall not cause permanent loss of data from the other science instruments. The single linked L3 constrains the L2 requirement to just the FC instruments. If the intent of the L2 applies to all instruments, then the linked L3 is incomplete. Referenced Requirements: [L2-FPR-105] No single failure of a science instrument shall cause permanent loss of data of the other science instrument data. [L3-PSR-123] The FC system shall be block redundant, such that no single fault will compromise the functionality or performance of both FCs.",6/6/04
ProjectA - TIM - 1091,L2-FPR-100 Not Adequately Addressed in the L3 SFS,2,"The L2 requires that FP be executed all times following its initialization. The single linked L3 states that, ""-- all monitors ---"". Unless the term ""monitors"" also includes all other C&DH FP functions (e.g., FP responses), then the L3 requirement does not fully respond to the parent L2. In addition, it was stated at the FP CDR that all TMONs are disabled when FP responds to a fault. If this is true, then the intent of the L2 is not met. Referenced Requirements: [L2-FPR-100] Spacecraft Fault Protection shall be executed by the C&DH and shall be active at all times following its initialization. [L3-SFS-929] Spacecraft FP shall autonomously enable all monitors required for critical unit health and safety including after critical unit resets or boot-ups. Critical unit definition: Components that are required to maintain a power/thermal safe environment allowing operator communication (e.g. CEU, ACE, PDU, HVEA, IRU, RCS, TWTA, SDST).",6/6/04
ProjectA - TIM - 1090,L2-FPR-93 Not Adequately Addressed in the L3 SFS,3,"In the linked L3-SFS-909 the term ""Phoenix mode"" is not defined; therefore, it is unclear if the full intent of the L2 is captured in the L3s. The issue here is 'long duration under voltage"". Referenced Requirements: [L2-FPR-93] The ProjectA Project design shall be able to autonomously boot up and safe the spacecraft after long duration undervoltage events assuming no units were thermally damaged. In addition each subsystem shall autonomously configure to a unique, unambiguous, safe, system compatible state [L3-SFS-952] At prime power-on during ground testing or recovery from a severe undervoltage condition that causes components to reset, the Spacecraft EPS components shall autonomously configure to a safe, system compatible state including autonomous activation of down converters and battery charging in an undervoltage state.[L3-SFS-944] Spacecraft C&DH components shall boot and initialize in a systematic, deterministic, and safe manner when required power levels are applied (to switched or unswitched power). [L3-SFS-929] Spacecraft FP shall autonomously enable all monitors required for critical unit health and safety including after critical unit resets or boot-ups. Critical unit definition: Components that are required to maintain a power/thermal safe environment allowing operator communication (e.g. CEU, ACE, PDU, HVEA, IRU, RCS, TWTA, SDST). [L3-SFS-909] The Flight System shall initialize to a safe state following initial powerup, component reset or switch or recovery from Phoenix mode. Safe State: prevent powering previously failed unit, use of actuators while mated, monitor separation and initiate separation sequence and transition to Safe Mode when appropriate.",6/6/04
ProjectA - TIM - 1089,L2-FPR-88 Not Adequately Addressed in the L3 SFS,4,There are no linked L3 requirements for this L2 parent. Referenced Requirement: [L2-FPR-88] The spacecraft shall autonomously reduce its momentum if the spacecraft momentum exceeds an emergency momentum threshold.,6/6/04
ProjectA - TIM - 1088,L2-FPR-87 Not Adequately Addressed in the L3 SFS,2,"The L2 requires FP status and responses to be logged in ""critically powered memory"". If this data is not stored as required by the L2, then there are no linked L3 requirements that address the L2. (Note: it appears that the FP log stored in the UL card will not survive a power outage, if this is the intent of the L2). L3 SFS-905 contains a TBD. Referenced Requirements: [L2-FPR-87] The S/C fault protection shall log a record of its status and responses in critically powered memory to support subsequent ground diagnosis and evaluation. [L3-SFS-905] The Spacecraft shall maintain a FP log in both UL cards and shall be kept in sync within TBD seconds",6/6/04
ProjectA - TIM - 1087,L2-FPR-86 Not Adequately Addressed in the L3 SFS,3,"The L2 requires all pertinent data to be stored in ""critically powered memory"" prior to a reset. The single linked L3 does not address the requirement for ""critically powered memory. L3-SFS-992 uses the term ""exception log"" which is not defined and does not appear in any other FP L3 requirement. If this log is not stored as required by the L2, then there are no linked L3 requirements that address the L2. Note: L3-SFS-650 states, ""The C&DH subsystem shall provide the capability for processor re-initialization after a processor reboot resulting from a cold or warm start"". These terms are not defined in the L3. Referenced Requirements: [L2-FPR-86] The S/C fault protection shall record all pertinent monitor readings and state information to critically powered memory prior to initiating a software-induced processor reset. [L3-SFS-992] The Spacecraft shall store an exception log detailing software processing status in the event of a run-time error causing the flight computer to reset.",6/6/04
ProjectA - TIM - 1086,L2-FPR-80 Not Adequately Addressed in the L3 SFS,4,"L2-FPR-80 requires all autonomous actions to be reported in telemetry and recorded in the FP logs. Unless the term ""event"" is synonymous with ""action taken"" L3-SFS-984/982/981/979 are not related to the L2 requirement. If the FP log (contents not defined in this L3) does not contain all autonomous actions taken by FP, then L3-SFS-905 does not correlate with the L2. The minimum message contents stated in L3-SFS-979 does not address response types and therefore the ""response' part of the requirement could be missing. Referenced Requirements: [L2-FPR-80] Any autonomous action taken by S/C Fault Protection shall be reported in S/C telemetry and recorded in the FP logs. [L3-SFS-1013] The Spacecraft Engine shall provide telemetry flagging and time-tagging of short term, anomalous Engine events, for which recovery was automatic. [L3-SFS-990] The Spacecraft shall log telemetry and/or events necessary to indicate that a critical unit has undergone a Power On Reset (POR). [L3-SFS-984] The Spacecraft shall store all Payload System and Engine FP events in mass memory. [L3-SFS-982] The Spacecraft shall store all ACS mode transition and error events in the FP log. [L3-SFS-981] The Spacecraft shall store all FP event messages in the FP log. [L3-SFS-979] Spacecraft FP shall generate messages for every significant event observed (by UL or OBC monitors) and for every subsequent response. The message shall include at a minimum the monitor id, threshold, and monitor value. [L3-SFS-905] The Spacecraft shall maintain a FP log in both UL cards and shall be kept in sync within 10 messages. The number of messages shall be modifiable by table load. [L3-SFS-903] The Spacecraft shall clearly indicate mode transitions in telemetry and provide indication of Safe Mode entry to required subsystems and assemblies.",6/6/04
ProjectA - TIM - 1085,L2-FPR-79 Not Adequately Addressed in the L3 SFS,3,"The intent of the L2 seems to be the generation of a TLM report that contains specific data pertaining to Safe Mode entry and major events that occurred during Safe Mode. If this implies that the FSW must collect and store specific time correlated data that it would not otherwise do without special commanding, then the linked L3s does not capture the intent of the L2. This data must be collected automatically --------------------------------------- L2-FPR-79 On ground command, the S/C shall generate a telemetry report containing data just prior to and during Safe Mode entry, the current S/C state, and major events within Safe Mode execution. /ProjectA/L3 - Spacecraft and Flight System Requirements Document D-25870: Object L3-SFS-986. Object Text: The Spacecraft FP monitored telemetry shall be stored in spacecraft mass memory (DRAM) for later transmission. /ProjectA/L3 - Spacecraft and Flight System Requirements Document D-25870: Object L3-SFS-985. Object Text: The Spacecraft FP log shall be downlinked during every pass, shall have priority in the operational selection of downlink data, and shall have the ability to be re-transmitted. /ProjectA/L3 - Spacecraft and Flight System Requirements Document D-25870: Object L3-SFS-984. Object Text: The Spacecraft shall store all Payload System and Engine FP events in mass memory. /ProjectA/L3 - Spacecraft and Flight System Requirements Document D-25870: Object L3-SFS-982. Object Text: The Spacecraft shall store all ACS mode transition and error events in the FP log. /ProjectA/L3 - Spacecraft and Flight System Requirements Document D-25870: Object L3-SFS-981. Object Text: The Spacecraft shall store all FP event messages in the FP log.",6/6/04
ProjectA - TIM - 1084,L2-FPR-78 Not Adequately Addressed in the L3 SFS,4,"The linked L3s do not include the L2 requirement that high water marks be cleared by a dedicated command. In addition, it is unclear whether the L3s fully respond to the timing requirements: continuously, periodically, by sequenced command. Referenced Requirements: [L2-FPR-78] Input data used by S/C Fault Protection shall have high water marks downlinked in engineering telemetry or via memory readout, continuously on a periodic basis, or by sequenced command, and be clearable by a dedicated command. Definition: High Water Marks (HWM) are the recorded maximum value of a fault protection monitor input data. It can also cover low water marks for items that are negative or are nominally at non-zero values (i.e. temperature, wheel torque etc...) [L3-SFS-989] The Spacecraft FP shall store a log of hi/low water marks for data being monitored which can be downlinked in real time telemetry. [L3-SFS-986] The Spacecraft FP monitored telemetry shall be stored in spacecraft mass memory (DRAM) for later transmission. [L3-SFS-985] The Spacecraft FP log shall be downlinked during every pass, shall have priority in the operational selection of downlink data, and shall have the ability to be re-transmitted.",6/6/04
ProjectA - TIM - 1083,L2-FPR-77 Not Adequately Addressed in the L3 SFS,4,There are no linked L3 children for this L2 requirement. Referenced Requirement: [L2-FPR-77] Input data used by S/C Fault Protection shall be downlinked in engineering telemetry on a periodic basis.,6/6/04
ProjectA - TIM - 1081,L2-FPR-72 Not Adequately Addressed in the L3 SFS,3,"The L2 requires ""all hardware and software configuration actions --- to be reversible by ground command"". L3-SFS-923 just states ""irreversible configurations"" and therefore is not specific in stating ""all hardware and software configurations"". In addition, if FP happened (through an error) to create a specific hardware or software configuration, the L2 parent states that this action must be ""reversible by ground command"". L3-PSR-330 fully responds to the L2 requirement; however, it is only applicable to the payload system. Since the payload system is specifically identified, it is unclear if this requirement should be imposed on the Engine, as well. Referenced Requirements: [L2-FPR-72] All hardware and software configuration actions taken by all Flight System Fault Protection responses shall be reversible by ground command. [L3-SFS-923] The Spacecraft FP responses shall not initiate irreversible configurations (array deployment is considered normal operational event). [L3-SFS-922] The Spacecraft shall execute any ground commands it receives while FP responses are in progress, and after responses are complete. [L3-PSR-330] All hardware and software configuration actions taken by all Payload System Fault Protection responses shall be reversible by ground command.",6/6/04
ProjectA - TIM - 1080,L2-FPR-71 Not Adequately Addressed in the L3 SFS,4,"The payload system is specifically identified in L3-PSR-329 as being linked to this parent L2. Given this, it is unclear if the Engine should be linked as well. Referenced Requirements: [L2-FPR-71] Flight System Fault Protection shall allow ground operators to enable any previously disabled individual test or response. [L3-SFS-978] Spacecraft FSW FP monitors and responses shall be individually enabled and disabled via command. [L3-SFS-977] Spacecraft FP software response enable defaults and sequence contents shall be in-flight modifiable via commands, table, or parameter loads. [L3-SFS-976] Spacecraft FSW FP monitor enable defaults, threshold trigger values, persistence and responses shall be run-time modifiable by in-flight commands, table or parameter uploads.[L3-PSR-329] Payload System Fault Protection shall allow ground operators to enable any previously disabled individual test or response.",6/6/04
ProjectA - TIM - 1079,L2-FPR-70 Not Adequately Addressed in the L3 SFS,3,"The first four linked L3s do not address the L2 requirement for ""-in such a way that it cannot be autonomously re-enabled"". L3-PSR-328 links the L2 to the payload system but not to the S/C FP as implied by the L2. The full intent of the L2 is not captured in any of the linked L3s. Referenced Requirements: [L2-FPR-70] Flight System Fault Protection shall allow ground operators to disable any previously enabled individual test or response, in such a way that it cannot be autonomously re-enabled. [L3-SFS-1004] Spacecraft Engine autonomous functions shall be capable of being enabled or disabled by ground command. [L3-SFS-977] Spacecraft FP software response enable defaults and sequence contents shall be in-flight modifiable via commands, table, or parameter loads. [L3-SFS-976] Spacecraft FSW FP monitor enable defaults, threshold trigger values, persistence and responses shall be run-time modifiable by in-flight commands, table or parameter uploads. [L3-SFS-969] The Spacecraft shall be designed to allow the ground to generate and upload FSW monitors and autonomous responses. [L3-PSR-328] Payload System Fault Protection shall allow ground operators to disable any previously enabled individual test or response, in such a way that it cannot be autonomously re-enabled.",6/6/04
ProjectA - TIM - 1078,L2-FPR-69 Not Adequately Addressed in the L3 SFS,4,"None of the linked L3 identifies the L2 requirement to, ""disable"" monitors and responses. Also it is unclear in L3-SFS-976 & 977 if the term ""response enable defaults"" is the same as ""enable responses"". [L3-SFS-936] It is unclear why only the ACS function is linked to this L2. It gives the impression that there is something different about ACS thresholds and persistence being modified in this case - the other FSW functions containing monitors are not mentioned. Referenced Requirements: [L2-FPR-69] All software fault protection shall have monitor and response enable and disables, threshold trigger values, and persistences. In addition, fault protection parameters that may have to be changed shall be run-time modifiable by in-flight commands, table or parameter uploads. [L3-SFS-977] Spacecraft FP software response enable defaults and sequence contents shall be in-flight modifiable via commands, table, or parameter loads. [L3-SFS-976] Spacecraft FSW FP monitor enable defaults, threshold trigger values, persistence and responses shall be run-time modifiable by in-flight commands, table or parameter uploads. [L3-SFS-969] The Spacecraft shall be designed to allow the ground to generate and upload FSW monitors and autonomous responses. [L3-SFS-936] All Spacecraft ACS performance and component monitor thresholds and persistence shall be in-flight modifiable via commands or table/parameter loads.",6/6/04
ProjectA - TIM - 1077,L2-FPR-66/67/68 Not Adequately Addressed in the L3 SFS,2,"There are no linked L3 requirements for the following L2s: [L2-FPR-66] The ProjectA FP design parameter selection shall take into consideration mass properties effects throughout the mission. [L2-FPR-67] Spacecraft Autonomous fault protection enable/ disable strategy, threshold trigger values, and persistence values shall be established considering mission phase applicability and operational activity and shall be documented in the FP design note. [L2-FPR-68] The enable/disable, threshold, and persistence values shall be selected to ensure safety but not hair triggered to cause inadvertent F/P entry/ execution, but not too loose as to cause unnecessary extreme FP responses.",6/6/04
ProjectA - TIM - 1076,L2-FPR-65 Not Adequately Addressed in the L3 SFS,3,"The L2 identifies Safe Mode. L3-SFS-902 - Item (2) in this requirement is not consistent with the L2 parent (exit from Safe Mode can only be accomplished through ground commands). None of the linked L3 children address the need to maintain operation of critical components (e.g., CEU, ----). L3-SFS-897 - The topic of this L3 is preventing solar array deployment during launch and separation. It is unclear how this relates to the definition of Safe Mode. Referenced Requirements: [L2-FPR-65] PIP 11.5.1.3 Spacecraft Operations: Safe Mode - In Safe Mode, the fault protection system shall put the spacecraft in a safe, quiescent, ground commandable state transmitting, a downlink signal. This safe state is achieved by shedding noncritical loads (including Engine), maintaining the solar arrays perpendicular to the sun, and awaiting ground commands. Exit from Safe Mode can only be accomplished through ground commands to return to normal operations, after the anomaly has been identified and the resumption of operations is verified to be safe. Note: A safe state is a state in which the spacecraft thermal condition and inertial orientation are stable, the spacecraft is commandable and is transmitting a downlink signal, and requires no immediate commanding to ensure spacecraft health and safety. Critical units/loads definition: Components that are required to maintain a power/thermal safe environment allowing operator communication (e.g. CEU, ACE, PDU, HVEA, IRU, RCS, TWTA, SDST).] [L3-SFS-908] No single failure of the Flight System shall permanently prevent the spacecraft from meeting any of its Level 2 pointing control requirements. [L3-SFS-906] The Spacecraft shall be capable of communicating with the ground station in any mode following any single fault. [L3-SFS-904] No single fault in the Flight System shall preclude use of and entry to Safe Mode from any other mission mode. [L3-SFS-902] The Flight System shall not exit Safe Mode until either (1) Normal operations entry is initiated by ground command, or (2) A subsequent fault results in flight computer reset/swap [L3-SFS-901] The Flight System Safe Mode shall provide the capability to communicate with the ground via at least one LGA for at least 58 days at any point in the mission with no MOS intervention. [L3-SFS-900] The Flight System Safe Mode shall maintain the Spacecraft in a power positive, thermally safe configuration by orienting the S/C +X-axis to within 8 deg (TBR) of the sun line for at least 58 days at any point in the mission with no MOS intervention. [L3-SFS-899] The Spacecraft FP design will include transition to Safe Mode for a minimum of the following failure modes: . ACS performance degradation (attitude solution, pointing ability, rate/momentum) . EPS performance degradation (array current, bus voltage, battery charge) . CDH functional degradation (OBC software, critical unit hardware, 1553 data bus) . Telecom functional loss (command timeout) [L3-SFS-898] The Flight System shall utilize a Safe Mode of operation allowing the following functions for at least 58 days with a goal of being indefinitely stable: . OBC control of spacecraft subsystems . ACS control to sun pointing (pseudo-inertial fixed position) . Solar arrays fixed position . Telecommand paths active (uplink/downlink) . Send safe notification to instruments/Engine . Shed non-critical loads to maintain spacecraft health . Maintain active FP for powered components and subsystem performance [L3-SFS-897] No single fault of the Spacecraft shall allow either solar array to deploy prematurely during launch and separation (before spindown).",6/6/04
ProjectA - TIM - 1075,L2-FPR-64 Not Adequately Addressed in the L3 SFS,4,"The L2 uses the term “failure”. The linked L3 uses the term “fault”. The FP Performance Specification defines these terms. They are not defined in the L2 or the L3. If they are not the same (and they are not as defined in the FP Performance Specification), then the L3 is not consistent with the L2. ------------------------------------- L2-FPR-64 After launch vehicle separation, no single failure of the S/C shall cause the S/C to keep its attitude control system idle. /ProjectA/L3 - Spacecraft and Flight System Requirements Document D-25870: Object L3-SFS-904. Object Text: No single fault in the Flight System shall preclude use of and entry to Safe Mode from any other mission mode.",6/6/04
ProjectA - TIM - 1074,L2-FPR-63 Not Adequately Addressed in the L3 SFS,2,"The intent of the L2 is to prevent a single failure from causing the S/C to activate its attitude control system before launch vehicle separation. If a single failure results in a power up or electronic assembly reset, then the linked L3 seems to address the L2 requirement. However, a failure could result in actions other than ""initialization upon power-up or a reset ---"", therefore, the linked L3 does not fully address the intent of the L2. The L3 does not address the full scope of the parent L2. Referenced Requirements: [L2-FPR-63] No single failure shall cause the S/C to activate its attitude control system before launch vehicle separation. [L3-SFS-896] The Flight System shall initialize, upon powerup or reset of any electronic assemblies, to a state which does not violate any safety constraints for ATLO and Launch.",6/6/04
ProjectA - TIM - 1073,L2-FPR-62 Not Adequately Addressed in the L3 SFS,2,"The intent of the L2 is to ""provide redundant detectors to determine initiation or termination of critical events"". The linked L3 focuses on processor resets during mission-critical events. The L3 does not address the intent of the L2. Referenced Requirements: [L2-FPR-62] When a mission critical event (e.g. Solar Array Deployment) requires initiation or termination via autonomous event detection, physically or functionally redundant event detectors shall be used to guard against either .false negative. or .false positive. indications from a single detector. [L3-SFS-974] The Spacecraft FSW shall be designed to accommodate processor resets during mission-critical events, such as launch and solar array deployments.",6/6/04
ProjectA - TIM - 1072,L2-FPR-61 Not Adequately Addressed in the L3 SFS,2,"The focus of the L2 is, ""no single fault --- shall prevent solar array deployment"". L3-SFS-950 addresses only failures in arming and firing circuits and redundant electrical firing mechanisms. L3-SFS-909 focuses on Safe Mode and therefore does not consider faults that could prevent solar array deployment. The linked L3s do not fully address the intent of the L2. Referenced Requirements: [L2-FPR-61] No single fault during or after launch shall prevent the solar array deployment (i.e. in C&DH, ACE, EPS) [L3-SFS-950] The Spacecraft shall have primary and redundant arming and firing circuits and redundant electrical firing mechanisms for each deployment tiedown to ensure solar array deployment. [L3-SFS-909] The Flight System shall initialize to a safe state following initial powerup, component reset or switch or recovery from Phoenix mode. Safe State: prevent powering previously failed unit, use of actuators while mated, monitor separation and initiate separation sequence and transition to Safe Mode when appropriate.",6/6/04
ProjectA - TIM - 1071,L2-FPR-60 Not Adequately Addressed in the L3 SFS,3,"The intent of the L2 seems to be, ""ensure solar array deployment occurs under adverse conditions, e.g., an under voltage or OBC swap"". L3-SFS-974 addresses processor resets, not cold undervolt or swaps. L3-SFS-904 focuses on Safe Mode. Apparently, Safe Mode entry assumes that the solar arrays are deployed. It appears that none of the linked L3 children satisfy the intent of the parent L2. Referenced Requirements: [L2-FPR-60] The ProjectA Solar array deployment shall be able to performed from a EEPROM load (i.e. tolerant to an undervolt or OBC processor swap) [L3-SFS-974] The Spacecraft FSW shall be designed to accommodate processor resets during mission-critical events, such as launch and solar array deployments. [L3-SFS-904] No single fault in the Flight System shall preclude use of and entry to Safe Mode from any other mission mode.",6/5/04
ProjectA - TIM - 1070,L2-FPR-59 Not Adequately Addressed in the L3 SFS,3,"L3-SFS-2166 does not include the L2 requirement for a partial solar array deployment (partial in this case means one array is only partially extended). It is unclear why L3-SFS-974 is linked to this L2 because it focuses on processor resets and does not address nominal deployment or single failed or partial solar array deployments. Referenced Requirements: [L2-FPR-59] The spacecraft shall be power-safe, thermal-safe, controllable, commandable and provide downlink for: 1) a nominal deployment sequence. 2) a single failed or partial solar array deployment. Note: a nominal separation and both solar arrays failed to deploy is not covered because it is a 2 fault scenario and as such is beyond the single point failure requirement [L3-SFS-2166] The Spacecraft shall autonomously attain a Safe Mode of operation following a nominal launch vehicle separation with one or both solar arrays deployed. [L3-SFS-975] The Spacecraft FSW shall support predefined critical operations autonomously, including separation events (rate null, deployment, sun acquisition). [L3-SFS-974] The Spacecraft FSW shall be designed to accommodate processor resets during mission-critical events, such as launch and solar array deployments.",6/5/04
ProjectA - TIM - 1069,L2-FPR-57 Not Adequately Addressed in the L3 SFS,3,"The subject of this L2 is ""fault protection responses (to faults that occur) during mission critical events"". L3-SFS-975 addresses supporting critical operations but does not mention fault responses. L3-SFS-974 only addresses processor resets during critical events (does not include all faults). L3-SFS-909 does not address fault response during critical events. None of the three linked L3s fully reflect the intent of the L2. Referenced Requirements: [L2-FPR-57] During time critical mission events (i.e. launch, separation, solar array deployments and initial sun acquisition), the flight fault protection response shall autonomously re-establish the needed spacecraft functionality to permit successful completion of the mission critical event. [L3-SFS-975] The Spacecraft FSW shall support predefined critical operations autonomously, including separation events (rate null, deployment, sun acquisition). [L3-SFS-974] The Spacecraft FSW shall be designed to accommodate processor resets during mission-critical events, such as launch and solar array deployments. [L3-SFS-909] The Flight System shall initialize to a safe state following initial powerup, component reset or switch or recovery from Phoenix mode. Safe State: prevent powering previously failed unit, use of actuators while mated, monitor separation and initiate separation sequence and transition to Safe Mode when appropriate.",6/5/04
ProjectA - TIM - 1068,L2-FPR-56 Not Adequately Addressed in the L3 SFS,3,"The L2 states that processor resets are to be accommodated during mission critical events such as launch and solar array deployments. The single linked L3 only addresses solar array deployment (and it focuses on not allowing solar array deployment). It is assumed that within the set ""no single fault"" there could be faults that result in a processor reset (the subject of the L2). In addition, launch vehicle separation and initial sun acquisition are critical events (according to L2-FPR-57) that are not specifically mentioned in the linked L3. Referenced Requirements: [L2-FPR-56] Flight software shall be designed to accommodate processor resets during mission-critical events, such as launch and solar array deployments. [L3-SFS-897] No single fault of the Spacecraft shall allow either solar array to deploy prematurely during launch and separation (before spindown).",6/5/04
ProjectA - TIM - 1067,L2-FPR-52 Not Adequately Addressed in the L3 SFS,2,"The L2 requirement is to, ""use physically or functionally redundant error detectors to guard against false indications from a single sensor"". The intent of the L2 is not captured in the single linked L3. The L3 omits the need for extra detectors to guard against FP false alarms that could result in severe responses. Just range checking to detect failed or corrupted sensor data does not meet the intent of the L2. Referenced Requirements: [L2-FPR-52] When an autonomously detected error causes a severe response (e.g. downlink loss, irreversible hardware swaps, autonomously irreversible hardware swaps for critical units, large use of expendables), physically or functionally redundant error detectors shall be used to guard against .false positive. indications from a single detector. Critical units definition: Components that are required to maintain a power/thermal safe environment allowing operator communication (e.g. CEU, ACE, PDU, HVEA, IRU, RCS, TWTA, SDST).] [L3-SFS-973] The Spacecraft FP shall perform range checking to detect failed or corrupted sensor data where redundant sensors are used.",6/5/04
ProjectA - TIM - 1066,L2-FPR-50 Not Adequately Addressed in the L3 SFS,3,"Discussions that occurred during the FP CDR and during the EngCntrl SRR seemed to indicate that the S/C is responsible for Engine component redundancy management. L3-SFS-976/977 are concerned with ""modifying"" parameters, etc. L3-SFS-926 address use of redundant units but it is unclear if this pertains to the Engine. The need to provide for Engine software uploads is not mentioned in the linked L3s. Referenced Requirements: [L2-FPR-50] The Spacecraft shall have no autonomous redundancy management for the Engine system, though not preclude it for post launch FSW uploads, with the exception of any DS1 heritage internal EngCntrl Fault Protection on the Engine feed system. This is to minimize fault protection complexity in the EngCntrl and OBC. [L3-SFS-977] Spacecraft FP software response enable defaults and sequence contents shall be in-flight modifiable via commands, table, or parameter loads. [L3-SFS-976] Spacecraft FSW FP monitor enable defaults, threshold trigger values, persistence and responses shall be run-time modifiable by in-flight commands, table or parameter uploads. [L3-SFS-926] The Spacecraft FP shall autonomously use redundancy for critical units where autonomy shall be limited by the number of thresholds and design of fault response progression.",6/5/04
ProjectA - TIM - 1065,L2-FPR-49 Not Adequately Addressed in the L3 SFS,3,"It is unclear if the L2 requirement is correct. For example, there should be a ""manager"" that decides if a FC has failed and switches operation over to the back-up unit (unless the ground has complete responsibility for switching to the back-up). Neither of the two linked L3s address the intent of the L2, in fact just the opposite, as L3-SFS-926 requires the use of redundancy (but it is unclear if 926 pertains to the instruments). Referenced Requirements: [L2-FPR-49] The Spacecraft shall have no autonomous redundancy management for the science instruments. [L3-SFS-926] The Spacecraft FP shall autonomously use redundancy for critical units where autonomy shall be limited by the number of thresholds and design of fault response progression. [L3-SFS-889] Spacecraft FP shall detect system-level anomalies, based on predetermined performance thresholds, and take autonomous corrective action when necessary to keep the Spacecraft in a power-positive, thermally safe, commandable state.",6/5/04
ProjectA - TIM - 1064,L2-FPR-47 Not Adequately Addressed in the L3 SFS,2,"The intent of the L2 is to allow FP actions to be ""autonomously reversible"" for critical units. None of the five linked L3s address this intent. L3-SFS-920 states that the OBC can be changed up to three times but this requirement does not address the other critical units identified in the L2. Also, it does not state that this is done autonomously. Referenced Requirements: [L2-FPR-47] Any autonomous redundancy management for critical units shall be autonomously reversible, but shall be limited by counters or by the design of the fault response progression (i.e. low level to high level swaps). Critical units definition: Components that are required to maintain a power/thermal safe environment allowing operator communication (e.g. CEU, ACE, PDU, HVEA, IRU, RCS, TWTA, SDST, WTSs).] [L3-SFS-929] Spacecraft FP shall autonomously enable all monitors required for critical unit health and safety including after critical unit resets or boot-ups. Critical unit definition: Components that are required to maintain a power/thermal safe environment allowing operator communication (e.g. CEU, ACE, PDU, HVEA, IRU, RCS, TWTA, SDST). [L3-SFS-926] The Spacecraft FP shall autonomously use redundancy for critical units where autonomy shall be limited by the number of thresholds and design of fault response progression. [L3-SFS-921] In the event of a persistent fault the Spacecraft FP monitor/response system shall prevent infinite loops and exhaust its response after a reasonable number of tries [L3-SFS-920] The Spacecraft FP shall be able to have its 'prime' OBC changed up to three times per FP event (e.g. OBC A-B-A-B) Definition: an FP event is a single fault, SEU, operator error or accidental FP trip OR a single fault, plus a non-simultaneous SEU, operator error or accidental FP trip.",6/5/04
ProjectA - TIM - 1063,L2-FPR-43 Not Adequately Addressed in the L3 SFS,3,"The L2 addresses the need for multiple signatures to identify certain types of faults. The linked L3 does not address multiple signatures but rather focuses on ""system level anomalies"" as if this term is equivalent to ""multiple signatures"". For this reason the single linked L3 does not capture the intent of the L2 requirement. Referenced Requirements: [L2-FPR-43] The FP system shall be designed to autonomously recognize sets of symptoms stemming from any single failure when a fault can only be recognized by multiple signatures. Note some faults can be waived if it can be shown that high-level fault protection can mitigate the problem. [L3-SFS-889] Spacecraft FP shall detect system-level anomalies, based on predetermined performance thresholds, and take autonomous corrective action when necessary to keep the Spacecraft in a power-positive, thermally safe, commandable state.",6/4/04
ProjectA - TIM - 1062,L2-FPR-39 Not Adequately Addressed in the L3 SFS,2,"None of the linked L3s include the L2 requirement ""--and shall be demonstrated (by analysis) to be free of deadlocks."", i.e., the (by analysis) is missing. [L3-SFS-988 does not state that, ""suspending execution of stored command sequences"" will ""preclude collisions."" [L3-SFS-970] This L3 deals with ""missing inputs"" and therefore it is unclear how it directly correlates to ""precluding collisions"". [L3-SFS-925] It is unclear that the ""system design"" can prevent deadlocks. This requirement seems to rely on an existing ""design"" in a way that the result will be as stated in the L2 (the L2 requirement is not used to drive the L3 requirements/design). Referenced Requirements: [L2-FPR-39] The FP system design shall preclude the collision of overlapping fault responses and shall be demonstrated (by analysis) to be free of deadlocks. Definition: A deadlock is the condition where two processes cannot proceed because they both simultaneously require the exclusive use of shared resources held by one another. [L3-SFS-988] Spacecraft FP responses shall suspend execution of programmed, on-board stored command sequences when this becomes necessary, where the termination event will be recorded in telemetry. [L3-SFS-970] The Spacecraft FP monitors shall be designed to tolerate and continue functioning in situations where inputs are temporarily missing and respond accordingly. [L3-SFS-925] The Spacecraft FP responses shall be configured to use the system design such that no deadlock occurs (e.g. aborting VML commanding, command timing to dedicated components, etc.) [L3-SFS-917] All Flight System FP responses allocated to hardware shall not conflict with software fault modes of spacecraft operation.",6/4/04
ProjectA - TIM - 1061,L3 SFS requirements need rephrasing for added clarity,5,"Requirements L3-SFS-780 thru 786 in the Spacecraft & Flight Systems Requirements Document are single phrases which should all become full sentences. The phrases are as follows: ""Issue any command in the Command and Telemetry Dictionary"" ""Call a function"" ""Spawn a function"" ""Branch to another instruction anywhere with the same function"" ""Assign expression values to variables"" ""Terminate a thread of execution"" ""Load a module onto a virtual machine"" There are two ways of handling this problem. The first is exactly like it is worded in the FGICD 3.1.1.1(6) with the introductory phrase: ""The Flight System shall be capable of the following:"". After this phrase, the requirements above are enumerated as steps (a) thru (g). The introductory phrase in L3-SFS-779 does not qualify as a cure to this problem because that phrase does not have a colon and the requirements below it are not sub-enumerated. The second way of handling this problem is to have a phrase in front of each of the above requirements such as: ""The Flight Software shall have the capability to"".",6/2/04
ProjectA - TIM - 1060,L2-PRD-582 not satisfied by L3-SFS-707,2,"1. L2-PRD-582 specifies that the spacecraft shall be able to report onboard RCS and Engine thruster activity with specific uncertainties. L3-SFS-707 is the only requirement in the L3 SCFSRD that is linked as a child requirement to L2-PRD-582. L3-SFS-707 does not specify what activities will be reported on, or how the data for the activities will be generated, or to what accuracy the data will be generated. L2-PRD-582 is not satisfied by L3-SFS-707. Additional L3 SCFSRD requirements are needed to satisfy the functionality described in L2-PRD-582. 2. The ""be"" in L3-SFS-707 should be deleted. Referenced Requirements: [L2-PRD-582] Allocation: The Spacecraft System shall be able to report onboard RCS and Engine thruster activity with uncertainties of less than 2 mm/sec (1 sigma) over 5 minutes, and 2 cm/sec (1 sigma) in 1 day. [L3-SFS-707] The Flight Software shall be support telemetry required to report onboard RCS and Engine thruster activity to the MOS.",6/2/04
ProjectA - TIM - 1059,L2-FPR-37 Not Adequately Addressed in the L3 SFS,2,"Neither of the two linked L3s addresses the requirement for a ""response tier architecture that shall always flow up to a higher level response""; hence, the L2 requirement is not captured in the L3. L3-SFS-921 may imply that the FP design shall use a ""tiered architecture"" but it is not specifically stated. Referenced Requirements: [L2-FPR-37] The ProjectA spacecraft autonomous response tier architecture shall always flow up to a higher level response. [L3-SFS-921] In the event of a persistent fault the Spacecraft FP monitor/response system shall prevent infinite loops and exhaust its response after a reasonable number of tries [L3-SFS-889] Spacecraft FP shall detect system-level anomalies, based on predetermined performance thresholds, and take autonomous corrective action when necessary to keep the Spacecraft in a power-positive, thermally safe, commandable state.",6/2/04
ProjectA - TIM - 1058,L2-PRD-233: Missing requirement links to L3 SCFSRD requirements,3,"The Project Requirements Document states in requirement L2-PRD-233: ""The Flight System shall telemeter information that is sufficient to estimate the remaining hydrazine mass to within 10kg or 5%, whichever is smaller"". This requirement is not linked to any requirement in the L3 Spacecraft & Flight Systems Requirements Document. It appears that this requirement should be linked to L3-SFS-147 and L3-SFS-489. In addition, a software requirement may need to be added to address collection and telemetry of the necessary information to perform the estimate. Referenced Requirements: [L2-PRD-233] Allocation: The Flight System shall telemeter information that is sufficient to estimate the remaining hydrazine mass to within 10 kg or 5%, whichever is smaller. [L3-SFS-147] The ACS shall monitor the on time of each thruster for use in determining the delivered impulse and relative hydrazine consumption. [L3-SFS-489] Telemetry data necessary for on-ground residual propellant evaluation shall be provided. An established method for residual propellant measurement shall also be provided. It shall be possible to determine the amount of on-board propellant to an accuracy of less than or equal to 2 kg during ground processing and all times during the mission.",6/2/04
ProjectA - TIM - 1056,L2-FPR-33 Not Adequately Addressed in the L3 SFS,3,"Both the L2 and the linked L3 point to the FP Design Note for constraint definition, and the L2 points to instrument UIRDs for the same definitions. During the FP CDR it was stated that the FP Design Note is in reality the FP Performance Specification. In any event, there is the potential that the constraints may be omitted or incorrect due to the referencing. In addition, splitting the requirements between multiple documents can create CM problems. This L2 requirement focuses on ""shall not permit its attitude to violate ---"". L3-SFS-924 addresses safing actions ""if a violation occurs"". Hence, the L3 does not address the intent of the L2. L3-SFS-913 addresses ""impending power down"" and, therefore, seems to be totally disconnected from the L2. Referenced Requirements: [L2-FPR-33] At all times between initial attitude acquisition and the end of the mission, the spacecraft shall not permit its attitude to violate the sun intrusion keepout zone requirements of any component when the Spacecraft is under active control. Note: It is expected that when the spacecraft loses attitude knowledge or control, it will be far enough away from any sun intrusion keepout zone to avoid damage until safe protective measures can be taken. Note: Flight and Ground Sun constraints are documented in the FP Design Note (ProjectA-DN-SE-002) which reference the VIR and Framing Camera UIRDs for instrument sun constraint information. [L3-SFS-924] The Spacecraft FP shall monitor sun angle and take necessary safing actions if a violation occurs (including safing components and FS configuration). NOTE: constraints are documented in the FP Design Note (ProjectA-DN-SE-002). [L3-SFS-913] The Spacecraft shall inform the necessary Flight System components (Payload and Engine) of an impending power down prior to power off when possible.",6/2/04
ProjectA - TIM - 1055,L2-FPR-32 Not Adequately Addressed in the L3 SFS,4,"The linked L3s point to the FP Design Note for constraint definition which in turn point to instrument UIRDs. During the FP CDR it was stated that the FP Design Note is in reality the FP Performance Specification. In any event, there is the potential that the FP Design Note may overlook these constraints. In addition, splitting the requirements between multiple documents can create CM problems. Referenced Requirements: [L2-FPR-32] No single Spacecraft failure, SEU, operator error or accidental FP trip shall cause sun exposure damage to susceptible components (e.g. instruments). [L3-SFS-924] The Spacecraft FP shall monitor sun angle and take necessary safing actions if a violation occurs (including safing components and FS configuration). NOTE: constraints are documented in the FP Design Note (ProjectA-DN-SE-002). [L3-GS-722] At all times between initial attitude acquisition and the end of the mission, the MOS shall ensure that the Flight System is not commanded any closer to the sun that the MOS keep out zones as defined in the FP Design Note (ProjectA-DN-SE-002) which references the VIR and Framing Camera UIRDs for instrument sun constraint information. [L3-GS-106] The ground segment shall design and check each sequence and each realtime command to ensure that flight rules and constraints are not violated",6/2/04
ProjectA - TIM - 1054,L2-FPR-31 Not Adequately Addressed in the L3 SFS,3,"The L2 requires ""fault containment regions to prevent a single fault from impacting functionality or preventing use of multiple units or subsystems"". Three of the linked L3s specifically focus on storage, collection and distribution of science instrument and data. L3-SFS-887 only specifies the existence of ""fault containment regions around specific components"". The L3 has lost some of the specificity of the L2 in that it does not state, ""prevent a single fault from impacting ---"". Verification that ""fault containment regions"" exist can be done by inspection. Verification that there is fault containment (prevention from impacting) is another story and must be shown by testing and/or analysis. Referenced Requirements: [L2-FPR-31] The ProjectA Project Shall have fault containment regions to prevent a single fault from impacting functionality or preventing use of multiple units or subsystems. [L3-SFS-948] No single failure of the Spacecraft shall prevent the storage of science data for later transmission. [L3-SFS-947] No single failure of the Spacecraft shall prevent the collection of science data from more than one Science Instrument. [L3-SFS-946] No single failure of the Spacecraft shall permanently prevent the distribution of commands to more than one Science Instrument. [L3-SFS-887] The Flight System shall have fault containment regions around each of the following flight system sections: [HW] CEU, ACE, ACE peripherals (reaction wheel, gyro, thruster, sun sensor, SADE/SADA) , SDST, PDU/HVEA, EngCntrl, EngCntrl peripherals (PPU, thruster, gimbal assembly, XFA), and Instruments (FC, VIR, GRaND) - [SW] flight system processors",6/2/04
ProjectA - TIM - 1053,L2-FPR-30 Not Adequately Addressed in the L3 SFS,3,"L2-FPR-30 seems to imply that the both the S/C (autonomously) and the MOS are responsible for ""conserving non-renewable resources"". The single linked L3 simply states that, ""the MOS shall analyze ---"". It appears that this L2 requires analysis of the FP design, before launch, to show that the S/C (autonomous FP) and the MOS will ""conserve"". The linked L3 does not address the intent of the parent L2. Referenced Requirements: [L2-FPR-30] The ProjectA Project shall conserve non-renewable resources (e.g., Hydrazine, Xenon, EEPROM writes, ON/OFF cycles, battery cycles, instrument cover cycles etc.,) during autonomous fault responses and during normal operations. [L3-GS-1061] The MOS shall analyze data affecting the utilization of renewable and non-renewable spacecraft resources (e.g. power and temperature cycling, gyro revolutions, reaction wheel de-saturations, momentum, propellant usage, key on/off cycles, actuations).",6/2/04
ProjectA - TIM - 1052,L2-FPR-29 Not Adequately Addressed in the L3 SFS,3,"The L2 identifies fixed amounts of Hydrazine and Xenon that can be lost in a worst single event scenario. None of the linked L3's states the specific loss of consumables weight limits. Referenced Requirements: [L2-FPR-29] No single FP event with no ground contact for 58 days shall cause a loss of enough Hydrazine or Xenon propellant to prevent fulfillment of the minimum L1 requirements. Specifically, no more than 5 kg of hydrazine and 10 kg of Xenon shall be consumed in the worst single event scenario. Definition: an FP event is a single fault, SEU, operator error or accidental FP trip OR a single fault, plus a non-simultaneous SEU, operator error or accidental FP trip. [L3-GS-73] The MOS shall develop and maintain contingency plans and recovery procedures for anomalies whose recovery response time would result in a significant threat to the achievement of level 1 requirements. [L3-SFS-1020] The Spacecraft FP shall monitor hydrazine tank pressure to prevent bulk loss of propellant from otherwise undetected leaks below the latch valves. [L3-SFS-1019] The Spacecraft RCS shall be single fault tolerant to all liquid leakage within the scope of the ProjectA SFT Exemption List by use of latch and thrust valve implementation. [L3-SFS-1012] The Spacecraft Engine shall maintain functions required for the Safe State without ground or spacecraft intervention for at least 58 days. [L3-SFS-1011] The Spacecraft Engine shall be capable of maintaining any operational or safe ground commanded state for at least 58 days without damaging components. [L3-SFS-1003] The Spacecraft Engine shall provide all control and monitoring functions required for autonomous Engine operation, relying on the Spacecraft for power, command, thrust vector command and telemetry interfaces. [L3-SFS-1000] The Spacecraft Engine shall be capable of monitoring component faults (EngCntrl, PPU, XFA) and autonomously initiating corrective action.",6/1/04
ProjectA - TIM - 1051,FP L2-FPR-20 Requirement Not Adequately Addressed in the L3 SFS,3,"The L2 requirement focuses on the ""quiescent"" radiation environment. L3-SFS-939 addresses ""unexpected large solar flares and less than once per week resets"". Hence, this linked L3 appears to be unrelated to the L2. L3-SFS-927 states that, ""the components will be identified, analyzed and mitigated to minimize S/C safing"". This does not appear to be consistent with the L2: ""the predicted frequency shall be less than 3 years"". If there are say two ""events"" in 3 years, L3-SFS-927 does not constrain the predicted frequency to be less than once per 3 years Referenced Requirements: [L2-FPR-20] The predicted frequency of Safe Mode entry due to S/C single event effects from the quiescent radiation environment (ref ERD JPL D-25841) shall be less than once per 3 years. [L3-SFS-939] The predicted frequency of Spacecraft C&DH resets due to single event effects from an unexpected large solar flare (ref Environmental Requirements Document Doc # JPL D-25841) shall be less than once per week. [L3-SFS-927] Spacecraft components and interfaces with upset rates greater than once per 3 years for the prescribed quiescent environment will be identified, analyzed, and mitigated to minimize S/C safing.",6/1/04
ProjectA - TIM - 1050,FP L2-FPR-28 Requirement Not Adequately Addressed in the L3 SFS,2,"The L2 states ""---shall detect and stop the source of anomalous delta V ----"". The three referenced L3 requirements address the ""detect"" part of the requirement, including single fault tolerance to liquid leakage. L3-GS-73 is a MOS requirement that addresses ""maintaining contingency plans and procedures""; however, it does not state that these are loaded in the S/C, are part of the FP recovery process, and together with the other L3 requirements will result in a design that prevents more than 10cm/sec of delta V. L3-SFS-935 contains a TBR-P. The linked L3s do not capture the full intent of the parent L2. Referenced Requirements: [L2-FPR-28] No single FP event of the spacecraft shall impart more than 10cm/sec TBR of delta V during orbit phase to the spacecraft before autonomous fault protection responses shall detect and stop the source of the anomalous delta V. Definition: an FP event is a single fault, SEU, operator error or accidental FP trip OR a single fault, plus a non-simultaneous SEU, operator error or accidental FP trip. [L3-GS-73] The MOS shall develop and maintain contingency plans and recovery procedures for anomalies whose recovery response time would result in a significant threat to the achievement of level 1 requirements. [L3-SFS-1019] The Spacecraft RCS shall be single fault tolerant to all liquid leakage within the scope of the ProjectA SFT Exemption List by use of latch and thrust valve implementation. [L3-SFS-935] The Spacecraft ACS thruster monitor mechanism and threshold shall allow detection of malfunction prior to excessive thrusting resulting in a total delta-V of 10 cm/sec (TBR-P). [L3-SFS-934] The Spacecraft ACS shall monitor commands sent to thrusters under specified conditions to determine if a possible leak is present.",6/1/04
ProjectA - TIM - 1048,FP L2-FPR-7 Requirement Not Adequately Addressed in the L3 SFS,3,"The referenced L3 requirements address ""fail safe"" to a general degree. There is no definition of ""critical faults"" or ""specific non-critical faults"" in either the L2-FPR-7 or the linked L3 requirements. Therefore, the L3 requirements do not specifically specify fail safe for critical faults or fail operational or non-critical faults. L3-SFS-1007 seems to imply some form of ""fail operational"". L3-SFS-916 addresses both fail operational and fail safe but only in general terms. L3-SFSA-899 specifies a limited number of failure modes for transitioning to safe mode. The FP CDR Chart #20 states, ""transition to safe modes from most faults"". In addition, when questioned about this subject during the FP CDR (why do most responses to faults seem to be ""fail safe?""), the presenter stated that, ""they have no requirement to fail operational"". Other FP CDR charts seem to indicate a combination of safe mode and other actions (e.g., swap components, etc.). If the intent of L2-FPR-7 is to fail safe for only a defined, limited set of ""critical faults"" and fail operational for all others it appears that the SFS L3 and CDR material are not specific about faults that cause ""fail operational"" versus ""fail safe"". Referenced Requirements: [L2-FPR-7] The ProjectA Spacecraft shall fail safe for critical faults and shall have the ability to fail operational for specific non-critical faults. Definition: critical faults are those that may endanger s/c health if not responded to, where that response interrupts normal operations or impairs execution of future (pre-loaded) operational sequences. [L3-SFS-1007] The Spacecraft Engine shall be capable of automatically clearing designated faults and returning to normal operating conditions if permitted by hardware or software constraints. [L3-SFS-916] The Flight System FP design shall have capability to: . Respond to minor anomalies without interrupting normal operations . Autonomously switch/reset components w/temporary interruption of normal operations . Autonomously abort normal operations and transition to safe state awaiting ground recovery [L3-SFS-915] The Spacecraft shall reduce the Engine thrust setting at least once in response to a selected power level (battery SOC) without aborting the thrust profile. [L3-SFS-904] No single fault in the Flight System shall preclude use of and entry to Safe Mode from any other mission mode. [L3-SFS-899] The Spacecraft FP design will include transition to Safe Mode for a minimum of the following failure modes: . ACS performance degradation (attitude solution, pointing ability, rate/momentum) . EPS performance degradation (array current, bus voltage, battery charge) . CDH functional degradation (OBC software, critical unit hardware, 1553 data bus) . Telecom functional loss (command timeout) [L3-SFS-889] Spacecraft FP shall detect system-level anomalies, based on predetermined performance thresholds, and take autonomous corrective action when necessary to keep the Spacecraft in a power-positive, thermally safe, commandable state.",6/1/04
ProjectA - TIM - 1047,FP L2-FPR-6 Requirement Not Adequately Addressed in the L3 SFS,3,"L2-FPR-6 indicates there are two event based critical sequences that are hard coded: separation and solar array deployment. L3-SFS-968 states only ""a critical event"". The referenced L3 requirement does not fully address the L2 requirement. Referenced Requirements: [L2-FPR-6] The ProjectA fault protection design and VML operational sequence engine shall not be required to support any fault tolerant time-based (or time critical) critical sequences other than the hard coded event-based (event critical) separation and solar array deployment sequences. [L3-SFS-968] The Flight System shall not require VML based fault tolerant time-based critical sequences. (the only critical event is hardcoded into the fault design)",6/1/04
ProjectA - TIM - 1046,FP L2-FPR-4 Requirement Not Adequately Addressed in the L3 SFS,3,"The intent of the L2 requirement appears to be, ""fault propagation within the unit"", e.g., a fault in Side A of the PDU will not propagate to Side B. If such an event occurred the entire PDU may be ""faulted"" and therefore ""cross strapping"" would not solve the problem. The linked L3 requirements do not address this interpretation of the L2 requirement as they only consider ""redundant components"", ""excess performance or overlapping functions"", ""cross strapping"" and ""fault containment regions"". The identified fault containment regions are, apparently, not internal to either the PDU or HVCE but rather encompass the entire PDU/HVEA. None of the linked L3s reflect the intent of the L2. Referenced Requirements: [L2-FPR-4] The ProjectA project design robustness shall for internally redundant units [PDU, HVEA] include consideration of fault propagation due to collocation of components, e.g., thrusters, adjacent redundant electronic components on the same chip. Rationale: To reduce possibility of catastrophic mission loss or major mission degradation. [L3-SFS-960] The Spacecraft EPS shall contain internally redundant components (PDU/HVEA) that are fully cross strapped to C&DH and applicable spacecraft loads and are isolated by fault containment regions. [L3-SFS-956] The Spacecraft shall provide excess performance or overlapping functions on those components that are not fully redundant. [L3-SFS-887] The Flight System shall have fault containment regions around each of the following flight system sections: [HW] CEU, ACE, ACE peripherals (reaction wheel, gyro, thruster, sun sensor, SADE/SADA) , SDST, PDU/HVEA, EngCntrl, EngCntrl peripherals (PPU, thruster, gimbal assembly, XFA), and Instruments (FC, VIR, GRaND) - [SW] flight system processors",6/1/04
ProjectA - TIM - 1045,Incomplete traceability links between L2-PRD-759 and L3 SC&FSRD: Incomplete traceability link to software requirement,5,"The PRD requirement L2-PRD-759 in 9.1.10.3, is linked to L3-SFS-24 in the L3 SCFSRD. L2-PRD-759 should also be linked to L3-SFS-724 since all of the timing events on the spacecraft are handled by software. Referenced Requirements: [L2-PRD-759] Requirement: The ProjectA Project shall be able to control the UTC-relative execution time of a Flight System event to within 5 seconds during science phases. Note: Allocations of this requirement are in the Flight-Ground ICD. [L3-SFS-24] The Flight System shall support control of the UTC-relative execution time of a Flight System event to within 5 seconds during science phases. Note: Allocations of this requirement are in the FGICD. [L3-SFS-724] The Flight Software shall support control the UTC-relative execution time of a Flight System event to within 5 minutes.",4/28/04
ProjectA - TIM - 1044,L3-SFS-527 missing from Flight Software section of L3 SC&FSRD,5,"L3-SFS-527 resides in the Ion Propulsion Subsystem section of the L3 SFS. Although this requirement correctly represents a general Engine function, it still needs to be duplicated in the Flight Software section due to the fact that the PRD wording in L2-PRD-235 implies that the requirement is to be implemented by software. As examples of requirements that are duplicated in two different sections, the requirements in paragraphs 1.1.12.2 thru 1.1.12.6 of the ""Systems"" section in the SCFSRD are duplicated as requirements 10.1.16.1 thru 10.1.16.4 in the ""Flight Software"" section. Thus, it appears proper for requirements that have both hardware and software implications to be duplicated in applicable sections. Referenced Requirements: [L3-SFS-527] The Engine shall be capable of measuring the pressure of the xenon storage tank over the entire range of expected pressures. A calibration curve shall be developed to compensate for Xenon properties with an overall goal for the ground to determine the Xenon mass to within 10 kg. [L2-PRD-235] Allocation: The Flight System shall telemeter information that is sufficient to estimate the remaining xenon mass to within 20 kg or 5%, whichever is smaller.",4/28/04
ProjectA - TIM - 1043,ProjectA L3 SC&FSRD Rqt: L3-SFS-527 is Inconsistent with Rqt L2-PRD-235,3,"L2-PRD-235 states that the remaining xenon mass should be estimated to ""within 20kg or 5%, whichever is smaller"" whereas the L3-SFS-527 states that this estimate should be ""within 10kg"". Provided the remaining xenon mass is greater than 200kg, the L3 requirement conveys a stricter tolerance than the L2 requirement. However, once the remaining mass drops below 200kg, the 5% tolerance specified by the L2 requirement becomes smaller than the 10kg specified by the L3 requirement. Consequently, under this condition the L2 requirement conveys a stricter tolerance than the L3 requirement. Recommend evaluating these requirements to determine the necessary tolerance to satisfy the mission goals, and then updating the one or both requirements accordingly. Referenced Requirements: [L3-SFS-527] The Engine shall be capable of measuring the pressure of the xenon storage tank over the entire range of expected pressures. A calibration curve shall be developed to compensate for Xenon properties with an overall goal for the ground to determine the Xenon mass to within 10 kg. [L2-PRD-235] Allocation: The Flight System shall telemeter information that is sufficient to estimate the remaining xenon mass to within 20 kg or 5%, whichever is smaller.",4/28/04
ProjectA - TIM - 1042,Purpose of the FP Performance Specification,4,"The title of document S912-PF3300 is, FP Performance Specification, yet Section 2. Purpose states, “The purpose of this design note is to document the ProjectA Fault Protection (FP) design and implementation.” Section 1.1 references the Spacecraft and Flight Systems L3 but does not reference the Mode Design Note or the FP Design Note or the SRSs. Section 2.2.3 is titled “Key Level 2 Requirements”, which seems to imply a source of Parent requirements. It is noted that no Spacecraft and Flight System L3 requirements are entered in the FP Performance Specification in the same manner as the L2 requirements. It is unclear why the L3 requirements were omitted as the FP Performance Specification is apparently below the L3 in the ProjectA specification tree.. Section 2.4 is titled, “System Test and Verification” and states, “All the level 3 FP requirements shall be verified by analysis (design notes, fault tree, fault modes and effects), or test (software, test bed, spacecraft) at various levels during the course of the ProjectA program. The test plan for such verification is captured in the released Assembly, Test, Launch, and Operations (ATLO) plan (Ref 4). Table 2-1 provides a system level FP verification matrix referring to FP functions and mechanisms.” Table 2-1 is titled, “System Level FP Verification Plan”. Given the previous information, The purpose of the FP Performance Specification is unclear: (1) It seems to follow the L2 due to the ported requirements, (2) It discusses L3 testing yet the pointer in this section is to a table that addresses system level FP verification, (3) No specific L3 requirements are identified for V&V, (4) the material format is “descriptive” in nature (e.g., describing how various hardware components, etc. function) rather than structured in a “specification” format, e.g., including shalls) and (5) There are no specific requirements in this document that are identified or allocated to a V&V test program.",4/21/04
ProjectA - TIM - 1041,Inconsistent Definition of Fault Protection Terminology,4,"This issue concerns use of FP related terminology across the referenced documents. IV&V comments are identified by a *. The remaining material was extracted from the referenced documents. *The ProjectA Fault Protection (FP) Performance Specification S912-PF3300, preliminary version provides the following definitions in Section 2.2.1: ""2.2.1 Definitions There are several common terms applied throughout the requirements and documentation that deserve special attention. They are defined here for clarity. Errors – Single Event Effects (SEE), Flight Software (FSW) coding or handling upsets, unintended monitor trEngine (hair trigger), and out of sequence or inappropriate issue of nominal commands are not considered failures but rather errors that may be transient in nature due to nominal system operations or active FDC responses (e.g. processor or interface reset). Failure – permanent and unrecoverable failure of a subsystem, assembly, or component resulting in anomalous behavior or loss of functionality of that element. Fault – general term encompassing either an error or a failure or both (‘fault scenario’."" *The ProjectA Spacecraft and Flight Systems L3 Requirements Document does not define these terms. *The Spacecraft and Flight Systems L3 Requirements Document, FP Section, uses FP related terms as follows: FP Events “A FP event is a single fault, SEU, operator error or accidental FP trip OR a single fault, plus a non-simultaneous SEU, operator error or accidental FP trip.“ *In this context a “fault” does not appear to encompass an “error” or “trip”, whereas in the the ProjectA Fault Protection (FP) Performance Specification a “fault” includes an “error”. *Use of the term “FP event” seems to be unique to the Spacecraft and Flight Systems L3 as it is not used in the FP Performance Specification, other than in the material copied directly from the L3. *The following uses of the term “FP event” are found in the L3: 11.1.35. The Spacecraft FP shall be able to have its 'prime' OBC changed up to three times per FP event (e.g. OBC A-B-A-B) 11.5.12. S/C FP Event Messages. Spacecraft FP shall generate messages for every significant event observed (by UL or OBC monitors) and for every subsequent response. The message shall include at a minimum the monitor id, threshold, and monitor value. 11.5.14. S/C FP Log - FP Event Storage. The Spacecraft shall store all FP event messages in the FP log. 11.5.17. FS FP Event Storage. The Spacecraft shall store all Payload System and Engine FP events in mass memory. *The following uses of the term ""error"" are found in the L3: 11.1.6. The Flight System FP design shall include hardware and low level flight software monitors such as watchdog timers, fault indicators (e.g., self diagnostics, error logging), error detection and correction systems, etc. for critical component processors. 11.5.15. The Spacecraft shall store all ACS mode transition and error events in the FP log. *The following uses of the term ""failure"" are found in the L3: 11.1.4. The Spacecraft FP design will include transition to Safe Mode for a minimum of the following failure modes: • ACS performance degradation (attitude solution, pointing ability, rate/momentum) • EPS performance degradation (array current, bus voltage, battery charge) • CDH functional degradation (OBC software, critical unit hardware, 1553 data bus) • Telecom functional loss (command timeout) 11.1.23. No single failure of the Flight System shall permanently prevent the spacecraft from meeting any of its Level 2 pointing control requirements. 11.1.25. Spacecraft FP shall respond to all credible 1553 bus failures. 11.1.34. The Spacecraft FP shall be designed to autonomously recognize sets of symptoms stemming from any single failure or fault. 11.3.2. No single failure of the Spacecraft shall permanently prevent the it from being able to decode ground commands for immediate execution to store ground commands for later execution. 11.3.8. No single failure of the Spacecraft shall permanently prevent the distribution of commands to more than one Science Instrument. 11.3.9. No single failure of the Spacecraft shall prevent the collection of science data from more than one Science Instrument. 11.3.10. No single failure of the Spacecraft shall prevent the storage of science data for later transmission. 11.4.4. No single failure of the EPS shall cause the Spacecraft bus voltage to deviate outside the bus voltage specifications, as identified in the GDRD. 11.4.6. No single failure of the Spacecraft shall prevent supplying power to the set of components required to meet the minimum level 1 requirements (use of redundancy in each redundant pair or group of components, e.g. 1 of 2 EngCntrls, 3 of 4 reaction wheels, etc.). 11.4.16. No single failure of the Spacecraft shall prevent the Spacecraft from removing power from an assembly if it will prevent the Minimum Level 1 requirements from being met. 11.7.9. Spacecraft Engine failures shall not propagate to other Spacecraft subsystems. 11.9.1. No single failure of the Spacecraft shall permanently prevent it from meeting the Level 2 telecommunications requirements (i.e. command receipt and telemetering engineering and science data at sufficient rates).",4/21/04
ProjectA - TIM - 1040,"SuROM SRS Rqt: SU001 missing details necessary to establish ""safe system configuration""",4,"Issue: SU001 contains the phrase, ""safe system configuration,"" which does not seem to provide sufficient detail to support implementation. The requirement should include details specific to SuROM's responsibility for establishing a safe configuration. Referenced Requirement: [SU001] Flight Computer startup applications shall place the spacecraft into a safe system configuration without any ground intervention following power-up or a temporary power bus fault (cold-boot).",4/21/04
ProjectA - TIM - 1039,"C&DH SRS Rqt: missing details necessary to establish ""safe system configuration""",4,"Issue: OS001 contains the phrase, ""safe system configuration,"" which does not seem to provide sufficient detail to support implementation. The requirement should include details specific to the OS's responsibility for establishing a safe configuration. Referenced Requirement: [OS001] Flight Computer startup applications shall place the spacecraft into a safe system configuration without any ground intervention following power-up or a temporary power bus fault (cold-boot).",4/20/04
ProjectA - TIM - 1038,Requirement ID SRC-UPC002 associated with two different requirements,4,"Issue: Requirement ID ""SRC-UPC002"" is assigned to two requirement statements within the Uplink Card SRS. One requirement is in Section 5.7.2.1.1.2 & the other is in Section 5.7.2.1.1.1. Referenced U/L Card SRS Rqts: [SRC-UPC002] The Uplink FSW shall write the contents of the HLP Extended Code Field into a hardware defined I/O address prior to writing the HLP command into the HLP Control register if the HLP command is HLP_GRPA_2. [SRC-UPC002] The Uplink FSW shall process the function codes in a Local PCC command in accordance with the following:",4/20/04
ProjectA - TIM - 1037,Inconsistent Definition of Mode and Transition Criteria Terminology in the SuROM SRS,4,"The following sections are from: ProjectA, OBC SuROM Flight Firmware Requirements Specification, S912-SRS4921 REVISION A. Issues are identified by (). This TIM is a companion to TIMs 1031, 1035 and 1036. 5.4 Target Software Environment The SuROM FSW provides initialization of the OBC upon RAD6000 reset, performing the following functions: (1) Initialization functions should also be performed (in addition to reset) on ¡§power up¡¨ and at other times depending on the definition of the terms used in the documents under review. These should be added as appropriate. The SuROM recognizes three startup modes: ƒn1. UART Initialization Mode - This mode is used only on the ground for the purpose of loading memory through a UART device. ƒn2. SuROM Monitor Mode - In this mode the OBC supports the command and telemetry links, and allows the ground to examine or modify any memory location. 3. ƒnEEPROM-Boot Mode - In this mode the OBC looks in several separate memory areas for a ¡§Load Descriptor¡¨ that has the information necessary for the SuROM to copy the Applications Boot-loader code from EEPROM into SRAM and start its execution. During nominal operations, restarts of the OBC are performed in ¡§EEPROM-Boot Mode.¡¨ (2) The condition that determines which mode is to be selected should be stated. Reference [6] discuss use of SuROM mode in Table 5-3. If these three ¡§modes¡¨ are really sub-modes of Boot State, then they should be described in Reference [6]. If the SuROM executes these modes then the term ¡§recognizes¡¨ should be changed to something like ¡§performs¡¨. 5.7.1 Startup Processing SU001 Flight Computer startup applications shall place the spacecraft into a safe system configuration without any ground intervention following power-up or a temporary power bus fault (cold-boot). (3) The term ¡§temporary¡¨ is not defined. Reference 1,FPR-93, indicates that the design shall be able to autonomously boot up after a ¡§long duration¡¨ undervoltage event. Presumably, this would also result in a ¡§cold-boot¡¨ using the SRS terminology. If the term ¡§safe system configuration¡¨ is the same as ¡§safe mode¡¨ a common term should be used. Neither Reference [6] or [7] discuss or define the term ¡§cold-boot¡¨. 5.7.2 Exceptions SU013 Flight Software shall trap processor interrupts, make an Exception Log entry, and respond according to the following Exception/Required Action Tables: (4) There are no tables in the following subsections. Suggest that the interrupts and the responses be separated for clarity. SU013.1 System Reset Interrupt COLD_RESTART (5) The term COLD_RESTART is not defined in this SRS. Neither Reference [6] or [7] discuss or define the term ¡§cold-restart¡¨. SU013.9 Supervisor Call Interrupt Restart as Cold Boot (6) The term ¡§Cold Boot¡¨ is not defined in this SRS. Neither Reference [6] or [7] discuss or define the terms ¡§cold boot¡¨. SU015 Flight Software shall determine whether this processor mode transition was due to a Command, POWER_ON or External Hardware Reset command. (7) The term ¡§processor mode transition¡¨ has not been defined in this context. SU018 If sufficient RAD6000 and LIO processing resources are operable, restart operations shall progress to completion in SuROM Diagnostic (Monitor) Mode or Normal Mode. (8) Normal Mode is not defined here. The conditions for determining the selected mode (Monitor or Normal) are not stated. Reference [6] uses the term Normal State, not Normal Mode. According to Reference [5] restart is supposed to end in the Standby State not Monitor Mode or Normal Mode. The ¡§sufficient resources¡¨ needed are not stated. 5.7.4 SuROM Diagnostic ""Monitor"" Mode SU211 In the event of a processor exception, the SuROM Monitor Mode shall provide a RAD6000 state exception log, which is non-volatile through an OBC soft reset. (9) The term ¡§soft reset¡¨ is not defined. Neither Reference [6] or [7] discuss or define the terms ¡§soft reset¡¨.",4/20/04
ProjectA - TIM - 1036,Inconsistent Definition of Mode and Transition Criteria Terminology in the OBC SRS,4,"This TIM is a companion to TIMS 1031 and 1035. The following sections are from: ProjectA, OBC C&DH Flight Software Requirements Specification, S912-SRS4920 REVISION A. Issues are identified by (). Section 5.7.1.1 Startup Processing OS001 Flight Computer startup applications shall place the spacecraft into a safe system configuration without any ground intervention following power-up or a temporary power bus fault (cold-boot). (1) The term “temporary” is not defined. Reference 1, FPR-93, indicates that the design shall be able to autonomously boot up after a “long duration” undervoltage event. Presumably, this would also result in a “cold-boot” using the SRS terminology. If the term “safe system configuration” is the same as “safe mode” a common term should be used. Neither Reference [6] or [7] discuss or define the term “cold-boot”. OS012 Provided processor hardware is operating nominally, Flight Software shall perform the following on a Flight Computer COLD_RESTART: (2) Reference 2 uses the term “reset”. Presumably, this requirement changes the terminology to (restart) and specializes to a specific type (cold). The terminology should be consistent across the documents. Neither Reference [6] or [7] discuss or define the terms “cold restart” or “cold start"". OS100.4 Patch load failures shall cause an OBC Reset. (3) Repeated patch load failures could result in continuous resets. Suggest some limit be imposed. Section 5.7.1.2 Exceptions OS013 Flight Software shall trap processor interrupts, make an Exception Log entry, and respond according to the following Exception/Required Action Tables: (4) There are no tables in the following subsections. Suggest that the interrupts and the responses be separated for clarity. OS013.9. Supervisor Call Interrupt Restart as Cold Boot. (5) Cold boot is not defined. Neither Reference [6] or [7] discuss or define the terms “cold boot”. OS015 Flight Software shall determine whether a processor mode transition was due to POWER_ON or External Hardware Reset command. (6) The term “processor mode transition” has not been defined in this context. It is not stated whether the transitions are the same or different in each case. OS018 If sufficient RAD-6000 and LIO processing resources are operable, restart operations shall progress to completion in SuROM Diagnostic (Monitor) Mode or Normal Mode. (7) It is unclear if this requirement should be removed and placed in Reference 4. Normal Mode is not discussed in Reference 4, nor is it defined here. The conditions for determining the selected mode (Monitor or Normal) are not stated. Reference [6] uses the term Normal State, not Normal Mode. According to Reference [5] restart is supposed to end in the Standby State not Monitor Mode or Normal Mode. The “sufficient resources” needed are not stated. Section 5.7.8.2 Data Storage DS008 The OBC C&DH software shall on a WARM_RESTART use the operational parameters stored in DRAM to recover the state of the recorded telemetry. TBD (8) The term “WARM_RESTART” is introduced but not defined. Neither Reference [6] or [7] discuss or define the term “warm star” or “warm restart”. DS028 The OBC-C&DH software shall ensure the preservation of DRAM contents through an OBC Soft Reset. (9)The term “Soft Reset” is introduced but not defined. Neither Reference [6] or [7] discuss or define the term “soft reset”.",4/20/04
ProjectA - TIM - 1035,Inconsistent Definition of Mode and Transition Criteria Terminology in the Spacecraft and Flight System L3 Spec,4,"This TIM is a companion to TIM 1031. The following sections are from Reference #2. Issues are identified by (). 11.1.11 FS ATLO Safe Boot State. The Flight System shall initialize, upon powerup or reset of any electronic assemblies, to a state which does not violate any safety constraints for ATLO and Launch. (1)The specific safety constraints for ATLO and Launch should be defined somewhere (e.g., in the L3, the L4 SRSs, etc.). Also, the input parameter that specifies ATLO or Launch should be defined somewhere. 11.1.17. FS Safe Mode Exit Criteria. The Flight System shall not exit Safe Mode until either (1) Normal operations entry is initiated by ground command, or (2) A subsequent fault results in flight computer reset/swap (2) Reference 1, FPR-65, states that exit from Safe Mode can only be accomplished through ground commands. This seems to conflict with 11.1.17, item (2). Reference [7] states in Section 2.3, “4. Autonomous progression from safe modes of operation will not be allowed such that the FP monitors and responses are simplified.” 11.1.24. FS Boot State. The Flight System shall initialize to a safe state following initial powerup, component reset or switch or recovery from Phoenix mode. Safe State: prevent powering previously failed unit, use of actuators while mated, monitor separation and initiate separation sequence and transition to Safe Mode when appropriate. (3)Phoenix mode is not specifically defined in any of the referenced documents (it appears to be associated with the power subsystem). This term may be a carry over term from a previous project. The title contains the term “boot state” yet the description seems to focus on “safe state”. 11.4.3. S/C EPS Phoenix Mode Recovery. At prime power-on during ground testing or recovery from a severe undervoltage condition that causes components to reset, the Spacecraft EPS components shall autonomously configure to a safe, system compatible state including autonomous activation of down converters and battery charging in an undervoltage state. (4) Phoenix mode is not specifically defined in any of the referenced documents. It is unclear how this requirement differs from response to a power-on as discussed in References [6] and [7]. Neither Reference [6] or [7] discuss response to a “severe undervolatge” condition. The following sections are from: Spacecraft and Flight System Requirements, Level 3 Requirements, S912-GR3400, December 19, 2003, FSW Section. Issues are identified by (). 10.2.3. Bulk Storage. The Flight Software shall support DRAM memory retention following an OBC reset (i.e. do not overwrite old data). (5) Reference 3, section OS013.1, states that a system reset interrupt results in a COLD_RESTART. The two requirements seem to conflict if an “OBC reset” is the result of a “system reset interrupt”. Neither Reference [6] or [7] state that DRAM memory is to be retained under these conditions. 10.4.2. System startup configuration. The Flight Software shall support a startup configuration of safe mode such that the OBC is monitoring separation and controlling basic ACS functions and is the bus controller. (6) Safe mode seems to be focused on launch in this case as “separation is monitored” yet the title is “system startup configuration”. The title seems to indicate that the requirements should address more than just safe mode during launch. Requirement 11.1.11 indicates that ATLO is to be supported as part of startup, also. Reference [6] indicated that the OBC monitoring of separation occurs during Launch Mode not “safe mode”. If separation monitoring is the only event that drives the OBS FSW autonomously to Safe Mode, a back up event, such as a timer expiring, may be indicated. 10.13.2. The Flight System shall be capable of retaining the current sequence memory content following a reset. After a reset, the Ground Segment shall verify memory contents before a sequence is loaded. (7) As in 10.2.3, reset indicates retention of memory. If a reset results in memory retention, then this needs to be part of a complete definition of all events that should occur as the result of a “reset”. Neither References [6] or [7] state that “sequence memory” is to be retained under these conditions. The last sentence pertains to the ground system and should be moved to the appropriate document. The following sections are from: Spacecraft and Flight System Requirements, Level 3 Requirements, S912-GR3400, December 19, 2003, CDHS Section. Issues are identified by (). 9.1.2. Processor Reinitialization. The C&DH subsystem shall provide the capability for processor re-initialization after a processor reboot resulting from a cold or warm start. (8) The terms “cold start” and “warm start” are introduced but not defined. Prior to this section the term “reset” was used. If these are actual commands or conditions, then the differences should be identified, including how the FSW is to respond. Neither Reference [6] or [7] discuss or define the terms “cold” or “warm” start.",4/20/04
ProjectA - TIM - 1031,Inconsistent Definition and Use of Moding Terminology,4,"Within the Spacecraft and Flight System Requirements L3 specification material pertinent to resets, power-up, power interruptions and the response to these events is found in three sections: FP, FSW and CDHS. At the SRS level both References [3] and [4] address this subject. The following general problems were noted within References 1 - 5: The terminology used is not consistent within and across the referenced documents. The terms boot, power up, reset, OBC reset, startup, cold start, warm start, cold-boot, cold_restart, warm_restart, restart, soft reset, safe state, boot state and safe mode are used, in many cases without specific definition and/or interchangeably. While some of these terms (e.g., reset) may be more or less “self descriptive” (in the realm of FSW design) the specifications for ProjectA should be specific in their definitions. The software response to events (e.g., power on, resets, etc.) while operating under all initial conditions (e.g., power off, low power, launch, etc) is not clearly identified. This situation in combination with the inconsistent use of terminology creates an incomplete and inconsistent set of software requirements for the important area of response to power changes resets, etc. and for entering Safe Mode. This TIM serves as a general statement of the specific issues identified in TIMs 1035, 1036 and 1037.",4/20/04
ProjectA - TIM - 1030,Transition to Boot State is Not Consistently Defined,4,"The reference document is DN-ProjectA-SE-001, Rev Ltr. 002. Boot State is entered at power up and upon Ground or FP actions causing departure from the Standby and Normal states. The Ground and FP actions/commands seem to include: reset, swap, power cycle, power off. In the following discussions it is assumed that a mode/state transition is associated with a single OBC. Mode and State transitions are defined in DN-ProjectA-SE-001 as follows Note, IV&V issues are identified by a ( ). 4.5.2.2 Standby Launch to Boot State. CDH transitions from Normal to Boot mode. This will occur when the OBC is reset or during a CEU Swap. (1)It is unclear if the intent is to place the primary CEU/OBC in Boot state while the swap to the backup CEU occurs. The backup CEU will not be in Standby Launch (it is either off or in the SuROM monitor mode); therefore, it appears that the transition from Standby Launch to Boot cannot occur in the backup CEU as the result of a swap. 4.5.3.2 Standby Safe to Boot. The transition from the Standby-Safe to the Boot-No BC (Uplink Active) sub-state occurs by fault response or ground command. The transition requires only one step: CDH transitions from Normal to Boot mode. This will occur when the primary OBC is turned off. (2)Boot cannot occur when the primary OBC is turned off. The backup CEU will not be in the Standby Safe mode (it is either off or in the SuROM monitor mode); therefore, it appears that the transition from Standby Safe to Boot cannot occur after the primary OBC is turned off. 4.5.4.4 Normal Target Point to Boot. CDH transitions from Normal to Boot mode. This will occur when the primary OBC is turned off. (3)Boot cannot occur when the primary OBC is turned off. The backup CEU will not be in Normal Target Point (it is either off or in the SuROM monitor mode); therefore, it appears that the transition from Normal Target Point to Boot cannot occur after the primary OBC is turned off. 5.9.2 CDH Mode Transitions. The CDH transitions between Normal mode and Boot-up mode when the primary OBC is power cycled or turned off. Caused by Ground or FP actions. (4) Boot cannot occur when the primary OBC is turned off. The backup CEU will not be in Normal Mode (it is either off or in the SuROM monitor mode); therefore, it appears that the transition from Normal Mode to Boot cannot occur after the primary OBC is turned off. Table 5-3 states: “Normal: In this mode, the OBC is the 1553 bus controller and controlling all other subsystems through a variety of software tasks. At a minimum, Normal mode has one full CEU powered, and the “critical” portion of the other CEU powered. The backup CEU can be fully powered up as well, although FP software in the uplink cards will ensure that only one of the OBCs is the 1553 BC. As an example, the backup CEU can be booted into SuROM mode to facilitate diagnostic and reprogramming activities.” (5)It appears that the definition of “Normal” mode extends to the operation mode of both CEUs. It is unclear if the backup can operate in any condition other than SuROM mode as it cannot be in Normal mode because there can be only one bus controller. The definition seems to be inconsistent when applied to the backup CEU. (6)It is unclear if DN-ProjectA-SE-001 completely or consistently defines all the planned actions that drive the CDH into Boot and the actions that are performed during Boot. This document identifies the actions as: OBC reset, CEU swap, OBC turned off, OBC power cycled. Other ProjectA documents (e.g., the SRSs and the Spacecraft and Flight Systems L3) identify other actions including: cold start, warm start, and soft reset. DN-ProjectA-SE-001 does not reflect these actions.",4/20/04
ProjectA - TIM - 1029,ProjectA L3 SCFSRD Rqt: L3-SFS-807 is in conflict with L3-SFS-806,3,"Section 10.6.5.8 (L3-SFS-807) of the Spacecraft and Flight Systems Requirements document states that the flight software shall be capable of executing 16 or more relative time sequence instructions per second. This statement is in conflict with the previous requirement, in section 10.6.5.7 (L3-SFS-806), which states that the maximum capability to execute consecutive sequence instructions with relative time tags are 0.1 second apart, meaning 10 instructions per second. Referenced Requirements: [L3-SFS-806] The Flight Software shall provide the capability to execute consecutive sequence instructions with relative time tags of 0.1 second apart. [L3-SFS-807] The Flight Software shall be capable of executing 16 or more relative time sequence instructions per second.",3/17/04
ProjectA - TIM - 1028,Engine thrust control commands missing in L3 requirements,2,"Requirement L2-PRD-565 in the Project Requirements Document (PRD) is processing of Engine uplink commands and it appears to have S/C systems and software implications; however, L2-PRD-565 is not flowed down to the Spacecraft and Flight System Requirements document. Referenced Requirement: [L2-PRD-565] Allocation: The Spacecraft System shall be able to accept thrust profiles that are uplinked outside of the backbone sequence.",3/16/04
ProjectA - TIM - 1027,Duplicate specifications in L3 requirements document,5,"In the Spacecraft and Flight System Requirements document, section 10.1.5 and section 10.6.2.3 contain identical requirements. The duplicated requirement is stated thus: ""The Flight Software shall have the ability to detect and report invalid opcodes and out-of-range errors for commands.""",3/12/04
ProjectA - TIM - 1024,Confused wording in the recording of uplink handling errors,4,"The Flight Ground Interface Control Document states in section 3.1.1.1.2: ""The spacecraft shall provide in telemetry the total number of uncorrectable uplink handling errors detected."" The Spacecraft and Flight System Requirements document, in section 10.6.4.4, states for this same procedure: ""The flight Software shall record the total number of uncorrectable uplink handling errors detected in the uplink telemetry."" There are two areas of inconsistency between the two documents. The first is that the SC&FSRD does not specify that this number should be sent by telemetry whereas the FGICD does. In order to correct this, the SC&FSRD statement should be continued thus: ""... in the uplink telemetry, and provide this data in telemetry."" The second inconsistency is that the SC&FSRD states that this number is recorded but the FGICD makes no mention of this fact. The FGICD is ambiguous on whether this data is recorded and then sent by telemetry or whether it is sent only by real-time telemetry. The correct method should be resolved and inserted in both documents.",3/11/04
ProjectA - TIM - 1016,The SIS and SDD are not listed within Table 1-9 of the SDP,4,"The System Interface Specification and Software Design Document are not listed within Table 1-9 of the SDP as compared to table 8 of the PSMP. It is unclear as to whether the System Interface Specification and Software Design Document are planned to be developed and delivered. Referenced JPL ProjectA PSMP Rqt: [7] SOFTWARE DOCUMENTATION - Each ProjectA software development organization shall specify and document their software documentation process in the subordinate SMP, at a minimum, to include: • A list of receivable, deliverable, and non-deliverable software documentation • Personnel responsible for developing and approving each document • Due dates for draft, preliminary, and final versions • Processes for document review, approval, release, change control, and configuration management. Table 8 provides a guideline for software documentation to be produced for each software class. Some software documents may be combined with other software documents or system/subsystem level documents. This table may be tailored by individual software development organizations to meet their budget and resource constraints. All JPL contractor and subcontractor’s receivable and deliverable software documentation identified in the subordinate SMP shall conform to the contract agreement. All instrument partner’s receivable and deliverable software documentation identified in the subordinate SMP shall confirm to the Instrument Memorandum of Agreement (MOA). The Project Software Technical Representative’s and the cognizant Project System Manager’s approval on the subordinate SMP constitutes approval of its documentation plan. All receivable, deliverable, and non-deliverable documentation shall be managed according to the provisions of the ProjectA Project Communication, Information Management, and Documentation Plan (JPL D-25846). Table 8 Contains following recommended documents as “guidelines”: SMP, SRD or SRS, SIS, SDD, Unit Test Plan/Procedures/Report, I&T Test Plan/Procedures/Report, Acceptance Test Plan/Procedures/ Report, User’s Guide/Operator’s Manual, RDD"" Referenced Orbital SDP Sec. [1.5.4] Overview of the Documentation Efforts - The ProjectA software development team will produce the documents necessary for the adequate development and testing of software for ProjectA. These are summarized in the following table. Table 1-9 ProjectA Software Documentation Effort",3/9/04
ProjectA - TIM - 1005,Incorrect and Incomplete traceability between the PSMP and the SDR,5,"Issue: JPL SDR 2.1.3h and 2.1.6 are traced to JPL ProjectA PSMP 2.6 in the PSMP Appendix B Compliance Matrix. However, PSMP 2.6 is an invalid section number. SDR 2.1.3h is addressed by PSMP 2.3.4. So a trace should be added to the Compliance Matrix accordingly. SDR 2.1.6 appears to be addressed by PSMP 8.2 & 7. So, no new traces are necessary for this SDR requirement. Referenced JPL SDR Rqt: [2.1.3h] h. An implementation schedule at a level of detail that facilitates tracking the progress. [2.1.6] The software plan shall define receivables and deliverables internal to the project, establish points-of-contact on both sides of an organizational interface, and provide for regular meetings to ensure that the activities of interdependent groups are coordinated and reflect budget and schedule commitments. Referenced JPL ProjectA PSMP Rqt: [2.3.4] Schedule - The software schedules are used to monitor the progress of the software development process in meeting the project-level milestones and to keep software process metrics. Each ProjectA software development organization shall maintain and update their software schedule based on the most current information available, and present the software schedule and software progress status to the project at the MMRs, technical reviews, and milestone reviews. The software schedules shall show interdependencies with other ProjectA disciplines. The latest ProjectA Project schedules and software schedules are maintained at the web site: http://sched-central.jpl.nasa.gov/ProjectA/ProjectA.html by the ProjectA Project Schedule Administrator. A copy of project top-level schedule is shown in Figure 5. Figure 6 ProjectA Project Top-Level Schedule",3/8/04
ProjectA - TIM - 1004,Incorrect and Incomplete traceability between the PSMP and the SDR,5,"Issue: JPL SDR 2.1.3i, 2.1.6, 2.2.1, 2.2.2a, 2.2.2b, 2.2.2c, 2.2.2d, 2.2.3, 2.2.4, 3.1.12, and 4.2.3 are traced to JPL ProjectA PSMP 2.5.1 in the PSMP Appendix B Compliance Matrix. However, PSMP 2.5.1 is an invalid section number. Therefore, the traces should be removed from the Compliance Matrix. SDR 2.1.3i, 2.2.1, 2.2.2a, 2.2.2b, 2.2.2c, 2.2.2d, 2.2.3, 2.2.4, and 4.2.3 are addressed by PSMP 2.3.2. So, traces should be added to the Compliance Matrix accordingly. SDR 2.1.6 appears to be addressed by PSMP 8.2 & 7, and SDR 3.1.12 addressed by PSMP 3.1. So, no new traces are necessary for these SDR requirements. Referenced JPL SDR Rqt: [2.1.3i] A budget consistent with the approach to risk management. [2.2.1] A documented cost estimate shall be prepared, addressing major sources of risk and uncertainty. [2.2.2a] Input data, including relevant cost data from JPL experience [2.2.2b] Assumptions [2.2.2c] Description of the costing approach used [2.2.2d] Quantification of the uncertainty in the estimate [2.2.3] The cost estimate shall recommend a funded margin that is based on a risk management plan and staffing profile. [2.2.4] At key development milestones or when the development is re-planned, the-cost-to-complete the software product shall be re-assessed and the results documented. [3.1.12] Proposed software requirements changes shall be documented, assessed for cost, schedule, technical impacts, and risk before being accepted as a delivery commitment. [4.2.3] An estimate of the resources required for both milestone reviews and peer reviews shall be prepared in accord with the Software Cost Estimation Requirement. Referenced JPL ProjectA PSMP Rqt: [2.3.2] Cost Estimates and Budget - The information of the project-level cost estimates, budget profiles, and reserves are available from the ProjectA Project Business Manager. Each ProjectA software development organization shall provide and document cost estimates, budget, and reserves for their software elements consistent with risk management plan and staffing profile. Each software cost estimate shall document major sources of risk and uncertainty, input data including relevant historical data, assumptions, cost method or model used, and a quantification of the uncertainties in the estimate. At development milestones or any time the software development is re-planned, the cost to complete shall be re-estimated, and the results shall be documented and submitted to the project for review and approval.",3/8/04
ProjectB - TIM - 2680,"ProjectB Spacecraft: PSE FSW code does not implement the requirement 2201.13, 2201.14, and 2201.20",3,"The PSE FSW code does not implement the requirements 2201.13, 2201.14, and 2201.20 for the 3 consecutive cycles 464-FSW_SPEC-0059 PSE: 2201.13 When enabled to do so (see 1224), if for three consecutive PSE Battery Monitor Cycles, the Battery Mounting Surface (BMS) temperature (2201.10), as measured by the (prime or redundant) BMS PRT, exceeds a table-specified limit, the PSE FSW shall switch OFF the battery heater. 2201.14 When enabled to do so (see 1224), if for three consecutive PSE Battery Monitor Cycles, the Battery Mounting Surface (BMS) temperature (2201.10), as measured by the (prime or redundant) BMS PRT falls below a table specified limit, the PSE FSW shall switch ON the battery heater. 2201.20 If for three consecutive PSE Battery Monitor Cycles after switching to the redundant PRT (2201.15), the battery mounting surface temperature (2201.10) falls outside a table-specified, high or low range, the PSE FSW shall turn OFF the battery Heater. 1) First at all, the #define is incorrect in the ps_task_main.c. ----------------------------------------------------------------------------------- PSE-3.1.1\FSW\cpu\pse\tasks\ps\ps_task_main.c #define PSE_CONSECUTIVE_TEMPERATURE_VIOLATION 2 2) In the function PS_FDC_BatteryTemperatureForHeaterControl(), IV&V don't see a mechanism to handle the second time and third time temperature check. Our understanding is that there should be a while loop or for loop to continue scanning/reading and checking the temperature. So far it only checks for once. To help to understand the IV&V comments, the source code with comments embedded are attached.",5/14/2007
ProjectB - TIM - 2679,"ProjectB Spacecraft: Discrepancy between requirements, and design information and code",3,"Discrepancy between requirements and design information, regarding the number of virtual recorders that exist. 464-FSW-SPEC-0066 Telemetry Output: 2311 The Flight Software shall set the Virtual Channel Number within the Primary Header for Playback of Virtual Recorder 4, to the value of four (4). 2312 The Flight Software shall set the Virtual Channel Number within the Primary Header for Retransmission of Virtual Recorder 4, to the value of fourteen (14) decimal. According to CDR Slide 29, the design ""Now has 3 virtual recorders instead of 4.” IV&V has searched the TO code of CDH (received July 26 2006), can't find any where mention about the playback VC 4, or retransmission VC 14. Below is part of the code for the VC number. In file ** File: tochntbl.c --------------------------- /* ** Global Data Section. */ channel_priority_entry to_channel_priority_table[MAX_TO_CHAN] = { /* destination, source, retransmit, virtual channel */ { I_CHANNEL, REAL_TIME, TRANSMIT, VC_0 }, { Q_CHANNEL, RECORDER_1, RETRANSMIT, VC_11 }, { Q_CHANNEL, RECORDER_2, RETRANSMIT, VC_12 }, { Q_CHANNEL, RECORDER_3, RETRANSMIT, VC_13 }, { Q_CHANNEL, RECORDER_1, TRANSMIT, VC_1 }, { Q_CHANNEL, RECORDER_2, TRANSMIT, VC_2 }, { Q_CHANNEL, RECORDER_3, TRANSMIT, VC_3 }, { Q_CHANNEL, PATTERN_0, TRANSMIT, VC_1 }, { Q_CHANNEL, PATTERN_1, TRANSMIT, VC_1 }, { Q_CHANNEL, PATTERN_2, TRANSMIT, VC_1 }, }; In file ** File: tochntbl.h --------------------------- /* ** Type Definition Section */ #define MAX_TO_CHAN 10 /* size of channel_priority_table, 3 for each recorder + 1 for real-time + 3 for pattern vcdus */ typedef enum { VC_0, /* real-time */ VC_1, VC_2, VC_3, VC_11 = 11, /* retransmit vc = playback vc + 10 */ VC_12, VC_13, MAX_VC_ID, FILL_VC = 62 /* ccsds fill virtual chanel */ } virtual_channel_ids;",5/14/2007
ProjectB - TIM - 2678,"Test scenario file ""set6.doc"": Scenario 6g, Editoral errors",4,"In Test scenario file ""set6.doc"": Scenario 6g, WARM RESTART SEQUENCES tests, Restart sequence 2 - 4: • ... • Build and load an RTS to perform the following sequence of restarts: WARM ACE-A, W2, WARM GCE-A, W2, WARM PSE-A, W2, WARM S/COMM-A, W2, WARM MP, wait 20, MD noop. [IV&V: are these W2 mean the warm restart counter? If it is, they should be incrementing in each Restart Sequence test.] To help in the understanding of this TIM, the test scenario file ""ProjectB at set6 - TIM 2678.doc"" has been attached with relevant sections of the test scenario document that pertain to this TIM highlighted in yellow, and keyword ""IV&V"".",5/9/2007
ProjectB - TIM - 2677,"Test scenario file ""set 6.doc"" - 6g Scenario: One step is missing for verifying the max warm restart count.",3,"In test scenario file ""set 6.doc"" - 6g Scenario: WARM RESTART SEQUENCES, a test step needs to be added to verify the max warm restart counter is set = 5 , so that when warm restart count reach to 5 it will cause 1 cold restart. If the Max warm restart count was not set to 5, a command is needed to set the Max count to 5 for this test. To help in the understanding of this TIM, the test scenario file ""ProjectB at set6 - TIM 2677.doc"" has been attached with relevant sections of the test scenario document that pertain to this TIM highlighted in yellow, and keyword ""IV&V"".",5/9/2007
ProjectB - TIM - 2676,"Test scenario file ""set6.doc"": Scenario 6b: wrong telemetry mnemonic was used.",4,"in Test scenario file ""set6.doc"": Scenario 6b, a wrong telemetry mnemonic was used. * Clear the ACS Warm restart counter. (SBC_AC_RESET_WARM_FLG). However, is ""SBC_AC_RESET_WARM_FLG"" suppose to be a counter? SBC_AC_RESET_WARM_FLG is a “Flag” with a value of TRUE or FALSE, and is not a counter. To help in the understanding of this TIM, the test scenario file ""ProjectB at set6 - TIM 2676.doc"" has been attached with relevant sections of the test scenario document that pertain to this TIM highlighted in yellow - search for the keyword ""IV&V"".",5/9/2007
ProjectB - TIM - 2675,ProjectB AT set 6 - 6b Scenario: Warm start counter needs to reset to zero,3,"In ProjectB AT set 6 - 6b Scenario, the 9th main bullet and its sub-bullet as below: * Execute a MP Warm restart: • Send MP Warm restart command. • Verify MP flys through warm (ACS remains in Inertial mode, KF enabled, all MP tasks initialize nominally). • Verify MP Warm restart counter = 1. [IV&V: in order to get counter = 1, it should clear the WR counter before the warm restart command.] To help in the understanding of this TIM, the test scenario file ""ProjectB at set6.doc"" has been attached with relevant sections of the test scenario document that pertain to this TIM highlighted in yellow, and keyword ""IV&V"".",5/9/2007
ProjectB - TIM - 2674,ProjectB FSW Acceptance test set 1.doc: ACS thruster test with ACE not in control,3,"In test case ""ACS thruster test with ACE-B/EVD-B. (Do not test ME.)"" at ""1b Scenario - Nominal Separation and SunAcq – PART 2: Propulsion system pressurization, Safehold c/o, thruster pulse tests."", According to the second sub-bullet, ""• Note: During this portion of the test, attitude control remains under ACS SunAcq mode with ACE-A InControl and in Normal mode. The thruster pulses are commanded by ground commands addressed to ACE-B. "", IV&V believe this test cannot be done, because according to ACE FSW spec-0049, requirement 4440.1 -- if ACE not in control, it shall send no thruster commands under any circumstances. ACE-B currently is in safehold mode, and NOT in-control, the test won’t work because the ACE-B is unable to process any thruster commands from ACS or ground. in order to easily locate the issue, the test scenario set 1 with embedded IV&V comments was attached in TIM 2673 (click on ""Relationships"").",5/9/2007
ProjectB - TIM - 2673,"Test scenario file “ProjectB at set1.doc”, the ACE control states didn't match in the scenario",4,"In test case ""TRANSITION: Safehold ACE-A to Safehold ACE-B."" at ""1b Scenario - Nominal Separation and SunAcq – PART 2: Propulsion system pressurization, Safehold c/o, thruster pulse tests."", the statement at 4th sub-bullet is misleading and confused -- ""• In the event that ACE-B has a problem we want ACE-A to automatically take back control of the RWs from ACE-B."". Because at this moment, ACE-A is still in-control, and ACE-B is trying to get in-control from ACE-A. It doesn't make sense that ACE-A will try to regain the control. In order to easily locate where the issue was, the test scenario with the embedded comments is attached. -- Click on the relationship button -->",5/9/2007
ProjectB - TIM - 2672,"Test scenario file “ProjectB at set2.doc”, scenario 2 h: Test FDC A1.2.1, Statements are reversed since KF should see no errors when reset",3,"This issues occurs in test scenario file “ProjectB at set2.doc”, Scenario 2h, “Inertial KF mode, combined fine attitude sensor check FDC AND lack of fine attitude sensor input to KF FDC checkout”, Test FDC A1.2.1 (DSS No Sun Presence effect on KF). To help in the understanding of this TIM, the test scenario file has been attached to the TIM. The relevant portions of the file that pertain to this TIM have been highlighted in red. The following two bullets which occur at the end of this test appear to be reversed. - Reset the KF (SBC_AC_RESET_KF) - Verify KF remains converged and attitude errors, gyro drift bias values are in agreement with the values prior to the No Sun Presence condition. Once the KF is reset, there should be no errors. So the verification statement should occur prior to the “reset the KF” statement.",5/4/2007
ProjectB - TIM - 2671,"Test scenario file “ProjectB set1.doc”, scenario 1j, “Bad ACE-A CSS data initial SunAcq”, ACS should be in control",3,"In the test scenario file “ProjectB set1.doc”, scenario 1j, “Bad ACE-A CSS data during initial Sun Acquisition (Bad A/D converter affects all 8 eyes equivalently)”, bad DSS data is tested. In order to test bad DSS data, the system has to set ACS in-control + sun acq mode (ACE in-control in normal mode), because ACE is not using DSS data for its safehold mode. In this test scenario, there is no mention that the ACS is in-control, and there is no test to ensure that the ACS is in control. According to ""ACE User's Guide"" (464-FSW-HDBK-0009 v2.20)in page 4: ""The Star Tracker and DSS interface directly to the spacecraft via the 1553 bus and do not interface to the ACE."" To help to understand the IV&V comments, please see attachment by clicking ""Relationships"" button.",5/4/2007
ProjectB - TIM - 2670,System test scenarios – missing test for watchdog timeout causing cold restart,3,No test scenario has been found that specifically tests that the watchdog timeout successfully causes a cold restart. Should such a test scenario be written?,5/3/2007
ProjectB - TIM - 2669,System test scenarios – missing test for ProjectB disposal,3,"No test scenario has been found that specifically tests those operations responsible for ProjectB disposal. Should such a test be written, or are existing test scenarios sufficient to cover this portion of the mission?",5/3/2007
ProjectB - TIM - 2668,"Test scenario file “set6.doc”, scenarios 6a, 6b & 6e, no test to ensure that the system has entered inertial mode",3,"In the test scenario file “ProjectB at set6.doc”, test scenario 6d, “Safehold Endurance 4-of-4 RWs "", and 6e Scenario – ""Safehold Endurance 3-of-4”, should the test scenario be written to ensure that the “bunch of commands to GCE to enable power, movement, etc to the appropriate HGA for the given ephemeris date/time” are executed after entering inertial mode or science mode? According to the GCE FSW Spec ""464-FSW-SPEC-0054 Revision B"": “The HGA commanding by the ACS FSW on the main processor will only be performed in inertial and science modes.” To help in the understanding of this TIM, the file ""ProjectB at set6.doc"" has been attached to the TIM. The relevant portions of the file that pertain to this TIM have been highlighted in yellow.",5/3/2007
ProjectB - TIM - 2667,"Test scenario file “set4.doc”, scenario 4h, “MP Warm restart during a Delta-V”, burn duration validation should indicate 120 & not 900 seconds",4,"In test scenario file “ProjectB at set4.doc”, test scenario 4h, “MP Warm restart during a Delta-V”, verification of primary thruster burn duration should be changed from 120 to 900 seconds. To help in the understanding of this TIM, the file ""ProjectB at set2.doc"" has been attached to the TIM. The relevant portions of the file that pertain to this TIM have been highlighted in red. The test scenario setup states: “The 4a, primary thruster, ATS is used, with the only modification being the commanded burn duration is set to 900 seconds.” In the following scenario steps, “120” seconds should be changed to “900” seconds: “Entry into Delta-V mode is verified along with the commanded duration. Verify the ACS Delta-V mode is only using the primary ACS Thruster set. Verify the commanded duration is 120 seconds”",5/3/2007
ProjectB - TIM - 2666,"Test scenario file “set4.doc”: Scenario 4e, One ACS thruster with reduced TSF, scenario statement is vague",4,"In test scenario file “ProjectB at set4.doc”, scenario 4e, “AMF1, One ACS thruster with a significantly reduced TSF”, a test for ACS FDC A3.2.2 is vague as written, and needs to be clarified with respect to the requirements tested. The following note implies either a weak set of requirements or a vague understanding of the requirements in the test scenario. The test scenario should be more explicit with respect to the ‘failed’ thruster’s TSF. “NOTE: Scott thinks ACS FDC A3.2.2 may trip. Plan is to run the scenario as outlined and basically see what happens. If no FDCs trip, aborting the maneuver, then (if time is available) rerun the scenario with a larger decrease in the ‘failed’ thruster’s TSF (maybe 50%).”",5/3/2007
ProjectB - TIM - 2665,"Test scenario file “set4.doc”: Scenario 4d, “Orbit circularization on ACS thrusters”, test for simultaneous firing of all thrusters",3,"In test scenario file “ProjectB at set4.doc”, test scenario 4d, “Orbit circularization on ACS thrusters”, a statement in the scenario raises the concern that there is a possibility of up to 7 thrusters firing simultaneously which could result in damage to the ACE electronics. There does not appear to be an explicit test to ensure that the flight software protects against this event. The concern is that the test scencario does not explicitly test to ensure that the FSW does not simultaneously fire 7 thrusters which could damage the ACE hardware. There should be an additional test scenario for this case. The test scenario statement that describes the thruster event is below: “Note: It is important to make sure that the ACS thrusters selected for Delta-V use (OFF-Pulse control) and the ACS thrusters used for ON-Pulse attitude control are the same. This insures that only 4 thrusters maximum will be fired at any given time. If the primary ACS thrusters are used for Delta-V OFF-Pulse mode and the backup ACS thrusters are used for ON-Pulse attitude control, there could be up to 7 thrusters firing at a given instance, resulting in possible damage to the ACE electronics.”",5/3/2007
ProjectB - TIM - 2664,"Test scenario file ""set3.doc"": Scenario 3e, Delta-H, RW failure, change “RW-3” to “RW-4”",4,"In the test scenario file ""ProjectB at set3.doc"", scenario 3e, “During a Delta-H a RW fails such that it does not accept torque commands (torque cmd to RW effectively 0 Volts)”, there is one statement where “RW-3” should be replaced by “RW-4”. To help in the understanding of this TIM, the test scenario file ""ProjectB at set3.doc"" has been attached with relevant sections of the test scenario document that pertain to this TIM highlighted in yellow. The test scenario statement “Note that RW-4 has been powered off and verify that the ACE & ACS indicate the correct 3-RW matrix is being used” indicates that RW-4 is being powered off. The following statement should use RW-4 rather than RW-3 since the RW-4 reaction wheel is being powered off. “Case 1) The KF is still enabled and running although the computed gyro biases are incorrect (especially since RW-3 is still spinning down).",5/3/2007
ProjectB - TIM - 2663,"Test scenario file ""set2.doc"": Scenario 2f, Inertial Hold Mode, use of ""Prime"" and ""Backup"" gyros is reversed",4,"In the test scenario file ""ProjectB at set2.doc"", test scenario 2f, ""Inertial hold mode, IRU versus ST rate miscompare FDC checkout"", there are two statements where the use of ""prime"" and ""backup"" should be reversed. To help in the understanding of this TIM, the file ""ProjectB at set2.doc"" has been attached to the TIM. The relevant portions of the file that pertain to this TIM have been highlighted in red. This test scenario statement set the gyro to backup: ""Command the GDS to set the backup Y-axis gyro (IRU-1) channels bias such that the resultant rate is 0.11 deg/sec."" The following three scenario statements appear to have the use of ""prime"" and ""backup"" reversed: FDC A1.4.2 (ACE-A IRU-prime versus ACE-A IRU-backup versus primary ST rates) should trip, causing any RTSs that would autonomously transfer use from the prime to the backup gyro channel for the Y-axis to be disabled. Verify Y-axis rate information remains on the prime gyro channel (ACS_INDEX_IRU_BODY[Y] = IRU-3). [IV&V: should “prime” be “backup”? since the backup to prime was disabled by RTS 59 (2nd last bullet), the only info can see could be from “backup”.] Verify Y-axis rate information remains on the prime gyro channel (ACS_INDEX_IRU_BODY[Y] = IRU-3).",5/3/2007
ProjectB - TIM - 2662,Test scenario file set1.doc: Scenario 1b part 2 does not test for transition of Safehold ACE-B to ACS SunAcq mode,3,"In test scenario file ""°ProjectB at set1.doc"", scenario 1b part 2, ""°Nominal Separation and SunAcq - PART 2: Propulsion system pressurization, Safehold c/o, thruster pulse tests"", there is a test for transition of ""°Safehold ACE-A to ACS SunAcq mode"". For complete testing, there should also be a test for transition of ""°Safehold ACE-B to ACS SunAcq mode"".",5/3/2007
ProjectB - TIM - 2661,Inst2 FSW Code vs. Comment Discrepancy Regarding Size of Array,4,"The comment on line 41 of file fsw\shared\inc\osmodes.h indicates that the value of OS_CPU_COMMON_NUM_MISC_COUNTERS should be 6, but it is defined to have the value 8 on line 49. If the number of counters is defined incorrectly, this could lead to the array “os_misc_counters_array” to be declared to have the wrong/unintended size in struct os_mode_log_type on line 82 with possible further unintended implications/behavior. The code example: 41 /* The array sizes (28,6) are more then the actually used counters. The purpose is that all cpuS (SBC and all SDNs) will have the same HK telemetry layout. We chose values that will work for all cpuS .The specific cpu will update only the used counters. The other couters will stay cleared out. ProjectB DCR# 1788 */ #define OS_CPU_COMMON_NUM_EXEC_COUNTERS 28 49 #define OS_CPU_COMMON_NUM_MISC_COUNTERS 8",4/27/2007
ProjectB - TIM - 2660,Unused Variable in Inst2 FSW Code (File: fsw\cpu\eve\tasks\hb\hbhandlers.c),4,"In file fsw\cpu\eve\tasks\hb\hbhandlers.c, the variable “cmd_sc_time_status” declared on line 1122 is initialized on line 1140 but the value is never used thereafter. The code example: 1121 TIME_System_t cmd_sc_time; uint32 cmd_sc_time_status; uint8 cmd_fc; uint16 cmd_len; uint8 cmd_fc_status=HB_OKAY_NO_RJCT; uint8 cmd_len_status=HB_OKAY_NO_RJCT; uint8 cmd_par_status=HB_OKAY_NO_RJCT; uint8 cmd_exe_status=CP_OKAY_NO_FAIL; uint32 cmd_data_0; uint32 cmd_data_1; uint16 diagTypeData; uint16 port; uint8 value; uint32 tmpData; int i; uint32 bitsSet; uint32 ierIvrData; /* Get a S/C Timestamp */ 1140 cmd_sc_time_status = TIME_GetSystemTAI(&cmd_sc_time); ....... (There are no additional occurrences of token 'cmd_sc_time_status' in function HB_CMDHandler after line 1140)",4/27/2007
ProjectB - TIM - 2659,Inconsistent Functional Prolog in Inst2 FSW Code (File fsw\shared\sb\sblogfil.c) - Possible Missing Function Call,5,"In file fsw\cpu\eve\tasks\sc\sctask.c, the functional prolog on line 123 states that the routine eventf is called by SC_task_main. However eventf is, in fact, not called anywhere in SC_task_main. The rest of the functions listed as being called in SC_task_main are actually called. There is a possible error in either the SC_task_main code or the functional prolog. It is possible that an event message has not been implemented in code, or that it was removed and the prolog was not updated. The code example: 115 ** Routines Called: ** ** 1. SC_task_init ** 2. SBreceive_copy ** 3. SC_get_abs_time ** 4. SC_process_request ** 5. SC_process_atp_command ** 6. SC_process_rtp_command 123 ** 7. eventf ** 8. SC_update_next_time ** 9. SC_service_switch_pend",4/27/2007
ProjectB - TIM - 2658,Inconsistent Inst2 FSW Code (File: fsw\shared\sb\sblogfil.c) - Function Stated to Return True or False Always Returns False,5,"In file fsw\shared\sb\sblogfil.c, the function SB_log_filtered is used for determining if a packet should be filtered or not. The functional prolog indicates that the function on lines 46 - 50 can return TRUE or FALSE. However the function will always return FALSE. It is not certain why the function's logic is inconsistent with its documentation, and also why, since it has no apparent side effects, calls to the function are not simply eliminated or replaced with FALSE. The code example: 32 /****************************************************************************** ** Function: SB_log_filtered() ** ** Purpose: ** Determine whether a packet should be excluded from the packet log. ** ** Arguments: ** bd : Pointer to buffer descriptor for the packet. ** ** Return: ** TRUE to exclude the packet, FALSE to keep it. */ 46 boolean SB_log_filtered (SBbuffer_t *bd) { (void) bd; /* refer to arguments to avoid compiler warnings */ return FALSE; 50 }",4/27/2007
ProjectB - TIM - 2657,ProjectB Ground System: DDS QCP - setModTbl.c - possible buffer overflow,3,"Possible array index out of bounds exception/buffer overflow in qcp.r3.2.1/src/setModTbl.c: sprintf could cause a buffer overflow on line 89 by copying into flNm of size 200 a string that could potentially be of size 228 because cfgFlPth is 200 and the characters in ""qcp/config/instruments.config"" plus the terminating null character would then overflow. Similar issues occur on line 92 and 241. The code example: 89 sprintf(flNm, ""%sqcp/config/instruments.config"", cfgFlPth); 92 sprintf(shmPtr->logFlMsgBuf[(shmPtr->logFlInCnt & LOG_BUF_SZ)], ""getModTbl: ****ERR**** Could not open config file: %s, exiting"", flNm); 241 sprintf(shmPtr->logFlMsgBuf[(shmPtr->logFlInCnt & LOG_BUF_SZ)], ""getModTbl: Could not open config file: %s"", flNm);",4/20/2007
ProjectB - TIM - 2656,ProjectB Ground System: DDS QCP - setConPrms.c - possible buffer overflow,3,"Possible array index out of bounds condition in qcp.r3.2.1/src/setConPrms.c: sprintf could cause a buffer overflow on line 57 by copying into cfgNum of size 200 a string that could potentially be of size 226 because shmPtr->cfgFlPth is 200 and shmPtr->qcpNm is 5. The code example: 00057 sprintf(cfgNm, ""%sqcp/config/%s/conn.config"", shmPtr->cfgFlPth, shmPtr->qcpNm);",4/20/2007
ProjectB - TIM - 2655,ProjectB Ground System: DDS QCP - qcpMD5.c - possible buffer overflow,3,"11 (eleven) instances of a possible buffer overflow occur in file qcp.r3.2.1/src/qcpMD5.c. ---------------------------------------------------------------------------------------- Instance 1 - 4 If the main function is called with 15 arguments but the second argument is not of at least size 43 characters in length, an array index out of bounds exception will occur on line 126 because there is no check on parameter argv[1] which is copied into tlmFlPthFlNm on line 111. There exist three similar issues on lines 140, 141, and 142 due to no argument length checking. The code example: 111 strcpy(tlmFlPthFlNm, argv[1]); 112 vcIdx = atoi(argv[2]); 113 errFlSz = (atoi(argv[3])) * shmPtr->vcduSz; 114 idx = atoi(argv[4]); 115 fIdx = atoi(argv[5]); 116 lPrevImSeqNum = strtoll(argv[6], 0, 16); 117 lPrevVcSeqNum = strtol(argv[7], 0, 16); 118 lPrevStpTm = strtoll(argv[8], 0, 16); 119 fClsTm = strtoul(argv[9], 0, 10); 120 rbldFlg = atoi(argv[10]); 121 tlmVcCnt = atoi(argv[11]); 122 rp = atoi(argv[12]); 123 errUpdtCnt = atoi(argv[13]); 124 tlmUpdtCnt = atoi(argv[14]); 125 flNmLgth = strlen(tlmFlPthFlNm); 126 memcpy(flNm, &tlmFlPthFlNm[flNmLgth - 43], 43); 140 memcpy(idxFlPthFlNm, tlmFlPthFlNm, flNmLgth); 141 memcpy(qacFlPthFlNm, tlmFlPthFlNm, flNmLgth); 142 memcpy(errFlPthFlNm, tlmFlPthFlNm, flNmLgth); ---------------------------------------------------------------------------------------- Instance 5 (references same section of code as above) There is no check on argument argv[1] which is copied to tlmFlPthFlNm on line 111, so any value given to the main function that is not between length 0 and 200 in characters will cause idxFlPthFlNm to be accessed out of its bounds causing an array index out of bounds exception on line 140. In addition, a previous array index out of bounds exception could occur on line 126 if the length of argv[1] is not 43 characters or longer. So actually idxFlPthFlNm may only use index values 43 - 2147483646 .. but this still is a significant number of values that could cause an error (2147483403)and the indexes -1 to 42 would cause an error elsewhere. ---------------------------------------------------------------------------------------- Instance 6 (references the same section of code as above) There is no check on argument argv[1] which is copied to tlmFlPthFlNm on line 111, so any value given to main function that is not between length 0 and 200 in characters will cause qacFlPthFlNm to be accessed out of its bounds causing an array index out of bounds exception on line 141. In addition, a previous array index out of bounds exception could occur on line 126 if the length of argv[1] is not 43 characters or longer. So actually qacFlPthFlNm may only use index values 43 - 2147483646 .. but this still is a significant number of values that could cause an error (2147483403) and the indexes -1 to 42 would cause an error elsewhere. ---------------------------------------------------------------------------------------- Instance 7 (references the same section of code as above) There is no check on argument argv[1] which is copied to tlmFlPthFlNm on line 111 so any value given to main function that is not between length 0 and 200 in characters will cause errFlPthFlNm to be accessed out of its bounds causing an array index out of bounds exception on line 142. In addition, a previous array index out of bounds exception could occur on line 126 if the length of argv[1] is not 43 characters or longer. So actually errFlPthFlNm may only use index values 43 - 2147483646 .. but this still is a significant number of values that could cause an error (2147483403) and the indexes -1 to 42 would cause an error elsewhere. ---------------------------------------------------------------------------------------- Instance 8 - 10 sprintf could cause an array index out of bounds condition on line 489 by copying into cmd of size 200 a string that could potentially be of size 204 because errFlPthFlNm is 200 (there are 3 other characters in the string and the null character). Similar issues occur on lines 494 and 499. The code example: 487 if (errUpdtCnt == 0) { 489 sprintf(cmd, ""rm %s"", errFlPthFlNm); system(cmd); 491 } if (tlmUpdtCnt == 0) { 494 sprintf(cmd, ""rm %s"", tlmFlPthFlNm); system(cmd); } if ((tlmUpdtCnt == 0) && (errUpdtCnt == 0)) { 499 sprintf(cmd, ""rm %s"", idxFlPthFlNm); system(cmd); 501 } ---------------------------------------------------------------------------------------- Instance 11 sprintf could cause a buffer overflow on line 444. shmPtr->sFlsPkt[vcIdx][idx].flNm is declared on line 234 of qcp.r3.2.1/src/qcp.h and is an array of size 47. The other flNm (third argument of the sprintf statement) is declared on line 63 of qcp.r3.2.1/src/sharmem.h and is of size 50. It is 3 indexes larger presumably to contain a 3 character filename extension. However, there is an ADDITIONAL character that may not have been considered -- the '.' character. If there is a filename of the maximum size of 47 the flNm of size 50 (the third argument to the sprintf statement) may use index values 0..50 (whereas the only legal values are 0.49). Similar issues may cause the flNm of size 47 (shmPtr->sFlsPkt[vcIdx][idx].flNm) to use indexes 0..47 where 47 is not legal. The allowed possibility of the accessing of memory one index beyond the end of the arrays may be the result of not taking into account the '.' character taking up 1 space in addition to the three character filename extension. An additional issue is that no room is made for the trailing null character. In the event this filename extension is to ever be used with a function such as printf this could be another issue also. The code example: 444 sprintf(shmPtr->sFlsPkt[vcIdx][idx].flNm, ""%s.tlm"", flNm); ----------------------------------------------------------------------------------------",4/20/2007
ProjectB - TIM - 2654,ProjectB Ground System: DDS QCP - qcpLog.c - possible buffer overflow,3,"2 (two) instances of a possible buffer overflow occur in file qcp.r3.2.1/src/qcpLog.c: ---------------------------------------------------------------------------------------- Instance 1 On line 62 sprintf can cause a buffer overflow by copying into lsFlNm of size 200 a string which can potentially be of size 220 because shmPtr->lsPth is 200 and shmPtr->qcpNm is 5 (there are 14 other characters in the string and the null character). The code example: 00062 sprintf(lsFlNm, ""%s%s_qcpLog_ls.res"", shmPtr->lsPth, shmPtr->qcpNm); ---------------------------------------------------------------------------------------- Instance 2 On line 64, sprintf can cause a buffer overflow by copying into cmd of size 200 a string which can potentially be of size 208 because shmPtr->logFlPth is 200 and adding in the characters 'm', 'k', 'd', 'I', 'r', ' ', '-', 'p', ' ', and the null character could cause overflow if the logFlPth is of maximum allowed size. The code example: 00064 sprintf(cmd, ""mkdir -p %s"", shmPtr->logFlPth); ----------------------------------------------------------------------------------------",4/20/2007
ProjectB - TIM - 2653,ProjectB Ground System: DDS QCP - qcpFlInDb.c - possible buffer overflow,3,"6 (six) instances of a possible buffer overflow occur in file qcp.r3.2.1/src/qcpFlInDb.c: ---------------------------------------------------------------------------------------- Instance 1 On line 143, sprintf can cause a buffer overflow by copying into chkPth of size 80 a string which can potentially be of size 93 because shmPtr->oPath is 80 and shmPtr->insName[][] is of size at least 1 (add this to characters always present: '/', 'i', 'n', 'd', 'e', 'x', '/', 'B', 'A', 'C', 'K', 'U', 'P', '/' and the null character). If the third and fourth sprintf arguments reach their maximum size there can be a buffer overflow. The code example: 00143 sprintf(chkPth, ""%s%s/index/BACKUP/"", shmPtr->oPath, &shmPtr->insName[shmPtr->pInsId][0]); ---------------------------------------------------------------------------------------- Instance 2 On line 144, sprintf can cause a buffer overflow by copying into IsFlNm of size 80 a string which potentially can be of size 218 because shmPtr->lsPth is 200 and shmPtr->qcpNm is 5 and there are other characters in the string. The code example: 00144 sprintf(lsFlNm, ""%s%s_qcpFlDb_ls.res"", shmPtr->lsPth, shmPtr->qcpNm); ---------------------------------------------------------------------------------------- Instance 3 On line 234, sprintf can cause a buffer overflow by copying into lsFlNm of size 80 a string which potentially can be of size 226 because shmPtr->lsPth is 200 and shmPtr->qcpNm is 5 (there are also 20 other characters in the string and the null character). The code example: 00234 sprintf(lsFlNm, ""%s%s_qcpFlDb_rsrt_ls.res"", shmPtr->lsPth, shmPtr->qcpNm); ---------------------------------------------------------------------------------------- Instance 4 On line 238, sprintf can cause a buffer overflow by copying into chkPth of size 80 a string which can potentially be of size 91 because shmPtr->oPath is 80 and shmPtr->insName[][] is of size at least 1and x is of size 1 and there are other characters in the string. The code example: 00238 sprintf(chkPth, ""%s%s/index/QCP%d/"", shmPtr->oPath, &shmPtr->insName[shmPtr->pInsId][0], x); ---------------------------------------------------------------------------------------- Instance 5 On line 288, sprintf can cause a buffer overflow by copying into lsFlNm of size 80 a string which can potentially be of size 226 because shmPtr->lsPth is 200 and shmPtr->qcpNm is 5 (there are also 20 other characters in the string and the null character). The code example: 00288 sprintf(lsFlNm, ""%s%s_qcpFlDb_rsrt_ls.res"", shmPtr->lsPth, shmPtr->qcpNm); ---------------------------------------------------------------------------------------- Instance 6 On line 290, sprintf can cause a buffer overflow by copying into chkPth of size 80 a string which can potentially be of size 100 because shmPtr->oPath is 80 and &shmPtr->insName[][] is of size at least 1 (x can be 8 and there are 11 other characters and the null character) . The code example: 00290 sprintf(chkPth, ""%s%s/index/QCP%d/"", shmPtr->oPath, &shmPtr->insName[shmPtr->pInsId][0], x); ----------------------------------------------------------------------------------------",4/20/2007
ProjectB - TIM - 2652,ProjectB Ground System: DDS QCP - qcpCC.c - possible buffer overflow,3,"13 (thirteen) instances of a possible buffer overflow occur in file qcp.r3.2.1/src/qcpCC.c. ---------------------------------------------------------------------------------------- Instances 1 - 6 On line 132, sprintf can cause a buffer overflow by copying into cmd of size 200 a string which can potentially be of size 209. shmPtr->exFlPth can be of size 200 by itself and the additional characters in the string plus the null character add up to 9 more. There are 5 similar issues on lines 134, 136, 271, 872, and 904. The code example: 00132 sprintf(cmd, ""%sqcpClose &"", shmPtr->exFlPth); 00134 sprintf(cmd, ""%sqcpLog &"", shmPtr->exFlPth); 00136 sprintf(cmd, ""%sqcpFlInDb &"", shmPtr->exFlPth); 00271 sprintf(cmd, ""%sqcpClient %d &"", shmPtr->exFlPth, conId); 00872 sprintf(cmd, ""%skillQcp > /Users/sam/.dds/killQcp.out"", shmPtr->exFlPth); 00904 sprintf(cmd, ""%sqcpClient %d &"", shmPtr->exFlPth, x); ---------------------------------------------------------------------------------------- Instance 7 On line 173, sprintf can cause a buffer overflow by copying into IsFlNm of size 80 a string which can potentially be of size 216 because shmPtr->lsPth is 200 and shmPtr->qcpNum is 5 and there are other characters in the string. Is this possible or is the length of the file path constrained? Is it possible for the file path to get that long? The code example: 00173 sprintf(lsFlNm, ""%s%s_qcpCC_ls.res"", shmPtr->lsPth, shmPtr->qcpNm); ---------------------------------------------------------------------------------------- Instance 8 On line 174, sprintf can cause a buffer overflow by copying into chkPth of size 80 a string which can potentially be of size 92 because shmPtr->dPath is 80 and shmPtr->qcpNum is 5 (string also contains 6 other characters and the null character). Is this possible or is the length of the file path constrained? Is it possible for the file path to get that long to begin with? The code example: 00174 sprintf(chkPth, ""%scmds/%s/"", shmPtr->dPath, shmPtr->qcpNm); ---------------------------------------------------------------------------------------- Instance 9 On line 187, sprintf can cause a buffer overflow by copying into difFlNm of size 80 a string which can potentially be of size 120 because chkPath is 80 and fls[].nm is 40. Is this possible or is the length of the file path constrained? Is it possible for the file path to get that long to begin with? The code example: 00187 sprintf(dirFlNm, ""%s%s"", chkPth, fls[z].nm); ---------------------------------------------------------------------------------------- Instances 10 - 11 Since pInsId (pointer to instrument ID) is declared as an int it could become large enough to overflow the buffer, but according to the comments on lines 933 - 934 it appears to never become larger (in length) than a single digit. Even so, on line 940, the newline character takes up a second location in the buf array, leaving no room for the trailing \0 null character which would overflow the buffer. This may lead to unexpected and potentially harmful behavior on and after line 940. A similar issue occurs on line 942. The code example: 00933 * possible values of HB flag 0 = idle after reboot 1 = idle 2 = Inst1 3 * = Inst3 4 = Inst2 */ 00938 if (shmPtr->qcpProcSt == PROC) { sprintf(buf, ""%d\n"", shmPtr->pInsId + 1); bWrtn = write(inFd, buf, 2); } else { sprintf(buf, ""%d\n"", qcpInit); bWrtn = write(inFd, buf, 2); } ---------------------------------------------------------------------------------------- Instance 12 On line 963, sprintf can cause a buffer overflow by copying into flNm of size 80 a string which can potentially be of size 108 because shmPtr->dPath is 80, shmPtr->dirRspApid is 5, seq is 1 (will always have value 0) , and unixTm is 5. Is this possible or is the length of the file path constrained? Is it possible for the file path to get that long to begin with? The code example: 00963 sprintf(flNm, ""%sstats/%04d_%08x_%08x.pkt"", shmPtr->dPath, shmPtr->dirRspApid, seq, shmPtr->unixTm); ---------------------------------------------------------------------------------------- Instance 13 On line 1033, sprintf can cause a buffer overflow by copying into cmd of size 200 a string which can potentially be of size 406 because path is 200 and path is 200. Is this possible or is the length of the file path constrained? Is it possible for the file path to get that long to begin with? The code example: 01033 sprintf(cmd, ""%skillqcp %s"", path, path); ----------------------------------------------------------------------------------------",4/20/2007
ProjectB - TIM - 2651,ProjectB Ground System: DDS QCP - qcp.c - possible misplaced semicolon,3,"The ""if"" statement on line 701 ends in a semi-colon prior to the first opening brace of the ""if"" block. This semi-colon is misplaced and should be removed. The code example: 701 if ((VCIn[vcIdPtr][flInShPtr][vcduPtr].errCnt == 0) || ((VCIn[vcIdPtr][flInShPtr][vcduPtr].errCnt > 0) && (errVcSeqNum[0] != VCIn[vcIdPtr][flInShPtr][vcduPtr].errVcSeqNum))); { btsWrtn = write(flInSh[vcIdPtr][flInShPtr].errFd, shmPtr->frmBuf[conId][oCnt].frm, shmPtr->vcduSz); if (btsWrtn == shmPtr->vcduSz) { ....",4/20/2007
ProjectB - TIM - 2650,ProjectB Ground System: DDS QCP - qcp.c - possible buffer overflow,3,"4 (four) instances of a possible buffer overflow occur in file qcp.r3.2.1/src/qcp.c. ---------------------------------------------------------------------------------------- Instance 1 On line 623, sprintf can cause a buffer overflow by copying into ""cmd"" of size 200 a string which can potentially be of size 241 because flIn[][].fllPthflNm is 100 and shmPtr->insName[][] is 4 and shmPtr ->oPth is 80 and flIn[][].flNm is 47 and there are other characters in the string. The code example: 00623 sprintf(cmd, ""cp %s.err %s%s/tmp/%s.err"", flIn[vcIdPtr][flInPtr].fllPthflNm, shmPtr->oPath, &shmPtr->insName[shmPtr->pInsId][0], flIn[vcIdPtr][flInPtr].flNm); ---------------------------------------------------------------------------------------- Instance 2 On line 915, sprintf can cause a buffer overflow by copying into ""cmd"" of size 200 a string which can potentially be of size 248 because shmPtr->oPath is 80 and shmPtr->insName[][] is 4 and flIn[][].flNm is 47 and flIn[][].fllPthflNm is 100 and there are other characters in the string. The code example: 00915 sprintf(cmd, ""mv %s%s/tmp/%s.tlm %s.tlm"", shmPtr->oPath, &shmPtr->insName[shmPtr->pInsId][0], flIn[x][flInSh[x][y].flInPtr].flNm,fllPthflNm); ---------------------------------------------------------------------------------------- Instance 3 On line 925, sprintf can cause a buffer overflow by copying into evntStr of size 128 (""EVENT_STR_LNG""), a string which can potentially be of size 243 because idxFlNum is char[200] and the rest of the string in sprintf is of size 43 characters. The code example: 00925 sprintf(evntStr, ""qcp: chkFlsToCls, cannot creat idx file %s\n"", idxFlNm); ---------------------------------------------------------------------------------------- Instance 4 On line 951, sprintf can cause a buffer overflow by copying into fllPthflNm of size 100 a string which can potentially be of size 201 because fllPthflNm is 200 and space is also needed for the null character. The code example: 00951 sprintf(flIn[x][flInSh[x][y].flInPtr].fllPthflNm, ""%s"", fllPthflNm); ----------------------------------------------------------------------------------------",4/19/2007
ProjectB - TIM - 2649,ProjectB Ground System: DDS QCP - getModTbl.c - possible buffer overflow,3,"Possible buffer overflow in qcp.r3.2.1/src/getModTbl.c: On line 81, sprintf may cause a buffer overflow by copying into flNm of size 200 a string which can potentially be of size 228 because shmPtr ->cfgFlPth is 200 and there are other characters in the string. There is a similar error on line 84 because shmPtr of size 256 may have a string of size 261 copied into it because flName is 200 and there are 60 other characters and the null character. The code example: 81 sprintf(flNm, ""%sqcp/config/instruments.config"", shmPtr->cfgFlPth); 84 sprintf(shmPtr->logFlMsgBuf[(shmPtr->logFlInCnt & LOG_BUF_SZ)], ""getModTbl: ****ERR**** Could not open config file: %s, exiting"", flNm);",4/19/2007
ProjectB - TIM - 2648,ProjectB Ground System: DDS QCP - getInsId.c - possible buffer overflow,3,"Possible buffer overflow in qcp.r3.2.1/src/getInsId.c: On line 52, sprintf can cause a buffer overflow by copying into cfgNm of size 200 a string which can potentially be of size 233 because shmPtr ->cfgFlPth is 200, shmPtr->qcpNm is 5, and the quoted string adds additional characters. This buffer overflow is possible unless the arrays pointed to by shmPtr are constrained in their length due to their data contents. The code example: 00052 sprintf(cfgNm, ""%sqcp/config/%s/pInstrument.config"", shmPtr->cfgFlPth, shmPtr->qcpNm);",4/19/2007
ProjectB - TIM - 2647,ProjectB Ground System: DDS QCP - getConPrms.c - possible buffer overflow,3,"6 (six) instances of a possible buffer overflow occur in file qcp.r3.2.1/src/getConPrms.c. These six buffer overflows will occur unless the contents of the arrays in question are constrained in their length due to the particular data stored in the buffers. ---------------------------------------------------------------------------------------- Instance 1 On line 57, sprintf can cause a buffer overflow by copying into cfgNm of size 80 a string which can potentially be of size 226 because shmPtr ->cfgFlPth is 200 and shmPtr->qcpNm is 5. The code example: 00072 getConPrms(SHARMEM * shmPtr, int mod) 00073 { 00074 char evntStr[128]; 00075 char cfgNm[80], cmd[80]; 00076 int cfgFd, x; 00077 int prmCnt, conCfgCnt = 0, opnBckupCfg = 0, tmOut, conId, conAct[4], ret = 0; 00078 COMPRM cts[1024]; 00079 memset(cts, 0, sizeof(cts)); 00080 sprintf(cfgNm, ""%sqcp/config/%s/conn.config"", shmPtr->cfgFlPth, shmPtr->qcpNm); ---------------------------------------------------------------------------------------- Instance 2 On line 142, sprintf may cause a buffer overrun since ""cmd"" is of size 80 and ""exFlPth"" is of size 200. The code example: 00142 sprintf(cmd, ""%sqcpClient %d &"", shmPtr->exFlPth, conId); ---------------------------------------------------------------------------------------- Instance 3 Array index of 'qcpNm' may be outside the bounds on line 159. Array 'qcpNm' of size 5 declared at sharmem.h:85 may use index values 0..79 because ""prm"" is of size 80. The code example: 00159 strcpy(shmPtr->conConfig[conId].qcpNm, cts[x].prm); ---------------------------------------------------------------------------------------- Instance 4 Array index of 'fepPriName' may be outside the bounds on line 169. Array 'fepPriName' of size 20 declared at sharmem.h:78 may use index values 0..79 because ""prm"" is of size 80. The code example: 169 strcpy(shmPtr->conConfig[conId].fepPriName, cts[x].prm); ---------------------------------------------------------------------------------------- Instance 5 Possible buffer overflow in qcp.r3.2.1/src/getConPrms.c: Array index of 'fepActName' may be outside the bounds on line 170. Array 'fepActName' of size 20 declared at sharmem.h:77 may use index values 0..79 because ""prm"" is of size 80. The code example: 170 strcpy(shmPtr->conConfig[conId].fepActName, cts[x].prm); ---------------------------------------------------------------------------------------- Instance 6 Array index of 'fepBckName' may be outside the bounds on line 190. Array 'fepBckName' of size 20 declared at sharmem.h:79 may use index values 0..79 because ""prm"" is of size 80. The code example: 00190 strcpy(shmPtr->conConfig[conId].fepBckName, cts[x].prm); ----------------------------------------------------------------------------------------",4/19/2007
ProjectB - TIM - 2646,ProjectB Ground System: DDS QCP - chkDir.c - possible buffer overflow,3,"Possible buffer overflow in qcp.r3.2.1/src/chkDir.c: The variable ""prm"" is declared to be an array of char strings of length 80. ""fls"" is declared to be an array of type DRCTS, which is a structure with an array of 40 char and 1 int. On line 61, fls[].nm is a 40 char array. On line 58, ""nmLn"" is strlen of prm which is an array of 80 char strings. Thus, it is possible for ""nmLn"" to have a length of 80. It is possible on line 61 for memcpy to copy up to 80 characters (nmLn) into fls[].nm which is only 40 characters in length. The code example: 16 char prm[16][80] 55 prm[prmCnt][idx] = 0; if (prmCnt == 8) { 58 nmLn = strlen(prm[prmCnt]); if ((prm[prmCnt][nmLn - 4] == tstExt[0]) && (prm[prmCnt][nmLn - 3] == tstExt[1]) && (prm[prmCnt][nmLn - 2] == tstExt[2]) && (prm[prmCnt][nmLn - 1] == tstExt[3])) { 61 memcpy(fls[*flCnt].nm, prm[prmCnt], nmLn);",4/19/2007
ProjectB - TIM - 2645,Inst2 requirement 8.9.4.3 is not tested in procedure listed in RTVM,3,"Requirement 8.9.4.3 is not tested in fsw_cp_test.prc, even though it is traced to that procedure in the RTVM. It appears that the requirement is not verified in any of the test procedures. Req 8.9.4.3: Inst2 FSW shall map the PSTarget I/O Registers into PCI I/O space.",4/18/2007
ProjectB - TIM - 2644,Inst2 requirements need to be updated in the requirements specification,4,"The following requirements need to be updated in the requirements specification due to the notes in the RTVM regarding why they are not tested: 8.9.2.1.1 - Inst2 has the ability to enable only. (req states ""Inst2 FSW shall implement separate Enable and Turn ON commands to control the Decontamination Heater Relays."") 8.9.4.2 - design has changed and this is no longer applicable. (req states ""Inst2 FSW shall maintain non-volatile, modifiable, configuration information that maps resolver-indicated position to absolute step number. 8.9.6.7.3 - design has changed and this is no longer applicable. (req states ""Inst2 FSW shall utilize the shortest possible Filter Mechanism Movement to reach the designated SAFE position upon entering SAFE mode."") 8.9.6.8.2 - design has changed and this is no longer applicable. (req states ""Inst2 FSW shall allow for a configurable number of samples to be taken to determine the resolver reading."")",4/18/2007
ProjectB - TIM - 2643,Inst2 requirement 8.5.6.2.2 is not fully tested,3,Verifying requirement 8.5.6.2.2 by looking at telemetry is not sufficient. The value being set to disable is not the same as actually disabling the auto-restart feature. Additional steps should be added to verify the auto-restart feature is disabled. Req 8.5.6.2.2: Inst2 FSW shall configure the ATMEL to disable the Auto-Restart Feature.,4/18/2007
ProjectB - TIM - 2642,Inst2 requirement 5.6.3 may not be fully tested,3,"The task check-in command cannot be found in fsw_main_test.prc to verify requirement 5.6.3. Req 5.6.3: Inst2 FSW shall respond to the HS Task ""Task Check-in"" command by issuing a ""Task Check-in"" telemetry packet.",4/18/2007
ProjectB - TIM - 2641,Inst2 requirement 4.4.9.1 may not be fully tested,3,"Requirement 4.4.9.1 is listed as tested in fsw_main_test.prc, but it is not clear whether an anomalous condition with possible continuous event messages occurred so the requirement is actually verified. Req 4.4.9.1: The instruments shall design their systems so as not to flood the channel with event messages in the case of an anomalous condition that continuously generates event messages.",4/18/2007
ProjectB - TIM - 2640,Inst2 requirement 4.1.22 is not fully tested,3,"Requirement 4.1.22 states that the FSW shall accept commands to configure the POR and SAFE states. The test procedure fsw_sc_test.prc only refers to the POR state. The SAFE state does not appear to be verified. Req 4.1.22: Inst2 FSW shall accept commands to configure the POR and SAFE states. From fsw_sc_test.prc: LOAD_POR: ;**** ;This section satisfies FSW requirement 4.1.22 ;**** ;4.1.22 load rts 1/7 (move a wheel 1 pos) write ""@PW "" write ""@PW This section satisfies FSW requirements 4.1.22"" write ""@PW "" new_proc fswacc_por_load start fswacc_por_load",4/18/2007
ProjectB - TIM - 2639,Inst2 interface requirements are not formally tracked through testing,3,Inst2 FSW requirement 4.1.4 states that the software shall adhere to the interface requirements detailed in the High Speed Bus ICD. Inst2 FSW requirement 4.1.6 states that the software shall comply with the Inst2-to-ProjectB ICD. These interface requirements are not documented and tracked through testing. One line in the RTVM does not ensure all requirements are implemented and tested. Req 4.1.4: Inst2 FSW shall adhere to the high speed bus data rate and interface requirements detailed in the High Speed Bus (HSB) Interface Control Document (ICD) (464-CDH-ICD-0012). Req 4.1.6: Inst2 FSW shall comply with the Inst2 to ProjectB Spacecraft ICD (464-Inst2-ICD-0004).,4/18/2007
ProjectB - TIM - 2638,Discrepancy in Register Sizes between interface documents,3,"Discrepancy between 464-PWR-ICD-0035 (Rev -, 8/29/05) and 464-CDH-ICD-0027 (Draft, 11/14/03). The first refers to the SDN ASD containing one 12-bit register (section 3.7.2), while the second refers to the SDN ASD containing only one 8-bit register (section 4.0).",4/16/2007
ProjectB - TIM - 2637,Error in Section 3.5.3.5 Mux Control Registers of PSE interface document,4,"In Section 3.5.3.5 Mux Control Registers, the decription about MUX1_OUT3 refers to MUX_EN4 rather than MUX1_OUT3. From the document: MUX1_OUT3: A logic high MUX_EN4 enables the PWM Circuit.",4/16/2007
ProjectB - TIM - 2636,Missing Requirements for Turning On Solar Array Segments,3,"There is no requirement in the ICD requiring the sequence order of the solar array segments for turning ON or OFF. In the ICD, it does mention the SA segment order in Appendix A: Software Battery Charge Control: SA Segment Control.",4/16/2007
ProjectB - TIM - 2635,Bit count discrepancy between requirement and interface documents,3,"The information contained in the ProjectB (ProjectB) Project Telemetry Output Flight Software Requirements Specification 464-FSW-SPEC-0066 Revision (A), requirement 2901 states: 2901 When constructing Fill Packets, the Flight Software shall set the packet data region of the CCSDS Source telemetry packet to a byte count pattern starting at zero (0). In the ProjectB (ProjectB) Project C&DH S_COMM ETU/Flight Card Interface Description Document 464-CDH-ICD-0073 Revision (A) Effective Date: June 2, 2006, Table 12.2-2 Fill Frame Format states ""M_PDU Packet Data Zone Packe Data 8-bit count starting from ""11h"" and repeating to fill out M_PDU.""",4/16/2007
ProjectB - TIM - 2634,NULL Command for thrusters not defined in 464-ACS-ICD-0062,3,"ProjectB (ProjectB) Attitude Control Subsystem (ACS) Flight Software (FSW) Requirements Specification 464-FSW-SPEC-0050 Revision B contains two requirements specifying that a null command is sent to the thrusters. The 464-ACS-ICD-0062 ProjectB (ProjectB) Attitude Control Electronics Hardware/Software ICD Revision A Effective Date: March 15, 2006 contains no documentation about a null command. 2553.5 On exiting Delta-H Mode, the ACS FSW shall a. send a null command to the thrusters b. disable all thrusters 2563.5 On exiting Delta-V Mode, the ACS FSW shall a. send a null command to the thrusters b. disable all thrusters",4/16/2007
ProjectB - TIM - 2633,ProjectB Ground DDS: Logic improvement suggestion,5,"in FEPVcduWriterStatistics.cpp, function resetCounters(), for saving execution time, logic from line 453-506 can combine together within one for loop.",4/12/2007
ProjectB - TIM - 2632,ProjectB Ground DDS: Magic numbers,4,"In the file FEPCaduReader.cpp, the function FEPCaduReader::run() contains 322: if (firstReadAfterConnect == true) 323: { 324: if (bytesRead == 20) 325 {¡­} What is the magic number 20.",4/12/2007
ProjectB - TIM - 2631,ProjectB Ground DDS: Allocated memory without deletion,3,"In the file FEPCaduBlockQueue.cpp, the method FEPCaduBlockQueue::load() allocates space on the heap pointed to by the member ""this->data"" (line 107), but it is never deleted.",4/12/2007
ProjectB - TIM - 2630,ProjectB Ground DDS: Values of pcRamOverrunMarginLow and pcRamOverrunMarginHigh may be reversed.,4,"In the file FEPVcduWriterStatistics.cpp, the function FEPVcduWriterStatistics::getPcRamOverrunMarginValues() has the values of the variables pcRamOverrunMarginLow and pcRamOverrunMarginHigh reversed. float pcRamOverrunMarginLow = 1000.0; float pcRamOverrunMarginHigh = -1000.0;",4/12/2007
ProjectB - TIM - 2629,"ProjectB Ground DDS: Return value is always ""true""",5,"In the file FEPDirectiveHandler.cpp, the function FEPDirectiveHandler::resetCounters() always returns the value ""true"". There are no conditions, which would result in a ""false"" value. What does it need the return value for? The same condition exists in the function ""bool FEPVcduWriterStatistics::processOneVcdu()"" found in the file FEPVcduWriterStatistics.cpp.",4/12/2007
ProjectB - TIM - 2628,ProjectB Ground DDS: Variable's and function's names are too long,4,"Usually in C when a variable name is longer than 32 charaters, the compiler will truncate it to 32 charactors. So for this example, the compiler may chop the name from ""maximumNumberOfConsecutiveZeroBytesReadInput"" to ""maximumNumberOfConsecutiveZeroBy"", then these two variable name are become the same. --------------------------------------------------------------------------- VARIABLE'S NAMES --------------------------------------------------------------------------- It may not a problem in C++, but a suggestion to shorten the names of several variable in FEPVcduWriterCommon.hpp. Several examples are: unsigned int maximumNumberOfConsecutiveZeroBytesReadInput, unsigned int maximumNumberOfConsecutiveZeroBytesRead; ---------------------------------------------------------------------------- FUNCTION'S NAMES ---------------------------------------------------------------------------- It is not a problem in C++, but a suggestion to shorten the names of several variable in the file FEPStatusCreator.cpp. this->packet.setTotalFramesReceivedLockedToSearch(this->statistics.getTotalFramesReceivedLockedToSearch()); this->packet.setTotalFramesReceivedReedSolomonClean(this->statistics.getTotalFramesReceivedReedSolomonClean()); this->packet.setTotalFramesReceivedReedSolomonCorrected(this->statistics.getTotalFramesReceivedReedSolomonCorrected()); this->packet.setTotalFramesReceivedReedSolomonFailed(this->statistics.getTotalFramesReceivedReedSolomonFailed()); this->packet.setTotalVcduSequenceNumberGaps(this->statistics.getTotalNumberOfVcduSequenceNumberGaps()); this->packet.setTotalImpduSequenceNumberGaps(this->statistics.getTotalNumberOfImpduSequenceNumberGaps());",4/12/2007
ProjectB - TIM - 2627,ProjectB Ground DDS: Incorrect comment,5,"The comment immediately preceding the function definition of FEPVcduWriterObserver::remove in the file FEPVcduWriterObserver.cpp. states ""/// \return ... added to the list."" The verb ""added"" should be changed to ""remove"" in order to reflect the name of the method.",4/12/2007
ProjectB - TIM - 2626,ProjectB Ground DDS: Checking an unknown or non-existed file.,5,"In the file FEPCaduWriter.cpp, the function run() is checking ""this->file.isOpen()==true"" (line 251). However, IV&V cannot locate where the file is opened. What file is being checked for its open status?",4/12/2007
ProjectB - TIM - 2625,"ProjectB DDS Ground: Variable ""lastTime"" is used before initialization",3,"In FEPCaduWriter.cpp, function run() is comparing the current time and previous time with the statement: ""if (currentTime.getSecondsSinceEpoch() >= (lastTime.getSecondsSinceEpoch() + 60))"" (line 249). However, the variable ""lastTime"" is not initialized leading to unpredictable results.",4/12/2007
ProjectB - TIM - 2624,ProjectB Ground DDS: Lack of end-brace-comments,4,"According to the coding standard, an end-brace-comment should be provided for long and multiple levels of logic. It is difficult to trace which end-brace closes which statement/logic. This happens in multiple files and functions. Example: in FEPCaduReader::run(), a multiple level of ""while"" loops and ""if"" statements is setup without the end-brace comments. It is very difficult to trace which opening brace an end-brace closes. Also in FEPCaduWriter::run(), FEPQcpListener::run(), FEPVolumeManager::process(), line 297-303 etc.",4/12/2007
ProjectB - TIM - 2623,ProjectB Ground DDS: Variables were declared in the middle of the function.,4,"According to the coding standard, all variables should be declared at the beginning of a function. However, there are some functions where variable declarations occur in the middle of the function. This happens in multiple functions in multiple files. Example: FEPCaduReader::run(), variables ""firstReadAfterConnect"" and ""readOk"" are declared in the middle of a ""while"" loop. FEPCaduWriter::createDirectories(), variable ""message"" is declared in the middle of a ""for"" loop. FEPQcpListener::run(), variable ""writeSocket"" (line 325). FEPVcduWriterObserver::populateFiles(), variables ""itemType"" (line 819), ""fileTimeSecondsSinceEpoch"" (line 847) FEPVcduWriterObserver::create(), variables ""reserved[...] (line 996), ""endOfTransmission"" (line 1002) FEPVcduWriterCommon::processOneFile(), variable ""bytesRead"" (line 220). etc.",4/12/2007
ProjectB - TIM - 2622,ProjectB Spacecraft: TS: The FDC implementation for TS_DF_9_PWM_Control() does not match the FDC spec it is traced to.,4,"The function TS_DF_9_PWM_Control() at line 665-700 corresponds to PWR A2.8 in the FDC spec 464-sys-spec-0126 draft 4 dated 3-20-2007. PWR A2.8 states ""If ((using PWM-2) and (any of the error flags are set) and (PSE-A in control)) and (ACS(CSS) Sun Angle < 25)"". However the function is testing if PWM1 and PWM2 are out-of-bounds rather than what is listed above. There is no item in 464-sys-spec-0126 that checks out-of-bounds. This discrepancy needs to be resolved.",4/11/2007
ProjectB - TIM - 2621,Inst2 code: There are declared variables that are not accessed,5,"There declared variable symbols that are not accessed. Some have values assigned to them but there are no statements retrieving that value or returning it to the calling function. cphandlers.c 0742 : cmd_sc_time_status = TIME_GetSystemTAI(&cmd_sc_time) hbhandlers.c 6659 : sc_time_status = TIME_GetSystemMET(&sc_time_met) hbhandlers.c 6660 : sc_time_status = TIME_GetSystemSTCF(&sc_time_stcf) hbhandlers.c 6661 : sc_time_status = TIME_GetLeap(&sc_time_leap_seconds) hbimage.h 0090 : uint16 megs_a_test_image_index_bank0 = 0 hbimage.h 0091 : uint16 megs_a_test_image_index_bank1 = 0 hbimage.h 0092 : uint16 megs_b_test_image_index_bank0 = 0 hbimage.h 0093 : uint16 megs_b_test_image_index_bank1 = 0 hbsharedmemorytest.c 0403 : status = OS_PciBusFastWrite((uint32)(eve_info.ice_t.io_base+ICE_T_DI_ITR_OFF),(uint32)&itrData,1,&eve_info.ice_t.access) hbsharedmemorytest.c 0441 : status = OS_PciBusFastRead(memAddressBuf[0],(uint32)&memDataInitBuf[0],HB_SM_TEST_WORDS,&eve_info.ice_t.access) hbsharedmemorytest.c 0446 : status = OS_PciBusFastWrite(memAddressBuf[0],(uint32)&memDataWritBuf[0],HB_SM_TEST_WORDS,&eve_info.ice_t.access) hbsharedmemorytest.c 0450 : status = OS_PciBusFastRead(memAddressBuf[0],(uint32)&memDataReadBuf[0],HB_SM_TEST_WORDS,&eve_info.ice_t.access) hbsharedmemorytest.c 0460 : status = OS_PciBusFastRead((uint32)(eve_info.ice_t.io_base+ICE_T_DI_SR_OFF),(uint32)&isrData,1,&eve_info.ice_t.access) hbsharedmemorytest.c 0480 : status = OS_PciBusFastRead((uint32)(eve_info.ice_t.io_base+ICE_T_DI_SR_OFF),(uint32)&isrData,1,&eve_info.ice_t.access) hbtestpattern.c 0428 : write_status = OS_PciBusFastWrite(ice_test_pattern_address, hbtestpattern.c 0517 : write_status = OS_PciBusFastWrite(ice_test_pattern_address, rsmain.c 0217 : uint32 status; tphandlers.c 0402 : cmd_sc_time_status = TIME_GetSystemTAI(&cmd_sc_time)",4/11/2007
ProjectB - TIM - 2620,Inst2 Code: A comma operator exists in a place a logical or arithmetic operator should be,3,"There appears to be a misplaced comma between constants instead of a numeric or logical operator. IV&V is unclear what the purpose of the statement is. File Path: fsw/cpu/eve/tasks/hb/hbhandlers.c Line number: 4760 Code: 4760 : swif_config |= SWIF_CONFIG,SWIF_CONFIG_DMA_DONE_INT_ENA",4/11/2007
ProjectB - TIM - 2619,Inst2 code: Assignment operator used instead of instead of equality operator,2,At the condition on line 325 of file scatsrq.c the comments indicate that the assignment operator (=) was used instead of the equality operator (==). File Path: fsw/cpu/eve/tasks/sc/scatsrq.c Code: 325 : ( SC_ats_cmd_status_index_table[ats_id][cmd_number] = SC_EXECUTED ) ) ) ),4/11/2007
ProjectB - TIM - 2618,ProjectB Spacecraft: SDN/MP RBEL FSW - File and function prologs need to be updated,5,"1) The file and function prologs kept using the old description, they should be updated according to the new functionality. File prologs: rbelCmd.h/.c; sdnrbel.h/.c Function prologs: RBEL_Cmd_Load_Memory(), RBEL_1553BasedBootLoader(). 2) Function name in the prolog of the function OS_RBEL_FlushRam() is unmatched.",2/28/2007
ProjectB - TIM - 2617,"ProjectB Spacecraft: Upper level of requirement indicated PASS, but its sub-requirement was not tested.",4,"(1) In test summary of ""sbc_bac_attdet_process"", requirement 2113 was not fully tested, but its verification status shows PASS. The following requirements are its sub-requirements, and they are not being tested. 2113.1, 2113.2, 2113.6, 2113.9, 2113.10, 2113.10.1, and 2113.10.2. (2) In test summary of ""sbc_bac_attdet_process"", requirement 2433 was not yet finished testing, its sub-requirement 2433.2.1 will be tested in build 3 . IV&V suggests requirement 2433's verification status change to ""Incomplete"". If the sub-requirements were not completely tested, or some failed the test, the upper level of requirement should not indicate a ""PASS"".",2/5/2007
ProjectB - TIM - 2616,"ProjectB Spacecraft: Requirement 2421.1 was not tested by the proc ""sbc_bac_attdet_kalman_check.prc""",3,"Requirement 2421.1 was not tested by the proc ""sbc_bac_attdet_kalman_check.prc"", however the test result summary indicated it was PASS. During the review walk-thru meeting, according the test team, the requirement is unable to test, it can not be produced the negative case for the diagonal element. However this requirement will be verified by Inspection of the FSW source code. If the requirements were not tested, the verification status of this requirement should not indicate a ""PASS"". Test team should provide updated verification result for this requirement.",2/5/2007
ProjectB - TIM - 2615,"ProjectB Spacecraft: Requirement 2431 was not tested by the proc ""sbc_bac_attdet_kalman.prc""",4,"Requirement 2431 was not tested by the proc ""sbc_bac_attdet_kalman.prc"". It was tested by other proc ""sbc_bac_attdet_process.prc"".",2/5/2007
ProjectB - TIM - 2614,"ProjectB Spacecraft Test: Upper level requirement indicated PASS, but its sub-requirement shows it was unable to be tested.",3,"In test summary of ""sbc_bac_attdet_kalman"", the upper level requirement 2422.4 indicated PASS, but its sub-requirement 2422.4.2 shows it was unable to be tested in the proc ""sbc_bac_attdet_kelman_check.prc"" According to the statement in the proc (line 19) ""sbc_bac_atttdet_kalman_check.prc"", the requirement 2422.4.2 was not able to be tested, but verification status shows it was passed. 19 ; Note: Requirement 2422.4.2 can not be tested because if an updated error 20 ; covariance is diverged the propagated error covariance should have already 21 ; diverged, which will then prevent the updated error covariance being 22 ; computed and validated If the sub-requirements were not completely tested, or some failed the test, the upper level of requirement should not indicate a ""PASS"". In this case, the requirement was unable to be tested, test team should provide the detailed decription on why the requirement was unable to be tested by the demonstration, and how to verify with a different test method (Inspection). If the test team decided to verify the requirement by inspecting the FSW, they should inspect the source code first, and then indicate a PASS or FAIL based on the inspection result.",2/5/2007
ProjectB - TIM - 2613,Test Objective Does Not Consistently Address GSRT Test Matrix DMR# 4110.3.2,4,"In the GSRTTestMatrix090906 document, the second Node to Node Interface 9-1 test is inconsistent for DMR# 4110.3.2. DMR# 4110.3.2 and its test requirement state, ""The T&C primary workstation shall enable and disable alternate or remote command sources. The default start-up configuration shall be that only the primary workstation is enabled as the command source."" The DMR# 4110.3.2 test objective states, ""2 kbps CMDs, Instrument and EGSE CMDS in I&T Area."" but makes no mention of the primary workstation which is inconsistent with other interface tests of this kind, which do. An example is the DMR# 4110.3.3 test objective which states ""Prime Workstation Hazardous command screening of 2 kbps CMDs, Instrument and EGSE CMDS in I&T Area."" To maintain consistency in documentation and ensure complete test coverage, it is necessary that the test objective for DMR# 4110.3.2 be edited to include a statement referencing the Prime Workstation (e.g. ""Prime Workstation Remote command enabling/disabling of alternate or remote 2 kbps CMDS"").",2/2/2007
ProjectB - TIM - 2612,Test Objective Does Not Completely Address GSRT Test Matrix DMR# 4130,4,"In the GSRTTestMatrix090906 document, the Node to Node Interface 1-9 test is inconsistent for DMR# 4122.5. DMR# 4130 and its test requirement state, ""The T&C shall support an operations interface language and an edit capability."" The DMR# 4130 test objective states, ""STOL language."" This test objective does not address the part of the requirement that specifies an edit capability. As the parent requirement of DMR# 4130.1, DMR# 4130.2, and DMR#4130.3, it was found that the test objective for the parent requirement needs to include both test objectives for the child requirements. I.e., an appropriate DMR# 4130 test objective would be ""STOL language and Editor applications"" which is a combination of the child requirement test objectives. As currently worded, the DMR#4130 test objective does not completely address the requirement.",2/2/2007
ProjectB - TIM - 2611,Test Objective Does Not Consistently Address GSRT Test Matrix DMR# 4121.2,4,"In the GSRTTestMatrix090906 document, the Node to Node Interface 9-1 test is inconsistent for DMR# 4121.2. DMR# 4121.2 and its test requirement state, ""The T&C shall support the CCSDS AOS version 2 telemetry format."" The DMR# 4121.2 test objective states, ""ProjectB I&T S-Band Data up to 250 Kbps data packets, Up to 512 kbps per MOC T/C Design Spec."" Although this objective verifies the various speeds of the telemetry packets, this does not completely ensure the format of the packets. There is a need for a more specific test objective that assures the requirement is correctly and consistently tested.",2/2/2007
ProjectB - TIM - 2610,Test Objectives Do Not Completely Address GSRT Test Matrix DMR# 4100.16,4,"In the GSRTTestMatrix090906 document, the Node to Node Interface tests are inconsistent for DMR# 4100.16. DMR# 4100.16 states ""The T&C shall distribute real-time observatory health and safety telemetry to the ProjectB support equipment located at the launch site for up to seven days after launch."" The DMR# 4100.16 test objective is ""Up to 250 kbps H/K data."" This objective addresses the requirement that health and safety be distributed for up to seven days. Although the objective statement may verify that health and safety telemetry can be distributed for some period of time, since the up to seven day requirement (and, as worded, maximum limit) is not stated, the test objective does not completely address DMR# 4100.16.",2/2/2007
ProjectB - TIM - 2609,Test Objectives Do Not Completely Address GSRT Test Matrix DMR# 4000.13,4,"In the GSRTTestMatrix090906 document, the Node to Node Interface tests are inconsistent for DMR# 4000.13. DMR# 4000.13 states ""The Mini-MOC shall provide the capability to maintain the health and safety of ProjectB at the WSC facility for a minimum duration of six weeks in the event the primary MOC facility at GSFC is rendered unusable."" The DMR# 4000.13 test objectives for Node to Node Interface tests 7-8, 8-5, and 8-7 are respectively ""SDOGS Status SFDUs and voice"", ""2 kbps CMDS"", and ""SFDUs containing SDOGS control directives."" None of these objectives, individually, or collectively, addresses the requirement that health and safety be maintained for a minimum duration of six weeks. Although the objectives may verify that health and safety can be maintained for some period of time, since the 6 week objective is not stated, the test objectives do not completely address DMR# 4000.13.",2/2/2007
ProjectB - TIM - 2608,Test Objective Does Not Correctly Address GSRT Test Matrix DMR# 2230.2,4,"In the GSRTTestMatrix090906 document, the Node to Node Interface 4-11 test is inconsistent for DMR# 2230.2. DMR# 2230.2 and its test requirement state ""During the nominal operations phase, the external network will provide radiometric tracking support from their respective ground station(s). This support shall consist of two 30-minute passes, twice a week, on two consecutive days of the week. The external network shall provide coherent Doppler data, tone ranging, and angles. The tracking data format is UTDF and is transmitted via a file transfer method. Tracking measurement accuracy is the same as in the early mission phase. Tracking data will be provided within 15 minutes after completion of the pass."" The DMR# 2230.2 test objective states ""Radiometric TRK Data, Doppler, Angle and Ranging Tone TRK Data, Post pass 30 Min. per day, consecutive days every other week One Sample/10 sec."" The requirement specifies two 30-minutes passes, twice per week and NOT every other week as stated in the test objective. Also, the test objective, as worded, does not specify the number of consecutive days (2).",2/2/2007
ProjectB - TIM - 2607,Test Objective Does Not Correctly Address GSRT Test Matrix DMR# 2200.3,4,"In the GSRTTestMatrix090906 document, the Node to Node Interface 1-4 test is inconsistent for DMR# 2200.3. DMR# 2200.3 and its test requirement state ""During the nominal operations phase, the external network shall perform radiometric tracking of ProjectB. Radiometric tracking shall consist of two 30-minute passes weekly, one on each of two consecutive days. The external network shall provide coherent Doppler data, tone ranging, and angles. The tracking data format is UTDF and is transmitted via the protocol defined in the MOC-to-External Network Interface Control Document (ICD) (464-GS-ICD-0065). Metric tracking accuracy is stated in Section 2130. Tracking data will be provided within 15 minutes after completion of the tracking pass."" The DMR# 2200.3 test objective states ""Radiometric TRK Data, Doppler, Angle and Ranging Tone TRK Data, Post pass 30 Min. per day, consecutive days every other week One Sample/10 sec."" The requirement specifies two 30-minute passes weekly, one on each of two consecutive days and NOT two passes every other week as stated in the test objective. Also, the test objective, as worded, does not specify the number of consecutive days (2).",2/2/2007
ProjectB - TIM - 2606,Test Objective Does Not Correctly Address GSRT Test Matrix DMR# 2140,4,"In the GSRTTestMatrix090906 document, the Node to Node Interface 1-5 test is inconsistent for DMR# 2140. DMR# 2140 and its test requirement state ""The SDOGS is a dedicated ProjectB asset for the life of the mission. Both SDOGS antenna systems shall be available 24 hours a day, 7 days a week except for maintenance. Preventive maintenance of each antenna system shall be scheduled 30 days in advance with concurrence from the ProjectB Mission Director."" The DMR#2140 test objective states ""Capture 98.72% of available RF 26.5 GHZ downlink 150 Mbps (300 Msym) Science Data , Of the 98.72% of data captured, 99% will be processed good."" which is not consistent with the test requirement. It appears to be an editing ""copy and paste"" error, as the test objective text is precisely the same as for the DMR#2141 test, and therefore that it is the incorrect test objective for DMR#2140.",2/2/2007
ProjectB - TIM - 2605,Tests Not Found in GSRT Test Matrix for Several 464-GS-REQ-0005 Rev. C Requirements,3,"The following 464-GS-REQ-0005 requirements were not found in the GSRTTestMatrix090906 document: 2110.8.1, 4122.7 No test coverage for these requirements was found and appropriate tests need to be added to test matrix to ensure the requirements and associated interfaces are tested properly.",2/2/2007
ProjectB - TIM - 2604,464-GS-PLAN-0043 Node to Node Interfaces Not Found in GSRT Test Matrix,3,"In the 464-GS-PLAN-0043, the following interfaces from Section 2.5.3 N2 Interface Chart and Data Tables were not found in the GSRTTestMatrix090906 document: 8-9, 14-16, 14-17, 14-18, 10-8, 9-8, 7-6, 2-1, and 10-12. Additionally, although the 10-14 and 13-14 interfaces were found in the test plan Section 2.5.3 interface chart, they were not found in the tables nor were they found in GSRTTestMatrix090906. To ensure these interfaces are properly tested, their existence needs to be verified and if so, appropriate tests need to be added to test matrix. Additionally, if the 13-14 interface exists, the test plan document also needs to be updated to include it not only in the Section 2.5.3 interface chart but also in the tables.",2/2/2007
ProjectB - TIM - 2603,Missing Test Objective for GSRT Test Matrix DMR# 7200.4.1,3,"In the GSRTTestMatrix090906 document, the Node to Node Interface 10-11 test is inconsistent for DMR# 7200.4.1. The test objective is missing (cell is blank). This is inconsistent with documentation and a test objective needs to be identified and entered for this interface test.",2/2/2007
ProjectB - TIM - 2602,Test Requirement Does Not Correctly Address GSRT Test Matrix DMR# 8205.1,4,"In the GSRTTestMatrix090906 document, the Node to Node Interface 6-17 test is inconsistent for DMR# 8205.1. DMR# 8205.1 states, ""Each SOC shall be capable of receiving science data files and the associated metadata files from the DDS for their instrument at a sustained rate equal to their instrument data downlink rate (defined in requirement 6000) including rate margin for DDS file transfer overhead, DDS metadata and requested retransmissions."" The 6-17 interface test requirement states, ""The Inst2 SOC shall be capable of receiving Inst2 science data files and the associated metadata files from the DDS for their instrument at a sustained rate equal to their instrument data downlink rate 55 Mbps 66 w/OH per ICD) (defined in requirement 6000) including rate margin for DDS file transfer overhead, DDS metadata and requested retransmissions."" which is the same test requirement as for the 6-18 interface test. As the 6-17 interface test objective states, ""7 Mbps (8.4 w O/H) Science Data <3min Latency, ERR QAC MetaData file DSF MetaData file, Requested Replay 36 Mbps, Over T-3"" it was found that the 6-17 interface test requirement is the result of an editorial ""copy and paste"" error. It was noted that the 6-16 and 6-18 interface test requirements and objectives matched for their respective tests, but the 6-17 test was not consistent. So that DMR#8205.1 is correctly addressed, the 6-17 test requirement needs to be edited to state a downlink rate of ""7 Mbps 8.4 w/OH"" and be consistent with the test objective.",2/2/2007
ProjectB - TIM - 2601,N2 Interface 7-16 listed for GSRT Test Matrix DMR# 6000 Does Not Exist in 464-GS-PLAN-0043,3,"In the GSRTTestMatrix090906 document, for DMR# 6000, the Node to Node Interface 7-16 does not exist in 464-GS-PLAN-0043 Revision (-). The interface was not found in Section 2.5.3 N2 Interface Chart and Data Tables, or anywhere else within the ground system test plan document. It was also noted that the applicable part of DMR 6000 specifies interfaces to ""each instrument's SOC."" Therefore, it specifies that there be interfaces between the DDS (N2 element 6) and the Inst1, Inst2, and Inst3 SOCs. This indicates there must be at least three interface tests ( 6-16, 6-17, 6-18) which is not the case. To completely and correctly cover the requirement and avoid testing an interface that does not exist, the 7-16 interface test must be removed and replaced with three tests for the interfaces between the DDS and the individual SOCs.",2/2/2007
ProjectB - TIM - 2600,Incomplete Node to Node Interface Test Coverage for GSRT Test Matrix DMR# 5000,3,"In the GSRTTestMatrix090906 document, the Node to Node Interface 6-16 test does not completely cover the applicable portion of DMR# 5000. The applicable portion of DMR# 5000 states, ""NASA Integrated Services Network (NISN) shall provide · Voice and data interfaces with the two ProjectB dedicated ground stations and all SOCs starting at L-18 months"" According to the above statement, it is specified that there be interfaces with all of the SOCs (Inst1, Inst2, and Inst3) but there is only one interface test of this type. It is for the 6-16 interface (DDS-Inst1). To completely cover this portion of the requirement, it is necessary for there to also be 6-17 (DDS-Inst2) and 6-18 (DDS-Inst3) interface tests as well. Therefore, DMR#5000 is currently not completely covered by testing.",2/2/2007
ProjectB - TIM - 2599,N2 Interfaces listed for GSRT Test Matrix DMR# 4802.2 Do Not Exist in 464-GS-PLAN-0043,4,"In the GSRTTestMatrix090906 document, for DMR# 4802.2, the Node to Node Interfaces 16-1, 17-1, and 18-1 do not exist in 464-GS-PLAN-0043 Revision (-). The interfaces were not found in Section 2.5.3 N2 Interface Chart and Data Tables, or anywhere else within the ground system test plan document.",2/2/2007
ProjectB - TIM - 2598,N2 Interfaces listed for GSRT Test Matrix DMR# 4306 Do Not Exist in 464-GS-PLAN-0043,4,"In the GSRTTestMatrix090906 document, for DMR# 4306, the Node to Node Interfaces 1-12 and 2-12 do not exist in 464-GS-PLAN-0043 Revision (-). The interfaces were not found in Section 2.5.3 N2 Interface Chart and Data Tables, or anywhere else within the ground system test plan document.",2/2/2007
ProjectB - TIM - 2597,Inconsistent Node to Node Interface Test listed for GSRT Test Matrix DMR# 4123.6,4,"In the GSRTTestMatrix090906 document, the second Node to Node Interface 9-17 test is inconsistent for DMR# 4123.6. DMR# 4123.5 states, ""The T&C shall be able to display instrument command uplink and verification status and make that information accessible to each SOC."" This indicates pertinence to interfaces 9-16 (T&C-Inst1 SOC), 9-17 (T&C-Inst2 SOC), and 9-18(T&C-Inst3 SOC). However, the Node to Node Interfaces tested are 9-16, 9-17, and 9-17. The second 9-17 interface test is an apparent typographical error in the N2 I/F column. To provide full test coverage of the requirement, it is necessary for this to be changed to 9-18. Additionally, the interface test requirements and objectives do not clarify which SOC (Inst1, Inst2, or Inst3) they pertain to which is inconsistent with other requirement documentation of this type.",2/2/2007
ProjectB - TIM - 2596,Inconsistent Node to Node Interface Test listed for GSRT Test Matrix DMR# 4123.5,4,"In the GSRTTestMatrix090906 document, the second Node to Node Interface 9-17 test is inconsistent for DMR# 4123.5. DMR# 4123.5 states, ""The T&C shall provide a command history report to each SOC."" This indicates pertinence to interfaces 9-16 (T&C-Inst1 SOC), 9-17 (T&C-Inst2 SOC), and 9-18(T&C-Inst3 SOC). However, the Node to Node Interfaces tested are 9-16, 9-17, and 9-17. The second 9-17 interface test is an apparent typographical error in the N2 I/F column. To provide full test coverage of the requirement, it is necessary for this to be changed to 9-18. Additionally, the interface test requirements and objectives do not clarify which SOC (Inst1, Inst2, or Inst3) they pertain to which is inconsistent with other requirement documentation of this type.",2/2/2007
ProjectB - TIM - 2595,Missing Verification Methods for GSRT Test Matrix DMR# 4000.13,3,"In the GSRTTestMatrix090906 document, the verification methods for the DMR# 4000.13 Node to Node Interface 7-8 and 8-7 tests are missing (the cell is blank).",2/2/2007
ProjectB - TIM - 2594,Verification Method Incorrect for GSRT Test Matrix DMR# 2141,3,"In the GSRTTestMatrix090906 document, the Node to Node Interface 1-5 test is inconsistent for DMR# 2141. DMR# 2141 and its test requirement state ""The SDOGS shall not degrade ongoing mission operations during periods of preventative maintenance, system repairs, system upgrades and system testing."" The DMR# 2141 test objective states ""Capture 98.72% of available RF 26.5 GHZ downlink 150 Mbps (300 Msym) Science Data , Of the 98.72% of data captured, 99% will be processed good."" The specified verification method, ""Test"", is incorrect as statistical analysis would be required to verify the test objective to the specified level of granularity. A verification method more consistent with DMR#2141, its test requirement, and its test objective would be ""Analysis"".",2/2/2007
ProjectB - TIM - 2593,Inconsistent Node to Node Interface Test listed for GSRT Test Matrix DMR# 2007,3,"In the GSRTTestMatrix090906 document, the Node to Node Interface 11-3 test is inconsistent for DMR# 2007. DMR# 2007 states ""The ground networks shall identify ProjectB acquisition data received from the MOC using the ProjectB support identification code which is 0322 decimal."" The corresponding 11-3 test requirement states ""SN shall identify ProjectB acquisition data received from the FDF using the ProjectB support identification code which is 0322 decimal."" The FDF is a separate element from the MOC, and therefore the 11-3 (FDF-SN) interface test cannot be associated with DMR# 2007, which, as worded, only specifies the 10-4 (MOC-USN) and 10-5 (MOC-SDOGS) interfaces.",2/2/2007
ProjectB - TIM - 2592,ACE Propulsion Test Scenario does not explicitly verify several requirements,4,"Several requirements are not explicitly verified in test scenario steps. The requirements are 4160, 4161, 4162, 4163, 4250, 4440, and 4445.2. They are all tested by test scenario acea_bpn_thr_specialreq step 32 which states ""Verify the results. Need to manually examine the acea_bpn_thr_specialreq.txt sequential print file...• Need to manually examine the acea_bpn_thr_specialreq.txt sequential print file"", but there are no details of exactly what to look for during the manual examination. IV&V cannot completely analyze that these requirements will be completely tested, but will assume that the details of the manual inspection will fully cover them.",12/27/2006
ProjectB - TIM - 2591,ACE Propulsion Test Scenario does not completely verify requirement 4440.1,3,"Requirement 4440.1 states that the ACE FSW not in control will not send commands ""under any circumstances"". The test scenario acea_bpn_thr_specialreq step 19 only verifies one particular circumstance. The requirement is poorly written because it cannot be completely verified by test. Code inspection is the only method that would verify this. Req 4440.1: If the ACE FSW is not in control, it shall send no thruster commands under any circumstances.",12/27/2006
ProjectB - TIM - 2590,ACE Propulsion Test Scenario traces requirement 4014 to incorrect step,4,"Requirement 4014 is listed as being tested in test scenario acea_bpn_thr_specialreq step 32, but there is no verification that the ability to send these commands is disabled. The requirement is fully tested in step 8 of the same test scenario, so there is no need to try to verify it again.",12/27/2006
ProjectB - TIM - 2589,ACE Propulsion Test Scenario traces requirement 4445 to incorrect step,4,"Requirement 4445 is listed as tested in test scenario acea_bpn_thr_badreading step 7, but this step does not verify the requirement. It is verified by the complete verification of its subrequirements in other steps.",12/27/2006
ProjectB - TIM - 2588,ACE Propulsion Test Scenario does not verify requirement 4252,3,"Requirement 4252 is traced to acea_bpn_thr_badreading step 7, but is not verified by that step. Req 4252: The ACE FSW shall, at a minimum, provide the following critical EVD telemetry: a. propulsion data validity flags b. isolation and thruster valve status c. the hardware-provided thruster on-time values",12/27/2006
ProjectB - TIM - 2587,ACE Propulsion Test Scenario does not verify requirement 4251.14b,3,"Requirement 4251.14b is not verified in the test scenario acea_bpn_thr_badreading step 23. Req 4251.14: If the Thruster Enable Telemetry FPGA2 reading is not valid, the ACE FSW shall flag a. flag a failure in thruster firing b. not send the thruster fire command to the hardware",12/27/2006
ProjectB - TIM - 2586,ACE Propulsion Test Scenario does not verify requirement 4251.13b,3,"Requirement 4251.13b is not verified in the test scenario acea_bpn_thr_badreading step 21. Req 4251.13: If the Thruster Enable Telemetry FPGA1 reading is not valid, the ACE FSW shall a. flag a failure in thruster firing b. not send the thruster fire command to the hardware",12/27/2006
ProjectB - TIM - 2585,ACE Propulsion Test Scenario does not verify requirement 4251.11b,3,"Requirement 4251.11b is not verified in the test scenario acea_bpn_thr_badreading step 18. Req 4251.11: If the Thruster Driver Power (Thruster Card) reading is not valid, the ACE FSW shall a. flag a failure in thruster firing b. not send the thruster fire command to the hardware",12/27/2006
ProjectB - TIM - 2584,ACE Propulsion Test Scenario does not verify requirement 4251.10b,3,"Requirement 4251.10b is not verified in the test scenario acea_bpn_thr_badreading step 16. Req 4251.10: If the ME Enable Telemetry FPGA2 reading is not valid, the ACE FSW shall a. flag a failure in thruster firing b. not send the thruster fire command to the hardware",12/27/2006
ProjectB - TIM - 2583,ACE Propulsion Test Scenario does not verify requirement 4251.9b,3,"Requirement 4251.9b is not verified in the test scenario acea_bpn_thr_badreading step 13. Req 4251.9: If the ME Enable Telemetry FPGA1 reading is not valid, the ACE FSW shall a. flag a failure in thruster firing b. not send the thruster fire command to the hardware",12/27/2006
ProjectB - TIM - 2582,ACE Propulsion Test Scenario does not verify requirement 4251.8b,3,"Requirement 4251.8b is not verified in the test scenario acea_bpn_thr_badreading step 9. Req 4251.8: If the ME Power (Thruster Card) reading is not valid, the ACE FSW shall a. flag a failure in thruster firing b. not send the thruster fire command to the hardware",12/27/2006
ProjectB - TIM - 2581,ACE Propulsion Test Scenario does not verify requirement 4251.7b,3,"Requirement 4251.7b is not verified in the test scenario acea_bpn_thr_badreading step 7. Req 4251.7: If the ME Power (FPGA) reading is not valid, the ACE FSW shall a. flag a failure in thruster firing b. not send the thruster fire command to the hardware",12/27/2006
ProjectB - TIM - 2580,ACE Propulsion Test Scenario does not completely verify requirement 4441.3,3,"Requirement 4441.3 is tested in test scenario acea_bpn_badcommandtest step 15, but this step does not verify the event message documenting the rejection of the command. Req 4441.3: If the ACE FSW rejects the thruster override commands, the ACE FSW shall provide an event message documenting rejection of the command and the reason for the rejection.",12/27/2006
ProjectB - TIM - 2579,ACE Propulsion Test Scenario does not verify requirement 4442.9.2,3,"Requirement 4442.9.2 is listed in test scenario acea_bpn_iv_commandtest step 17, but there is no explicit verification of this requirement. The step has manual verification of this requirement, so IV&V cannot verify if the requirement is completely verified. Also, do the steps leading up to this step actually allow this requirement to be satisfied (do valves fail to close)? Req 4442.9.2: If any of the isolation valves just commanded to close failed to close, the ACE FSW shall a. make available for downlink knowledge of the anomaly b. reattempt once to close the valves that remained open",12/27/2006
ProjectB - TIM - 2578,ACE Propulsion Test Scenario does not explicitly verify requirement 4442.5.1,4,"Requirement 4442.5.1 is listed in test scenario acea_bpn_iv_commandtest steps 17 and 26, but there is no explicit verification of this requirement in these steps. The steps states ""• Need to manually verify the contents of the acea_bpn_iv_cmdtest_1.txt sequential print file."" IV&V cannot completely analyze that this requirement will be completely tested, but will assume that the details of the manual inspection will fully cover it.",12/27/2006
ProjectB - TIM - 2577,ACE Propulsion Test Scenario traces requirement to incorrect step,4,"Requirement 4442 is listed as tested in test scenario acea_bpn_me_thr_commandtest step 12, but this step does not verify the requirement. It is verified by the complete verification of its subrequirements in other steps.",12/27/2006
ProjectB - TIM - 2576,ACE Propulsion Test Scenario testing of requirement 4441 is ambiguous,3,"Requirement 4441 is tested in test scenario acea_bpn_me_thr_commandtest step 12. This step states ""Send command to fire the thruster as follows…"" but there is nothing that states this must be a thruster override command. Without knowledge that it is the override command, the verification of the requirement is ambiguous. Req 4441: On receipt of a ground-issued, thruster override command, the ACE FSW shall send the command to the thruster system.",12/27/2006
ProjectB - TIM - 2575,ACE Propulsion Test Scenario traces requirement to incorrect step,4,"Requirement 4447.3 is listed as tested in test scenario acea_bpn_pyro_commandtest step 3.15, but this step does not verify the requirement. The requirement is correctly traced to the next step, 3.16, which fully verifies it.",12/27/2006
ProjectB - TIM - 2574,ACE Propulsion Test Scenario has statement that 2 requirements are not implemented in the code,3,"Why are requirements 4444.1 and 4445.1a not implemented in the code? Are they going to be implemented in the code in a later build? If not, are there DCRs written against the code or the requirements? Req 4444.1: If no thruster commands are received from the ACS FSW, the ACE FSW shall send null thruster commands. Req 4445.1: If the command, when echoed from the EVD, does not match what was originally issued, the ACE FSW shall a. zero the commands for all thrusters b. make available for downlink knowledge of the anomaly",12/27/2006
ProjectB - TIM - 2573,ACE Propulsion Test Scenario verifies several requirements by insufficient method,3,"Requirements 4251.5, 4251.6, 4251.12, and 4441.2 are verified by code inspection. However, these requirements should be verified by demonstration. Is the simulator not capable of testing these requirement? Verification by code inspection should be reserved for only those requirements that cannot be verified any other way. Code inspection does not fully exercise the true functionality of the code and subtle problems may not be discovered. Req 4251.5: If the command echo reading is not valid, the ACE FSW shall flag the thruster command echo as invalid for that thruster. Req 4251.6: If the ME Enable (Discrete Logic) reading is not valid, the ACE FSW shall a. flag a failure in thruster firing b. not send the thruster fire command to the hardware Req 4251.12: If the Thruster Enable (Discrete Logic) reading is not valid, the ACE FSW shall a. flag a failure in thruster firing b. not send the thruster fire command to the hardware Req 4441.2: The ACE FSW shall not issue thruster commands received from the ACS FSW while override commands are in effect.",12/27/2006
ProjectB - TIM - 2572,ProjectB spacecraft: ACS HGA Test scenarios - How are requirements 2670 and 2671 being tested?,3,"For requirements 2670 and 2671, how are the test going to be controlled to meet the requirements? Req 2670: (P) HGA pointing performance requirements shall be met. Req 2671: (P) The ACS FSW shall calculate the gimbal pointing command to an accuracy of 0.01 degrees.",12/20/2006
ProjectB - TIM - 2571,"ProjectB Spacecraft: ""SBC_BAC_HGA_Restart"" scenario -Question regarding the terms used in scenario",5,"SBC_BAC_HGA_Restart scenario: Question on the terms, in the table of step 4, what is the difference between ""no effect"" and ""no change""?",12/20/2006
ProjectB - TIM - 2570,"ProjectB Spacecraft: ""SBC_BAC_HGA_TarAngleCalc"" scenario - Step 16k, need detail info",4,"SBC_BAC_HGA_TarAngleCalc scenario: Step 16k, need detail info. IV&V is not sure how the requirements 2650.2, 2650.2.1, 2650.2.2 are verified by the test.",12/20/2006
ProjectB - TIM - 2569,"ProjectB Spacecraft: ""SBC_BAC_HGA_TarAngleCalc"" scenario - Step 16c and d, need detail info",4,"SBC_BAC_HGA_TarAngleCalc scenario: Step 16c and d, need detail info on how to test the requirement 2642. In the previous steps, the details do not exist to ensure testing of the antenna moving in the opposite direction, so not sure how this requirement is verified.",12/20/2006
ProjectB - TIM - 2568,"ProjectB Spacecraft: ""SBC_BAC_HGA_TarAngleCalc"" scenario - Step 12: IVV suggests to test full park in both AZ and EL direction for Minus Z antanna.",4,"SBC_BAC_HGA_TarAngleCalc scenario: Step 12: IVV suggests that additional steps be added to test full park in both AZ and EL direction for Minus Z antanna. Step 12a only tests one half of the situation that is for the Plus Z antanna, suggest to test for Minus Z antanna in the same way as testing for PZ antanna.",12/20/2006
ProjectB - TIM - 2567,"ProjectB Spacecraft: ""SBC_BAC_HGA_TarAngleCalc"" scenario - incorrect requirements tested in 10d, 10e, 11a",5,"SBC_BAC_HGA_TarAngleCalc scenario: incorrect requirements tested in 10d. ""Requirement verified"" for 2612.2.2.1 should be 2621.2.2.2 10e: ""Requirement verified"" for 2612.2.1 should be 2621.2.2.1 11a second bullet: ""Requirement verified"" for 2621.2.1 should be 2622.2.1",12/20/2006
ProjectB - TIM - 2566,"ProjectB Spacecraft: ""SBC_BAC_HGA_TarAngleCalc"" scenario - Need detail procedures for step 9c, 10c.",4,"SBC_BAC_HGA_TarAngleCalc scenario: Need detail procedures for step 9c, 10c on how to verify the gimbal angles are calculated. What are the calculations based on?",12/20/2006
ProjectB - TIM - 2565,"ProjectB Spacecraft: ""SBC_BAC_HGA_TarAngleCalc"" scenario - IVV suggests checking ground in control before testing step 9",4,"SBC_BAC_HGA_TarAngleCalc scenario: IVV suggests that a statement be added to ensure the ground is in control and ground command is enabled before testing step 9, 10. req 2610: The ACS FSW shall process an antenna Hold Target command from the ground. Req 2629: The ACS FSW shall process Park commands from the ground.",12/20/2006
ProjectB - TIM - 2564,"ProjectB Spacecraft: ""SBC_BAC_HGA_DIAG_PACKET"" scenario - Req 2722 may not be tested",3,"SBC_BAC_HGA_DIAG_PACKET scenario: Step 2: IV&V is not sure how ""ut_get_pktrate"" verifies the Req 2722. Req 2722: The ACS FSW shall time-tag all its telemetry with the time from the ACE telemetry packet.",12/20/2006
ProjectB - TIM - 2563,"ProjectB Spacecraft: ""SBC_BAC_HGA_GCE_TLM"" scenario - question about the command ""gcea_sb_disable""",5,"SBC_BAC_HGA_GCE_TLM scenario: Step 8, IV&V is not sure if the ""GCEA_SB_DISABLE"" command will disable BOTH GCE HGA packets? If yes, then it is OK, otherwise, the requirement 2291.1 is not fully tested because the requirement has for ""neither"" GCE packet is received. If the command only disables the HGA packet from one GCE, then ACS FSW will still be able to receive HGA packet from the other redundant GCE. Req 2291.1: If neither GCE packet is received, the ACS FSW shall a. flag the HGA command as invalid for that both HGA b. notify FDC (if enabled) c. use the GCE data from the previous valid cycle d. flag the data for the HGA as invalid for both HGAs Note: The HGA command generation section will specify that if the data for an HGA is invalid, a command for zero motion will be sent to its gimbals.",12/20/2006
ProjectB - TIM - 2562,"ProjectB Spacecraft: ""SBC_BAC_HGA_GCE_TLM"" scenario - Requirement 2291.8 in step 6 is not fully tested",3,"SBC_BAC_HGA_GCE_TLM scenario: Requirement 2291.8 in step 6 is not fully tested. This step only proves the GCE is in-control, but doesn't test how the ACS FSW will select HGA gimbal axis data for later use, as stated in the requirement. Req 2291.8: For each gimbal axis, the ACS FSW shall select the HGA gimbal axis data for later use from the GCE that is in control for that gimbal axis.",12/20/2006
ProjectB - TIM - 2561,"ProjectB Spacecraft: ""SBC_BAC_HGA_CommandTest scenario"" - incorrect requirement tested",5,"In SBC_BAC_HGA_CommandTest scenario, step 9, the ""requirement verified"" labels 2711.2 is incorrect. It should be requirement 2711.1",12/20/2006
ProjectB - TIM - 2560,"ProjectB Spacecraft: ""SBC_BAC_HGA_CommandTest"" scenario - lack of command parameter's info",4,"In SBC_BAC_HGA_CommandTest scenario, step 7a-b, the command parameters lack of information for POS X, Y, and Z. step 9a-b, lack of information for bias counts.",12/20/2006
ProjectB - TIM - 2559,"ProjectB Spacecraft: ""SBC_BAC_HGA_CommandTest"" scenario- need to perform the boundary tests",3,"In SBC_BAC_HGA_CommandTest scenario, step 6b-6e, 8b-8d, the scenario only verifies the Park command with EL and AZ slew rate that is ""greater than"" or ""less than"" the database max or min, but it doesn't verify if those max or min are truly the max or min. it should perform the boundary tests, such as testing the cases on barely on either side of the max and and either side of the min.",12/20/2006
ProjectB - TIM - 2558,"ProjectB Spacecraft: ""SBC_BAC_HGA_CommandTest"" scenario- Several requirements listed in steps do not exist",5,"In SBC_BAC_HGA_CommandTest scenario, step 2, requirement 2631 does not exist. It may be 2630.1. step 6c, requirement 2622.4 doesn't exist, it may be 2622.1.4. step 6f, requirement 2711.3 doesn't exist, it may be 2711.2.",12/20/2006
ProjectB - TIM - 2557,ProjectB Spacecraft: HGA Process Test Scenarios - Several requirements are not tested,3,"The following requirements are not tested in any of the scenarios: 2291.1-c, 2291.9, 2661, 2664.",12/20/2006
ProjectB - TIM - 2556,"ProjectB Spacecraft: ""acea_biru_other"" scenario - Requirement 2242.5 is not explicitly verified for ACE-B in control",5,"The requirement 2242.5 is not fully tested in these scenarios. This requirement is tested in acea_biru_algorithm step 15 for ACE-A in control, but ACE-B in control is not verified in either scenario. This requirement needs to be explicitly verified in acea_biru_other step 20. 2242.5 The ACS FSW shall select the IRU-implied body rate based on IRU data from the ACE in control for the primary IRU axes.""",12/19/2006
ProjectB - TIM - 2555,"ProjectB Spacecraft: ""acea_biru_other"" scenario - Requirement 2242.1.1 is not fully tested",3,"Requirement 2242.1.1 in ""acea_biru_other"" step 18 is not fully tested. It should test the delta count exceeds or is below the database spec max. In this step, it commands the GDS to a rate of -101 and -10, but both cases it was trying to verify the flags are good and the IRU rate is unchanged. This seems to test only one half. If GDS command to set rate of -101 and -10 will represent the Max and Min of the IRU delta counts, then the statement at line 1512 should change to show ""invalided"", and line 1518 should show ""changed"" instead of ""unchanged"". 2242.1.1 If the magnitude of the delta counts exceeds a database-specified maximum, the ACS FSW shall (a) flag the IRU data as invalid (b) flag the delta pulse as invalid for the IRU axis (c) retain the previous IRU rate for that axis.",12/19/2006
ProjectB - TIM - 2554,"ProjectB Spacecraft: ""acea_biru_algorithm"" - Requirements 2242.3 and 4263 may not be tested",3,"Requirements 2242.3 and 4263 are not tested in the scenario. They are listed in Step 15 of ""acea_biru_algorithm"", but it is unclear how these requirements are verified. 2242.3 The ACS FSW shall transform the set of estimated rates about the IRU primary axes to a rate vector in the body reference frame. 4263 The ACE FSW shall transform the set of estimated rates about the IRU primary axes to a rate vector in the body reference frame.",12/19/2006
ProjectB - TIM - 2553,"ProjectB Spacecraft: ""acea_biru_algorithm"" scenario - Unclear statements in step descriptions",4,"""acea_biru_algorithm"" - Step 15 and 18, and ""acea_biru_other"" - Step 7, the following unclear statement is made: ""Verify rates. Equations and 'IF' statements are used"", What equations and IF statements are used? Where are they used? What does the statement mean?",12/19/2006
ProjectB - TIM - 2552,"ProjectB Spacecraft: ""acea_biru_algorithm"" scenario - Values listed for verifying the diagnostic telemetry of selected IRU backup axis may be incorrect",3,"acea_biru_algorithm - Steps 7, 17,18,19 and 20, The following telemetry values are not correctly match the ""ACE-A Set Activity IRU Body Frame Index"" command, as well as the value set by the uploading table. ACS_D_INDEX_IRU_BODYX_BACKUP, ACS_D_INDEX_IRU_BODYY_BACKUP, ACS_D_INDEX_IRU_BODYZ_BACKUP. They seem mismatched with what the command (/ACEA_SET_IRU_BFI BX=x BY=y BZ=z) sets the values to.",12/19/2006
ProjectB - TIM - 2551,"ProjectB Spacecraft: ""acea_biru_algorithm"" scenario - More setup needed in the initialization step.",3,"The initialization step should setup one ACE to be in-control. It should also set the ACE to ""Safehold"" mode, so that ACE in control will use the actuator commands produced by the algorithm to control the spacecraft's attitude, ignoring those provided by the ACS FSW in the C&DH (""main"") processor.",12/19/2006
ProjectB - TIM - 2550,FSW RVTM test methods are not correct for several requirements,4,The FSW RVTM lists incorrect test methods for the following requirements: Component/ Req Number/ Current test method/ Correct test method CI 2008 Inspection Demonstration SM 1222 Unit Test Demonstration SM 1223 Unit Test Demonstration SM 2045 Unit Test Demonstration SB 1304 Inspection Demonstration ACE 4221 Analysis Demonstration,12/11/2006
ProjectB - TIM - 2549,RT is incorrectly listed as a subsystem for CDHMP,4,"The Remote Terminal (RT) is listed as a subsystem for the CDHMP, but that is incorrect.",12/8/2006
ProjectB - TIM - 2548,ProjectB ACS RWA test scenario: Inconsistent telemetry nmemonics,4,"Testing telemetry points should use from the normal telemetry packet - Fast telemetry packet. Telemetry nmomonics for following are inconsistent: On line 150 row 4-7 Time_RWAPulse[n] are inconsistent with the first table in step 5.0 (line 314) ACS_A_TIME_RWAPULSE[n]. On line 594 ACS_RATE_RWA_TACH[n] is inconsistent with line 468 ACS_A_RATE_RWA_TACH[n]. On line 493 ACS_A_RWAMOM_BCSF [ n ] is inconsistent with line 600 ACS_RWAMOM_BCSF[1..3] . For detailed info, please see attachment in TIM 2546.",11/10/2006
ProjectB - TIM - 2547,ProjectB ACS RWA test scenario: Tolerance needs to be specified for calculation comparisons,3,"In step 7 line 467, verify the calculated wheel speed is ~= the FSW calculated wheel speed, what is the acceptable tolerance that is considered the success range? Same on lines 479 and 492. For detailed info, please see attachments in TIM 2546.",11/10/2006
ProjectB - TIM - 2546,ProjectB ACS RWA Test Scenario: Need a failure return for step 1.0,3,"In step 1.0, the configuration step, what happens if the configuration fails? To prevent damage to the ACE, it should exit the test. For detailed info, please click on the ""Relationship"" button --->",11/10/2006
ProjectB - TIM - 2545,ProjectB ACS PZT Test Scenario: Should enable the Fault Detection,3,"In step 2, before 2.3, it should issue a command to enable the Fault Detection, or ensure the FDC is enabled. For detailed info, please click on the ""Relationship"" button --->",11/10/2006
ProjectB - TIM - 2544,The structure _fpCCR_t is defined in two source files.,4,The structure _fpCCR_t is defined in two c source files - InitBoard.c (sdn/bsp) and osexception.c (sdn/dev). fsw\platform\sdn\bsp\InitBoard.c line 128 fsw\platform\sdn\dev\osexception.c line 66 typedef struct { int _exception_bits; int _trap_enable_bits; int _sticky_bits; int _rounding_mode; unsigned int _unused :16; unsigned int _op2 :3; unsigned int _dst :3; unsigned int _op1 :3; unsigned int _last_operation : 7; union { float sf; double df; long double xf; } _operand1; union { float sf; double df; long double xf; } _operand2; union { int si; float sf; double df; long double xf; } _result; } _fpCCR_t;,11/1/2006
ProjectB - TIM - 2543,Redundantly declared symbol 'OS_copy_system_tables(void)',4,"The functions OS_copy_system_tables and OS_copy_scp_tables are declared twice, in ostasks.h and in the file osstart.c. File fsw/shared/os/ostasks.h: void OS_copy_boot_segments (void); ... void OS_copy_scp_tables (void); File fsw/shared/os/osstart.c: #include ""ostasks.h"" ... void OS_copy_system_tables(void); void OS_copy_scp_tables(void);",10/31/2006
ProjectB - TIM - 2542,"Local declarator 'GII_200HzTaskCtr' (line 135, file fsw/cpu/gce/tasks/gi/gitask.c) is not referenced.",4,The definitions of the following functions lies outside the scope of GCE and are unreferenced: GII_200HzTaskCtr in giitask.c SM_get_usecs(void) in sm_main.c,10/31/2006
ProjectB - TIM - 2541,The declared external variable gi_StartAddr in the file giglobal.c is not referenced.,4,"Unlike the other external declarations of the group in giglobal.c, the declaration gi_StartAddr is not referenced and its definition is outside the scope of GCE. File giglobal.c /* ** External Declarations */ extern GI_HkTlmPkt_t GI_HkPkt; /* GI task housekeeping packet */ extern GI_GcePresent_t GI_GcePresent[GI_MAX_ETU_GIC_CARDS]; /* GIC cards PCI Status information*/ extern uint32 gi_StartAddr; /* GIC card PCI start address */ extern GI_axisStatus_t GI_AxisStatus[GI_MAX_GIMBAL_AXES]; /* Antenna move command processing status */ extern uint8 GI_GlitchFlagStatus; /* Glitch status */ extern OS_PciAccessInfo_t GI_PciInfo[GI_MAX_ETU_GIC_CARDS];",10/31/2006
ProjectB - TIM - 2540,"Symbol return_code, on line 161,in file fsw/shared/os/osstart.c, is not accessed.",4,"Multiple instances of function call return values (ie. a return code) exist within the function OS_AttachExceptions(). The function returns the ""return code"" to the calling routine but the function in osstart.c does no condition checking of the value. No error checking is being done in OS_AttachExceptions() either. File fsw/shared/os/osstart.c: void OS_fswExecMain(uint32 start_type, uint32 modeId ) { int return_code; ... return_code = OS_AttachExceptions(); ------------------- File: osexception.c uint32 OS_AttachExceptions(void) { uint32 return_code; int i; ... for ( i = 2; i < 256; i++ ) { return_code = OS_ExcAttachHandler(i, OS_UnhandledInterrupt, 0 ); } ... return_code = OS_ExcAttachHandler (OS_ACCESS_ERROR_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_ADDRESS_ERROR_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_ILLEGAL_INSTRUCTION_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_PRIV_VIOLATION_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_UNIMP_A_LINE_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_UNIMP_F_LINE_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_DEBUG_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_FORMAT_ERROR_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_UNINIT_INTERRUPT_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_FLOATING_POINT_EXCEPTION, OS_FPExceptionHandler, 0); return ( return_code ); }",10/31/2006
ProjectB - TIM - 2539,ProjectB Ground System: DDS QCP - qcpMd5.c - if statement contains no code,4,"The code file qcpMd5.c contains an if clause that does not execute any code. In lines 218-223, the code does an ""if check"" on data item "" btsRdTot "" to see if it is equivalent to the value of “(mod * 1788)”. However, the test is not needed since the ""true"" line of the code logic no longer prints that the file size is as it has been commented out. So the true and false paths syntactically do the same thing. The code example: 00218 if (btsRdTot == (mod * 1788)) 00219 { 00220 /* 00221 printf(""file size verified\n""); 00222 */ 00223 } else",10/31/2006
ProjectB - TIM - 2538,ProjectB Ground System: DDS QCP - sharmem.c - if statement contains no code,4,"The code file sharmem.c contains an if clause that does not execute any code. In function 'SharMemCreat' lines 65-70 does an ""if check"" on data item ""iGotItFirst"". However, the test is not needed since the ""true"" line of the code logic no longer calls ""sharMemReset(shmPtr)"" as it has been commented out. So the true and false paths syntactically do the same thing. The code example: 00065 if (iGotItFirst) 00066 { 00067 /* 00068 sharMemReset(shmPtr); 00069 */ 00070 }",10/31/2006
ProjectB - TIM - 2537,Variable 'gicPciReadDataItems' may not have been initialized on line 1311.,4,"If the two conditions on line 1324 of file giglobal.c are true, then the function OS_PciBusFastRead is executed and gicPciReadDataItems[] assigned a value. However, on line 1331, only one of the two conditions is checked and as a result, the value of gicPciReadDataItems[] could be unassigned and passed to *dstPtr. A review of the functions called does not indicate that one can assume that ""(GI_GcePresent[GI_GIC_MINUS_Z_CARD].GicPresent)"" is true at the point at which the for-loop is stated on line 1329. A second instance of this issue is at line 1378. from file fsw/cpu/gce/tasks/gi/giglobal.c: 1308 void GI_PciBusFastRead(uint32 pciOffset, uint32 dst, uint32 items) 1309 { 1310 1311 uint32 gicPciReadDataItems[items], *dstPtr; 1312 uint8 i; 1313 1314 /* Configure read destination pointer */ 1315 dstPtr = (uint32 *)dst; 1316 1317 /* Get GIC Breadboard or ETU/FLT GIC #1 register values */ 1318 if (GI_GcePresent[GI_GIC_PLUS_Z_CARD].GicPresent) 1319 { 1320 OS_PciBusFastRead(GI_GcePresent[GI_GIC_PLUS_Z_CARD].StartAddr + pciOffset, (uint32)dstPtr, items, &GI_PciInfo[GI_GIC_PLUS_Z_CARD] ); 1321 } 1322 1323 /* Get ETU/FLT GIC #2 register values */ 1324 if ( (OS_HW_MODEL != OS_HW_MODEL_BB) && (GI_GcePresent[GI_GIC_MINUS_Z_CARD].GicPresent) ) 1325 { 1326 OS_PciBusFastRead(GI_GcePresent[GI_GIC_MINUS_Z_CARD].StartAddr + pciOffset , (uint32)&gicPciReadDataItems , items, &GI_PciInfo[GI_GIC_MINUS_Z_CARD] ); 1327 } 1328 1329 for (i = 0; i < items/4; i++) 1330 { 1331 if (OS_HW_MODEL != OS_HW_MODEL_BB) 1332 { 1333 if ( GI_GcePresent[GI_GIC_MINUS_Z_CARD].GimbalAxis == GI_GIC_MINUS_Z_CARD || 1334 GI_GcePresent[GI_GIC_PLUS_Z_CARD].GimbalAxis == GI_GIC_PLUS_Z_CARD) 1335 { 1336 /* -Z gimbal telemetry on GIC#2, +Z gimbal telemtry on GIC#1 */ 1337 *(dstPtr + (i * 4) + 2) = gicPciReadDataItems[(i * 4) + 2]; 1338 *(dstPtr + (i * 4) + 3) = gicPciReadDataItems[(i * 4) + 3]; 1339 } 1340 else 1341 { 1342 /* +Z gimbal telemetry on GIC#2, -Z gimbal telemtry on GIC#1 */ 1343 *(dstPtr + (i * 4) + 0) = gicPciReadDataItems[(i * 4) + 0]; 1344 *(dstPtr + (i * 4) + 1) = gicPciReadDataItems[(i * 4) + 1];",10/31/2006
ProjectB - TIM - 2536,"ProjectB Ground System: DDS QCP - imprecise event messages in ""setInsld.c""",4,"There is an incorrect printf statement in code file ""setInsId.c"". On line 61, the code constructs a message that states the program cannot open the config file. This is incorrect. The code actually cannot open the pMode dump. The code example is as follows: 00058 sprintf(dmpNm, ""%sdmps/%s/pMode.dmp"", shmPtr->dPath, shmPtr->qcpNm); 00059 if ((dmpFd = fopen(dmpNm, ""w"")) == NULL) 00060 { 00061 printf(""setInsId: ERR: Could not open config file %s\n"", dmpNm); 00062 exit(1);",10/31/2006
ProjectB - TIM - 2535,"ProjectB Ground System: DDS QCP - imprecise event messages in ""flInFl.c""",4,"There are two incorrect event messages in file flInFl.c. The first problem is at line 74. The printf statement states that the function cannot open the input file. This is incorrect. The correct message is that it cannot open the output file. The second is that at line 99, the printf statement in the code constructs a message that states the program cannot open the master file. This is incorrect. The correct message is that the code cannot open the prime file The code examples of the problem are: 00072 if ((outFd = open(flNm, O_WRONLY | O_CREAT | O_TRUNC | O_EXLOCK, 0777)) == -1) 00073 { 00074 printf(""qcp: saveFlIn, cannot open input file %s\n"", flNm); 00075 } else and 00096 printf(""%s\n"", flNm); 00097 if ((outFd = open(flNm, O_RDONLY | O_EXLOCK, 0777)) == -1) 00098 { 00099 printf(""qcp: saveFlIn, cannot open master file indx %s\n"", flNm); 00100 } else",10/31/2006
ProjectB - TIM - 2534,ProjectB Ground system: Incomplete event message in bldEvntMsg.c,4,"In code file ""bldEvntMsg.c"", there is a printf statement that is incorrect. The printf message at line 22, should add a """"create"""" so that it becomes: printf(""""… cannot create event file …); The code example is below: 00020 if ((inFd = creat(evntFlNm, 0777)) == -1) 00021 { 00022 printf("" bldEvntMsg: cannot events file %s\n"", evntFlNm); 00023 exit(1); 00024 }",10/31/2006
ProjectB - TIM - 2533,There are two instances where a declaration was found for a function but not a definition.,4,There are two instances where a declaration was found for a function but not a definition. IV&V suspects that the functions were design elements that were not required. If so the declarations should be removed. File Name: apmain.c Line: 90 File Path: fsw/cpu/scomm/tasks/ap/apmain.c Code: void AP_TaskMain(void); File Name: gcmain.c Line: 63 File Path: fsw/cpu/scomm/tasks/gc/gcmain.c Code: void GC_isr_main(void);,10/31/2006
ProjectB - TIM - 2532,There is a mismatch between the defined function UL_task_main the declaration UL_TaskMain in file ulmain.c.,4,"There is a mismatch between the function UL_task_main defined on line 126 and its declaration on line 88. The declaration reads “void UL_TaskMain(void)” where “task” and “main” are capitalized and not separated by an underscore. Since there is neither a definition for the declared function nor a declaration for the defined function, IV&V assumes the two were meant for each other. Code: from fsw/cpu/scomm/tasks/ul/ulmain.c 088 void UL_TaskMain(void); ... 126 void UL_task_main(void) 127 { ... 152 }",10/31/2006
ProjectB - TIM - 2531,There are fourteen instances where the extern keyword should have been used.,4,"The following declarations beginning on line 38 of file osobjtab.c are lacking an ""extern"" declarator: void SB_task_main(void); void HS_task_main(void); void RT_task_main(void); void IT_task_main(void); void TIME_task_main(void); void SM_task_main(void); void MD_task_main(void); void SP_task_main(void); void CS_task_main(void); void CA_TaskMain(void); void ACE_IsolationValveTaskMain(void); void ACE_SD_TaskMain(void); void ACE_SH_task_main(void); void ACE_SequenceValvesTaskMain(void);",10/31/2006
ProjectB - TIM - 2530,Un-referenced externally declared parameters.,4,There are ten instances where externally declared parameters are never referenced. The following table details these instances. Variable File Line CA_Arbitration_ParamTbl ace_command_actuators_task.c 199 SD_CSS_ParamTbl shtask.c 98 ACE_RawSensorDataPkt ace_command_handler.c 173 ACE_EVD_TargetId ace_command_handler.c 186 ACE_RWA_StartAddr ace_command_handler.c 189 ACE_RWA_TargetId ace_command_handler.c 190 CA_HkTlm ace_command_handler.c 204 ACE_EVD_TargetId ace_sensor_data_task.c 172 ACE_RWA_TargetId ace_sensor_data_task.c 176 SD_RWA_Inputs ace_sensor_data_task.c 183,10/31/2006
ProjectB - TIM - 2529,The AssembledThrusterTime parameter is not accessed in function CA_OverrideEVDCmd() of file ace_command_handler.c.,4,"In function CA_OverrideEVDCmd() of file cpu\ace\tasks\ca\ace_command_handler.c, the AssembledThrusterTime parameter is not accessed. The parameter AssembledThrusterTime is repeatedly assigned value in a loop but it is not referenced thereafter. A cryptic comment statement is associated with the variable declaration. boolean CA_OverrideEVDCmd (const void *Pkt ) { uint32 AssembledThrusterTime = 0; /* Note wanted by code review: AssembledThrusterTime is the thruster time value to write to the hardware. It is assembled fromthe command parameters. */ uint16 i; ... ... for ( i = 0; i < NUM_THRUSTERS; i++) /* Loop through the 8 ACS Thrusters plus 1 Main Engine, assembling the bit fields. */ { if ( (CmdPkt->EVD_FireCountCmd[i] == 0) || (CmdPkt->EVD_FireCountCmd[i] == 1) || (CmdPkt->EVD_FireCountCmd[i] == 2) || (CmdPkt->EVD_FireCountCmd[i] == 3) || (CmdPkt->EVD_FireCountCmd[i] == 5) ) { AssembledThrusterTime |= ( CmdPkt->EVD_FireCountCmd[i] << ( i * 3 ) ); } else { eventf(CA_TASK_ID, """"ACA140: Bad EVD Override Value: EVD=%1d, Value=%x"""", i, CmdPkt->EVD_FireCountCmd[i]); ACE_ControlTable.EVD_OverrideActive = FALSE; return(FALSE); }",10/31/2006
ProjectB - TIM - 2528,The initialization function CCSDS_CmdInitStat is not called.,4,"The function CCSDS_CmdInitStat is unused. It initializes a structure for counting events. As the counters are un-initialized, this may cause invalid statistics for health reporting. 55 void CCSDS_CmdInitStat( CCSDS_CmdStat_t *StatPtr ) 56 { 57 58 StatPtr->CmdExecCount = 0; 59 StatPtr->CmdRejectCount = 0; 60 StatPtr->FunCode = 0; 61 StatPtr->Length = 0; 62 StatPtr->Checksum = 0; 63 64 } /* END CCSDS_CmdInitStat() */ … 162 if (Success == TRUE) { 163 StatPtr->CmdExecCount++; 164 } 165 else { 166 StatPtr->CmdRejectCount++; 167 }",10/31/2006
ProjectB - TIM - 2527,"Conflicting data type definitions assigned to the label “SP_DefaultServiceStatesTable_eeprom,” uint16 and uint16[].",4,"Conflicting data type definitions assigned to the label “SP_DefaultServiceStatesTable_eeprom” in identical files, one in shared/sp directory and the other in cpu/ace/all/config. The makefile includes both paths in the build. The Compiler could build the OS with reference to the wrong definition of SP_DefaultServiceStatesTable_eeprom and the system might execute through a faulty path based on an incorrect states table value. from cpu/ace/all/config/sp_default_parameter_tbl.c: uint16 SP_DefaultServiceStatesTable_eeprom = 0x0047; from shared/sp/sp_default_parameter_tbl.c: uint16 SP_DefaultServiceStatesTable_eeprom [ SP_NUMBER_OF_SDNs ] = { 0x0FFF, /* ACE: 0000 1111 1111 1111 */ 0x1FFF, /* GCE: 0001 1111 1111 1111 */ 0x2FFF /* S-Band: 0010 1111 1111 1111 */ }; from sp.mak (referenced by Make): # Source and include file directories that are specific to subsystem. LOCALSRC = $(BASE)/cpu/$(PROC)/$(SIDE)/config $(BASE)/cpu/$(PROC)/all/config $(BASE)/shared/sp",10/31/2006
ProjectB - TIM - 2526,There are multiple and inconsistent definition of the variable sm_version_table_eeprom.,4,"There are multiple and inconsistent definitions of the variable sm_version_table_eeprom which is used as a constant. It is initialized as x0200 in the file cpu/ace/all/config/smromtbl.c and as x0203 in the file fsw/shared/sm/smromtbl.c. History changes do not refer to a value of 0x0203 but rather only 0x0200. Difference in version of the table may cause loading of the wrong table or no loading at all. from fsw/shared/sm/smromtbl.c: ** 02/15/05 ProjectB DR#136 D. Berry Modified the value of sm_version_table_eeprom from 0x0105 to 0x0203 ** for common code release 2.3. ** ** */ #include """"ostypes.h"""" /* ** Software Version Table. */ u_word sm_version_table_eeprom = 0x0203; from cpu/ace/all/config/smromtbl.c: ** 02/15/05 ProjectB DR#136 D. Berry Modified the value of sm_version_table_eeprom from 0x0105 to 0x0203 ** for common code release 2.3. ** ** */ #include """"ostypes.h"""" /* ** Software Version Table. */ u_word sm_version_table_eeprom = 0x0200;",10/31/2006
ProjectB - TIM - 2525,A comment indicates that two macros need to be removed from the source in file ace_command_actuators_task.c on line 181.,4,"In file cpu\ace\tasks\ca\ace_command_actuators_task.c, lines 181 and 182, two macros are defined and the associated comments states that they should be removed for the ETU (eng test unit). /* ** These are for the Breadboard to fix the hardware problem with PCI addresses. TAKE OUT FOR ETU!!!!!!!!!!!!!!!!!!!!!! */ #define OS_PCI_ACE_DEVICE_EVD_ID 0xC000 #define OS_PCI_ACE_DEVICE_RWI_ID 0xFFFF",10/31/2006
ProjectB - TIM - 2524,A condition in an if/elseif/else construct is repeated on line 528 of file ace_isolation_valve_task.c.,4,"In the function ACE_OpenCloseIsolationValve() of file fsw\cpu\ace\tasks\iv\ace_isolation_valve_task.c on line 528, a condition in an if/elseif/else construct is repeated. IV&V assumes that the developer probably meant to state OS_ERROR in one of the conditionals and not OS_SEM_TIMEOUT in both. An error state could be processed by the else condition, effectively allowing the isolation valve system to operate in an error state. from function OS_MutSemTryTake(): return (OS_ERROR) ; } if( pthread_mutex_trylock(&(os_mutex_blocks_array[mutex_index]) )) { /* Mutex is already taken */ ret_val = OS_SEM_TIMEOUT ; } else { ret_val = OS_SUCCESS ; from ace_isolation_valve_task.c: uint16 ACE_OpenCloseIsolationValve(uint16 ValveNumberParam, uint16 OpenCloseParam) { uint16 status = TRUE; uint32 ReturnedValue = 0; uint32 MutexReturnState; /* * Take the Iso Valve Mutex (or wait for it then take if currently unavailable) here, before the ISO Valve LPSC * check. Don't overlap the SV Task with the IV Task when reading LPSC then opening/closing valves. */ MutexReturnState = OS_MutSemTryTake( OS_ISO_VALVES_TAKEN_MUT_ID ); if ( MutexReturnState == OS_SEM_TIMEOUT ) { eventf(IV_TASK_ID, """"AIV109: IV Command rejected - arrived while Mutex taken""""); status = FALSE; } else if ( MutexReturnState == OS_SEM_TIMEOUT ) { eventf(IV_TASK_ID, """"AIV110: IV Command rejected - OS Failure""""); status = FALSE; } else { OS_PciBusRead( ACE_EVD_StartAddr + EVD_COMMAND_STATUS_2_ADDR, (uint32)&ReturnedValue , 1); from osapi.h: typedef enum { OS_SUCCESS, OS_ERROR, OS_INVALID_POINTER, OS_ERROR_ADDRESS_MISALIGNED, OS_ERROR_TIMEOUT, OS_INVALID_INT_NUM, OS_SEM_FAILURE, OS_SEM_TIMEOUT, OS_QUEUE_EMPTY, OS_QUEUE_FULL, OS_QUEUE_TIMEOUT, OS_QUEUE_INVALID_SIZE, OS_QUEUE_ID_ERROR, OS_NOT_SUCCESS_PCI_CARD_NOT_FOUND } os_return_type ;",10/31/2006
ProjectB - TIM - 2523,Loss of precision in cast unsigned value to assigned value on line 149 in file fsw/cpu/main/cdh/ds/dsdump.c.,4,"In file fsw/cpu/main/cdh/ds/dsdump.c on line 149, a value is explicitly cast as an unsigned word in an assignment to variable typed as a signed word. IV&V believes the intention was to explicitly cast to a signed word. from smpkt.h: 545 typedef struct 546 { ... 551 word number_packets; ... 554 } to_start_sm_dump_fmt; from dsdump.c: 149 ds_dump_request_pkt.number_packets = (u_word)(last_vcdu - first_vcdu + 1);",10/31/2006
ProjectB - TIM - 2522,Loss of precision on line 232 in file /fsw/cpu/main/acs/ac/code/ac_tlmpacutils.c.,4,"A value is explicitly cast as an unsigned integer in an assignment to a signed integer value. IV&V believes the intention was to explicitly cast the value to a signed 32 bit integer. from ac_tlmpacutils.c: 220 int32 IntValue, Maximum; ... 232 IntValue = (uint32) Rounded;",10/31/2006
ProjectB - TIM - 2521,The variable TIME_TonePktCtr is declared three times in the file fsw/shared/time/ timetask_client.c.,4,The variable TIME_TonePktCtr is declared three times in the file fsw/shared/time/ timetask_client.c. 103 /* 104 ** Global Data 105 */ 106 107 uint32 TIME_TonePktCtr; 108 uint32 TIME_TimePktCtr; ... 118 uint32 TIME_TonePktCtr; … This issue is located in the portion of the code common to all SDN components.,10/31/2006
ProjectB - TIM - 2520,The array xb_PSE_B_evt_tlm_ios is defined on line 1630 and then redeclared in terms of itself on line 1633 of file fsw/cpu/main/cdh/xb/xbchan.c.,3,"The variable xb_PSE_B_evt_tlm_chan is declared on line 1633 after it declaration and initialization on line 1630 in file fsw/cpu/main/cdh/xb/xbchan.c. 1630 synch_input_channel xb_PSE_B_evt_tlm_chan = 1631 SYNCH_INPUT(""PSE_B EVT tlm"", ANY_SID, xb_synch_input_fmt, 1632 xb_PSE_B_evt_tlm_ios, CCSDS_INPUT, 1); 1633 synch_input_channel xb_PSE_B_evt_tlm_chan;",10/31/2006
ProjectB - TIM - 2519,The array xb_SCOMM_B_evt_tlm_ios is defined on line 1757 and then redeclared in terms of itself on line 1762 of file fsw/cpu/main/cdh/xb/xbchan.c.,3,"The array xb_SCOMM_B_evt_tlm_ios is defined on line 1757 and then redeclared in terms of itself on line 1762 of file fsw/cpu/main/cdh/xb/xbchan.c. 1756 /* S-COMM B Event Message Telemetry */ 1757 io_spec xb_SCOMM_B_evt_tlm_ios[] = { 1758 READ_BLK_NR(SCOMM_B_RTA, 12, 0), 1759 READ_BLK_NR(SCOMM_B_RTA, 13, 0), 1760 READ_BLK_NR(SCOMM_B_RTA, 14, 1) 1761 }; 1762 io_spec xb_SCOMM_B_evt_tlm_ios[ELEM(xb_SCOMM_B_evt_tlm_ios)];",10/31/2006
ProjectB - TIM - 2518,The array xb_Inst3_ISS_tlm_ios is defined on line 1491 and then redeclared in terms of itself on line 1495 of file /fsw/cpu/main/cdh/xb/xbchan.c.,3,"The array xb_Inst3_ISS_tlm_ios is defined on line 1491 and then redeclared in terms of itself on line 1495 of file /fsw/cpu/main/cdh/xb/xbchan.c. 1491 io_spec xb_Inst3_ISS_tlm_ios[] = { 1492 READ_BLK(Inst3_RTA, 15, 0), 1493 READ_BLK(Inst3_RTA, 16, 1) 1494 }; 1495 io_spec xb_Inst3_ISS_tlm_ios[ELEM(xb_Inst3_ISS_tlm_ios)];",10/31/2006
ProjectB - TIM - 2517,ProjectB Spacecraft: ACS EP Task - Editorial error in an event message,5,"function EP_ProcessLoadEpvCmd() in ep_cmdproc.c - line 1033: a ""to"" should change to ""too"" in the event. if(EpvDelta > DB->EpvTimeLimit){ eventf(EP_TASK_ID, ""xEP%03dEPV Load Time is to far in the future"", <---------- A ""to"" SHOULD CHANGE TO ""too"" EP_EID_INV_EPV_TIME); ValidCommand = FALSE; } else { /* ** Determine if EPV load time occurs after current ** valid EPV expires */",10/24/2006
ProjectB - TIM - 2516,ProjectB Spacecraft: ACS EP Task - In ACS Lunar Ephemeris algorithm appears to be implemented incorrectly,3,"In the algorithm for ACS Lunar Ephemeris, the algorithm sets the LunarValidFlag to 0 in the conditional processing for when the LunarValidFlag is false. At line 1471 in the code, the corresponding line sets the LunarValidFlag to TRUE, which should be non-zero. BEGIN ACS LunarEphemeris ... if (!LunarValidFlag) { ¡­ LunarValidFlag = 0; } ¡­ 1468 ** 9. Compute lunar velocity meters/sec 1469 */ 1470 if(ModelData->FlagValid == FALSE){ 1471 ModelData->FlagValid = TRUE; ¡­ 1475 } 12/13/2006 - The algorithm document needs to be updated. The code implementation is correct.",10/24/2006
ProjectB - TIM - 2515,ProjectB Spacecraft: ACS EP Task - In ACS Solar Model algorithm appears to be implemented incorrectly,3,"In the algorithm for ACS Solar Model, the algorithm sets the SolarValidFlag to 0 in the conditional processing for when the SolarValidFlag is false. At line 1714 in the code, the corresponding line sets the SolarValidFlag to TRUE, which should be non-zero. Note that the conditional in the code is reversed. BEGIN ACS Solar Model ¡­ Compute the solar velocity vector in cartesian GCI coordinates, referred to the mean equator and equinox of J2000 (meters per second). if (!SolarValidFlag) { ¡­ SolarValidFlag = 0; } 1691 if(Solar->Model.SolarModelValid) { ¡­ 1711 } 1712 else { 1713 Vector3d_InitZero(&Solar->Model.VelGciFSunWrtEarth); 1714 Solar->Model.SolarModelValid = TRUE; ¡­ 1720 } 12/13/2006 - The algorithm document needs to be updated. The code implementation is correct.",10/24/2006
ProjectB - TIM - 2514,Requirement 2000 has incorrect units in requirement text.,4,"Requirement text needs to be changed to use units of bits per second (bps) not kilobits ber second (Kbps). 464-FSW-SPEC-0052 Requirement 2000 states, ""The CI Flight Software shall support an uplink rate of up to 2000 Kbps."" However, the level-3 requirement listed for requirement 2000 (level-4) is 464-SPEC-56/CDHMP-12 which states 2 Kbps. Also, according to 464-CDH-ICD-0073 Section 3.2 Uplink Commands, ""The uplink data rate shall be 2 Kbits/second from the transponder."" The rate specified in requirement 2000 should be 2000 bps.",10/2/2006
ProjectB - TIM - 2513,Interface Control Documentation Does Not Correctly Adhere to Requirement 1002 Specification,3,"S-Comm Requirement 1002 (464-FSW-SPEC-0063 Revision D) states, ""The SDN Software shall initialize the downlink interface to the following default configuration on a COLD or Power-On reset: 8Kbps, ½ Rate Convolutional Encoding ON, Reed Solomon ON, Pseudo-Randomization ON."" However, in the document ""464-CDH-ICD-0073 Revision (A)"" Table 11.2.1 Item 'XX000210h', the documentation indicates that the default configuration for Psuedo-Randomization is OFF (Disabled), not ON as per the requirement.",10/2/2006
ProjectB - TIM - 2512,Inst3/Inst1 Kernel Test Plan has an incomplete section,4,"Section 4 of the Inst3/Inst1 Kernel test plan states that “the tests comprising the Formal Qualification Test (FQT), also known as the Software Acceptance Test (SAT), are described in detail.” Neither this section, nor the entire Inst3/Inst1 Kernel test plan, contain details about the FQT tests. This sentence should be modified or the test details added to the test plan to accurately reflect the plan’s contents.",9/28/2006
ProjectB - TIM - 2511,Inst3/Inst1 Kernel Test Plan - No information about documenting Acceptance Test results,3,There is no information in the Inst3/Inst1 Kernel Software Test Plan about any type of Acceptance Test report or any documentation that will capture the results of the Acceptance Testing.,9/28/2006
ProjectB - TIM - 2510,Inst1 Test Plan has an incomplete section,4,"Section 4 of the Inst1 test plan states that “the tests comprising the Formal Qualification Test (FQT), also known as the Software Acceptance Test (SAT), are described in detail.” Neither this section, nor the entire Inst1 FSW test plan, contain details about the FQT tests. This sentence should be modified or the test details added to the test plan to accurately reflect the plan’s contents.",9/21/2006
ProjectB - TIM - 2509,Inst1 Test Plan - No information about documenting Acceptance Test results,3,There is no information in the Inst1 Flight Software Test Plan about any type of Acceptance Test report or any documentation that will capture the results of the Acceptance Testing.,9/21/2006
ProjectB - TIM - 2508,DDS QCP: qcpClient.c' - Magic number should pre # define.,5,"For the DDS QCP Build 2 Code review package, there are a number of instances where ""magic numbers"" (i.e. hard coded numbers in the in-line code) are used where pre # defines should be use. Just one of the numerous examples is found in the Function 'main()' in 'qcpClient.c' - line 248: the parameter 1782 for the function 'crc_16()' should be pre# defined. 00248 crcCalc = crc_16(&tmpBuf[x][(shmPtr->hdrSz) + 4], ccsdsCRC16Table, 1782, 1); Another example is in qcpMD5. In this example, the same magic number (1788000) is used again and again. 00084 buf = (unsigned char *) malloc(1788000); 00146 vcRd = 1788000; 00191 vcRd = 1788000;",9/19/2006
ProjectB - TIM - 2507,DDS QCP: qcpCC.c - tries to close an unsuccessful-open file.,3,"The file qcpCC.c has the possibility of closing a file that could not be opened earlier in the code. In the function 'main()' in 'qcpCC.c', the SW is trying to open a file at line 143. If this logic is executed, then the next executable line in on line 677. On line 678, the code will then attempt to close a file that it could not open. The code is as follows: 00140 case POLL: 00141 /* process Directives */ 00142 sprintf(cmd, ""%sqcp/config/%s/cmds"", shmPtr->cfgFlPth, shmPtr->qcpNm); 00143 if ((lsFd = fopen(cmd, ""r"")) == NULL) 00144 { 00145 printf(""cannot open cmds file\n""); 00146 } else ... 00676 } 00677 shmPtr->qcpCCProcSt = stOld; 00678 fclose(lsFd); 00679 break;",9/19/2006
ProjectB - TIM - 2506,DDS QCP: imprecise event message in file 'getConPrms.c',4,"File getConPrms.c has code (line 77-87) that attempt to open a backup config file. If this is unsuccessful, it creates an event message. The problem is that the event message does not specify that this file is a backup file, rather it just states that the config file could not be opened. The message should state that the file is a backup. The code is as follows: 00077 if (opnBckupCfg == 1) 00078 { 00079 sprintf(cfgNm, ""%sqcp/config/%s/conn.config.bak"", shmPtr->cfgFlPth, shmPtr->qcpNm); 00080 if ((cFd = fopen(cfgNm, ""r"")) == NULL) 00081 { 00082 printf(""getConPrms: Could not open config file %s\n"", cfgNm); 00083 memset(evntStr, 0, 128); 00084 sprintf(evntStr, ""getConPrms:Could not open config file %s\n"", cfgNm); 00085 bldEvntMsg(shmPtr, QCP_CANNOT_OPEN_CONFIG_FILE, evntStr); 00086 exit(1); 00087 } else",9/19/2006
ProjectB - TIM - 2505,DDS QCP: Incorrect event messages in file 'qcpFlInDb.c',4,"File qcpFllnDb.c constructs event messages that contain incorrect information. Lines 176 of of the function backupFlInDb() and line 215 of the function archFlInDb() that they cannot open the input file when in fact the file is the output file. 00174 if ((outFd = open(flNm, O_WRONLY | O_CREAT | O_TRUNC, 0777)) == -1) 00175 { 00176 printf(""qcp: saveFlIn, cannot open input file %s\n"", flNm); 00177 } else 00213 if ((outFd = open(flNm, O_WRONLY | O_CREAT | O_TRUNC, 0777)) == -1) 00214 { 00215 printf(""qcp: saveFlIn, cannot open input file %s\n"", flNm); 00216 return (-1); 00217 } else",9/19/2006
ProjectB - TIM - 2504,DDS QCP: File setmodtbl.c contains three instances of incorrect assignmernts to flOpnTmOut,2,"The file semodtbl.c has three separate instances where a string compare (strcmp) is checked using ""INSTRUMENT_ID_x_TLM_FILE_UPDATE_TIMEOUT"" (where x is 1, 2 and 3). Then a data value is assigned to flOpnATmOut[x]. It looks as thought the check should be on ""INSTRUMENT_ID_x_TLM_FILE_OPEN_TIMEOUT"". The code is as follows: 00129 } else if (strcmp(com, ""INSTRUMENT_ID_1_TLM_FILE_UPDATE_TIMEOUT"") == 0) 00130 { 00131 flOpnTmOut[1] = atoi(param); [...] 00206 } else if (strcmp(com, ""INSTRUMENT_ID_2_TLM_FILE_UPDATE_TIMEOUT"") == 0) 00207 { 00208 flOpnTmOut[2] = atoi(param); [...] 00283 } else if (strcmp(com, ""INSTRUMENT_ID_3_TLM_FILE_UPDATE_TIMEOUT"") == 0) 00284 { 00285 flOpnTmOut[3] = atoi(param);",9/19/2006
ProjectB - TIM - 2503,DDS QCP: File cnvrttm.c contains hard coded numbers in the code.,4,"File cnvrtTm.c (as well as other files in the package) contain a number of examples where hardcoded numbers are used in the logic of the procedure. Because of the lack of comments; at times, it is hard to understand what these numbers represent. It would be better to defined these number in the declaration and comment as to what they represent An example of the logic is as follows: 00082 for (yr = 1958; yr < 2100; yr++) 00083 { 00084 if ((((yr % 4) == 0) && ((yr % 100) != 0)) || ((yr % 400) == 0)) 00085 { 00086 yrSecs[y] = yrSecs[y - 1] + 31622400; 00087 } else 00088 { 00089 yrSecs[y] = yrSecs[y - 1] + 31536000; 00090 } 00091 y++; 00092 } 00093 00094 } 00095 if (md == 0) 00096 { 00097 iSec = (unsigned int) (*sec / 1000000); 00098 days = iSec / 86400; 00099 tm->yr = yearTab[days][0]; 00100 tm->doy = yearTab[days][1]; 00101 dSecs = iSec % 86400;",9/19/2006
ProjectB - TIM - 2502,DDS QCP: setconprms.c contains code that could be simplified.,4,"The file setConPrms.c contains code that is redundant The code does a check on whether the data item md is equal to ""0"" (line 57) or ""1"" (line 94). A for loop constitutes the largest portion of the code based on the decision of ""md"". However, the for loop code is completely the same in both decisions (line 68-92 and 104-127). This code should be re-organized to keep the code as simple as possible. 00068 for (x = 0; x < 4; x++) 00069 { 00070 fprintf(setup, ""FEP_CONNECT_ID = %01d\n"", x); 00071 fprintf(setup, ""PROCESSING_QCP = %s\n"", shmPtr->conConfig[x].qcpNm); 00072 fprintf(setup, ""FEP_CONNECT_ACTIVE = %d\n"", shmPtr->qcpClientProcSt[x]); 00073 fprintf(setup, ""FEP_CONNECT_ACTIVE_AT_INIT = %d\n"", shmPtr->conConfig[x].initActv); 00074 fprintf(setup, ""FEP_PRIMARY_NAME = %s\n"", shmPtr->conConfig[x].fepPriName); 00075 fprintf(setup, ""FEP_BACKUP_NAME = %s\n"", shmPtr->conConfig[x].fepBckName); 00076 if (shmPtr->qcpClientProcSt[x] == PROC) 00077 { 00078 fprintf(setup, ""FEP_ACTIVE_NAME = %s\n"", shmPtr->conConfig[x].fepActName); 00079 } else 00080 { 00081 fprintf(setup, ""FEP_ACTIVE_NAME = 0\n""); 00082 } 00083 00084 fprintf(setup, ""PORT_NUM = %d\n"", shmPtr->conConfig[x].port); 00085 fprintf(setup, ""INCLUDE_RS_FAILURES = %d\n"", shmPtr->conConfig[x].inRSFlrs); 00086 fprintf(setup, ""FEP_FAILOVER_SECONDS = %d\n"", shmPtr->conConfig[x].failOvrCnt); 00087 fprintf(setup, ""HEART_BEAT_TM_OUT = %d\n"", shmPtr->conConfig[x].hrtBtTmOut); 00088 fprintf(setup, ""START_TIME = %x\n"", shmPtr->conConfig[x].strtTm); 00089 fprintf(setup, ""STOP_TIME = %x\n"", shmPtr->conConfig[x].stpTm); 00090 fprintf(setup, ""USE_START_STOP_TIMES = %d\n"", shmPtr->conConfig[x].pMod); 00091 fprintf(setup, ""FEP_CONNECT_END = 1\n\n""); 00092 } [...] 00104 for (x = 0; x < 4; x++) 00105 { 00106 fprintf(setup, ""FEP_CONNECT_ID = %01d\n"", x); 00107 fprintf(setup, ""PROCESSING_QCP = %s\n"", shmPtr->conConfig[x].qcpNm); 00108 fprintf(setup, ""FEP_CONNECT_ACTIVE = %d\n"", shmPtr->qcpClientProcSt[x]); 00109 fprintf(setup, ""FEP_CONNECT_ACTIVE_AT_INIT = %d\n"", shmPtr->conConfig[x].initActv); 00110 fprintf(setup, ""FEP_PRIMARY_NAME = %s\n"", shmPtr->conConfig[x].fepPriName); 00111 fprintf(setup, ""FEP_BACKUP_NAME = %s\n"", shmPtr->conConfig[x].fepBckName); 00112 if (shmPtr->qcpClientProcSt[x] == PROC) 00113 { 00114 fprintf(setup, ""FEP_ACTIVE_NAME = %s\n"", shmPtr->conConfig[x].fepActName); 00115 } else 00116 { 00117 fprintf(setup, ""FEP_ACTIVE_NAME = 0\n""); 00118 } 00119 fprintf(setup, ""PORT_NUM = %d\n"", shmPtr->conConfig[x].port); 00120 fprintf(setup, ""INCLUDE_RS_FAILURES = %d\n"", shmPtr->conConfig[x].inRSFlrs); 00121 fprintf(setup, ""FEP_FAILOVER_SECONDS = %d\n"", shmPtr->conConfig[x].failOvrCnt); 00122 fprintf(setup, ""HEART_BEAT_TM_OUT = %d\n"", shmPtr->conConfig[x].hrtBtTmOut); 00123 fprintf(setup, ""START_TIME = %x\n"", shmPtr->conConfig[x].strtTm); 00124 fprintf(setup, ""STOP_TIME = %x\n"", shmPtr->conConfig[x].stpTm); 00125 fprintf(setup, ""USE_START_STOP_TIMES = %d\n"", shmPtr->conConfig[x].pMod); 00126 fprintf(setup, ""FEP_CONNECT_END = 1\n\n""); 00127 }",9/19/2006
ProjectB - TIM - 2501,DDS QCP: File header for sharmem.c is different from all the rest of the files in the packet.,5,"The file sharmem.c looks to be reused code. The reason for this conclusion is that the header is different from the rest of the files included in the packet to be reviewed (although it does contain actual comments). For consistency, the headers for all files should be the same.",9/19/2006
ProjectB - TIM - 2500,DDS QCP: file qcpCC.c concerning the determination of the Instrument ID.,3,"File qcpCC.c contains code the seems very confusing. Case 11 (change the modulus) embedded within the Case POLL (lines 423-427) contains some logic that seems to be use to determine the Instrument ID (it very hard to tell because of the lack of any meaqningful comments in any of the code). From the logic it looks as though the instrument ID (insID) is determined before the modulus is changed. The string that the id is in (cndPrmStr1) is converted and then that number has a one (1) subtracted from it. That would mean that the Id is stored in the string as either a 2, 3 or 4. Is this correct? It would seem that this is counterintuitive as to how it should be represented. The code in question is below: 00423 case 11: /* change the modulus */ 00424 insId = (atoi(cmdPrmStr1)) - 1; 00425 vc = atoi(cmdPrmStr2); 00426 if ((insId == 1) || (insId == 2) || (insId == 3)) 00427 {",9/19/2006
ProjectB - TIM - 2499,DDS QCP: 'SetConPrms.c' - Wrong event message.,4,"According to the declaration of filename 'conn.config.dmp' within code file setConParms.c, the printf error's message seems to be for a ""dump file"" rathen than the config file that it states. This occurs on line 97-102. 00097 sprintf(cfgNm, ""%sqcp/config/%s/conn.config.dmp"", shmPtr->cfgFlPth, shmPtr->qcpNm); 00098 if ((setup = fopen(cfgNm, ""w"")) == NULL) 00099 { 00100 printf(""ERR: setConPrms: mode 1 not open config file %s\n"", cfgNm); 00101 exit(1); 00102 }",9/19/2006
ProjectB - TIM - 2498,DDS QCP: General issue - magic numbers use in many places,5,"In general, many magic numbers are used within the qcp code package. It would be better for code maintainance for some of the magic numbers to be pre # defines. Also, the addition of code comments provided to describe what the value is representing would be beneficial as well. Because of the lack of comments; at times, it is hard to understand what these numbers represent. It would be better to defined these number in the declaration and comment as to what they represent. Three examples of this in the qcp code is as follows: cnvrtTm.c: 00082 for (yr = 1958; yr < 2100; yr++) 00083 { 00084 if ((((yr % 4) == 0) && ((yr % 100) != 0)) || ((yr % 400) == 0)) 00085 { 00086 yrSecs[y] = yrSecs[y - 1] + 31622400; 00087 } else 00088 { 00089 yrSecs[y] = yrSecs[y - 1] + 31536000; 00090 } 00091 y++; 00092 } 00093 00094 } 00095 if (md == 0) 00096 { 00097 iSec = (unsigned int) (*sec / 1000000); 00098 days = iSec / 86400; 00099 tm->yr = yearTab[days][0]; 00100 tm->doy = yearTab[days][1]; 00101 dSecs = iSec % 86400; Function 'main()' in 'qcpClient.c': 00248 crcCalc = crc_16(&tmpBuf[x][(shmPtr->hdrSz) + 4], ccsdsCRC16Table, 1782, 1); qcpMD5: 00084 buf = (unsigned char *) malloc(1788000); 00146 vcRd = 1788000; 00191 vcRd = 1788000;",9/19/2006
ProjectB - TIM - 2497,DDS QCP: General issue - Lack of comments,5,The source code files for qcp in general contain insufficient commented. It is extremely hard to read the code. This in turn makes it hard to come to some meaningful understanding of what the code is actually doing.,9/19/2006
ProjectB - TIM - 2496,Comments indicate design unknowns,5,"There are comments containing question marks indicating incompleteness in the design decisions during initialization. 757 /* should the default parking angles be table variables ??? */ … 760 Gimbal->Index_GIM_InControl = ACS_GCE_A; /* should this be a table value ??? */ … 770 /* What if the current direction is actually negative??? Will first cmd fail??? */ … 1118 /* if (!AC_EpData.FlagGoodScEphem) Antenna->Flag_HGA_CmdValid = FALSE; ??? */ … 1133 &AC_EpData.Align_EcefFToGciF, /* Is this the correct name??? */",9/18/2006
ProjectB - TIM - 2495,Extraneous comma in array definition,5,"In the definition of the array AC_Hga_GimCalibTbl on line 684, there is an extraneous comma after the final initial element. 682 /** Table of pointers to the gimbal calibration tables. */ 683 const AC_HgaCalibTbl_t *AC_Hga_GimCalibTbl[ACS_NUM_GIMBALS] = 684 { &AC_HgaCalibTbl_1, &AC_HgaCalibTbl_2, &AC_HgaCalibTbl_3, &AC_HgaCalibTbl_4, };",9/18/2006
ProjectB - TIM - 2494,Units in the comments are reversed,5,Line 1385-1390 in function AC_HgaCalcGimbalSteps(): The units in the comments are reversed. These reversed units do not correctly represent the units in the equation. StepsPerGCECycle = Gimbal->Rate_HGASlew_Max_Cmd /* deg/hour */ / AC_HgaTbl.Scale_HGA_CntToRad[gim] /* steps/rad */ * (MTH_RADS_PER_DEG /* rad/deg */ / MTH_SECS_PER_HOUR) /* hour/sec */ * AC_HgaTbl.DeltaTime_HGA /* sec/ACS_cycle */ / AC_HgaTbl.Lim_Cnt_GCE_Max; /* ACS_cycle/GCE_cycle */ The correct unit's format should be: steps/rad ----> rad/steps hour/sec ----> sec/hour ACS_cycle/GCE_cycle ----> GCE_cycle / ACS_cycle,9/18/2006
ProjectB - TIM - 2493,Inconsistent use of the named constant NUMBER_OF_CSS,4,"In the for loops in function SD_ProcessCSSData the loops increment up to the constant NUMBER_OF_CSS, however when the array members Cnt_CSS_Meas and Flag_CSS_DataADComplete are declared in the struct SD_CSS_Inputs_t using the numeric literal 8. From css.h: typedef struct { uint16 Cnt_CSS_Meas[8]; /* Array of raw CSS data [cnt] (8x1) */ uint16 Flag_CSS_DataADComplete[8]; /* Flag true if A/D conversion of corresponding CSS data completed successfully (8x1) */ } SD_CSS_Inputs_t; From sd_css.c: void SD_ProcessCSSData (void) { ... for ( i = 0; i < NUMBER_OF_CSS; i++ ) { ... SD_CSS_Inputs.Cnt_CSS_Meas[i] = ACE_RawSensorDataPkt.CssRsd[i] & SDN_ADC_DATA_MASK; } ... for ( i = 0; i < NUMBER_OF_CSS; i++ ) { ... SD_CSS_Outputs.Sun_CssF_CSS[i] = ( SD_CSS_Inputs.Cnt_CSS_Meas[i] * SD_CSS_ParamTbl.Scale_CSS[i] ) - SD_CSS_ParamTbl.Bias_CSS[i]; ... } /* end for ( i = 0; i < NUMBER_OF_CSS... */",9/18/2006
ProjectB - TIM - 2492,Spacecraft: Return code is set but not returned,4,"At line 1572 in the functions OS_ExceptionHandler, OS_FPExceptionHandler, and OS_UnhandledInterrupt; a local variable “return_code” is declared and set but is unused. IV&V is confused by the variable name “return_code” in functions that return void.",9/7/2006
ProjectB - TIM - 2491,Spacecraft: In function uint32 OS_AttachExceptions(void) only the last return code is used.,4,"Line 1538. In function “uint32 OS_AttachExceptions(void)” only the last return code is used. There are ten calls to the function “OS_ExcAttachHandler( ... )” which set a variable “return_code” which is reset by the next call and then the result of the last call is returned. IV&V can see no reason to make the assignment and then not check the status returned by the call. code snippet from \platform\sdn\dev\osexception.c: uint32 OS_AttachExceptions(void) { uint32 return_code; int i; /* ** Initialize all Interrupt vectors with a default handler ** ( Zero and 1 are special cases ) */ for ( i = 2; i < 256; i++ ) { return_code = OS_ExcAttachHandler(i, OS_UnhandledInterrupt, 0 ); } /* ** Install exception Handlers */ return_code = OS_ExcAttachHandler (OS_ACCESS_ERROR_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_ADDRESS_ERROR_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_ILLEGAL_INSTRUCTION_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_PRIV_VIOLATION_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_UNIMP_A_LINE_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_UNIMP_F_LINE_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_DEBUG_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_FORMAT_ERROR_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_UNINIT_INTERRUPT_EXCEPTION, OS_ExceptionHandler, 0); return_code = OS_ExcAttachHandler (OS_FLOATING_POINT_EXCEPTION, OS_FPExceptionHandler, 0); return ( return_code ); }",9/7/2006
ProjectB - TIM - 2490,Spacecraft: magic Numbers,4,Magic numbers are used extensively. There are numerous instances where numeric literals are used where named constants would seem appropriate.,9/7/2006
ProjectB - TIM - 2489,"Spacecraft: wrong comment in ""ac_faultdet.c""",5,"""ac_faultdet.c"": Line 859: an incorrect comment is used at the end-of-function block. ""} /* End AC_FaultDetEnable() */ "" should be replaced by """"} /* End AC_FaultDetConfig() */ """,8/28/2006
ProjectB - TIM - 2488,Spacecraft: Potential overflow of division operation in file ac_rwa.c,3,"The review materials do not provide the assignment of Delta used in the division on line 580. Since there is no check prior to execution of the division, IV&V cannot verify delta is sufficiently larger than zero we cannot verify the operation will not overflow the result. 579 AC_RwaProcData[AcePkt].TorRwaFCalc[i] = (AC_RwaProcData[AcePkt].MomRwaF[i] ¡V 580 AC_MomRwaFPrev[AcePkt][i])/AC_AceRsdStatus[AcePkt].RwaTime.Delta;",8/28/2006
ProjectB - TIM - 2487,Requirement 2809 has incorrect units in requirement text.,3,"Requirement text needs to be changed to use units of milliseconds, not microseconds. OS Software Functional Requirement 2809 states that ""The OS shall provide an application function for delaying the execution of the calling function by a specified time in units of microseconds"", but lists the wrong units. The system clock runs at 60Hz (16.67 milliseconds = 16,670 microseconds). It is known that values in microseconds will never go to single, double, or triple digits. Underlying methods OS_Task_Delay and OS_Milli2Ticks work with values of milliseconds for this reason (see code snippets below). Code Snippets: ""/*--------------------------------------------------------------------------------------- Name: OS_TaskDelay Purpose: Delay a task for specified amount Notes: VxWorks uses the system clock to handle task delays. The system clock usually runs at 60Hz. This means that the resolution of the delay will be course. It rounds up. Parameters: milli_seconds - number of milliseconds the task should delay Global Inputs: None Global Outputs: None Return Values: OS_SUCCESS - task delayed OS_ERROR - vxworks call taskDelay failed ---------------------------------------------------------------------------------------*/ uint32 OS_TaskDelay (uint32 milli_seconds) { uint32 sys_ticks = OS_Milli2Ticks(milli_seconds); int status; status = taskDelay(sys_ticks); /* execution pend */ if(status != OK) { return OS_ERROR; } return OS_SUCCESS; } /*--------------------------------------------------------------------------------------- Name: OS_Milli2Ticks Purpose: This function accepts a time interval in milli_seconds as input and returns the tick equivalent in o.s. system clock ticks. The tick value is rounded up. Parameters: milli_seconds - number of milliseconds that you want to convert to ticks Global Inputs: None Global Outputs: None Return Values: system ticks ---------------------------------------------------------------------------------------*/ uint32 OS_Milli2Ticks (uint32 milli_seconds) { uint32 num_of_ticks, num_of_ticks_x1000; num_of_ticks_x1000 = sysClkRateGet() * milli_seconds; num_of_ticks = num_of_ticks_x1000 / 1000; if (num_of_ticks_x1000 % 1000) num_of_ticks += 1; return(num_of_ticks); } """,8/25/2006
ProjectB - TIM - 2486,Explicit Entry and Exit Criteria Missing From GS Test Phases,3,"Section 2.2 (Ground System Readiness Test Phases) seems to be missing explicit entry and exit criteria for each of the test phases. This leads to questions concerning whether or not phases can be run in parallel or whether one phase must end before another begins. Without explicit criteria for entry, there is no way verify that all tests are at the same stage of readiness before beginning the test. The same problem exist for no explicit exit criteria. Without explicit criteria for exit, there is no way to verify that the tests have successfully completed all necessary conventions. These types of questions could be answered by simply putting the entry and exit criteria for each test phase.",8/25/2006
ProjectB - TIM - 2485,Flight Dynamics System missing from Section 6.1,3,"Section 6.1 states that the GSRTT will verify and validate a number of element operational areas. However, the Flight Dynamics System is missing. This operational area should not be outside the purview of the Ground System Readiness Testing. If they are, then what is the documentation that will show the procedure for verifying and validating those missing systems?",8/25/2006
ProjectB - TIM - 2484,Inconsistent description of information on the Test Information Sheets,3,"Section 2.5.5 Test Information Sheets (TIS) state that the Ground System Readiness Tests have detailed information in Section 6 of the 464-GS-PLAN-00434. The section then states what the TIS will include. The problem is that the information that is described in 2.5.5 is inconsistent with Section 6. Paragraph 2.5.5 states that the TIS includes ""Test Data Description"" and ""Test Procedure"". Instead of this information, Section 6 shows that the TIS includes ""Test Stimulus"" and ""Test Scenario/Description"". If these parts are functionally equivalent, then they should be renamed in one to the sections so they will match.",8/25/2006
ProjectB - TIM - 2483,Missing Interface In The N2 Data Description Table,3,"Page 2-8 of the GS Readiness Test Plan (464-GS-PLAN-0043), has an inconsistency between the N2 Data Description Table and the N2 Interface Chart. The figure 2-3: N2 Interface Chart shows an interface of 10-14 (which is an interface from the MOC FDS to the MOC ANS). This interface is not shown in the N2 Data Description Table.",8/25/2006
ProjectB - TIM - 2482,Inconsistency with N2 Data Description Table,3,"There is an inconsistency with the N2 Data Description Table (paragraph 2.5.3 page 2-9) as it exists in the Ground System Readiness Test Plan (464-GS-PLAN-0043). There seems to be duplicate information in the N2 column of the table. Page 2-13 shows the following N2 interfaces ""10-16"", ""10-17"", ""10-18"", ""12-14"", ""13-16"", ""13-17"", ""13-18"", ""14-16"" and ""14-17"". These interfaces are duplicated on the next page 2-14. However, the information in ""Requirement Source"" column is different between both pages.",8/25/2006
ProjectB - TIM - 2481,Inst3 Test Plan has an incomplete section,4,"Section 4 of the Inst3 test plan states that “the tests comprising the Formal Qualification Test (FQT), also known as the Software Acceptance Test (SAT), are described in detail.” Neither this section, nor the entire Inst3 FSW test plan, contain details about the FQT tests. This sentence should be modified or the test details added to the test plan to accurately reflect the plan’s contents.",8/22/2006
ProjectB - TIM - 2480,Inst3 Test Plan - No information about documenting Acceptance Test results,3,There is no information in the Inst3 Flight Software Test Plan about any type of Acceptance Test report or any documentation that will capture the results of the Acceptance Testing.,8/22/2006
ProjectB - TIM - 2479,GCE SDN: No requirements found that support the commands indicated in ICD (464-MECSM-ICD-0104 rev -),3,"The following commands are indicated in ICD (464-MECSM-ICD-0104 rev -), but could not find in the Requirement Spec and the Command & Telemetry Handbook. 1) There is no such requirement in the spec and command in the C&T handbook that support the ICD 10.3.2 ""Read HOME/EOTZ Status"" command. 2) There is no such requirement in the spec and command in the C&T handbook that support the ICD 10.3.3 ""Read Glitch Flag"" command. 3) There is no such requirement in the spec and command in the C&T handbook that support the ICD 10.3.4 ""Read Axis Glitch Pulse Count"" command. 4) There is no such requirement in the spec and command in the C&T handbook that support the ICD 10.3.5 ""Read Axis Glitch Position"" command. 5) There is no such requirement in the spec and command in the C&T handbook that support the ICD 10.4 ""LPSC Commands"". 6) There is no such requirement in the spec and command in the C&T handbook that support the ICD 10.4.1 ""Open/Close LPSC Switch and Read Status"" command.",8/7/2006
ProjectB - TIM - 2478,GCE SDN: There is no command found in Command & Telemetry handbook to support requirement 5366,3,"GCE SDN FSW Requirement 5366 in 464-FSW-SPEC-0054 states ""The GCE FSW shall execute ASD commands to arm/disarm the RF switches."" In the ICD 464-MECSM-ICD-0104, section 5.1.7.1 ASD Relay Arm Control Registers discusses this command and interface, and section 10.2.1 states this is a ground command. However there is no such command in the GCE C&T handbook.",8/7/2006
ProjectB - TIM - 2477,GCE SDN: There is no command found in Command & Telemetry handbook to support requirement 5365,3,"GCE SDN FSW Requirement 5365 in 464-FSW-SPEC-0054 states ""The GCE FSW shall execute ASD commands to arm/disarm the opposite side relay switches."" In the ICD 464-MECSM-ICD-0104, section 5.1.7.1 ASD Relay Arm Control Registers discusses this command and interface, and section 10.2.1 states this is a ground command. However, there is no such command in the GCE C&T handbook.",8/7/2006
ProjectB - TIM - 2476,GCE SDN: There is no command found in Command & Telemetry handbook to support requirement 5364,3,"GCE SDN FSW Requirement 5364 in 464-FSW-SPEC-0054 states ""The GCE FSW shall execute commands to set the ASD pulse width timing values."" In the ICD 464-MECSM-ICD-0104, section 5.1.8 ASD Pulse Width Timing Registers describes the setting of the pulse width timing values. Also, section 10.2.6 states this is a ground command. However, there is no such command in the GCE C&T handbook.",8/7/2006
ProjectB - TIM - 2475,GCE SDN: No command support requirement 5359.7,3,"GCE SDN FSW Requirement Requirement 5359.7 in 464-FSW-SPEC-0054 states ""The GCE FSW shall execute a command to enable/disable automatic driver power shut-off."" In the ICD 464-MECSM-ICD-0104, section 10.3.10 Enable/Disable Driver Shut-off by the Over-Current detection Circuit states that it is a ground command to allow/prevent the FPGA from disabling the motor driver when an over current is being detected. There is no such command in the Command & Telemetry document that allows the FSW to execute a command to enable/disable automatic driver power shut-off.",8/7/2006
ProjectB - TIM - 2474,GCE SDN: No command support requirement 5359.6,3,"GCE SDN FSW Requirement 5359.6 in 464-FSW-SPEC-0054 states ""The GCE FSW shall execute a command to clear the over-current limit flag."" In the ICD 464-MECSM-ICD-0104, section 10.3.9 Enable/Disable Motor Driver and Clear Over-Current Limit Flag states that it is a ground command to enable or cut-off power to the motor driver and clear the OCL flag if it was set. There is no such command in the Command & Telemetry document that allows the FSW to execute a command to clear the over-current limit flag.",8/7/2006
ProjectB - TIM - 2473,GCE SDN: No command support requirement 5359.5,3,"GCE SDN FSW Requirement 5359.5 in 464-FSW-SPEC-0054 states ""The GCE FSW shall execute a command to modify the hemisphere flip bits in the GIC configuration register."" From the ICD 464-MECSM-ICD-0104, section ""5.2.1.2 Configuration Register"" - ""The Configuration register contains the set up needed by the Control FPGA to configure itself as either +Z or -Z GIC. See Table 5-12. The least significant bit, bit 0, configures the control of either the +Z or -Z gimbal. Bits [2:1] control the hemisphere flip bits that allow the firmware to adjust the hemisphere track of the output encoder to reflect the correct hemisphere in accordance with the gimbal chosen."" Also, Section 10.3.1 states the Write Configuration Register is the ground command to modify the configuration register. There is no such command in the Command & Telemetry document that allows the FSW to modify the hemisphere flip bits in the GIC configuration register.",8/7/2006
ProjectB - TIM - 2472,GCE SDN: No command support requirement 5359.4,3,"GCE SDN FSW Requirement 5359.4 in 464-FSW-SPEC-0054 states ""The GCE FSW shall execute a command to modify the GIC configuration register +/- Z control bit."" ICD 464-MECSM-ICD-0104 Section 10.3.1 states the Write Configuration Register is the ground command to modify the configuration register. There is no such command in the GCE C&T handbook.",8/7/2006
ProjectB - TIM - 2471,GCE SDN: No command supports requirement 5359.3,3,"GCE SDN FSW Requirement 5359.3 in 464-FSW-SPEC-0054 states ""The GCE FSW shall execute a command to init the motor driver’s phase sequence."" There is no command in the GCE Command & Telemetry document that allows the FSW to init the motor driver's phase sequence.",8/7/2006
ProjectB - TIM - 2470,GCE SDN: No command support the requirement 5359.1,3,"GCE SDN FSW Requirement 5359.1 in 464-FSW-SPEC-0054 states ""The GCE FSW shall execute a command to read the motor state status registers."" In ICD 464-MECSM-ICD-0104 section 10.3.8 Read Motor States states that there ""is a Ground command to verify the states of the motor drives for each winding of the motor."" However, there is no such command in the GCE C&T handbook.",8/7/2006
ProjectB - TIM - 2469,GCE SDN: No command found in the command & telemetry handbook support requirement 5357,3,Requirement 5357: Is there supposed to be a command in the Command and Telemetry Document (0011) to explicitly set the driver high power mode states? Could not find a command in the Command & Telemetry document for setting the driver high power mode states.,8/7/2006
ProjectB - TIM - 2468,GCE SDN: Telemetry rate in requirement conflict with the telemetry handbook,3,"Requirement 5121: In telemetry handbook (464-FSW-HDBK-0011 rev -), packet ""ProjectB GCEA SDN Analog Slow Telemetry Packet"" is sent at rate of once every 16 seconds. 1/16 = 0.0625 HZ which is NOT 0.125 HZ as indicated in the requirement. The requirement rate of 0.125 HZ is once every 8 seconds. Packets """"ProjectB GCE A SDN Medium Telemetry Packet"""" & """"ProjectB GCE A SDN Medium Telemetry Packet"""" are once every 8 seconds but these packets do not contain thermistor data.""",8/7/2006
ProjectB - TIM - 2467,S-Comm SDN FSW Requirement Analysis: Requirements 1300-1330 are not supported by ICD's hardware commands,3,The requirements 1300-1330 are not supported by ICD's (464-CDH-ICD-0073 rev A) hardware commands. These local commands from the requiremnt spec are inconsistent wtih the ICD's hardware commands.,7/27/2006
ProjectB - TIM - 2466,"S-Comm SDN FSW Requirement Analysis: No requirement supports the ""Output Pulse/Level Command Register"" command which is stated in ICD.",3,"In the ICD (464-CDH-ICD-0073 Revision A), it states there is a ""Pulse/Level Command Register"" command, but no requirement supports in the requirement spec (464-FSW-SPEC-0063). No requirement supports the Bit 26 on S-Comm card XX000220h (Pulse/Level Command Register - Output Pulse/Level Command to the S-band transponders and/or Ka Transmitters). Bit 26: Master Pulse Trigger 0 = Master Pulse Inactive 1 = Start Master Pulse",7/27/2006
ProjectB - TIM - 2465,ACE FSW requirement 4030 can not be traced to an interface document,3,"ACE FSW requirement 4032 can not be traced to the ACE Interface Control Document (ICD) although there is partial evidence in the Command and Telemetry Document. Requirement 4030 is: ""The ACE FSW shall verify PCI card presence."" There are four cPCI cards: LPSC, SDN, RWA, EVD. A search of the Attitude Control Electronics (ACE) Hardware/Software ICD (464-ACS-ICD-0062 Revision A, March 15, 2006) could find no evidence in the interface design for detection of any of the four cPCI cards. Partial evidence for detection of two of the four cPCI cards can be found in the Attitude Control Electronics (ACE) Flight Software (FSW) Command and Telemetry Document (464-FSW-HDBK-0012). Specifically this document contains functionality for detection of the EVD & RWI cards, but no evidence can be found for detection of the LPSC and SDN cPCI cards.",7/13/2006
ProjectB - TIM - 2464,ACE FSW requirement 4033 can not be traced to an interface document,3,"ACE FSW requirement 4033 can not be traced to an interface document, neither the ACE Interface Control Document (ICD) or the Command & Telemetry document. Requirement 4033 is: ""The ACE FSW shall ensure that PCI access, by ACE FSW, is not allowed for missing cards."" A search of the Attitude Control Electronics (ACE) Hardware/Software ICD (464-ACS-ICD-0062 Revision A, March 15, 2006) and the Attitude Control Electronics (ACE) Flight Software (FSW) Command and Telemetry Document (464-FSW-HDBK-0012) could find no evidence of where the ACE interface design has taken into account that the ACE FSW shall not access missing PCI cards as described in the requirement.",7/13/2006
ProjectB - TIM - 2463,ACE FSW requirement 4032 can not be traced to an interface document,3,"ACE FSW requirement 4032 can not be traced to an interface document, neither the ACE Interface Control Document (ICD) or the Command & Telemetry Document. Requirement 4032 is: ""The ACE FSW shall provide an event message if any PCI card is not found upon initial attempt to locate the card."" A search of the Attitude Control Electronics (ACE) Hardware/Software ICD (464-ACS-ICD-0062 Revision A, March 15, 2006) and the Attitude Control Electronics (ACE) Flight Software (FSW) Command and Telemetry Document (464-FSW-HDBK-0012) could find no evidence of where these interface documents have incorporated an event message as described in the requirement.",7/12/2006
ProjectB - TIM - 2462,PSE Test Scenario does not fully verify requirement 2201.15,3,"Requirement 2201.15 states ""if for three consecutive PSE Battery Monitor cycles, …"" but there is no verification of this in the scenario PSE_BatteryMonitorTest. Also, this requirement should have the phrase ""if enabled"" at the beginning.",7/12/2006
ProjectB - TIM - 2461,PSE Test Scenario does not fully verify requirement 2201.14,3,"Requirement 2201.14 states ""if for three consecutive PSE Battery Monitor cycles, …"" but there is no verification of this in the scenario PSE_BatteryMonitorTest. It is also not verified that if it is disabled, the battery heater is not switched on.",7/12/2006
ProjectB - TIM - 2460,PSE Test Scenario does not fully verify requirement 2201.13,3,"Requirement 2201.13 states ""if for three consecutive PSE Battery Monitor cycles, …"" but there is no verification of this in the scenario PSE_BatteryMonitorTest. It is also not verified that if it is disabled, the battery heater is not switched off.",7/12/2006
ProjectB - TIM - 2459,PSE Test Scenario step does not list requirement 2101.1 as tested,4,PSE_PWMControlTest step 1.0 tests requirement 2101.1 but does not list it as being verified by the step. This requirement should be added to this step.,7/11/2006
ProjectB - TIM - 2458,PSE Test Scenario is still verifying deleted requirement 1232,4,"Requirement 1232 was deleted out of the requirements specification, so step 22 of Pse_CommandTest is obsolete and should be deleted. All the references to 1232 should also be deleted.",7/11/2006
ProjectB - TIM - 2457,PSE Test Scenario does not verify requirement 2220.1,3,"Requirement 2220.1 is not tested, but is listed in the ""requirements tested"" section of the scenario Pse_SolarArrayCommand Test.",7/11/2006
ProjectB - TIM - 2456,PSE Test Scenario does not verify requirement 2220,3,"Requirement 2220 is not tested, but is listed in the ""requirements tested"" section of the scenario Pse_SolarArrayCommand Test.",7/11/2006
ProjectB - TIM - 2455,PSE Test Scenario does not verify requirement 2219,3,"Requirement 2219 is not tested, but is listed in the ""requirements tested"" section of the scenario Pse_SolarArrayCommand Test.",7/11/2006
ProjectB - TIM - 2454,PSE Test Scenario does not verify requirement 1239,3,"Requirement 1239 is not tested, but is listed in the ""requirements tested"" section of the scenario Pse_SolarArrayCommand Test.",7/11/2006
ProjectB - TIM - 2453,PSE Test Scenario Pse_SolarArrayCommand step 3 has several errors,3,"Test scenario Pse_SolarArrayCommand Test step 3 lists requirement 1213 as being tested. This requirement is not tested by these steps. Also, the step states that it will ""verify the command that can change the SAM segment command masks"" but all the bullets underneath the step are for maximum current of the control loop. This step needs to be corrected.",7/11/2006
ProjectB - TIM - 2452,PSE Test Scenario does not fully verify requirement 1210,3,"Test scenario Pse_SolarArrayCommand Test step 2 tests requirement 1210. The cases in this step may not fully test this requirement. Also, there is not a verification that the command executed properly, only that the valid command counter was incremented.",7/11/2006
ProjectB - TIM - 2451,PSE Test Scenario does not verify requirement 1207 for one case,3,Test scenario Pse_SolarArrayCommand Test step 1 tests all but 1 case for requirement 1207. Sending the command to deploy before enabling the solar array is not tested.,7/11/2006
ProjectB - TIM - 2450,"PSE Test Scenario only verifies on combination of signals for requirements 2301, 2301.1, and 2302",3,"Test scenario PSE_DeploymentTest steps 1 and 2 verify requirement 2301 for only 1 combination of ""2 out of 3 separation signals"". The other 2 combinations should also be verified. Test scenario PSE_DeploymentTest steps 1 and 2 verify requirement 2301.1 for only 1 combination of ""2 out of 3 separation signals"". The other 2 combinations should also be verified. Test scenario PSE_DeploymentTest step 1 verifies requirement 2302 for only 1 combination of ""2 out of 3 separation signals"". The other 2 combinations should also be verified.",7/11/2006
ProjectB - TIM - 2449,PSE Test Scenario has incorrect verification statements for requirement 1238,4,"Test scenario Pse_CommandTest step 14 verification of requirement 1238 appears to have a copy/paste error. The step states ""verify in telemetry that the redundant [primary] battery current is being used"" but should verify the High Gain Antenna deployment.",7/11/2006
ProjectB - TIM - 2448,PSE Test Scenario does not fully verify requirement 1213.4,3,"Requirement 1213.4 should verify the invalid commands counter is reset; however, the invalid command counter is 0 before it is reset in step 2 of test scenario Pse_CommandTest. The counter should be a non-zero value before the reset so that the reset can be verified.",7/11/2006
ProjectB - TIM - 2447,PSE Test Scenario traces requirement 1210 to incorrect test steps,4,"Test scenario Pse_CommandTest steps 24 and 25 trace to requirement 1210, but these steps do not test this requirement.",7/11/2006
ProjectB - TIM - 2446,PSE Test Scenario does not verify requirement 1209,3,"Requirement 1209 is not tested, but is listed in the ""requirements tested"" section of the scenario Pse_CommandTest.",7/11/2006
ProjectB - TIM - 2445,PSE Test Scenario does not verify requirement 2101.7,3,"Requirement 2101.7 is not tested, but is listed in the ""requirements tested"" section of the scenario PSE_PWMControlTest.",7/11/2006
ProjectB - TIM - 2444,PSE Test Scenario does not explicitly verify requirement 2101.6,3,Test scenario PSE_PWMControlTest step 4.1 does not have a verify statement for requirement 2101.6.,7/11/2006
ProjectB - TIM - 2443,PSE Test Scenario does not verify requirement 2101.5,3,"Requirement 2101.5 is not tested, but is listed in the ""requirements tested"" section of the scenario PSE_PWMControlTest.",7/11/2006
ProjectB - TIM - 2442,PSE Test Scenario does not verify requirement 2101.4 in one of the steps it is traced to,4,Requirement 2101.4 is not verified in step 4 of the scenario PSE_PWMControlTest. The requirement should either be deleted from step 4 or a step needs to be added to verify the requirement.,7/11/2006
ProjectB - TIM - 2441,PSE Test Scenario does not verify requirement 2101.2,3,"Requirement 2101.2 is not tested, but is listed in the ""requirements tested"" section of the scenario PSE_PWMControlTest.",7/11/2006
ProjectB - TIM - 2440,PSE Test Scenario does not verify requirement 2101,3,"Requirement 2101 is not tested, but is listed in the ""requirements tested"" section of the scenario PSE_PWMControlTest.",7/11/2006
ProjectB - TIM - 2439,PSE Test Scenario does not fully verify requirement 1202 and traces this requirement to incorrect steps,3,"Test scenario PSE_NightDayChargeTest lists requirement 1202 as being tested in steps 1.1 and 1.2, but this requirement is not tested by these steps. This requirement is also not listed in the scenario header as being tested in this scenario. Test scenario PSE_PWMControlTest steps 2.1 and 2.3 do not verify the valid command counter is incremented. Test scenario Pse_CommandTest steps 2 and 25 do not verify the valid command counter is incremented.",7/11/2006
ProjectB - TIM - 2438,PSE Test Scenario does not fully verify requirement 2220.1,3,"Test scenario PSE_SDNFailoverTest step 2.4 verifies that PSE-B relinquishes control upon receipt of command. Step 4.2 verifies that PSE-B does not relinquish control if there is a failure for PSE-B. This does not test that a ground command is the ONLY way for PSE-B to relinquish control. Req 2220.1: Once the redundant PSE-SDN FSW has asserted control of the Solar Array Modules, the redundant PSE-SDN FSW shall relinquish control only upon receipt of the Ground command specified in 1239.",7/11/2006
ProjectB - TIM - 2437,PSE Test Scenario does not fully verify requirement 2201.16,3,"The test scenario PSE_BatteryMonitorTest does not test that for requirement 2201.16 BOTH the battery temperature must exceed the table limit AND the battery current must be less than the table limit. Test steps should be added to show that neither one by themselves causes the load shed. Just to test that both conditions are met, does not mean that both MUST be met. Also, there is no verification of the 3 consecutive cycles.",7/11/2006
ProjectB - TIM - 2436,PSE Test Scenario does not fully test req 2201.12,3,"The test scenario PSE_BatteryMonitorTest does not test that for requirement 2201.12 BOTH the battery temperature must exceed the table limit AND the battery current must be greater than the table limit. Test steps should be added to show that neither one by themselves causes the VT slope and intercept constants to change. Just to test that both conditions are met, does not mean that both MUST be met. Also, there is no verification of the 3 consecutive cycles. Requirement 2201.12 states: When enabled to do so (see 1250), if for three consecutive PSE Battery Monitor Cycles, the Internal Battery (IB) temperature (2201.10), as measured by the (prime or redundant) IB thermistor (2201.10) exceeds its table specified limit AND the battery current (2201.11) is greater than its table specified limit (battery is charging), the PSE FSW shall set the VT slope and intercept constants to table-specified FDC default values.",7/10/2006
ProjectB - TIM - 2435,PSE Test Scenario only partially tests req 1224,3,"The enable portion of requirement 1224 is verified, but the disable portion is not. A new step should be added to verifiy the disabling of the Battery Heater Cycling Control. Requirement 1224 states: The PSE FSW shall provide a command to enable or disable Battery Heater Cycling Control (see 2201.13 and 2201.14).",7/10/2006
ProjectB - TIM - 2434,FSW Test Plan does not contain the RVTMs to ensure all software and system requirements are verified,4,"The Requirements-Verification-to-Test Traceability Matrix (RVTM) is the tracking mechanism to ensure all requirements are verified. The initial RVTM documents (software and system) are to be delivered with the FSW Test Plan according to section 5.1.1 of the test plan. Also, Section 5.4.2.1 of the test plan states that the System Validation Test RVTM can be seen in Appendix C; however, Appendix C in this version of the FSW Test Plan is “Terminology and Definitions” and the RVTM is not in any part of the document. IV&V does not have all the RVTM documents and, therefore, cannot completely evaluate the complete coverage of software or system requirements by the FSW test effort. Update 12/13/2006 - The System RVTM discussed in the Test Plan does not exist. IV&V has 2 concerns with this. 1. The processes listed in the test plan are not being followed. 2. Acceptance testing should show the verification of requirements so the person(s) accepting the software have some basis to evaluate the software and testing. Since the ""FSW Acceptance Test is the formal execution of the full set of FSW System Validation Tests against the final delivery of the FSW system"", the acceptance tests do not trace to requirements. Update 12/14/2006 Acceptance testing includes both System Validation tests and Build Verification tests, so concern #2 is no longer an issue. The only concern left is that the processes listed in the test plan are not being followed. IV&V does not feel it necessary to trace requirements to System Validation tests, so the lack of a System RVTM is not the issue. The test plan just needs to be updated to accurately reflect the test process.",7/10/2006
ProjectB - TIM - 2433,FSW Test Plan does not state if test environment or simulators are qualified,3,The FSW Test Plan does not state if the test environment or simulators are qualified. It does have the following: “Each FSW test bed component described in the preceding sections will be delivered to the FSW Lab and installed by the organization responsible for providing that component. Once each component has been installed the providing organization will run a diagnostic test procedure to validate that the component functions as specified. Upon successful completion of this test procedure the component will be considered delivered. If any modifications are subsequently made to a component the diagnostic test procedure will be re-run.” There is not sufficient information given in the FSW Test Plan to know if the simulators have been verified to respond exactly as the actual systems respond.,7/10/2006
ProjectB - TIM - 2432,FSW Test Plan section 7 does not contain complete information about what the Risk Management,4,"The content of section 7 of the test plan is not as complete as it should be according to the information in the Code 582 FSW Test Plan template for this section. Section 7 states that the “FSW test risks are managed using the FSB web based risk management tool and therefore are not addressed in this document.” This section of the FSW test plan is not intended to be the tool to manage the test risks nor just a reference to the risk management tool, but rather it “is intended to be the specific risks, risk avoidance and mitigation strategies to be used by the FSW test team during the FSW test program.”(Code 582 FSW Test Plan template) Even though the risks are managed in a risk management tool, a brief explanation of the possible risks and the plans to mitigate these risks during the test planning and execution phases should be included along with the references to the tool where the more complete explanation and mitigation plan are documented.",7/10/2006
ProjectB - TIM - 2431,FSW Test Plan section 2.4.1 does not contain complete information about what the FSW Test Program will verify,3,"The content of section 2.4.1 (What the FSW Test Program Will Verify) of the test plan is not as complete as it should be according to the information in the Code 582 FSW Test Plan template for this section. Section 2.4.1 should contain information about what the FSW Test Program will verify, but most of the information in the section is what the program will not verify. This section states that the following will not be verified by this test effort: instrument FSW, SDN common software on the Inst2 instrument SDN, and final FDC configuration. Only the SDN common software (on the ACE, GCE, PSE, and SCOMM SDN processors) and FSW tasks used in FDC as they satisfy mission requirements are listed in this section as being verified during this test effort. There should be more information in this section about what will be tested and move the other information to section 2.4.2, “What the FSW Test Program Will Not Verify.”",7/10/2006
ProjectB - TIM - 2430,The wrong command counter is used in tscmd.c; the error counter should be used.,3,"In the file tscmd.c, the wrong command counter is used during command error processing at line 924. The command error counter should be used. 0919 /* verify that the command length is what we expect before we process the command */ 0920 if (CCSDS_RD_FC(cmd_packet->sec_hdr) < TS_MAX_FUNCTION_CODES && 0921 CCSDS_RD_LEN(cmd_packet->pri_header) != TS_CmdLengthTable[CCSDS_RD_FC(cmd_packet->sec_hdr)]) 0922 { 0923 eventf(TS_TASK_ID, ""_TS151 InValid Command Length FC:%d, EXP:%d, ACT:%d"", CCSDS_RD_FC(cmd_packet->sec_hdr), TS_CmdLengthTable[CCSDS_RD_FC(cmd_packet->sec_hdr)], CCSDS_RD_LEN(cmd_packet->pri_header)); 0924 ts_hk_status.fast.ts_cmd_count ++; 0925 } 0926 else 0927 { 0928 switch (CCSDS_RD_FC(cmd_packet->sec_hdr)) { ... 1034 } /* end of switch on command id */ 1035 }",6/30/2006
ProjectB - TIM - 2429,Confusing comment on line 806 of the TS review.,5,"The term “diagnostic” in the comment on line 806 does not match with the code that is described by the comment. 802 for (index = 0 ; index < MAX_THRESHOLDS ; index ++) { 803 804 /* for each of the monitor_id's thresholds, if the 805 threshold_active_flag in the limit table is set, then set 806 the corresponding bit in the diagnostic 807 threshold_active_flags */ 808 if (curr_monitor -> threshold_data [index] . thresh_ctrl_byte . threshold_active) 809 VSET (ts_threshold_active_flags [index], monitor_id, WORDS_PER_MONITOR); 810 811 else 812 VCLEAR (ts_threshold_active_flags [index], monitor_id, WORDS_PER_MONITOR); 813 814 } /* end of loop through each threshold */",6/30/2006
ProjectB - TIM - 2428,The declared function arguments are unmatched to the function implementation for TSh_pkt_prcsr.,3,"The declared function arguments are unmatched to the function implementation for TSh_pkt_prcsr. In the file tstask.c the function is declared, on line 472, as external with a single argument and is then called on line 564 conforming to that declaration. In the file tshk.c, the function is defined with no arguments. Since this is C, function overloading is not available. 472 extern void TSh_pkt_prcsr (ts_cmd_packet_type *request_packet); … 564 TSh_pkt_prcsr ( (ts_cmd_packet_type *)packet ); … 641 void TSh_pkt_prcsr ()",6/30/2006
ProjectB - TIM - 2427,"Magic Numbers 0 & 50 on lines 1737, 1738, 2077 & 2078 of the TS review",4,"The values 0 and 50 is used when performing value bounds checking on lines 1737, 1738, 2077 and 2078 instead of using a descriptive constant. There is no comment indicating from where these values was derived. 1737 if ( (ts_curr_monitor->derived_func_active > 0) && 1738 (ts_curr_monitor->derived_func_offset >= 50)) /* polynomial functions */ … 2077 if ( (ts_curr_monitor->derived_func_active > 0) && 2078 (ts_curr_monitor->derived_func_offset >= 50)) /* polynomial functions */",6/30/2006
ProjectB - TIM - 2426,Magic Number 19 on line 319 of the TS review,4,The value 19 is used when defining an array declared on line 319 instead of using a descriptive constant. There is no comment indicating from where the value was derived. line 319: char name[19];/* 19 character array. But always leave #19 NULL. */,6/30/2006
ProjectB - TIM - 2425,Magic Number 32 on line 43 of the TS review,4,The value 32 is used when defining the array in the struct declared on line 43 instead of using a descriptive constant. There is no comment indicating from where the value was derived. line 43: typedef struct { u_word parts [32]; } TS_u_triacontadiword;,6/30/2006
ProjectB - TIM - 2424,"On Cold start, the scrub rate is not set in the function 'MS_Initialize' on line 179.",5,From section 3.8 in msmain.c: Requirement 1001 states that the scrub rate will be table specified on a Cold restart. The function MS_Initialize does set the scrub rate during the initialization process.,6/27/2006
ProjectB - TIM - 2423,The default recorder scrub rate found in the code is not 35 minutes as found in the CDR materials.,3,"From section 3.10 in msrecorder.c: The code does not match the description found in the design document. According to the design CDR, the default recorder scrub rate is 35 minutes. Base on the code, this is incorrect; the default recorder scrub rate is not 35 minutes. From msrecorder.h: #define MS_REC_SCRUB_RATE_DEFAULT 0x1000 From msrecorder.c: boolean MS_RecorderSetScrubRate(uint32 ScrubRate) { MS_RecorderMemoryScrubRate = ScrubRate; MS_RecorderScrubDwordPerPeriod = MS_RecorderMemoryScrubRate / sizeof(uint32); return (TRUE); } /* End of MS_RecorderSetScrubRate */ void MS_RecorderInitScrubVariables (uint32 ScrubRate ) { MS_RecorderSetScrubRate(ScrubRate); ... ... } /* End of MS_RecorderInitScrubVariables */ void MS_RecorderStartup ( ) { /* Initialize global variables to a known state */ ... ... ... MS_RecorderMemoryScrubRate = MS_REC_SCRUB_RATE_DEFAULT; ... ... ... /* Enable Memory Scrub on the Recorder */ MS_RecorderInitScrubVariables ( MS_RecorderMemoryScrubRate ); ... ... ... } /* End of MS_RecorderStartup */",6/27/2006
ProjectB - TIM - 2422,Comment errors in mspkt.h,5,"From section 3.1 in mspkt.h: line 139, ""Parameters: Delay"" should be "" Parameters: ScrubDelay""",6/27/2006
ProjectB - TIM - 2421,Comment errors in osapi.c,5,"From section 2.3 containing osapi.c: line 1527, ""parameters: None"" should be “parameters: level : ” with a description of the parameter. line 1563, "" Return Values: OS_SUCCESS - always "" should be "" Return Values: the current interrupt level""",6/27/2006
ProjectB - TIM - 2420,"Incorrect comment on line 1393; the word ""disable"" is used instead of ""enables.""",5,"From section 2.3 containing osapi.c: The comment on line 1393 should read ""Purpose: The call disables the specified interupt."" Where the word ""disable"" is used instead of ""enables."" Also see lines 1403 and 1404 where the term ""connected "" is used.",6/27/2006
ProjectB - TIM - 2419,Error message is created on failure detected at line 396,4,"From section 2.3 osapi.c. When an error is detected at line 386, an error message is created before the failure is returned, but when an error is detected at line 396, no message is created. (Also see lines 449, 459, 509, 513, 549 etc)",6/27/2006
ProjectB - TIM - 2418,The functions “OS_IntEnable” and “OS_IntDisable” are both declared twice.,4,The functions “OS_IntEnable” and “OS_IntDisable” are both declared twice. From section 2.1 containing osapi.h: osapi.h: line 344-345 & 355-356 are double defined. 344: uint32 OS_IntEnable (uint32 InterruptNumber); 345: uint32 OS_IntDisable (uint32 InterruptNumber); … 355: uint32 OS_IntEnable ( uint32 InterruptNumber ) ; 356: uint32 OS_IntDisable ( uint32 InterruptNumber ) ;,6/27/2006
ProjectB - TIM - 2417,Possible buffer overflow,4,The line 1139 states: char EventText[SB_EVENT_TEXT_SIZE * 2]; /* double the size of the event text buffer to protect against overflow */ The comment indicates uncertainty in the size requirements of the buffer. The maximum buffer size should be known and the buffer should be protected from overflow.,6/12/2006
ProjectB - TIM - 2416,The comment for function GC_ResetCounters(void) does not match the implementation.,4,The comments for the function GC_ResetCounters(void) states that the function will reset all counters yet the only statement executed sets the variable GC_TimeCorrelationPktCount to zero. The comment does not match the implementation.,6/12/2006
ProjectB - TIM - 2415,Magic numbers used in a calculation,4,"Line 687 is ""DesiredBufferLevel = OS_MAX(OS_MIN(ceil(((double)(Rate)/(double)(1104*8))*2), 6), 1);"" . The values 1104, 8 2 and 6 are unexplained even within the comments above the line.",6/12/2006
ProjectB - TIM - 2414,ACE Propulsion Test Scenario verification of 4442.9.2a needs more details,4,"The verification of 4442.9.2a states ""Verify the event message is received."" Can there be a little more detail about what type of event message is received? Otherwise, it is difficult to know what exact message to look for and when it passes/fails. Requirement 4442.9.2a states: If any of the isolation valves just commanded to close failed to close, the ACE FSW shall a. make available for downlink knowledge of the anomaly",5/30/2006
ProjectB - TIM - 2413,ACE Propulsion Test Scenario step 13.2 has incorrect requirement listed,4,"Step 13.2 lists requirement 4442.9 in the ""Requirements tested"" section. However, the step does not verify this requirement and the step is not traced to the requirement.",5/30/2006
ProjectB - TIM - 2412,ACE Propulsion Test Scenario verification of 4442.7 does not fully verify the fire command executed,3,"The verification of 4442.7 is ""Verify the EVD pyro valve armed status (pyro card) reflects disarmed."" Is there a better indication that the fire command succeeded other than disarming the pyro valve? That is the same verify as the disarm command, so how is it verified the fire command was successful and did not just disarm the pyro valve?",5/30/2006
ProjectB - TIM - 2411,ACE Propulsion Test Scenario requirement 4442 needs step 12.0 added to its trace,4,"Step 12.0 verifies requirement 4442 and it is listed in the ""Requirements section"" of the step. This step needs to be added to the trace at the beginning of the scenario.",5/30/2006
ProjectB - TIM - 2410,ACE Propulsion Test Scenario requirement 4252 may not be fully tested,3,The requirement 4252.b states the ACE FSW shall provide isolation and thruster valve status. Steps 10.1 and 11.1 only verify the isolation valve status. Is the thruster valve status verified in another test scenario?,5/30/2006
ProjectB - TIM - 2409,ACE Propulsion Test Scenario step 13.3 does not have any details,3,"There are no details listed under Step 13.3 ""Rapid succession"". The requirements 4442, 4442.9 and 4442.9.3 are traced to this step, but the step is blank. The requirements appear to be tested in other steps and the trace is just incorrect.",5/30/2006
ProjectB - TIM - 2408,ACE Propulsion Test Scenario does not completely verify requirements 4511 and 4511.2a,3,"The test scenario does not verify an invalid command is not executed. It verifies that the rejection counter is incremented and an event message is generated, but it does not verify there is no execution of the command. Requirement 4511 states: The ACE FSW shall validate each ACE FSW command prior to execution. Requirement 4511.2a states: If the command is invalid, the ACE FSW shall a. not execute the command",5/30/2006
ProjectB - TIM - 2407,DeltaH/DeltaV Test Scenario uses code inspection method for may steps instead of more appropriate verification methods,3,"17 of 77 requirements are being verified by code inspection. The test plan states that inspection is ""appropriate only in rare situations where test execution is not a viable option"". Why are so many requirements being verified by inspection? It should be feasible to actually test most of the requirements either by demonstration or analysis. For instance, scenario sbc_bac_deltah_processing steps 1.4.2 (line 465) and 2.4.2 (line 552) and sbc_bac_deltav_processing steps 1.4.2 (line 975) and 2.4.2 (line 1011) verify null commands are sent to the thrusters by code inspection. Why is this not verified by demonstration?",5/30/2006
ProjectB - TIM - 2406,DeltaH/DeltaV Test Scenario does not completely verify requirements 2111 and 2111.1,3,"In scenario sbc_bac_deltahdeltav_tables steps 2.1, 2.2 and 2.3 (lines 1500-1513) are verifying requirements 2111 and 2111.1 that on a cold restart, variables and data-specific parameters shall be reset to their preset values stored in EEPROM. These variables and parameters are already equal to their default values when the cold restart occurs. In order to verify the cold restart resets these values, the variable and parameter values should be changed before the cold restart occurs.",5/30/2006
ProjectB - TIM - 2405,DeltaH/DeltaV Test Scenario contains a duplicate step,4,"In scenario sbc_bac_deltav_limit step 2.2 (line 1392-1396), a command is sent to enter DeltaV. Step 2.3 changes the time parameter and then sends the command to enter DeltaV. Both commands are not necessary.",5/30/2006
ProjectB - TIM - 2404,DeltaH/DeltaV Test Scenario does not list requirement 2560.3a as being tested,4,"In scenario sbc_bac_deltav_processing, step 2.2 (line 999) is verifying requirement 2560.3a instead of 2560.3b which step 1.2 verifies. A statement and the requirement should be added to this step such as ""…except verifying Requirement 2560.3a instead of 2560.3b.""",5/30/2006
ProjectB - TIM - 2403,DeltaH/DeltaV Test Scenario does not completely test requirement 2552.2.3,3,"Requirement 2552.2.3 is not fully verified by scenario sbc_bac_deltah_limit step 3.2.2 (line 736). The requirement states that the ""ACS FSW shall rescale the torque on all wheels by the ratio of the maximum permitted torque to the maximum computed torque."" The test step states ""verify...the others have magnitude smaller than Tor_RWA_Cmd."" There is no verification that the rescale by the specific ratio occurs.",5/30/2006
ProjectB - TIM - 2402,DeltaH/DeltaV Test Scenario has incorrect test case reference for several steps,5,"In scenario sbc_bac_deltah_processing, several test steps reference Case 1.0b which does not exist. It should be Case 0.0b. The steps are 3.2 (line 570), 3.3 (571), 3.4 (572), 4.1-4.4 (582), 5.1-5.4 (590), 6.1-6.4 (598), 7.1-7.4 (606), 8.1-8.4 (614).",5/30/2006
ProjectB - TIM - 2401,DeltaH/DeltaV Test Scenario does not completely verify requirement 2553.5b,3,"Scenarios sbc_bac_deltah_processing steps 1.4.3 (line 467) and 2.4.3 (line 554) and sbc_bac_deltav_processing steps 1.4.3 (line 977) and 2.4.3 (line 1013) verify a command is sent to disable the thrusters. The requirement 2553.5b states that the ""FSW will disable all thrusters"". It should be verified that the thrusters are actually disabled (command actually disabled the thrusters) rather than just a command was sent.",5/30/2006
ProjectB - TIM - 2400,ProjectB SC ACE IRU (Update): A Comment uses the wrong function name,4,"On line 368 in sd_iru.h, the preamble to the method SD_InitProcessIRUData states the wrong function name.",5/19/2006
ProjectB - TIM - 2399,ProjectB SC ACE: Incorrect comment and editorial mistake,5,"Incorrect comment in line 213: 212 /* 213 * Set the OtherAceTimedOut flag if OtherAcePassedCounter >= Parameter DB Value of OtherAcePassedTimeout 214 */ 215 if( CA_ArbitrationTbl.OtherAceFailedCounter >= CA_Arbitration_ParamTbl.OtherAceFailedTimeout ) 216 { 217 CA_ArbitrationTbl.OtherAceTimedOut = TRUE; 218 } The comment should read ""Set the OtherAceTimedOut flag if OtherAcePassedCounter >= Parameter DB Value of OtherAceFailedTimeout"" Line 604 and 615: The prolog for function ""CA_SequenceRwaLpsc_TakeRelayControl"" is using the wrong function name.""",5/18/2006
ProjectB - TIM - 2398,ProjectB SC ACE: Variables used before initialized.,3,"The following variables are used before initialized: Line 151: ""ImOKInPrevious"" Line 186: ""CA_ArbitrationTbl.FPGAReadbackPassed"" Line 195: ""CA_Arbitration_ParamTbl.OtherAcePassedTimeout"" Line 215: ""CA_Arbitration_ParamTbl.OtherAceFailedTimeout"" Line 225: ""LpscDelayCountdown"" Line 261: ""CA_ArbitrationTbl.SendImOkWithoutRwCard"" The variable ""LpscDelayCountdown"" needs to set to 0 in the initialization function, CA_AceArbitrationInit, otherwise the condition on line 225 will be never evaluate to true.",5/18/2006
ProjectB - TIM - 2397,ProjectB SC ACE: Flow chart issues; Section 4.3,5,"Flow chart issues. 3.4 Arbitration Flow (p4of 4): The flow chart conflicts with the code at line 263. In the middle column, the second group of ""YES"" and ""NO"" arrows should be swapped. Base on the implementation, when ""WithholdImOk"" is FALSE, the ""NO"" arrow should point to ""Exit Arbitration Function"". Flow chart issues. 3.5 RW LPSC Sequence: ""Enter Sequencing"" in the last bubble should be ""Exit Sequencing"" Section 4.3, Missing Event listed: In Section 4.3, Events, the first 2 events are duplicated and ""ACA 011"" event is missing.",5/18/2006
ProjectB - TIM - 2396,ACS DSS Test Scenario does not verify req 2234,3,"Step 5 samples the telemetry of the sun direction vector and the implied body rate, but there is no specific verification of this telemetry. A step needs to be added to explicitly verify this requirement.",5/2/2006
ProjectB - TIM - 2395,ACS DSS Test Scenario does not verify req 2232 and 2233,3,"Step 5 samples the telemetry of the sun direction vector (2232) and the implied body rate (2233), but the computation of these values are not verified. Steps need to be added to verify the computation of the vector and the rate.",5/2/2006
ProjectB - TIM - 2394,Inst2 FSW Test Plan lacks specific details about the test environment,3,"The Inst2 Flight Software Test Plan does not contain sufficient information regarding the Inst2 test environment. Among some of the details not covered by the Inst2 Flight Software Test Plan are if the lab will be under any type of configuration management, if the environment has been qualified, or who is responsible for the lab.",4/27/2006
ProjectB - TIM - 2393,Inst2 FSW Test Plan does not contain Acceptance Test details,3,"System Qualification Testing/Final Acceptance testing is not discussed in the Inst2 Flight Software Test Plan. According to Inst2 Software Test Plan (Inst2-S-80611) section 4.3.6, the Final Acceptance test will include all of the CSCIs, of which the Flight Software is just one of the CSCIs. There does not appear to be any type of acceptance testing of just the Flight Software before it is integrated with the ground or data processing software according to the information contained in the test plans. However, the latest schedule that was delivered to us, dated 3/15/2006, lists a Flight Software Acceptance Test between Pre-Release G and Flight Software Release #1. So there is a ""planned activity"" labeled ""Flight Software Acceptance Test"" that is not documented in any test plan. This schedule also does not list any type of Software Acceptance Test after the integration of the Flight, Ground and Data Processing software. These inconsistencies between the Flight Software Test Plan, the Software Test Plan and the Inst2 software schedule need to be resolved and the documents need to be corrected to reflect the actual plan for the Software Acceptance Test.",4/27/2006
ProjectB - TIM - 2392,Inst2 FSW Test Plan implies that some requirements may not be fully tested,3,"Section 3.2.1.1 of the Flight Software Test Plan states “when it is impractical to cover all code, the Software Test Report must include the percentage of code coverage, the nature of the code not covered, and the reason for omitting the code.” This implies that the requirements corresponding to certain portions of the code (i.e., ""code not covered"") will not be verified at all. The Software Development Plan section 5.2.6.2 states that “for software where complete code coverage is not possible, a complete and careful code walk-through is performed.” If a code walkthrough is planned to verify these requirements, this information should be added to the Flight Software Test Plan.",4/27/2006
ProjectB - TIM - 2391,Inst2 FSW Test Plan does not document any test methods,3,"The test methods that LASP plans to use are not discussed in the Inst2 Flight Software Test Plan. Four verification methods are listed in the RTVM, but there are no descriptions for any of the methods. These methods are test, inspection, demonstration, and analysis. Industry accepted test methods are inspection, demonstration and analysis. Since there are no descriptions, the difference between test and demonstration is not known. These methods and their descriptions should be added to the flight software test plan.",4/27/2006
ProjectB - TIM - 2390,Inst2 FSW Test Plan does not ensure all requirements are tested,3,"The Inst2 Flight Software Test Plan does not have any specific information regarding the coverage of system requirements. The Related Documents section lists the Inst2 Flight Software Requirement Document (Inst2-S-11141), the Inst2 Flight Software RTVM (Inst2-S-11142), and the Inst2 Flight Software Design Document (Inst2-S-81141), but the plan does not reference the information in these documents. Section 7 contains 10 test case summaries, each with a listing of objectives, but no specific requirements or trace to the requirements that will be tested for each test case. The flight software test plan needs to contain specific information about how the Inst2 test team plans on verifying every requirement. Specifically referencing a completed RTVM would be adequate.",4/27/2006
ProjectB - TIM - 2389,The file msprocessor.c defines three functions with no consequential code in their bodies.,4,File : msprocessor.c Line : 327 Path : cdh-2.0.0/fsw/cpu/main/cdh/ms/msprocessor.c The function MS_ProcessorClearEDACErrors does not execute any code of consequence. It appears to be unfinished. The same is true for the rest of the file defining functions MS_ProcessorCreateSBE and MS_ProcessorCreateMBE which simply return true. 323 void MS_ProcessorClearEDACErrors ( ) 324 { 325 uint32 i; 326 327 i = 1; 328 329 } /* End of MS_ProcessorClearEDACErrors */ : 340 boolean MS_ProcessorCreateSBE(const void *PktPtr) 341 { 342 343 (void)PktPtr; 344 return (TRUE); 345 346 } /* End of MS_ProcessorCreateSBE */ : 360 boolean MS_ProcessorCreateMBE(const void *PktPtr) 361 { 362 363 (void)PktPtr; 364 return (TRUE); 365 366 } /* End of MS_ProcessorCreateMBE */,4/10/2006
ProjectB - TIM - 2388,Unused nontrivial assignments,4,There are 56 occurrences within the code base where a variable is assigned a nontrivial value that is then ignored in the remainder of the method execution. These are generally return statuses of called functions which are ignored and are neither acted on nor passed up the call chain. See the attached spreadsheet for a list of the code occurences.,4/10/2006
ProjectB - TIM - 2387,"The object, _hifitbl_bss_start declared on line 110 of file ac_attctl.c, is unused",5,"File : ac_attctl.c Line : 110 Path : cdh-2.0.0/fsw/cpu/main/acs/ac/old/ac_attctl.c This object, _hifitbl_bss_start, is unused. 107 /* 108 ** IMPORTED GLOBALS 109 */ 110 extern unsigned int _hifitbl_bss_start;",4/10/2006
ProjectB - TIM - 2386,Possible use of an uninitialized value on ine 331 in file ac_attctlob.c,3,"File : ac_attctlob.c Line : 331 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/acs/ac/old/ac_attctlob.c The variable Error is declared but left un-initialized on line 302. All lines that set that value, 311, 320, and 329 have been commented out. Therefore, when the value is used in the conditional expression on line 331, it remains un-initialized. NOTE: Line 310 makes use of the C++ style single line comment, which may be outside of the projects coding standards. Code Snippet from ac_attctlob.c: 300 static boolean AtCmdedEulerRate (void) { 301 302 double Error; : 310 // Remove references to MAP autocode dd 311 /* Error = fabs(achifi_Input.RsrComRatePhi - achifi_Output.RsrComRatePhi); */ : 320 /* Error = fabs(achifi_Input.RsrComRateTheta - achifi_Output.RsrComRateTheta); */ : 329 /* Error = fabs(achifi_Input.RsrComRatePsi - achifi_Output.RsrComRatePsi); */ 330 331 if ( Error > (double)AttCtl_ObTbl.CmdEulerRateStateLim.Comp[PSI] ) 332 AttCtl_ObState.CmdEulerRateStatus |= 1 << PSI; : 335 return (AttCtl_ObState.CmdEulerRateStatus == 0); : 338 } /* AtCmdedEulerRate() */",4/10/2006
ProjectB - TIM - 2385,Redundant assignment where a variable is assigned to itself on line 3761 in file ospci.c.,4,"File : ospci.c Line : 3761 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/platform/sdn/hal/ospci.c The variable “parameter” is assigned to itself on line 3761 of file ospci.c. 3759 void OS_PciTargetDefaultIsr(unsigned long parameter) 3760 { 3761 parameter = parameter; 3762 3763 #if (OS_DEBUG_LEVEL >= 2) 3764 printf(""\r\n Default Pci Target ISR: Interrupt Not Serviced: Target in Slot: %ld"", parameter); 3765 #endif 3766 }",4/7/2006
ProjectB - TIM - 2384,Enumeration prevents execution; conditional block on line 191 in ac_guidetele.c can only execute if variable is outside domain assigned to its type,5,"File : ac_guidetele.c Line : 192 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/acs/ac/code/ac_guidetele.c Both the variables CmdPrimGT and CmdBackGT are of the type AC_Guidetelescope_t an enumeration with four elements. The conditional expressions on lines 191 and 196 check that the values of variables are in the range specified by the enumeration. Since the compiler does this anyway, the validity checks are redundant. Snippet from ac_guidetele.h: 68 typedef enum { 69 GT1 = 0, 70 GT2 = 1, 71 GT3 = 2, 72 GT4 = 3 73 } AC_Guidetelescope_t; Snippet from acsdef.h 62 #define ACS_NUM_GTS 4 Snippet from ac_guidetele.c: 178 boolean AC_GTProcessPrimaryBackupCmd(const void *Pkt) 179 { 180 const AC_CmdGTSelect_t *CmdPkt; 181 boolean CmdAccepted; 182 AC_Guidetelescope_t CmdPrimGT; 183 AC_Guidetelescope_t CmdBackGT; 184 185 CmdPkt = (AC_CmdGTSelect_t *)Pkt; 186 CmdPrimGT = CmdPkt->PrimaryGT; 187 CmdBackGT = CmdPkt->BackupGT; 188 /* 189 ** Validate the command arguments 190 */ 191 if (GT1 > (int)CmdPrimGT || (int)CmdPrimGT >= ACS_NUM_GTS) { 192 CmdAccepted = FALSE; 193 eventf(AC_TASK_ID,""xAC%03dInvalid Primary Guide Telescope selected %d"", 194 AC_EID_GT_PRIM_BACK_CMD_ERROR, CmdPrimGT); 195 } 196 else if (GT1 > (int)CmdBackGT || (int)CmdBackGT >= ACS_NUM_GTS) { 197 CmdAccepted = FALSE; 198 eventf(AC_TASK_ID,""xAC%03dInvalid Backup Guide Telescope selected %d"", 199 AC_EID_GT_PRIM_BACK_CMD_ERROR, CmdBackGT); 200 } 201 else if (CmdPrimGT == CmdBackGT) { 202 CmdAccepted = FALSE; 203 eventf(AC_TASK_ID,""xAC%03dPrimary and Backup Guide Telescope must be unique"", 204 AC_EID_GT_PRIM_BACK_CMD_ERROR); 205 } 206 else { 207 CmdAccepted = TRUE; 208 AC_PrimaryGT = CmdPrimGT; 209 AC_BackupGT = CmdBackGT; 210 } 211 212 return(CmdAccepted); 213 214 } /* end of AC_GTProcessPrimaryBackupCmd */",4/7/2006
ProjectB - TIM - 2383,Enumeration prevents execution; line 207 in ac_epmgr.c can only execute if variable is outside domain assigned to its type,4,"File : ac_epmgr.c Line : 207 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/acs/ac/old/ac_epmgr.c The final else block starting on line 205 cannot be reached since the prior two conditional expressions on lines 192 and 197 test each of the possible values of the variable “Conversion,” an enumeration with only two values. Snippet from ac_epmgr.h: 82 typedef enum { 83 84 EPMGR_GCI_TO_RSR, /* Convert a GCI-to-Body Q to an RSR-to-Body Q */ 85 EPMGR_RSR_TO_GCI /* Convert an RSR-to-Body Q to a GCI-to-Body Q */ 86 87 } EPMGR_Q_CONVERSION; Snippet from ac_epmgr.c (Note - some blank lines removed without notation): 189 void EpMgr_ConvertQ (Quaternion *OutQ, Quaternion *InQ, 190 EPMGR_Q_CONVERSION Conversion) { 191 192 if (Conversion == EPMGR_RSR_TO_GCI) { : 196 } /* End if RSR_TO_GCI conversion */ 197 else if (Conversion == EPMGR_GCI_TO_RSR) { : 203 } /* End if GCI_TO_RSR conversion */ 205 else 207 Quaternion_Copy (OutQ,InQ); 209 } /* End EpMgr_ConvertQ() */",4/7/2006
ProjectB - TIM - 2382,Enumeration prevents execution; line 622 in ac_datamgr.c can only execute if variable is outside domain assigned to its type,4,"File : ac_datamgr.c Line : 622 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/acs/ac/old/ac_datamgr.c The definition of the member Config in the type DATAMGR_CONFIG_RATE_SRC_CMD is the enumeration DATAMGR_SOURCE_CONFIG with two declared members, DM_RATE_SOURCE_ACE and DM_RATE_SOURCE_AST. The condition in the definition file on line 609 checks if an instance of that member is equal to either of the two possible values. Since the condition must be true, unless some unusual code elsewhere is preventing the compiler from enforcing the enumeration constraint, the error reporting statement on line 622 in the else block will never be executed. In addition, the value of the variable ConfigOK is always set to true so the default value of false will never be returned by the method. Code snippet from ac_datamgr.h: 121 typedef enum { /* Rate source configuration */ 122 123 DM_RATE_SOURCE_ACE = DM_PRIMARY, /* ACE is primary source */ 124 DM_RATE_SOURCE_AST = DM_BACKUP /* AST is backup source */ 125 126 } DATAMGR_SOURCE_CONFIG; : 262 typedef struct { /* Configure AttDet rate source */ 263 264 DATAMGR_SOURCE_CONFIG Config; /* New configuration */ 265 266 } DATAMGR_CONFIG_RATE_SRC_CMD; Code snippet from ac_datamgr.c: 604 boolean DataMgr_ConfigRateSourceCmd (void *CmdPtr) { 605 606 DATAMGR_CONFIG_RATE_SRC_CMD *Cmd = (DATAMGR_CONFIG_RATE_SRC_CMD *)CmdPtr; : 609 if (Cmd->Config == DM_RATE_SOURCE_ACE || Cmd->Config == DM_RATE_SOURCE_AST) { : 616 ConfigOK = TRUE; : 619 } /* End if configuration is valid */ 620 else { 621 622 MESSAGE_P3 (147,""Rate Source Config Cmd reject: Config/ACE/AST = %3i/%3i/%3i"", 623 (uint16)Cmd->Config, 624 (Unsigned8)DM_RATE_SOURCE_ACE, 625 (Unsigned8)DM_RATE_SOURCE_AST); 626 627 } /* End if configuration is invalid */ : 633 return (ConfigOK); 634 635 } /* End DataMgr_ConfigRateSourceCmd () */",4/7/2006
ProjectB - TIM - 2381,Enumeration prevents execution; line 580 in ac_datamgr.c can only execute if a variable is outside the domain assigned to its type.,4,"File : ac_datamgr.c Line : 580 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/acs/ac/old/ac_datamgr.c The definition of the member Config in the type DATAMGR_CONFIG_AST_CMD is the enumeration DATAMGR_AST_CONFIG with two declared members, DM_AST1 and DM_AST2. The condition in the definition file on line 565 checks if an instance of that member is equal to either of the two possible values. Since the condition must be true, unless some unusual code elsewhere is preventing the compiler from enforcing the enumeration constraint, the error reporting statement on line 579 in the else block will never be executed. Code snippet from ac_datamgr.h: 101 typedef enum { /* AST configuration */ 102 103 DM_AST1 = DM_PRIMARY, /* AST 1 is primary sensor */ 104 DM_AST2 = DM_BACKUP /* AST 2 is backup sensor */ 105 106 } DATAMGR_AST_CONFIG; : 255 typedef struct { /* Configure AST for AttDet */ 256 257 DATAMGR_AST_CONFIG Config; /* New configuration */ 258 259 } DATAMGR_CONFIG_AST_CMD; Code snippet from ac_datamgr.c: 561 boolean DataMgr_ConfigASTCmd (void *CmdPtr) { 561 562 DATAMGR_CONFIG_AST_CMD *Cmd = (DATAMGR_CONFIG_AST_CMD *)CmdPtr; : 565 if (Cmd->Config == DM_AST1 || Cmd->Config == DM_AST2) { : 576 } /* End if configuration is valid */ 577 else { 578 579 MESSAGE_P3 (146,""AST Config Cmd reject: Config/AST1/AST2 = %3i/%3i/%3i"", 580 (uint16)Cmd->Config,(Unsigned8)DM_AST1,(Unsigned8)DM_AST2); 581 582 } /* End if configuration is invalid */ : 588 return (ConfigOK); 589 590 } /* End DataMgr_ConfigASTCmd () */",4/7/2006
ProjectB - TIM - 2380,A variable is assigned a value of a constant and then used in place of the constant.,5,"File : xbfltif.c Line : 88 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/cdh/xb/xbfltif.c The value of the variable is used in the same manner as a constant. It is unclear why the constant was not used directly on lines 99 and 102. 88 u_dword shared_memory_used = BMC_1553_SHARED_RAM_ALLOCATED; : 99 for(i=0; i<shared_memory_used; i++) 100 XB_pci_summit_write_data((uint32)&xb_shared_ram[i], 0xAAAA); 101 102 for(i=0; i<shared_memory_used; i++) 103 if (XB_pci_summit_read_data((uint32)&xb_shared_ram[i]) != 0xAAAA) 104 { 105 error.code = 302; 106 error.pars[0] = (uint32) &xb_shared_ram[i]; 107 XB_event (&error); 108 }",4/7/2006
ProjectB - TIM - 2379,Code is unreachable; a return statement follows an infinite loop on line 155 of sysSuromLib.c.,4,File : sysSuromLib.c Line : 155 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/platform/ppc/bsp/sysSuromLib.c The while loop starting at line 152 never exits so the return on line 155 cannot be reached. The phrase “in case …” should be spelled out in more detail to convey what kind of case can force the execution to reach the return. From sysSuromLib.c 152 while (1) 153 ; 154 155 return (ERROR); /* in case... */,4/7/2006
ProjectB - TIM - 2378,Code is unreachable; the return on line 650 of msmain.c cannot be reached.,4,"File : msmain.c Line : 650 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/cdh/ms/msmain.c Every possible path through the if/else if/else construct starting on line 618 has a return within it either directly or inside the nested if/else constructs. It is not possible for the return on line 650 to ever execute. 614 boolean MS_EnableCorrectableEvents (const void *PktPtr) 615 { 616 MS_SpecifyMemPkt_t *MemPkt = (MS_SpecifyMemPkt_t *)PktPtr; 617 618 if (MemPkt->MemType == MS_MEM_TYPE_PROCESSOR) 619 { 620 if (MS_ProcCorrEventsEnabled == TRUE) 621 { 622 eventf (MS_TASK_ID, ""XMS104 Processor Corr Events already enabled""); 623 return (FALSE); 624 } 625 else 626 { 627 MS_ProcCorrEventsEnabled = TRUE; 628 return (TRUE); 629 } 630 } 631 else if (MemPkt->MemType == MS_MEM_TYPE_RECORDER) 632 { 633 if (MS_RecCorrEventsEnabled == TRUE) 634 { 635 eventf (MS_TASK_ID, ""XMS105 Recorder Corr Events already enabled""); 636 return (FALSE); 637 } 638 else 639 { 640 MS_RecCorrEventsEnabled = TRUE; 641 return (TRUE); 642 } 643 } 644 else 645 { 646 eventf (MS_TASK_ID, ""XMS106 EnableCorr Cmd: Invalid Mem Type""); 647 return (FALSE); 648 } 649 650 return (TRUE); 651 652 } /* End of MS_EnableCorrectableEvents */",4/7/2006
ProjectB - TIM - 2377,Code is unreachable; a break statement follows a return in tort.c on line 668.,4,File : tort.c Line : 668 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/cdh/to/tort.c The break on line 668 cannot be reached due to the return statement in the line before it. From tort.c: 666 case SB_NO_MESSAGE: 667 return FALSE; 668 break;,4/7/2006
ProjectB - TIM - 2376,"Code is unreachable, there are break statements following a return in tobuffer.c on lines 603, 607, & 611.",4,"File : tobuffer.c Line : 603, 607, & 611 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/cdh/to/tobuffer.c The break statements on line 603, 607, and 611 cannot be reached due to the returns on the statements immediately before them. From tobuffer.c: 601 case PATTERN_0: 602 return (vcdu *) &to_pattern_vcdu[0]; 603 break; 604 605 case PATTERN_1: 606 return (vcdu *) &to_pattern_vcdu[1]; 607 break; 608 609 case PATTERN_2: 610 return (vcdu *) &to_pattern_vcdu[2]; 611 break;",4/7/2006
ProjectB - TIM - 2375,Unreachable code; a constant’s value makes conditional code unreachable.,3,File : xbmakewu.c Line : 192 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/cdh/xb/xbmakewu.c The conditional block starting on line 192 cannot be executed. The value of 1 for the constant USEC_PER_BCRT_TICK prevents the conditional expression on line 190 from ever evaluating to true which prevents the conditional block from executing. The comment following the definition of the constant indicates that the value will be changed when a true value is determined. from xbmakewu.c: 190 if (data_time % USEC_PER_BCRT_TICK) 192 { 193 data_time /= USEC_PER_BCRT_TICK; 194 ++ data_time; 195 data_time *= USEC_PER_BCRT_TICK; 196 } from xbsummit.h: 181 #define USEC_PER_BCRT_TICK 1 /* set to 1 so it'll have no effect on processing 182 until we get some true timing numbers*/,4/7/2006
ProjectB - TIM - 2374,"Buffer overflow, array index of ' AC_IruProcData[AceId].RateIruAlign' of size 3 may use a value of 7.",2,"File : ac_iru.c Line : 352 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/acs/ac/code/ac_iru.c The first index of ' AC_IruProcData[AceId].RateIruAlign' may be outside the declared bounds. The array is declared to be size 3 by 2 at ac_iru.h:143 and yet may use index values as high as 7 on lines 352, 353, and 354 in the first index value. Assume that the parameter RawData has the value 0x0000000F in the member Index_IRU_Body when the function AC_IruProcessData is entered on line 251. Then when the calculation on line 349 defined in the macro ACE_GET_IRU_ACTIVE_AXIS is computed, the value of BodyF_X_Index will be 0xF. With that value, the first index on line 352 will be 7 that is beyond the array size of 3. A similar argument can be made for the variables BodyF_Y_Index on line 350 and BodyF_Z_Index on line 351. Code snippet from acetlm.h: 114 define ACE_GET_IRU_ACTIVE_AXIS(pkt,axis) (((pkt)->Index_IRU_Body>>(axis*4))&0xF) : 132 typedef struct 133 { : 170 uint16 Index_IRU_Body; /* IRU body frame index */ 171 /* bit 0x000F: Index_IRU_BodyX */ 172 /* bit 0x00F0: Index_IRU_BodyY */ 173 /* bit 0x0F00: Index_IRU_BodyZ */ : 230 } ACE_SensorData_t; Code snippet from acs_defs.h: 43 #define ACS_NUM_GYROS 3 44 #define ACS_NUM_BODY_AXES 3 45 #define ACS_AXES_PER_GYRO 2 Code snippet from ac_iru.h: 139 typedef struct 140 { : 143 double RateIruAlign[ACS_NUM_GYROS][ACS_AXES_PER_GYRO]; /**< Rates for each gyro aligned to IRU frame */ : 148 } AC_IruProcData_t; Code snippet from ac_iru.c: 251 void AC_IruProcessData (const ACE_SensorData_t *RawData, 252 const uint8 AceId, 253 const AC_AceRsdStatus_t *Status) 254 { : 349 BodyF_X_Index = ACE_GET_IRU_ACTIVE_AXIS(RawData,0)-1; 350 BodyF_Y_Index = ACE_GET_IRU_ACTIVE_AXIS(RawData,1)-1; 351 BodyF_Z_Index = ACE_GET_IRU_ACTIVE_AXIS(RawData,2)-1; 352 V3dRateIrufIru.Comp[0] = AC_IruProcData[AceId].RateIruAlign[BodyF_X_Index/ACS_AXES_PER_GYRO][BodyF_X_Index%ACS_AXES_PER_GYRO]; 353 V3dRateIrufIru.Comp[1] = AC_IruProcData[AceId].RateIruAlign[BodyF_Y_Index/ACS_AXES_PER_GYRO][BodyF_Y_Index%ACS_AXES_PER_GYRO]; 354 V3dRateIrufIru.Comp[2] = AC_IruProcData[AceId].RateIruAlign[BodyF_Z_Index/ACS_AXES_PER_GYRO][BodyF_Z_Index%ACS_AXES_PER_GYRO]; : 370 } /* End Function AC_IruProcData */",4/7/2006
ProjectB - TIM - 2373,"Buffer overflow, array index of 'RateIruChannel' of size 3 may use a value of 7.",2,"File : ac_iru.c Line : 335 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/acs/ac/code/ac_iru.c The first index of 'RateIruChannel' may be outside the declared bounds. The array is declared to be size 3 by 2 at ac_iru.h:142 and yet may use index values as high as 7 on lines 335 and 337 in the first index value. Assume that the parameter RawData has the value 0x0000000F in the member Num_IRU when the function AC_IruProcessData is entered on line 251. Then, during the first loop iteration where i is equal to zero, when the calculation on line 334 defined in the macro ACE_GET_IRU_INDEX is computed, the value of IruF_X_Index will be 0xF. With that value, the first index on line 335 will be 7 that is beyond the array size of 3. A similar argument can be made for the variable IruF_Y_Index on line 337. Code snippet from acetlm.h: 111 #define ACE_GET_IRU_INDEX(pkt,gyro,axis) (((pkt)->Num_IRU>>(gyro*8+axis*4))&0xF) : 132 typedef struct 133 { : 175 uint32 Num_IRU; /* IRU frame index */ 176 /* bit 0x0000000F: Num_IRU1_X */ 177 /* bit 0x000000F0: Num_IRU1_X */ 178 /* bit 0x00000F00: Num_IRU2_X */ 179 /* bit 0x0000F000: Num_IRU2_Y */ 180 /* bit 0x000F0000: Num_IRU3_X */ 181 /* bit 0x00F00000: Num_IRU3_Y */ : 230 } ACE_SensorData_t; Code snippet from acs_defs.h: 43 #define ACS_NUM_GYROS 3 44 #define ACS_NUM_BODY_AXES 3 45 #define ACS_AXES_PER_GYRO 2 Code snippet from ac_iru.h: 139 typedef struct 140 { : 142 double RateIruChannel[ACS_NUM_GYROS][ACS_AXES_PER_GYRO]; /**< Rates for each gyro channel */ : 148 } AC_IruProcData_t; Code snippet from ac_iru.c: 251 void AC_IruProcessData (const ACE_SensorData_t * RawData, 252 const uint8 AceId, 253 const AC_AceRsdStatus_t *Status) 254 { : 331 for (i=0; i<ACS_NUM_GYROS; i++) 332 { 333 /* populate the corrected order IRU rate matrix */ 334 IruF_X_Index = ACE_GET_IRU_INDEX(RawData,i,0)-1; /* extract X index and make zero relative */ 335 TempRate.Comp[0] = AC_IruProcData[AceId].RateIruChannel[IruF_X_Index/2][IruF_X_Index%2]; 336 IruF_Y_Index = ACE_GET_IRU_INDEX(RawData,i,1)-1; /* extract Y index and make zero relative */ 337 TempRate.Comp[1] = AC_IruProcData[AceId].RateIruChannel[IruF_Y_Index/2][IruF_Y_Index%2]; : 346 } : 370 } /* End Function AC_IruProcData */",4/7/2006
ProjectB - TIM - 2372,Assignment in condition; a variable is assigned in the right hand side of a conditional expression in the file tortout.c.,4,File : tortout.c Line : 152 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/cdh/to/tortout.c The assignment of v in the right hand side of the “and” expression is against NASA coding standards which discourages the use of side effects. From tortout.c: 152 while(vcdu_quota && (v = TO_OR_fetch_vcdu(I_CHANNEL))) From section 3.10 of Flight Software Branch C Coding Standard version 1.0a. page 18: (1) Side effects within expressions should not be used.,4/6/2006
ProjectB - TIM - 2371,Assignment in condition; a struct member is assigned in a conditional expression in the file tort.c.,4,File : tort.c Line : 617 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/cdh/to/tort.c The assignment of r->the_vcdu in the right hand side of the “and” expression is against NASA coding standards which discourages the use of side effects. From tort.c: 617 if ((!r->words_left) && (r->the_vcdu = (rt_vcdu *)TO_OR_get_free_rt_vcdu())) { From section 3.10 of Flight Software Branch C Coding Standard version 1.0a. page 18: (1) Side effects within expressions should not be used.,4/6/2006
ProjectB - TIM - 2370,Assignment in condition; a variable is assigned twice in a conditional expression in the file tobuffer.c,4,File : tobuffer.c Line : 329 Path : /tools/projects/sdo/fsw-2.0.0/fsw/build_release/cdh/cdh-2.0.0/fsw/cpu/main/cdh/to/tobuffer.c The assignments of v in the conditional expression on lines 329 and 330 are against NASA coding standards which discourages the use of side effects. From tobuffer.c: 329 if ((v = (rt_vcdu *)TO_q_remove(&to_rt_output_q)) || 330 (v = TO_build_real_time_vcdu())) { From section 3.10 of Flight Software Branch C Coding Standard version 1.0a. page 18: (1) Side effects within expressions should not be used.,4/6/2006
ProjectB - TIM - 2369,ACE Safehold Test Scenario ACEA_BSH_Safehold_Parameter_Table requirements tested section is incomplete,4,"The requirement 4530 is listed twice in the requirements tested section at the beginning of scenario Acea_bsh_safehold_parameter_table, but one of these should be changed to 4531.",4/5/2006
ProjectB - TIM - 2368,"ACE Safehold Test Scenario has requirements listed as tested in scenarios, but are not being tested in them",4,"The following requirements are listed in the requirements tested section of the corresponding scenarios, but are not tested in the scenarios: 4421, 4511.2 in ACEA_BSH_TLM_Packet 4311 in ACEA_BSH_Control",4/5/2006
ProjectB - TIM - 2367,ACE Safehold Test Scenario requirements section of ACEA_BSH_Control is not complete,4,"The requirements tested section at the beginning of the test scenario Acea_bsh_control does not contain the following requirements that are tested during the scenario: 4312.2.2, 4312.6.1, 4312.6.2.",4/5/2006
ProjectB - TIM - 2366,ACE Safehold Test Scenario ACEA_BSH_Control step 4.c has incorrect wording,4,"In ACEA_BSH_Control, step 4.c states ""If the body rate error is later than ACE_SH_Paramtbl.Lim_RateErr_Safehold…"" The ""later than"" should be really ""greater than"".",4/5/2006
ProjectB - TIM - 2365,ACE Safehold Test Scenario ACEA_BSH_Commandtest steps 9 & 10 are unnecessary,4,"In ACEA_BSH_Commandtest, the mode was changed to Safehold in step 6 and the requirements listed for steps 9 and 10 are tested elsewhere, so it is not necessary to have steps 9-10. Nothing is gained by testing these 2 steps.",4/5/2006
ProjectB - TIM - 2364,ACE Safehold Test Scenario ACEA_BSH_Commandtest step 8 command and steps do not match,3,"The comment for step 8 states ""Verify that the Set Safehold mode command with invalid length is rejected"" but the command that is sent in the next line is a roll offset command and the roll command counter and the roll rate are verified in subsequent steps. The command and verification need to be changed to match the comment about the purpose of the step.",4/5/2006
ProjectB - TIM - 2363,ACE Safehold Test Scenario ACEA_BSH_Commandtest step 7 command and verification do not match,3,"Step 7 of ACEA_BSH_Commandtest sends a safehold mode command, but two lines later the scenario verifies the roll rate did not change. The scenario should check that the mode did not change rather than the roll rate. Step 7 states: . Verify that Set Safehold mode command with invalid parameter is rejected. (FC = 13) • Use ut_sendinvrawcmd to send set safehold command with invalid offset ? • Verify that CA command counter does not increment and CA error counter does. • Verify that roll rate does not change. • Verify that event message received documenting reason for error (event code = ACA131.)",4/5/2006
ProjectB - TIM - 2362,ACE Safehold Test Scenario requirements table incorrectly lists ACEA_BSH_Restart for a requirement,4,"The scenario acea_bsh_restart is listed for requirement 4526 in the requirements tested table, but the requirement is not tested in that scenario.",4/5/2006
ProjectB - TIM - 2361,ACE Safehold Test Scenario requirements table doesn't list ACEA_BSH_Control for a requirement,4,"The scenario ACEA_BSH_CONTROL is not listed in the requirements table for the requirement 4531, but it is verified in step 2.",4/5/2006
ProjectB - TIM - 2360,ACE Safehold Test Scenario requirements table doesn't list ACEA_BSH_Tlm_Packet for several requirements,4,"The scenario ACEA_BSH_TLM_PACKET is not listed in the requirements table for the following requirements: 4420, 4422, 4423, 4511, 4511.1",4/5/2006
ProjectB - TIM - 2359,ACE Safehold Test Scenario does not verify requirement 4510,3,Requirement 4510 is not explicitly verified in any scenario. Requirement 4510 states: The ACE FSW shall process ACE commands.,4/5/2006
ProjectB - TIM - 2358,"ACE Safehold Test Scenario setup, step 4 and step 6 of ACEA_BSH_Commandtest have an incorrect requirement",4,"The requirement listed as being tested by the setup and steps 4 and 6 of ACEA_BSH_Commandtest is 4520, but the steps appear to really be testing 4420. The requirement 4520 does not appear in the requirements tested table as part of the ACE Safehold scenario. The setup states: Command Safehold Mode • Use ut_sendappcmd to command ACE to safehold mode. • Verify that command CA command counter increments and error counter does not. • Verify that telemetry indicates safehold mode. Step 4 states: Command normal mode. • Use ut_sendappcmd to command ACE to enter normal mode. • Verify that command CA command counter increments and error counter does not. • Verify that telemetry indicates normal mode. Step 6 states: Disable the I’m ok counter coming from the ACS. Dwell on ImokMissingCount (if this is not going to be in telemetry) • Use ut_sendcmd to send SBC_AC_ENABLE_DISABLE_IMOK DISABLE. • Verify that AC command counter increments and error counter does not. • Verify that Safehold mode is entered. (after 35 missing I’m ok – 7 seconds) • Verify that Safehold Commanded roll rate reverts back to database value. Requirement 4420 states: The ACE FSW shall set its control mode.",4/5/2006
ProjectB - TIM - 2357,ACE Safehold Test Scenario does not verify requirement 4314.3,3,"Requirement 4314.3 is not explicitly verified in any scenario. Requirement 4314.3 states: (P) Upon reaching the Sun pointing attitude, and while not in eclipse, the Sun pointing vector shall be maintained to within 15º (0.262 radians) of the spacecraft X-axis.",4/5/2006
ProjectB - TIM - 2356,ACE Safehold Test Scenario step 7 of ACEA_BSH_Control has incorrect requirement,4,"One of the requirements listed as being tested by step 7 of ACEA_BSH_Control is 4313, but the step appears to really be testing 4314. Step 7 states: Verify Performance Requirements (reqt 4313, 4314.1, 4314.2) Requirement 4314 states: (P) If the ACE FSW is in Safehold Control Mode, Safehold performance requirements shall be met.",4/5/2006
ProjectB - TIM - 2355,ACE Safehold Test Scenario does not verify requirement 4312.6,3,"Requirement 4312.6 is not explicitly verified in any scenario. Both sub-requirements are verified, but there is no specific verification of this requirement. Requirement 4312.6 states: If the sun vector is valid and the SAs are deployed, the ACE FSW shall calculate the body rate error based upon current and previous sun vector directions.",4/5/2006
ProjectB - TIM - 2354,ACE Safehold Test Scenario step 5 of ACEA_BSH_Commandtest has incorrect requirement,4,"The requirement listed as being tested by step 5 of ACEA_BSH_Commandtest is 4315.1, but the step appears to really be testing 4311.3. Requirement 4315.1 was deleted and 4311.3 was added in the most recent release of the 464-FSW-SPEC-0049 spec. Step 5 states: 5 Verify that roll offset rate command is rejected while in normal mode • Use ut_sendappcmd to send roll offset rate command. • Verify that CA command counter does not increment and CA error counter does. • Verify that roll rate does not change. • Verify that event message received documenting reason for error. Requirement 4311.3 states: If the current mode is not Safehold, the ACE FSW shall reject the command.",4/5/2006
ProjectB - TIM - 2353,ACE Safehold Test Scenario step 2 of ACEA_BSH_Tlm_Packet has incorrect requirement,4,"The requirement listed as being tested by step 2 of ACEA_BSH_Tlm_Packet is 4311, but the step appears to really be testing 4310. The step states: Determine rate of Safehold packet while in safehold • Use ut_get_pktrate to verify that safehold packets are arriving every 5 times a second. Requirement 4310 states: The ACE FSW shall execute the Safehold attitude control law at 5 Hz.",4/5/2006
ProjectB - TIM - 2352,ACE Safehold Test Scenario not fully verifying requirement 4013.1,3,"The wording in step 6 of ACEA_BSH_restart does not have sufficient details to fully verify requirement 4013.1. More specific wording needs to be added to ensure the requirement is fully tested. Step 6 currently states: Examine the sequential print. Requirement 4013.1 states: On cold restart, the ACE FSW shall initialize prior solutions for all sensor and actuator data processing results.",4/5/2006
ProjectB - TIM - 2351,ACE Safehold Test Scenario does not verify requirement 4013,3,"The requirement 4013 is not explicitly verified in any scenario. The requirement states: On cold restart, the ACE FSW shall initialize ACE unique parameters as appropriate to ensure that each ACE software process starts from a known state.",4/5/2006
ProjectB - TIM - 2350,"ACE IV Build 2; the variables ACE_EVD_TargetId, IV_NoopResetCmd, and IV_OpenCloseCmd are not used.",4,"Neither the variables ACE_EVD_TargetId declared on line 127, IV_NoopResetCmd declared on line 119 nor IV_OpenCloseCmd declared on line 120 are used in the code following their declarations.",4/3/2006
ProjectB - TIM - 2349,ACE IV Build 2; missing reject counter increment on mutex failure,3,"After the failure of locking the Mutex at line 532, the FSW should report the command is being rejected by incrementing the reject counter in the telemetry packet. Currently this statement is missing.",4/3/2006
ProjectB - TIM - 2348,ACE IV Build 2; an incorrect comment marks the end of a function.,5,"The comment on line 301 should be ""/* end of ACE_IsolationValveTaskInit() */"" instead of “/* end ACE_5HzSensorDataTaskInit */”.",4/3/2006
ProjectB - TIM - 2347,ACE IV Build 2; there are declarations in the wrong section of the code.,5,"Line 125-127 should be placed in the ""External Declarations"" section on line 105.",4/3/2006
ProjectB - TIM - 2346,ACE IV Build 2; there are break statements that are at inconsistent levels of indent.,5,"The break statements on line 223, 367, and 419 need to be indented to the same level as the rest of the case block for each.",4/3/2006
ProjectB - TIM - 2345,ACE IV Build 2; there is an unnecessary return before a break statement.,4,"The return statement on line 297 is not needed at the end of the default case since the function will end after the break that immediately follows the return. As the code is written, the return statement is unnecessary and the break on line 298 cannot be executed.",4/3/2006
ProjectB - TIM - 2344,ACE IV Build 2; The command execute counter does not accurately represent the count of commands executed.,3,"The command counter ""CmdExecCount” is always incremented on line 212 after calling the function “ACE_IV_ProcessOpenCloseCommand” on line 211 even though that function may increment the reject counter “IVHkTlm.fast.CmdRejectCount.”",4/3/2006
ProjectB - TIM - 2343,ACE IV Build 2; Wrong variable type for the variable IVCmd.,4,"IV&V suspects that the variable IVCmd defined as a ACE_IV_MaxCmdBufferSize_t on line 159 is the wrong type (ACE_IV_MaxCmdBufferSize_t). Because the variable is named IVCmd, IV&V expects to see that it is a command containing headers and command data. However, the type's name sounds like it is about the maximum command size, not a command itself. This issue will affect following functions: ACE_IV_ProcessOpenCloseCommand(), ACE_IV_ProcessNoopRethkCommand(), & ACE_IsolationValveTaskMain().",4/3/2006
ProjectB - TIM - 2342,ACE IV Task Build 2; the variables IV_HkTlm.fast.CmdExecCnt and IV_HkTlm.fast.CmdRejectCnt are reset in different ways.,4,"In the function ACE_IV_ProcessNoopRsthkCommand in the case ACE_RESET_COUNTERS_FC starting on line 409, the variables IV_HkTlm.fast.CmdExecCnt and IV_HkTlm.fast.CmdRejectCnt are reset in different ways. On line 411, the variable IV_HkTlm.fast.CmdRejectCnt is reset by assigning it to the value zero. However, the variable IV_HkTlm.fast.CmdExecCnt is first set to the value negative one on line 410 and then incremented on line 412.",4/3/2006
ProjectB - TIM - 2341,ACE SV Task: Command execute counter is not accurately represent the counter information,3,"""Line 299, the command counter """"CmdExecCount ++"""" increments and does not accurately represent the command execution information. It should be placed inside the function """"SequenceIsolationValves()"""". Because the command will be rejected when LPSC service is not ON inside the SequenceIsolationValves() function, if the command is rejected, then coommand execution counter """"CmdExecCount"""" at line 299 should not be incremented. "" Moved command execute counter inside the ""SequenceIsolationValves()"" function.",3/30/2006
ProjectB - TIM - 2340,ACE SV Task: Editorial corrections,5,"""In the comment on line 378, the comment should begin ¡°Check command pipe to ¡­¡± instead of ¡°Check command pipe ot ¡­¡±. The break on line 414 needs to be indented to the same level as the rest of the case block.""",3/30/2006
ProjectB - TIM - 2339,ACE SV Task: Viable CmdExecCount is set to -1 then incremented immediately to zero,4,"In the case statement starting on line 312, the variable CmdExecCount is assigned to -1 then immediately incremented to the value zero. This is extraneous code. 313 SV_HkTlm.fast.CmdExecCount = -1; 315 SV_HkTlm.fast.CmdExecCount++;",3/30/2006
ProjectB - TIM - 2338,ACE SV Task: There is an unnecessary return before a break statement,4,"The return statement on line 270 is not needed at the end of the default case since the function will end after the break that immediately follows the return. As the code is written, the return statement is unnecessary and the break on line 271 cannot be executed.",3/30/2006
ProjectB - TIM - 2337,ACE SV Task: Unused variables,4,Neither the variables ACE_EVD_TargetId declared on line 61 nor SV_SequenceValvesParamTbl_end declared on line 75 are used in the code following their declarations.,3/30/2006
ProjectB - TIM - 2336,AC Task Attitude Determination Test Scenario has ambiguous verification of requirements,3,"Several verification steps in sbc_bac_attdet_kalman scenario have ambiguous criteria. In order to pass/fail a requirement, the value needs to be quantitative. What do ""essentially equal to"" and ""much smaller compared with"" mean? How do you know what is a ""pass"" and what is a ""fail"" for these requirements? The list of ambiguous steps are: 4.1 ""essentially equals"" 5.1 ""essentially equals"" 6.1 ""much smaller compared with"" 7.1 ""essentially equals"" 8.1 ""essentially equals"" 9.1 ""much smaller compared with"" 10.1 ""essentially equals"" 11.1 ""essentially equals"" 13.1 ""essentially equals"" These ambiguous steps cannot be verified.",3/24/2006
ProjectB - TIM - 2335,AC Task Attitude Determination Test Scenario verifies requirement 2562.3 but is not listed in relevant requirements,4,"Req 2562.3 is listed in 2 steps of sbc_bac_attdet_processing as being verified, but the requirement does not appear in the list of relevant requirements.",3/24/2006
ProjectB - TIM - 2334,AC Task Attitude Determination Test Scenario verifies requirement 2420.3 but does not list it in the relevant requirements,4,"Req 2420.3 is listed in step 1.4 of sbc_bac_attdet_kalman_reset as being verified, but the requirement does not appear in the list of relevant requirements.",3/24/2006
ProjectB - TIM - 2333,AC Task Attitude Determination Test Scenario does not verify requirement 2433.1,3,"Requirement 2433.1 is traced to 2 scenarios, but none of the steps verify this requirement. The requirement states: The ACS FSW shall calculate the body angular momentum using the estimated body angular rate.",3/24/2006
ProjectB - TIM - 2332,AC Task Attitude Determination Test Scenario cannot verify requirement 2432.2,3,"Requirement 2432.2 is traced to 2 scenarios, but none of the steps verify this requirement. The requirement states: If the use of ST-based body rates is selected, the ACS FSW shall use the ST-based rate for the primary ST wherever a rate is needed. During the test scenario walkthrough, it was discussed that the implementation is different than the requirement, so the requirement cannot be tested as written. The implementation has more flexibility than the requirement because either of the 2 Star Trackers can be selected.",3/24/2006
ProjectB - TIM - 2331,AC Task Attitude Determination Test Scenario has steps traced to requirement 2430.2 that does not verify it,3,"Requirement 2430.2 is traced to scenario sbc_bac_attdet_kalman steps 2.1 and 3.1. In these steps the Kalman filter is enabled, but the requirement applies when the Kalman filter is disabled. Therefore, these steps cannot verify this requirement. The requirement states: If Kalman processing is disabled, if use of an ST attitude solution is enabled, and if the attitude solution for the configured primary ST is valid, the ACS FSW shall set the attitude solution to the primary ST attitude solution.",3/24/2006
ProjectB - TIM - 2330,AC Task Attitude Determination Test Scenario does not verify requirement 2421.2b,3,"Part b of requirement 2421.2 is not verified in any scenario. The requirement states: If any diagonal element of the covariance for the propagated solution exceeds a database-specified “divergence” tolerance, the ACS FSW shall a. notify FDC (if enabled) b. exit the remaining Kalman filter processing for the cycle without updating the attitude or rate bias solution",3/24/2006
ProjectB - TIM - 2329,AC Task Attitude Determination Test Scenario does not verify the processing occurs at 5 HZ,3,"Requirements 2421 and 2422 state that the processing occurs at a 5 HZ rate. There are no details in the scenarios to verify this rate. The wording of the requirement is as follows: 2421: If Kalman processing is enabled, the ACS FSW shall compute the covariance for the propagated attitude and rate bias solution at 5 Hz. 2422: If Kalman processing is enabled, the ACS FSW shall update the Kalman attitude and rate bias solution at 5 Hz.",3/24/2006
ProjectB - TIM - 2328,"AC Task Attitude Determination Test Scenario ""Relevant Requirements"" table has incorrect entries",3,"In the ""Relevant Requirements"" section, several requirements have the allocation of scenarios that do not contain any steps verifying the specific requirement. Also, several requirements list the wrong scenario name. The following is the list of incorrect items: 1. There are no steps of the scenario listed traced to the requirement. Scenario reference should be deleted. 2113.3 sbc_bac_attdet_kalman 2113.4 sbc_bac_attdet_kalman 2411 sbc_bac_attdet_kalman 2414 sbc_bac_attdet_kalman 2431 sbc_bac_attdet_kalman 2431 sbc_bac_attdet_kalman_reset 2431.1 sbc_bac_attdet_kalman 2431.1.1 sbc_bac_attdet_kalman 2431.1.2 sbc_bac_attdet_kalman 2431.2 sbc_bac_attdet_kalman 2431.2.1 sbc_bac_attdet_kalman 2431.2.2 sbc_bac_attdet_kalman 2432 sbc_bac_attdet_kalman 2433 sbc_bac_attdet_kalman 2433.2 sbc_bac_attdet_kalman 2433.2.1 sbc_bac_attdet_kalman 2433.2.2 sbc_bac_attdet_kalman 2434 sbc_bac_attdet_kalman 2711 sbc_bac_attdet_kalman 2. 2420.1.1 is also tested and traced to steps 1.1 and 18.3 in scenario sbc_bac_attdet_kalman 3. 2421.2 is tested in sbc_bac_attdet_kalman_check scenario, not in sbc_bac_attdet_kalman scenario 4. 2423 is tested in sbc_bac_attdet_kalman scenario step 18.1 5. In 2430, Kalman is enabled in these steps, and there are no steps of the scenario sbc_bac_attdet_kalman traced to this requirement. Scenario reference should be deleted.",3/24/2006
ProjectB - TIM - 2327,"Code Review; ProjectB GUIDE TELESCOPE Code Review.doc; Feb 10, 2006: Discrepancy between algorithm design and source code for setting of sun biased vectors.",3,"The setting of sun vectors is made in the wrong location in the source code as compared to the algorithm. An examination of the source code shows that setting these values occurs within the 'if' block rather than after the 'if' block as shown in the algorithm. Assuming the algorithm is correct, lines 942 and 943 in the code should be moved below the brace on line 944. From the algorithm document: IF BiasedSun_YZMag > 1 BiasedSun_GtF(0,i) = 0 ELSE BiasedSun_GtF(0,i) = SQRT(1 – BiasedSun_YZMag) END BiasedSun_GtF(1,i) = Err_GT(0,i) ****** BiasedSun_GtF(2,i) = Err_GT(1,i) ****** From the source code: if(TempValue < 0) { ProcData->BiasedSunGtF.Comp[0] = 1.0; ProcData->BiasedSunGtF.Comp[1] = 0.0; ProcData->BiasedSunGtF.Comp[2] = 0.0; ProcData->GtDataValidAcs = FALSE; } else { ProcData->BiasedSunGtF.Comp[0] = sqrt(TempValue); 942 ProcData->BiasedSunGtF.Comp[1] = ProcData->ErrorGTRadians[0]; 943 ProcData->BiasedSunGtF.Comp[2] = ProcData->ErrorGTRadians[1]; 944 } /* end of if control block */",3/16/2006
ProjectB - TIM - 2326,"Code Review; ProjectB GUIDE TELESCOPE Code Review.doc; Feb 10, 2006: Discrepancy between algorithm design & source code for computing the biased sun vector.",3,"The Guide telescope algorithm design (step # 5) lists the error check following creation of the biased sun vectors as: IF BiasedSun_YZMag > 1 BiasedSun_GtF(0,i) = 0 Based on the algorithm, the sun unit vectors would be set to '0'. In the source code shown below, the element ""ProcData->BiasedSunGtF.Comp[0]"" at line 936 is set to '1.0'. There is either an error in the source code or in the algorithm document. 935 if(TempValue < 0) { 936 ProcData->BiasedSunGtF.Comp[0] = 1.0; 937 ProcData->BiasedSunGtF.Comp[1] = 0.0; 938 ProcData->BiasedSunGtF.Comp[2] = 0.0;",3/16/2006
ProjectB - TIM - 2325,Code Review; DSS (Digital Sun Sensor) Build 2; 9-FEB-06; There appears to be an error in the calculation of Beta.,3,"There appears to be an error in the calculation of Beta; the last index in the code does not match the same pattern as the algorithm . To match the calculation from the algorithm document, the last term should use index “7” as follows: DssTbl->BetaCoeff[7] From the “ProjectB Attitude Control System Flight Software Algorithm Document” (464-ACS-REQ-0053, Revision B – Build 2), the calculation of Beta_c is listed as: Beta_c = arctan[Coeff_Beta_DSS(1) + Coeff_Beta_DSS(2) * Nb + Coeff_Beta_DSS(3) * sin(Coeff_Beta_DSS(4) * Nb + Coeff_Beta_DSS(5)) + Coeff_Beta_DSS(6) * sin(Coeff_Beta_DSS(7) * Nb + Coeff_Beta_DSS(8))] + Coeff_Beta_DSS(8) The code at Lines 428 – 432 lists the Beta calculation as: Beta_c = atan(DssTbl->BetaCoeff[0] + DssTbl->BetaCoeff[1] * DssPkt->NumDssBeta + DssTbl->BetaCoeff[2] * sin(DssTbl->BetaCoeff[3] * DssPkt->NumDssBeta + DssTbl->BetaCoeff[4]) + DssTbl->BetaCoeff[5] * sin(DssTbl->BetaCoeff[6] * DssPkt->NumDssBeta + DssTbl->BetaCoeff[7])) + DssTbl->BetaCoeff[8];",3/15/2006
ProjectB - TIM - 2324,Code Review; DSS (Digital Sun Sensor) Build 2; 9-FEB-06; No evidence found for converting the DSS output to decimal values.,3,"The algorithm document shows there should be a conversion from the DSS output to decimal numbers in the algorithm implemented by the code. No evidence could be found in the code for the conversion. However, there are numerous places in the code where the alpha (DssPkt à NumDssAlpha) and beta (DssPkt à NumDssBeta) measurements are used. From the “ProjectB Attitude Control System Flight Software Algorithm Document” (464-ACS-REQ-0053, Revision B – Build 2): Item #1 states: Convert output from the DSS into decimal number. This sets the DSS alpha and beta measurement numbers.",3/15/2006
ProjectB - TIM - 2323,Code Review; DSS (Digital Sun Sensor) Build 2; 9-FEB-06 : The comment “Value is NOT verified” is on some macros.,3,"In the file ac_tbldef.h, the comment for each macro definition of a constant includes the statement “Value is NOT verified.” IV&V cannot verify the values if the project is not certain of them. Examples /*-- Dss --*/ #define ACT_ALIGN_BCSFTODSSF_1_1 0 /* --Unlinked --Value is NOT Verified */ #define ACT_ALIGN_BCSFTODSSF_1_2 0 /* --Unlinked --Value is NOT Verified */ #define ACT_ALIGN_BCSFTODSSF_1_3 -1 /* --Unlinked --Value is NOT Verified */ #define ACT_ALIGN_BCSFTODSSF_2_1 0 /* --Unlinked --Value is NOT Verified */",3/15/2006
ProjectB - TIM - 2322,ACS Science Mode Test Scenario lacks some details in the steps to verify requirements,3,"The steps that verify requirements 2513.1, 2513.2, 2513.4 2541.6 and 2541.6.1 do not contain enough detail to ensure the requirements are fully verified.",3/15/2006
ProjectB - TIM - 2321,ACS Science Mode Test Scenario lines 115 and 119 are duplicate rows,5,"Lines 115 and 119 are duplicate verify steps, but there is nothing in between to change the variable.",3/15/2006
ProjectB - TIM - 2320,ACS Science Mode Test Scenario step 4 should not be contingent on previous failure to verify,3,"The requirement 2541.6.3 should only be tested in one location. It there is uncertainty whether a requirement could be tested earlier in the test, there should not be an attempt to verify it earlier. Test scenarios should not be unclear in the verification of requirements.",3/15/2006
ProjectB - TIM - 2319,"ACS Science Mode Test Scenario is too vague in stating ""generally approaches""",3,"Line 134 verifies that the variable ""generally approaches"" a value. Also, it does not give a time frame for approaching the value. The term ""generally approaches"" is not quantified and does not have specific pass/fail criteria. The verification of a requirement should not be left to the individual interpretation of each tester.",3/15/2006
ProjectB - TIM - 2318,ACS Science Moce Test Scenario verifies requirement by code review rather than by test,3,"The requirement 2541.5 being verified by code review rather than by one of the allowable testing methods. The only testing methods listed in the FSW Test plan are: Inspection, Demonstration, Analysis, and Unit Testing. Requirements should only be verified by one of the testing methods listed in the test plan.",3/15/2006
ProjectB - TIM - 2317,ACS Science Mode Test Scenario does not completely verify requirement 2513.3,3,"Requirement 2513.3 states that ""if enabled, and if a valid delta quaternion has been received,..."". Step 3 does not verify it is enabled or disabled. It also does not verify a valid delta quaternion has been received. There should be a computation of the quaternion before the delta quaternion adjustment occurs in order to verify the adjustment.",3/15/2006
ProjectB - TIM - 2316,ACS Science Mode Test Scenario does not verify computation of quaternion at 5 Hz,3,"The test scenario does not contain any verification that the Sun-pointing target quaternion is computed at 5 Hz as stated in requirement 2513. The requirement is traced to line 109 in the test, but that line does not verify the computation at 5 Hz.",3/15/2006
ProjectB - TIM - 2315,ACS Science Mode Test Scenario step 1 does not explicitly verify the requirements listed,3,"Step 1 of the test scenario states that ""the test case combinations satisfied the requirements 2542.1 and 2542.5."" This does not sufficiently verify these requirements. There is no explicit verification and there are no details to ensure proper verification.",3/15/2006
ProjectB - TIM - 2314,ACS Science Mode Test Scenario does not verify requirement 2541,3,"The test scenario lists requirement 2541 in the requirements section of the test scenario. However, there is no specific verification of this requirement and the requirement number is not listed during any of the steps.",3/15/2006
ProjectB - TIM - 2313,ACS Inertial Mode Test Scenario lacks some details in the steps to verify requirements,3,"The steps that verify requirements 2513.1, 2513.2, 2513.3,and 2531.5.1 do not contain enough detail to ensure the requirements are fully verified.",3/15/2006
ProjectB - TIM - 2312,"ACS Inertial Mode Test Scenario is too vague in stating ""generally approaches""",3,"Lines 131 and 132 verify variables ""generally approach"" a number. Also line 132 does not give a time frame for approaching 0. The term ""generally approaches"" is not quantified and does not have specific pass/fail criteria. The verification of a requirement should not be left up to the interpretation of an individual tester.",3/15/2006
ProjectB - TIM - 2311,ACS Inertial Mode Test Scenario verifies requirement by code review rather than by test,3,"The requirement 2531.5 being verified by code review rather than by one of the allowable testing methods. The only testing methods listed in the FSW Test plan are: Inspection, Demonstration, Analysis, and Unit Testing. Requirements should only be verified by one of the testing methods listed in the test plan.",3/15/2006
ProjectB - TIM - 2310,ACS Inertial Mode Test Scenario does not completely verify requirement 2513.3,3,"Requirement 2513.3 states that ""if enabled, and if a valid delta quaternion has been received,..."". Step 3 does not verify it is enabled or disabled. It also does not verify a valid delta quaternion has been received. Should there be a wait between lines 102 and 104 and a computation of the quaternion to compare against the quaternion using the delta quaternion?",3/15/2006
ProjectB - TIM - 2309,ACS Inertial Mode Test Scenario does not verify computation of the quaternion at 5 Hz.,3,"The test scenario does not contain any verification that the Sun-pointing quaternion is computed at 5 Hz as stated in requirement 2513. The requirement is traced to line 112 in the test, but that line does not verify the computation at 5 Hz.",3/15/2006
ProjectB - TIM - 2308,ACS Inertial Mode Test Scenario step 1 does not explicitly verify the requirements listed,3,"Step 1 of the test scenario states that ""the test case combinations satisfied the requirements 2532.1, 2532.5, and 2532.2."" This does not sufficiently verify these requirements. There is no explicit verification and there are no details to ensure proper verification.",3/15/2006
ProjectB - TIM - 2307,ACS Inertial Mode Test Scenario does not verify requirement 2532,3,"The test scenario lists requirement 2532 in the requirements section of the test scenario. However, there is no specific verification of this requirement and the requirement number is not listed during any of the steps. Requirement 2532 states ""(P) Inertial performance requirements shall be met.""",3/15/2006
ProjectB - TIM - 2306,ACS Inertial Mode Test Scenario does not verify requirement 2531.4,3,"The test scenario lists requirement 2531.4 in the requirements section of the test scenario. However, there is no specific verification of this requirement and the requirement number is not listed during any of the steps. Requirement 2531.4 states ""The ACS FSW shall compute an attitude control body torque for the current cycle while in Inertial Mode.""",3/15/2006
ProjectB - TIM - 2305,ACS Inertial Mode Test Scenario does not verify requirement 2531,3,"The test scenario lists requirement 2531 in the requirements section of the test scenario. However, there is no specific verification of this requirement and the requirement number is not listed during any of the steps. Requirement 2531 states ""The ACS FSW shall control the spacecraft attitude and rate while in Inertial Mode at 5 Hz.""",3/15/2006
ProjectB - TIM - 2304,ACS Inertial Mode Test Scenario does not verify requirement 2530,3,"The test scenario lists requirement 2530 in the requirements section of the test scenario. However, there is not specific verification of this requirement and the requirement number is not listed during any of the steps. Requirement 2530 states ""The ACS FSW shall manage entrance into Inertial Mode.""",3/15/2006
ProjectB - TIM - 2303,ACE EVD Table Load: CA_TblReply.hdr does not assign values to the CCSDS primary header.,3,"line 287, CCSDS_INC_SEQ( CA_TblReply.hdr ); Variable ""CA_TblReply.hdr"" is unassigned prior to being passed as a parameter to the function CCSDS_INC_SEQ. Function CCSDS_INC_SEQ is used to updating the sequence count in the CCSDS primary header. It has to be updated each time when a packet generated.",3/6/2006
ProjectB - TIM - 2302,"ACE EVD Table Load: In the structure/diagram, ""dest_addr"" is d_uword but in the code it is a pointer.",5,"line 252: void *TablePtr = (void *) CommitCmd-> dest_addr; /* pointer to table */ IV&V is not sure if ""dest_addr"" is a pointer or a u_dword. From the diagram on page 3, and from section 4.1 of the code review document (ProjectB_Table_Load_codereview_03032006b.doc), it shows the ""dest_addr"" is a u_dword. During the code review on March 06, 2006 held between IV&V (Ben Yang) and GSFC ProjectB ACS FSW team held at building 23 N406D, GSFC agreed to update the review document in section 4.1 to mention that the command format is reuse from heritage code of MAPS project.",3/6/2006
ProjectB - TIM - 2301,ACE EVD Table Load: Table Load Code: The comment on line 173 does not match the code.,4,"The comment on line 170 states that ""If the message caused a buffer overrun send an ERROR"" however the ""case SB_BUFF_OVERRUN"" is empty and falls through to the ""case SB_NORMAL."" line 118-141 as below: switch(SbStatus) { case SB_NO_MESSAGE: if ( NoAcsPacketMessageLimit == 0 ) { eventf(CA_TASK_ID, ""ACA200: No ACS Actuator Command Packet available.""); NoAcsPacketMessageLimit++; } ACE_ControlTable.BadImOkThisCycle = TRUE; break; case SB_BUFF_OVERRUN: case SB_NORMAL: NoAcsPacketMessageLimit = 0; break; default: break; } /* end switch on Actuator Command */",3/6/2006
ProjectB - TIM - 2300,ACE IF Test Scenario (tlm) does not list requirement 4160 as tested,4,"The ACE IF Test Scenario for telemetry verifies requirement 4160, but does not list it in the ""Requirements tested"" section.",3/1/2006
ProjectB - TIM - 2299,"ACE IF Test Scenario (tlm) lists requirement 4171, but does not test it",3,"The ACE IF Test Scenario for telemetry lists requirement 4171, which states ""The ACE FSW shall make available for downlink all acquired ACE assembly housekeeping data at the rate specified in the ProjectB ACE FSW command and telemetry description document"", in the requirements section of the test scenario. However, there is no specific verification of this requirement and the requirement number is not listed in the ""Requirements tested"" section after the step.",3/1/2006
ProjectB - TIM - 2298,"ACE IF Test Scenario (tlm) lists requirement 4111, but does not test it",3,"The ACE IF Test Scenario for telemetry lists requirement 4111, which states ""The ACE FSW shall make available for downlink the separation data"", in the requirements section of the test scenario. However, there is no specific verification of this requirement and the requirement number is not listed in the ""Requirements tested"" section after the step.",3/1/2006
ProjectB - TIM - 2297,ACE IF Test Scenario (restart) has a misleading comment about missing card,4,"In steps 2.1, 3.1 and 4.1, the 4th comment states the ""EVD card present/RWA card missing"". The steps below verify that both cards are missing. The comment is misleading as to what the scenario is actually verifying.",3/1/2006
ProjectB - TIM - 2296,"ACE IF Test Scenario (restart) lists requirement 4531, but does not test it",3,"The ACE IF Test Scenario for the restart/PCI lists requirement 4531, which states ""The ACE FSW shall handle the SDN C&DH FSW table load handshake"", in the requirements section of the test scenario. However, there is no specific verification of this requirement and the requirement number is not listed in the ""Requirements tested"" section after the step.",3/1/2006
ProjectB - TIM - 2295,"ACE IF Test Scenario (restart) lists requirement 4530, but does not test it",3,"The ACE IF Test Scenario for the restart/PCI lists requirement 4530, which states ""The ACE FSW shall obtain input data conversion parameters from user-adjustable tables"", in the requirements section of the test scenario. However, there is no specific verification of this requirement and the requirement number is not listed in the ""Requirements tested"" section after the step.",3/1/2006
ProjectB - TIM - 2294,"ACE IF Test Scenario (restart) lists requirement 4022 as ""not testable"".",3,"The requirement 4022, which states ""The FSW shall maintain the current processing state of the ACE FSW during a Warm Restart of the ACE processor"" is currently listed in the test scenario as ""Not testable"". This requirement needs to either be tested, or else revised to make it testable.",3/1/2006
ProjectB - TIM - 2293,"ACE IF Test Scenario (cmd) lists requirement 4511, but does not test it",3,"The ACE IF Test Scenario for command lists requirement 4511, which states ""The ACE FSW shall validate each ACE FSW command prior to execution"", in the requirements section of the test scenario. However, there is no specific verification of this requirement and the requirement number is not listed in the ""Requirements tested"" section after the step.",3/1/2006
ProjectB - TIM - 2292,"ACE IF Test Scenario (cmd) lists requirement 4510, but does not test it",3,"The ACE IF Test Scenario for command lists requirement 4510, which states ""The ACE FSW shall process ACE commands"", in the requirements section of the test scenario. However, there is no specific verification of this requirement and the requirement number is not listed in the ""Requirements tested"" section after the step.",3/1/2006
ProjectB - TIM - 2291,"AC IRU Code Build 2 - Functions ac_IruStaticCountsCheck & ac_IruCalcTemp declared, but never defined",4,"Line 700 Function ac_IruStaticCountsCheck declared, but never defined. Line 705 Function ac_IruCalcTemp declared, but never defined.",2/24/2006
ProjectB - TIM - 2290,ACS IRU test scenario Rollover requirement 2242.1b is not tested.,3,"The rollover requirement 2242.1b (""The ACS FSW shall determine rotation rate for each IRU axis, applying the following steps: b. if rollover occurred, adjust for raw signal roll-over"") is not tested in the scenario. Step 5 tests the validity of the IRU data, but is not verifying the processing of the delta counts.",2/22/2006
ProjectB - TIM - 2289,ACS IRU test scenario Requirement 2241 is not listed in the steps that test it.,5,"The requirement 2241 is not listed in the ""Requirements Tested"" section of steps 4.0 and 5.0. The requirement is verified by the steps, it is just not listed as being tested by the steps. Requirement 2241: ""The ACS FSW shall validate IRU data.""",2/22/2006
ProjectB - TIM - 2288,ACE IRU test scenario line 102 does not specify what the entire range is.,4,"Line 102 states ""Go through the entire range"" when incrementing the number of pulses per .05 seconds supplied to the ACE for each IRU every .05 seconds, but there is no reference to what the range is.",2/22/2006
ProjectB - TIM - 2287,ACE IRU test scenario - command rejected case (step 4.1.2) does not include verifying the command is not executed,3,"When the command is rejected, it is not verified that the command is rejected ""prior to [any] execution"" (req 4511) and that no execution occurs after the rejection (req 4511.2a). Requirement 4511 states ""The ACE FSW shall validate each ACE FSW command prior to execution."" Requirement 4511.2a states ""If the command is invalid, the ACE FSW shall not execute the command""",2/22/2006
ProjectB - TIM - 2286,ACE IRU test scenario - Rollover requirement 4262 might not be tested,3,"It is not clear from the scenario if the rollover requirement 4262 (which states ""... if ...rollover occurred, adjust for raw signal roll-over..."") is being tested. Requirement 4262: ""The ACE FSW shall determine the rotation rate for each IRU axis via the following steps:compute the change in counts since the time of the previous data setif rollover occurred, adjust for raw signal roll-over convert delta counts to rateapply a database-specified rate bias correction to form a rate about the IRU axis.""",2/22/2006
ProjectB - TIM - 2285,ACE IRU test scenario - Requirement 4142 traced to a step that does not verify it,3,"Verifying requirement 4142 (which states ""On receipt of command, the ACE FSW shall set indicators for the IRU sensitive axes to be used for IRU data processing"") in step 4.14.2 contradicts the requirement 4511.2 (which states ""If the command is invalid, the ACE FSW shall a. not execute the command"") that an invalid command will not be executed. If the command is not executed, the FSW cannot ""set the indicators"" for the IRU ""on receipt of command"". This requirement is not verified in the test steps and should not be verified for an invalid command.",2/22/2006
ProjectB - TIM - 2284,ACS Sun Acquisition test scenario: Requirement 2521 not verified,2,"The telemetry filter table is configured for 5 Hz but the rate of control for attitude and rate does not appear to be verified in the scenario as required by requirement 2521. Requirement 2521: ""The ACS FSW shall control the space¬craft attitude and rate while in Sun Acquisition Mode at 5 Hz."" Recommendation: Include a step that verifies the ACS FSW is controlling the attitude and rate at 5 Hz.",2/21/2006
ProjectB - TIM - 2283,ACS Sun Acquisition test scenario: Expected result not clearly stated,3,"In step 3 on line 127 the tester is instructed to calculate a difference and verify that this difference ""should approach zero"". It appears that only one value is being calculated and it is difficult to determine from one data point if it approaches zero. It is not clear how close to zero the value is expected to be. Recommendation: Specify a range of expected values that are considered acceptable for a successful test.",2/21/2006
ProjectB - TIM - 2282,ACS Sun Acquisition test scenario: Step 7 is ambiguous,3,"Scenario step 7 is ambiguous. It states ""Cold start the main processor, with an angle between BCS X-axis and apparent sun vector large enough but the CSS unit vector is still valid(TBD), and with all other conditions in the test case."" IV&V assumes that resolving the TBD will clarify the vector measurement but the phrase ""all other conditions in the test case"" is ambiguous. Recommendation: Clearly specify all necessary conditions so the exectuion of the tests are understandable and repeatable.",2/21/2006
ProjectB - TIM - 2281,Inst2 FSW Build Pre-Release D2: High Complexity scores for some functions may necessitate more IV&V analysis,3,"During the code analysis of the Inst2 Pre-Release Build D2 code, several functions in the build code had very high cyclomatic complexity (Halstead) scores associated with them. High Complexity scores indicate that there are many decision paths in the functions, and the greater the complexity score, the more complicated the function is. (The complexity score essentially indicates the number of test cases that must be devised to test the function.) Based upon this, IV&V has determined that testing of these functions will be a complicated effort, and that special attention and analysis is required - and should be applied - to verify and validate the Inst2 FSW code, especially the functions which had the higher complexity scores. In order to apply the rigor and intensity needed to properly verify and validate the reliability of the Inst2 FSW code, IV&V may need to analyze the code and the test artifacts associated with the subsequent (post-Pre-Release D2) releases of the Inst2 code. This will allow IV&V to systematically evaluate the code in smaller portions verses having to evaluate the whole final product / final release, since the final product release is very near the delivery date when the Inst2 code is scheduled to be delivered to the project.",2/21/2006
ProjectB - TIM - 2280,ACS Sun Acquisition test scenario: Requirements not tied to scenario steps,3,"Steps 3, 4, 5, and 6 do not specify which requirements they verify. These steps indicate that the requirements are verified in step 2 which is confusing since this step already occurred. Recommendation: Include a statement with each step indicating the requirements that are intended to be verified.",2/21/2006
ProjectB - TIM - 2279,ACS Sun Acquisition test scenario: Conditional Verification Step Is Ambiguous,4,"On line 88 the verification step for requirement 2521.4.1 is stated as a conditional ""If there are 4 RW active"". The similar case for 3 RW is on line 97, but it is not clear what to do if there are not 4 RW, or 3 RW active. Recommendation: The condition of 4 active RW needs to be verified first and then the proper calculations verified. If the step needs to remain as a conditional step for some reason then the scenario should specify what to do when the condition does not hold.",2/21/2006
ProjectB - TIM - 2278,ACS Sun Acquisition test scenario: Sun Acquisition Mode not verified,4,It is not clear from the test script that the system is verified to be operating in Sun Acquisition Mode. Recommendation: Include a step in the procedure to verify that the system is in Sun Acquisition Mode.,2/21/2006
ProjectB - TIM - 2277,ACS Sun Acquisition test scenario: Assumptions not documented,4,"The prerequisite conditions, utilities, procedures, assumptions and constraints fields on lines 43-51 are not complete. From the scenario: ================= 43 Prerequisite Conditions 45Utilities Used 47Procedures used 49 Prerequisite Conditions 51 Assumptions and Constraints Recommendation: Document necessary conditions, assumptions, etc or state ""none"" if there are not any.",2/21/2006
ProjectB - TIM - 2276,Guide telescope: Discrepancy between algorithm design and the source code for setting of sun biased vectors,3,"Setting of sun vectors appears to be made in the wrong location in the source code, that is, within the 'if' block shown below rather than after the 'if' block. Per the Guide Telescope algorithm design, sun vectors are set following a check for the biased value calculation. An examination of the source code shows that setting these values is within the 'if' block rather than after the 'if' block. As seen in this section extracted from the algorithm document, two sun vector values are set after the 'if' block. These lines are labeled with ****** Yet in the code shown below (lines 942 & 943) , the two sun vectors are set in the 'if' block. Algorithm ========= IF BiasedSun_YZMag > 1 BiasedSun_GtF(0,i) = 0 ELSE BiasedSun_GtF(0,i) = SQRT(1 – BiasedSun_YZMag) END BiasedSun_GtF(1,i) = Err_GT(0,i) ****** BiasedSun_GtF(2,i) = Err_GT(1,i) ****** The source code lines 935-944 are shown below. If the algorithm is followed, lines 942-943 should be outside of the 'if control block. if(TempValue < 0) { ProcData->BiasedSunGtF.Comp[0] = 1.0; ProcData->BiasedSunGtF.Comp[1] = 0.0; ProcData->BiasedSunGtF.Comp[2] = 0.0; ProcData->GtDataValidAcs = FALSE; } else { ProcData->BiasedSunGtF.Comp[0] = sqrt(TempValue); 942 ProcData->BiasedSunGtF.Comp[1] = ProcData->ErrorGTRadians[0]; 943 ProcData->BiasedSunGtF.Comp[2] = ProcData->ErrorGTRadians[1]; } /* end of if control block */",2/20/2006
ProjectB - TIM - 2275,"Guide Telescope Code Build 2: Computing biased sun vector, possible discrepancy between algorithm and code",3,"The Guide telescope algorithm design (step # 5) lists the error check following creation of the biased sun vectors as: IF BiasedSun_YZMag > 1 BiasedSun_GtF(0,i) = 0 Based on the algorithm, the sun unit vectors would be set to '0'. In the source code shown below, the element ""ProcData->BiasedSunGtF.Comp[0]"" at line 936 is set to '1.0'. Is this an error in the source code? Or is this correct because ""ProcData->BiasedSunGtF.Comp[0]"" is a vector along the X-axis and no bias is applied to such a vector? 935 if(TempValue < 0) { 936 ProcData->BiasedSunGtF.Comp[0] = 1.0; 937 ProcData->BiasedSunGtF.Comp[1] = 0.0; 938 ProcData->BiasedSunGtF.Comp[2] = 0.0;",2/20/2006
ProjectB - TIM - 2274,Guide Telescope Code Build 2: Possible incomplete FDC events raised for lit diodes 3 & 12,4,"For the case of when diodes 3 and 12 are lit, the Guide Telescope algorithm indicates that FDC events should be raised for ""SignalsAcq"" and ""SignalsLinear"". The source code at line 915 raises the following FDC event: AC_FaultDetNotify( FD_GT1_DIODE_ERROR + Gt) There is no indication in the code that the FDC events ""SignalsAcq"" and ""SignalsLinear"" are raised.",2/20/2006
ProjectB - TIM - 2273,Guide Telescope Code Build 2: Function ac_GTConvertData - no FDC event raised for delta packet time less than or equal to zero,4,"In the function ac_GTConvertData, a FDC event is not raised if the delta packet time is less than or equal to zero indicating that the packet data is in error.",2/20/2006
ProjectB - TIM - 2272,"Guide Telescope Code Build 2: In function ac_GTObtainData, default case of “switch(PipeStatus)” does not raise FDC event",4,"In the function ac_GTObtainData, the default case of “switch(PipeStatus)” does not raise a FDC event to indicate an invalid pipe status.",2/20/2006
ProjectB - TIM - 2271,Local functions in ac_guidetele.c should use static storage class,3,"The five local functions defined at lines 352 to 360 should use the static storage class (as defined in “C Coding Standard”, Flight Software Branch – Code 582, version 1.0b, 11/05/03) to ensure these functions are only used locally.",2/20/2006
ProjectB - TIM - 2270,Guide Telescope Code Build 2: Local enumeration for AC_GT_InControl_t used rather than global enumeration,4,The enumeration AC_GT_InControl_t defined in file ac_guidetele.h is defined locally for the guide telescope number. A global definition for identifying primary and backup telescopes should be used instead.,2/20/2006
ProjectB - TIM - 2269,"Guide Telescope Code Build 2: Use local enumeration for ""AC_Guidetelescope_t"" rather than global enumeration",4,The enumeration AC_Guidetelescope_t defined in file ac_guidetele.h is defined locally for the guide telescope number. A global definition for identifying telescope numbers should be used instead.,2/20/2006
ProjectB - TIM - 2268,"AC Star Tracker Code Build 2: Use of ""Magic Numbers"" instead of named constants",4,There are multiple instances where constant values are coded instead on using named constants even when named constants appear to exist. Line : Number : code fragment ------------------------------ 102 : AC_StParm_t Tracker[2]; 413 : uint16 AC_StParmTbl_end = sizeof (AC_StParmTbl_t)/2; /**< Table declaration for size */ 472 : for (i=0; i<2; i++){ 473 : for (j=0; j<3; j++){ 520 : for (i=0; i<2; i++){ 559 : if (StPkt.Att_Msg_Avail & 0x2){ 619 : if(fabs(Quat_GciFToStF_Err[StIndex].Comp[3] > 1.0)) { 626 : Quat_Error[StIndex] = 2.0* acos(Quat_GciFToStF_Err[StIndex].Comp[3]); 687 : if ((StPkt.Att_Msg_Avail & 0x2) || 722 : if ((StPkt.Att_Msg_Avail & 0x4) == 0){ /* rate valid if bit is zero */ 724 : Rate_StnF_STn[StIndex].Comp[0] = StPkt.Omega_X; 725 : Rate_StnF_STn[StIndex].Comp[1] = StPkt.Omega_Y; 726 : Rate_StnF_STn[StIndex].Comp[2] = StPkt.Omega_Z;,2/20/2006
ProjectB - TIM - 2266,AC DSS Code Build 2: Apparent error in DSS algorithm Beta calculation - last subscript wrong in calculating intermediate value Beta_c,2,"There is a difference in the calculation of Beta_c in the algorithm document as compared to the code. In the algorithm document the coefficients are subscripted beginning with one (1) and in the code the subscripts begin with zero (0), however the last term in both is subscripted with eight (8). The final subscript in the code should be seven (7). From the “ProjectB Attitude Control System Flight Software Algorithm Document” (464-ACS-REQ-0053, Revision B – Build 2: Beta_c = arctan[Coeff_Beta_DSS(1) + Coeff_Beta_DSS(2) * Nb + Coeff_Beta_DSS(3) * sin(Coeff_Beta_DSS(4) * Nb + Coeff_Beta_DSS(5)) + Coeff_Beta_DSS(6) * sin(Coeff_Beta_DSS(7) * Nb + Coeff_Beta_DSS(8))] + Coeff_Beta_DSS(8) From the code at Lines 428 – 432: Beta_c = atan(DssTbl->BetaCoeff[0] + DssTbl->BetaCoeff[1] * DssPkt->NumDssBeta + DssTbl->BetaCoeff[2] * sin(DssTbl->BetaCoeff[3] * DssPkt->NumDssBeta + DssTbl->BetaCoeff[4]) + DssTbl->BetaCoeff[5] * sin(DssTbl->BetaCoeff[6] * DssPkt->NumDssBeta + DssTbl->BetaCoeff[7])) + DssTbl->BetaCoeff[8]; Notice that the last subscript of both is eight (8) whereas the last subscript for the code should be seven (7).",2/20/2006
ProjectB - TIM - 2265,ACE CSS test scenario - Requirement 4232 Not Tested,3,"Requirement 4232 is intended to be tested by scenario step 3 but it is not clear that the sun direction vector value is read out and compared to a set of expected values. Requirement 4232: ""If the CSS data are valid, the ACE FSW shall convert the set of CSS matched pair differences to a sun direction vector in the spacecraft body reference frame.""",2/20/2006
ProjectB - TIM - 2264,ACS CSS test scenario - Requirement 4231.3 Not Tested,3,"Requirement 4231.3 is intended to be tested by scenario step 3 but it is not clear that the computed photo-electric current values are read out and compared to a set of expected values. Requirement 4231.3: ""The ACE FSW shall compute the implied photo-electric current for each CSS based on its raw CSS measurement.""",2/20/2006
ProjectB - TIM - 2263,ACS CSS test scenario - Housekeeping Data Not Identified,4,"Requirement 4132 is tested in step 3 but the scenario does not make clear which values are housekeeping data. The full set of housekeeping data needs to be identified so that the requirement can be verified. Requirement 4132: ""The ACE FSW shall read housekeeping data from each of the CSSs.""",2/20/2006
ProjectB - TIM - 2262,ACE CSS test scenario - Inconsistent Terminology in Test Scenario,4,"Requirement 4131 is tested in step 3 but the exact set of values being tested is not clear. The list of values in the test scenario uses slightly different terminology than the Data Processing Table from the algorithm document (464-ACS-REQ-0054) making a one-to-one mapping of these values ambiguous. This terminology should be consistent so that it is clear exactly which values are being read from the sensor. Requirement 4131: ""The ACE FSW shall read sensor measurement data from each of the CSSs associated with a given ACE.""",2/20/2006
ProjectB - TIM - 2261,AC DSS Code Build 2: Conversion of the output from the DSS into decimal number is not performed,3,"From the “ProjectB Attitude Control System Flight Software Algorithm Document” (464-ACS-REQ-0053, Revision B – Build 2): Item #1 states: Convert output from the DSS into decimal number. This sets the DSS alpha and beta measurement numbers. No evidence could be found in the code for this conversion, although there are numerous places in the code where the alpha (DssPkt à NumDssAlpha) and beta (DssPkt à NumDssBeta) measurements are used. From ProjectB DSS Build 2 Code Review: 1. Convert output from the DSS into decimal number. Na = Convert Num_DSS_Alpha into a decimal number Nb = Convert Num_DSS_Beta into a decimal number",2/20/2006
ProjectB - TIM - 2260,AC DSS Code Build 2: Potential infinite loop if function “SB_ReceiveCopy” does not retrieve a new packet,3,"Function ac_DssGetPacket, Line 516: If the pipe status is ‘normal’ (the pipe is empty) or there is a software bus error, and the received DSS packet has an invalid stream ID, the procedure eventf is called. Processing will remain in the while loop. From ProjectB DSS Build 2 Code Review: 492 while ((PipeStatus == SB_NORMAL) || (PipeStatus == SB_BUFF_OVERRUN)) 493 { 494 495 PipeStatus = SB_ReceiveCopy(AC_DSS_PID, 496 &NewDssPkt, 497 SB_CHECK); 498 499 switch (PipeStatus) 500 { : 508 Case SB_NORMAL: 509 if (CCSDS_RD_SID(NewDssPkt.PriHdr) == DSS_DATA_SID) 510 { 511 FlagNewDssPkt = TRUE; 512 OS_MemCpy(DssPkt, &NewDssPkt, sizeof(AC_DssDataPkt_t)); 513 } 514 else 515 { 516 eventf(AC_TASK_ID, ""xAC%03u Received DSS packet with invalid stream ID: 0x%04x"", 517 AC_EID_INV_DSS_SID, 518 NewDssPkt.PriHdr.StreamId); 519 } 520 break; : 526 }",2/20/2006
ProjectB - TIM - 2259,AC IRU Code Build 2: Code does not satisfy requirement 2242.2,3,"The code does not satisfy requirement 2242.2. IV&V was unable to find code checking that rate of an axis exceeds “IRU saturation” and as a consequence notifying the FDC. Requirement 2242.2: If the estimated rate for an IRU axis exceeds the database-specified “IRU saturation” limit, the ACS FSW shall a. substitute a fixed, database-specified rate while maintaining the sign of the estimated rate b. notify FDC (if enabled) with note – CMP 130, 300, 301 R: Robust fault detection & response",2/17/2006
ProjectB - TIM - 2258,AC IRU Code Build 2: Variable “ac_IruStaticData” should be declared static,4,According to “NASA582code_standards_c” the variable “ac_IruStaticData” should be declared static. The array variable “ac_IruStaticData” is commented as local to the file and the standards guide indicates file scope variables be declared as “static.” 685 /** 686 * IRU static data. 687 */ 689 ac_IruStaticData_t ac_IruStaticData[ACS_NUM_ACE];,2/17/2006
ProjectB - TIM - 2257,AC IRU Code Build 2: There are ternary conditional statements that are difficult to read.,4,The formatting of the ternary conditional statements make the statements difficult to read. According to “NASA582code_standards_c” non-primary operators should be surrounded by spaces. IV&V suggests the inequality operator and its arguments should be surrounded by parenthesis to visually associate the members of the expression. From document “ProjectB Build 2 IRU Code Review.doc”: 846 AC_IruProcData[AceId].RateIruAlign[i][0] = ZeroRowIndex[i] != 847 1?TempRateAlign.Comp[0]:TempRateAlign.Comp[1]; 848 AC_IruProcData[AceId].RateIruAlign[i][1] = ZeroRowIndex[i] != 849 3?TempRateAlign.Comp[2]:TempRateAlign.Comp[1];,2/17/2006
ProjectB - TIM - 2256,AC IRU Code Build 2 - violation of coding standards on naming of new type,4,"file - ac_iru.h Line 164 The struct Matrix3x2d should have the _t appended to the new struct name, it is a violation of coding standards to declare a new type and not have the _t applied as the naming convention. In this case, it was decided that the struct name looked too much like a math function without the _t notation.",2/17/2006
ProjectB - TIM - 2255,AC IRU Code Build 2.0 - no comment signaling end of for loop,4,"function - AC_IruProcessData file - ac_iru.c This function has complex, nested for loops. During the walkthrough, it was noted that there was a violation of coding standards with respect to bracketing for loops. There was a missing bracket on line 785, but a close bracket existed on 829. In addition to adding a missing bracket, IV&V wants a comment on line 829 to indicate the end of the for loop.",2/17/2006
ProjectB - TIM - 2254,AC IRU Code Build 2.0 - Buffer underflow/overflow possibility due to unsigned integer usage and no range check,3,"Function - AC_IRUProcessData File - ac_iru.c The following lines perform a subtraction on unsigned integers: 854 BodyF_X_Index = ACE_GET_IRU_ACTIVE_AXIS(RawData,0)-1; 855 BodyF_Y_Index = ACE_GET_IRU_ACTIVE_AXIS(RawData,1)-1; 856 BodyF_Z_Index = ACE_GET_IRU_ACTIVE_AXIS(RawData,2)-1; Since the variables starting with the prefix BodyF are unsigned integers, there is a possibiltiy that a buffer underflow/overflow might occur and an incorrect value be assigned to these variables. This will cause the resultant transformation of body rates to body frame to be incorrect and broadcast incorrect/corrupted rate and drift information, which may compromise the spacecraft. The solution is to perform a range check on these BodyF variables, moving the check to the beginning of the function, and notify FDC to bail out of this function if there is an issue with these variables.",2/17/2006
ProjectB - TIM - 2241,C&DH Build 1.2.0 - unused files,4,The following files are not used by the build - These files make reference to a 1773 bus instead of the 1553 bus - files are outdated. cpu\main\cdh\xb\xbswpace.c cpu\main\cdh\xb\xbm_asy.c cpu\main\cdh\xb\xbm_asy.h,12/22/2005
ProjectB - TIM - 2240,ACE Build 1.0.0: Function is defined but is prototyped in a .c file instead of a .h file,4,The ACE_SD_TaskMain function is defined in file cpu\ace\tasks\sd\ace_sensor_data_task.c at line 351 but the function declaration is in cpu\ace\all\config\osobjtab.c at line 44 instead of cpu\ace\tasks\sd\ace_sensor_data_task.h.,12/19/2005
ProjectB - TIM - 2239,ACE Build 1.0.0: Function is declared and is called several times but never defined,3,"The Fixed_OS_PciBusWriteWord function is declared in cpu\ace\tasks\lib\ace_utilities.h at line 51. It is called several times in file ace_IsolationValve_task.c at lines 415, 421, 427, 433, 439, 445, 451, 457, 463, 469, 562, 568, 574, 580, 586, 592, 598, 604, 610, and 616. It is never defined in cpu\ace\tasks\lib\ace_utilities.c or in any other file in the ACE Build 1.0.0.",12/19/2005
ProjectB - TIM - 2238,ACE Build 1.0.0: Incorrect comment at the end of function SendActuatorCommandsToHW,4,There is an incorrect comment at the end of the SendActuatorCommandsToHW function in file cpu\ace\tasks\ca\ace_command_actuators_task.c. Comment /* End of CA_TaskMain */ should be changed to /* End of SendActuatorCommandsToHW */ at line 847.,12/19/2005
ProjectB - TIM - 2237,ACE Build 1.0.0: Unclear comments in CA_TaskMain function,4,"There are four unclear comments in the CA_TaskMain function in file cpu\ace\tasks\ca\ace_command_actuators_task.c. Each comment states that an error message is to be sent, but no error message is sent in either case. Code: 289 - /* Got an SB return code that should never arrive. Send an ERROR message. */ 290 default: 291 break; 292 293 } /* end switch on Actuator Command */ 365 /* Got an SB return code that should never arrive. Send an ERROR message. */ 366 default: 367 break; 368 369 } /* end of Ground Command Switch */ 319 switch( SbStatus ) /* Ground Command Switch*/ 320 { 321 /* If no message was present send an ERROR. The message MUST be available or we've had a SB failure. */ 322 case SB_NO_MESSAGE: 323 break; 326 /* If the message caused a buffer overrun send an ERROR. Message was transfered. */ 327 case SB_BUFF_OVERRUN:",12/19/2005
ProjectB - TIM - 2236,GCE Build 1.0.0: Return data is wrong type for GI_ReadEotzEnable function declaration,3,"The GI_ReadEotzEnable function returns the variable data, which is a uint32 data type. The function is declared, however, in file, cpu\gce\tasks\gi\giglobal.c, to return a boolean data type.",12/19/2005
ProjectB - TIM - 2235,C&DH Build 1.2.0 - ACS - unused function AC_EvdResetPktCounters,4,File: cpu\main\acs\ac\code\ac_evd.c Function: AC_EvdResetPktCounters is not used,12/15/2005
ProjectB - TIM - 2234,C&DH Build 1.2.0 - ACS - delete ep_tablecons.h from MKS,4,"delete ep_tablecons.h from MKS This looks like heritage ephemeris code macro definitions - these macro definitions are causing a very large number of macro clashes, which IV&V has identified as false positives.",12/15/2005
ProjectB - TIM - 2233,C&DH Build 1.2.0 - Unused return value (cpu2) in XB_link_command_blocks,4,"File: cpu/main/cdh/xb/xbsched.c Function: XB_link_command_blocks Variable cpu2, returned from function TO_CMD at line 136, is never used in the XB_link_command_blocks function. Code: 136 cpu2 = TO_CMD(bcrt2);",12/15/2005
ProjectB - TIM - 2232,C&DH Build 1.2.0 - Array out of bounds error in HD_MonitorKaCard.,3,"File: cpu/main/cdh/hd/hdtask.c Function: HD_MonitorKaCard If the case of KAB_STATUS_SID is selected, an index greater than 1 will be passed to the HD_NoGoodData array if HD_MonitorKa[KaDevice - HD_OFFSET_DEV_KA] is equal to HD_ENABLED. The HD_NoGoodData array has only 2 elements and can only have a maximum index value of 1. Passing the HD_NoGoodData array a value greater than 1 causes an array out of bounds condition. Code: 550 case KAB_STATUS_SID: 551 HD_ProcessKaPacket(HD_DEV_KA_B); 552 HD_KaCommBPktCnt++; 553 break; 917 if (HD_MonitorKa[KaDevice - HD_OFFSET_DEV_KA] == HD_ENABLED) 918 HD_MonitorKaCard(KaDevice, (HD_KaHKTlmPkt_t *) HD_CmdpipePktPtr); 1686 if(ActiveChans > 0) 1687 { 1688 if(((GoodChans != 0) || (BadChans == 0)) && 1689 ((HD_NoGoodData[KaDevice] & HD_TIMEOUT_BAD_VCDU) == 0)) 1690 HD_NoGoodData[KaDevice]++; 1691 else 1692 HD_NoGoodData[KaDevice] = 0; 1693 }",12/15/2005
ProjectB - TIM - 2231,C&DH Build 1.2.0 - Dereferencing a null pointer error in XB_chain_next_work_unit,3,"File: cpu/main/cdh/xb/xbsched.c Function: XB_chain_next_work_unit If wu is not null or is null, wu is dereferenced at line 261. If pointer executing_wu_tail is valid, wu is also dereferenced at line 259. wu should not be dereferenced if it is null. Code: 255 if(!wu) 256 eventf(xb_task_id, """" %s999Assert Not Work Unit"""", xb_mnemonic); 257 258 if (executing_wu_tail) 259 XB_link_command_blocks(executing_wu_tail, wu->head); 260 261 executing_wu_tail = wu->tail;",12/15/2005
ProjectB - TIM - 2230,C&DH Build 1.2.0 -: Dereferencing a null pointer error in XB_makewus.,3,"File: cpu/main/cdh/xb/xbmakewu.c Function: function XB_makewus If XB_makewus is called and ios.count is zero, iop_makewus will not be less than last_io_makewus and the while condition will fail. If the while condition fails, the wup pointer remains null and is dereferenced at line 392. ios.count should be verified to be not zero before XB_makewus is called. Code: 240 work_unit_access XB_makewus(io_spec_access ios, channel_id_t cid) 241 { 242 work_unit_access wus; true 243 work_unit *wup = NULL; 244 u_word temp; 245 uint16 ThisRT = XB_NORMAL_USED_RT_MAX; 246 extended_command_block *tptr; 247 248 wus.count = 0; 249 250 iop_makewus = ios.ptr; 251 last_io_makewus = iop_makewus + ios.count; 252 253 254 /* 255 ** This loop builds as many work units as it takes to implement 256 ** all of the io specified in 'ios' 257 */ 258 259 while(iop_makewus<last_io_makewus) 392 tptr = TO_CMD(wup->tail);",12/15/2005
ProjectB - TIM - 2229,C&DH Build 1.2.0 - Array out of bounds error in HD_GetVCDUCount,3,"File: cpu/main/cdh/hd/hdtask.c Function: function HD_GetVCDUCount the Location variable's maximum value is (HD_MAX_LINKS - 1) * 10. This value is greater than the VCDUCounters array maximum number of elements Code: 1632 for(i = 0; i < HD_MAX_LINKS; i++) 1633 { 1634 if((HD_LinkTable[i].MasterDev == KaDevice) && 1635 (HD_InternalTable[i].Enabled == HD_ENABLED)) 1636 { 1637 ALink = i; /* remember a link on this card, any link is fine */ 1638 1639 /* Extract the VCDU count from KA HK TLM */ 1640 VCDUCount = HD_GetVCDUCount((uint16) HD_KA_VCDU_NORM(i), (HD_KaHKTlmPkt_t *) PktPtr); 1771 uint32 HD_GetVCDUCount(uint16 Location, HD_KaHKTlmPkt_t *PktPtr) 1772 { 1773 uint32 Count; 1774 1775 Count = (uint32) (PktPtr->VCDUCounters[Location + 1]); 1776 Count = (uint32) HD_KA_VCDU_SHIFT(Count); 1777 Count += (uint32) (PktPtr->VCDUCounters[Location]); 1778 1779 return Count; 1780 1781 } /* end HD_GetVCDUCount(uint16 Location, HD_KaHKTlmPkt_t *PktPtr) */",12/15/2005
ProjectB - TIM - 2228,C&DH 1.2.0 - Macro Clash WORDS_IN,3,The macro clash occurs in the following two files: fsw\shared\inc\ccsds_vcdu.h fsw\cpu\main\cdh\xb\xb.h,12/15/2005
ProjectB - TIM - 2227,C&DH Build 1.2.0 - Macro clash EEPROM,3,EEPROM is defined in two places with different values fsw\platform\ppc\inc\osplatform.h fsw\shared\inc\gnpkt.h,12/15/2005
ProjectB - TIM - 2226,C&DH Build 1.2.0 - Directory should not be part of the build,4,The directory fsw\cpu\main\a-cdh should not be part of the build. It is not specified in the flight software directory.,12/15/2005
ProjectB - TIM - 2225,ACEA_ACS_BRW_PROCESS Test Process: Inconsistencies With Requirements Verification,4,"As part of its effort to close TIMS related to the ACS & ACE RWA Test Scenario Review, IV&V had to review test procedure acea_acs_brw_process.prc, dated January 28, 2005. Even though the test procedure precedes the test scenario by three months, the procedure was still considered the current version at the time IV&V tried to close the TIMs. While reviewing the test procedure, IV&V noted the following issues: 1.) The Requirements Tested section only lists one requirement -- 1313. However, 23 requirements are defined as local variables. 2.) The Procedures Called section lists four procedures. However, there are as many as four other procedures that are probably called: ut_tlmupdate, ut_loadtable, ut_vec_transform, and ut_cleansys. 3.) The RWA verification test matrix (rvtm_rwa_build1.xls) allocates requirement 2270 to acea_acs_brw_process.prc; however, this requirement is not found in the test procedure. 4.) Rvtm_rwa_build1.xls allocates requirement 2271.3.1 to this test procedure; however, this requirement is not specifically cited in this test procedure. Nonetheless, it appears part of the requirement is verified in step 6. Step 6 has IF statements that check for fewer than 3 RWs being powered on, and FDC is notified. But part b of requirement 2271.3.1 does not appear to be verified. (Reqt 2271.3.1: ""If fewer than three RWs are powered on, the ACS FSW shall a. notify FDC (if enabled) b. make available for downlink knowledge of the anomaly."") 5.) Of the 23 local variables defined for requirements, two are not found in the steps -- reqt_2271g_pass and reqt_4430_pass. 6.) Of the 23 local variables defined for requirements, only 10 have a pass/fail status called (i.e., ut_pfindicate): 2271, 2272, 2272.1.1, 4150, 4151, 4152, 4154, 4431, 4431.1, and 4431.5. 7.) At the end of step 2, a pass/fail indication is assigned to reqt 2271 based on an IF condition that checks only three of the seven components of reqt 2271. The IF condition checks 2271a, 2271b, and 2271c, but does not check 2271d, 2271e, 2271f, and 2271g, all of which appear in subsequent steps. Also requirements 2271a and 2271c are also evaluated later in step 6, yet the pass/fail status for reqt 2271 has already been set in step 2. 8.) Step 11 checks for wheel speed outside of low jitter range. Inside of the first DO LOOP, the buf[1,1] and buf[1,2] appear to statically assign a value in those array locations even though the loop occurs four times. Not sure if that was intended. The second DO LOOP uses a dynamic allocation (buf[i,1] and buf[i,2]).",12/13/2005
ProjectB - TIM - 2224,ACS CSS: AC_CssProcData_t structure contains doubles but is not double word aligned,3,"The AC_CssProcData_t structure, defined in ac_css.h lines 108-134, contains variables of type double, nine variables of type unsigned 32-bit integer (boolean), and two variables of type 8-bit integer. Since the structure contains a mix of doubles and integers, the structure should be double word aligned, but it is not. To be double word aligned, the structure's size must be divisible by 8. The AC_CssProcData_t structure's total size is 170 bytes and is not divisible by 8. A 16-bit (2 byte) pad and a 32-bit (4 byte) pad should be added to the structure to ensure that the structure is double word aligned.",12/7/2005
ProjectB - TIM - 2223,ACS CSS: AC_CssParmTbl_t structure contains doubles but is not double word aligned,3,"The AC_CssParmTbl_t structure, defined in ac_css.h lines 141-159, contains variables of type double and two variables of type unsigned 16-bit integer. Since the structure contains a mix of doubles and integers, the structure should be double word aligned, but it is not. To be double word aligned, the structure's size must be divisible by 8. The AC_CssParmTbl_t structure's total size is 284 bytes and is not divisible by 8. A 32-bit (4 byte) pad should be added to the structure to ensure that the structure is double word aligned.",12/7/2005
ProjectB - TIM - 2222,1553 XB Test Procedure: SBC_BXB_Restart Has Inconsistent Requirements Tracking,4,"1553 XB Test Procedure SBC_BXB_Restart, dated 9/23/05, has inconsistencies for the tracking of the requirements to be tested. Reqs 1001, 1004, and 1006 are listed in Requirements Tested and in the Scenario Sequence description; however, they are not defined as variable, found in the steps, or provided a status in the requirements verification summary.",12/5/2005
ProjectB - TIM - 2221,1553 XB Test Procedure: SBC_BXB_ChannelTest Has Inconsistent Requirements Tracking,4,"1553 XB Test Procedure SBC_BXB_ChannelTest, , dated 9/23/05, has inconsistencies for the tracking of the requirements to be tested. 1. Req 1206 is listed in the test procedure and is defined as a variable and reported in the requirement verification summary, but it's not listed in the Requirements Tested. 2. The test procedure needs a test description.",12/5/2005
ProjectB - TIM - 2220,1553 XB Test Procedure: SBC_BXB_1553Interface Has Inconsistent Requirements Tracking,3,"1553 XB Test Procedure SBC_BXB_1553Interface, dated 9/23/05, has inconsistencies for the tracking of the requirements to be tested. 1. Req 1205 is defined as a variable and assigned a status in the requirement verification summary (RVS), but is not listed in Requirements Tested. 2. Req 1206 is listed in Scenario Sequence description's step 1, but is not listed in Requirements Tested, and is not assigned a variable or status in the RVS. 3. Req 2001 is listed in the Requirements Tested, but is not assigned to a step or assigned to a variable, and is not in the RVS. 3. Reqs 2002, 2003, 2004, and 2005 are listed in the Requirements Tested, but are not assigned to any steps, except for 2003, which is only in the Sequence Scenario description. These four reqs are not defined as variables nor reported in the RVS.",12/5/2005
ProjectB - TIM - 2219,1553 XB Test Procedure: SBC_BXB_TlmTest Has Inconsistent Requirements Tracking,3,"1553 XB Test Procedure SBC_BXB_TlmTest, dated 9/23/05, has inconsistencies for the tracking of the requirements to be tested. 1. Req 1402 is listed in Requirements Tested, but is deprecated in step 2.4, and is not assigned a variable or reported in the requirements verification summary (RVS) at the end of the test proc. 2. Req 2003 is listed in Requirements Tested, but step 4.2 in the Scenario Sequence description says the req is deleted. No variable is assigned and the req is not reported in the RVS at the end of the test proc. 3. Reqs 1301 and 1302 are defined as variables, but are not listed in the Requirements Tested. Appears these two reqs are tested in step 1. Update 11/10/2006: Issues #1 and #2 are no longer valid because requirements 1402 and 2003 are deleted. Add #4. Req 1403 should be added to the ""Requirement Tested"" section",12/5/2005
ProjectB - TIM - 2218,1553 XB Test Procedure: SBC_BXB_CommmandTest Has Inconsistent Requirements Tracking,3,"1553 XB Test Procedure SBC_BXB_CommmandTest, dated 9/23/05, has inconsistencies for the tracking of the requirements to be tested. 1. Req 1212 is defined as a variable and reported with a status in the XB Command Test Requirement Verification Summary (RVS), but it's not listed in Requirements Tested or assigned to a step. 2. Reqs 1213 and 1214 are listed in step 2 but are not shown in Requirements Tested. Also, req 1213 is commented out of the variable definitions as being tested in badcommandtest.prc; reqs 1213 and 1214 are commented out of the RVS as being tested in badcommandtest.prc. 3. Req 1215 is not listed in Requirements Tested, but it is listed in step 12 even though the Scenario Sequence description for step 12 says the req to be tested is TBD. Req 1215 is also defined as a variable and reported in the RVS. 4. Req 1216 is not listed in Requirements Tested and is not assigned to a step, but it is defined as a variable and reported in the RVS. 5. Reqs 1204 and 1205 are listed in Requirements Tested and assigned as variables but are not reported in the RVS. Updated 11/10/06: For #1 above: There is no code for testing the req 1212. The variable for checking this requirement is just set to ""PASS"" as below. local reqt_1212 = ""P"" For #2 above: The variable for checking requirement 1214 - ""reqt_1214"" is never declared before using. UPDATE 5/1/07 - see res chron dated 5/1/07 for more information.",12/5/2005
ProjectB - TIM - 2217,1553 XB RVTM -- Requirements 1213 and 1214 Are Not Allocated to a Test Procedure,4,"IV&V discovered the following issue while closing TIMs related to the 1553 XB Test Scenario Review. The date of any listed test procedure is 09/23/2005, unless otherwise noted. SBC_BXB_BadCommandTest tests requirements 1213 and 1214. These two reqs were not in the original ProjectB FSW Build Verification RVTM associated with the 1553 XB Test Scenario Review. IV&V has an updated RTM extract (dated November 2005), and reqs 1213 and 1214 are in this updated RVTM. However, the two reqs are not allocated to a test procedure. IV&V believes the RVTM should allocate reqs 1213 and 1214 to SBC_BXB_BadCommandTest.",12/1/2005
ProjectB - TIM - 2216,1553 XB Test Procedure Review -- SBC_BXB_CommandTest May Not Properly Execute RAW READ,4,"IV&V discovered the following issue while closing TIMs related to the 1553 XB Test Scenario Review. The date of any listed test procedure is 09/23/2005, unless otherwise noted. SBC_BXB_CommandTest does not appear to address req 1205 in step 5. Test calls for sending a RAW READ command to read from a valid RT. Unclear if step 5 executes this because there’s a WRITE command and ut_sendrawcmd: WRITE “raw cmd = 0x”, csummed_cmd ut_sendrawcmd “SBC_XB” {csummed_cmd} These lines are the same as in step 4, which verifies RAW WRITE command; but step 5 does have a different parameter for csummed_cmd and the description for step 5 indicates the RT_transmit/receive bit should be set to 1 instead of 0.",12/1/2005
ProjectB - TIM - 2215,1553 XB Test Procedure Review -- Verification of Command Counters in SBC_BXB_ConfigureTest and SBC_BXB_CommandTest,4,"IV&V discovered the following issue while closing TIMs related to the 1553 XB Test Scenario Review. The date of any listed test procedure is 09/23/2005, unless otherwise noted. Test procedure SBC_BXB_ConfigureTest, which verifies req 1203, states the expected values for the command counters need to be verified (command error counter remains unchanged; command execution counter increments by 1). It’s unclear how and where this is done. The test procedure identifies two local variables, prev_cmdcnt and prev_cmdec, but the variables do not appear to be used in the test. Perhaps the updates to these counters occurs in the utilities procedure, but IV&V did not have access to the procedure. The same is true for most of the steps (except 3, 5, and 11) in test procedure SBC_BXB_CommandTest.",12/1/2005
ProjectB - TIM - 2214,GCE_BGI Test: PROC gcea_bgi_coldstart.prc appears to test Requirement 5150 but does not state so per scenario document.,4,"For ProjectB-TIM-1967 IV&V noted that the RVTM dated 3-24-05 lists requirement 5150 as being tested by gce_bgi_coldstart, but that the scenario document ProjectB GCE Gimbal Interface (GI) and Analog (AN) Build Verification Test Scenarios dated 4/11/2005 does not list 5150. IV&V received an updated RVTM dated 5-13-05 which no longer lists requirement 5150 as being tested by gce_bgi_coldstart which seems to address the original issue cited in ProjectB-TIM-1967, hence ProjectB-TIM-1967 has been closed. However, in reviewing PROC gcea_bgi_coldstart.prc dated 8/11/05, although the PROC does not explicitly list that it is testing Requirement 5150, Step 6 in this PROC does appear to test 5150 since it is sending the command for getting analog channel and read its value for digitized downlink. Step 6 does have instructions to print out if the analog data was downlinked (see below). Although Step 6 within the PROC looks to be and is stated to specifically test Requirement 5033 it still appears to partially or fully satisfy Requirement 5150 whether Step 6 passes or fails for 5033. Tester may want to clarify if indeed Step 6 also tests 5150 and if so, should update the PROC to say so. ut_sendcmd (""GCEA_AN_GET_ANALOG GIC CHANNEL = 12"") ; -Z el isolation rel status IF ( UT_SC_Status = UT_SC_Success) THEN IF (GIC_CARD_STATUS = ""no_gic"") then WRITE "" Analog Task allowing access to missing card"" reqt_5033_pass = ""F"" endif ut_tlmwait GCEA_AN_ANALOG_CHANNEL 12 IF (UT_TW_STATUS = UT_Success) THEN WRITE "" Correct channel downlinked!"" WRITE ""Downlinked Value "", GCEA_AN_ANALOG_DATA WRITE "" -z el iso relay Value "", GCEA_AN_MZEL_ISO_RELAY ELSE........",11/14/2005
ProjectB - TIM - 2213,GCE_BGI Test: PROC gcea_bgi_warmstart.prc appears to test Requirement 5150 but does not state so per scenario document,4,"For ProjectB-TIM-1989 IV&V noted that the RVTM dated 3-24-05 lists requirement 5150 as being tested by gce_bgi_warmstart, but that the scenario document ProjectB GCE Gimbal Interface (GI) and Analog (AN) Build Verification Test Scenarios dated 4/11/2005 does not list 5150. IV&V received an updated RVTM dated 5-13-05 which no longer lists requirement 5150 as being tested by gce_bgi_warmstart which seems to address the original issue cited in ProjectB-TIM-1989, hence ProjectB-TIM-1989 has been closed. However, in reviewing PROC gcea_bgi_warmstart.prc dated 9/1/05, although the PROC does not explicitly list that it is testing Requirement 5150, Step 5 in this PROC does appear to test 5150 since it is sending the command for getting analog channel and read its value for digitized downlink. Step 5 does have instructions to print out if the analog data was downlinked (see below). Although Step 5 within the PROC looks to be and is stated to specifically test Requirement 5033 it still appears to partially or fully satisfy Requirement 5150 whether Step 5 passes or fails for 5033. Tester may want to clarify if indeed Step 5 also tests 5150 and if so, should update the PROC to say so. ut_sendcmd (""GCEA_AN_GET_ANALOG GIC CHANNEL = 12"") ; -z el iso relay IF ( UT_SC_Status = UT_SC_Success) THEN IF (GIC_CARD_STATUS = ""no_gic"") then WRITE "" Analog Task allowing access to missing card"" reqt_5033_pass = ""F"" endif ut_tlmwait GCEA_AN_ANALOG_CHANNEL 12 IF (UT_TW_STATUS = UT_Success) THEN WRITE ""Correct channel Downlinked!"" WRITE ""Downlinked Value "", GCEA_AN_ANALOG_DATA WRITE "" -z el iso relay Value "", GCEA_AN_MZEL_ISO_RELAY ELSE ........",11/14/2005
ProjectB - TIM - 2212,GCE_BGI Test: Requirement 5430 not listed for gimbal table in the ProjectB GCE Gimbal Interface (GI) and Analog (AN) Build Verification Test Scenarios,5,"While verifying and closing ProjectB-TIM-1988 and reviewing PROC gcea_bgi_gimbal_table.prc, Requirement 5430 is explicitly tested as Pass/fail in both Steps 2 & 3. The main concern for TIM-1988 is resolved by the detailed PROC and the TIM was closed. A minor editorial issue was noted however: a minor editorial omission for not listing 5430 in Step 2 & 3 for gimbal table in the ProjectB GCE Gimbal Interface (GI) and Analog (AN) Build Verification Test Scenarios dated 4/11/2005. The PROC and the RVTM both list 5340 as being tested by this scenario. Bottom line, the scenario document (dated 4/11/05) should be updated in Steps 2 & 3 for the gimbal table to reflect testing of 5430. However the test team has stated in the past that they are unlikely to update the scenario document, although IV&V recommends it.",11/14/2005
ProjectB - TIM - 2211,"GCE_BGI Test: Differences noted between scenario, RVTM and corresponding test PROC for Antenna Stop",3,"In looking at PROC gcea_bgi_antenna_stop.prc (dated 8-30-05) and analyzing the instructions for Step 3 (Test Stop Command while antenna is moving) as compared to the same Step in the original reviewed Scenario document dated 4/11/05, some differences were noted: (1) The scenario document from 4/11/05 states that Step 3 only tests Requirements 5331.1 and 5334. The PROC dated 8-30-05 states that Step 3 tests both 5331.1 and 5334, but that it also tests 5310, 5311, 5412.1 and 5311.2. Why is there such a difference between the scenario document and the PROC? Furthermore the RVTM dated 3-24-05 does not associate some of these requirements with this PROC (e.g., 5310 & 5311). The most recent RVTM dated 5-13-05 lists the same requirements as the previous RVTM, except it added Requirement 5321. The current RVTM lists that the PROC only tests requirements: 5321, 5331.1, 5331.2, 5334, 5340, 5341, 5342, 5356, 5412.2. Hence there is a mismatch between the GCE RVTM, the PROC and the scenario document. Need to resolve all these differences to make sure proper requirements being tested. (2)The PROC dated 8-30-05 also states in the ""Change History"" section the following: ""08/05/05 A. Larson Removed requirement 5311.2 and added 5321"". However Step 3 still says it tests 5311.2. So it is unclear if this PROC is supposed to test 5311.2 or not.",11/14/2005
ProjectB - TIM - 2210,"GCE_BGI Test: Antenna Stop Proc Step 7 ""Source Control"" is missing a part to test Requirement 5331.2 when Ground is in control and ACS sends a move antenna command",3,"This issue is to be followed up for verification by IV&V for Build 2 when PROC gcea_bgi_antenna_stop.prc is next revised. Step 7 ""Source Control"" is missing a part to test Requirement 5331.2 when Ground is in control and ACS sends a move antenna command. Requirement 5331.2 cannot be fully tested until Build 2, when ACS commands are available. In looking at PROC gcea_bgi_antenna_stop.prc (dated 8-30-05) and analyzing the instructions for Step 7, parts 1 -3 (formerly Step 8 due to mis-numbering), it appears that Step 7 - Part 1 puts ACS in control and then Step 7, Part 2, sends a move command from the Ground which should be rejected since ACS is in control now (per Requirement 5331.2). Step 7, Part 3, puts the ground back in control (as control source). Per closure comments in closed ProjectB-TIM-1993, the PROC is still incomplete as there is no test of an ACS move command while the ground is control. However, this is noted by the tester as a comment in the PROC that the ACS commands will not be ready until Build 2. When Build 2 is ready and to fully satisfy requirement 5331.2, IV&V would expect this PROC to have a new part to Step 7, called ""Part 4"", where the ACS FSW sends a move command when Ground is in control and the expected result should be that the command is rejected if Ground in control and ACS sends the command.",11/14/2005
ProjectB - TIM - 2209,GCE_BGI Test: PROC gcea_bgi_antenna_move_init.prc dated 7-20-05 still appears fairly incomplete.,3,"PROC gcea_bgi_antenna_move_init.prc dated 7-20-05 still appears fairly incomplete. (a) Steps 1 and 2 only have labels but no steps with instructions. (b) Step 3 states that test steps for GCE B will be added later (only testing of GCE A is covered). (c) Some Steps are mislabeled as compared to the listed ""Summary of Steps"" at the beginning of the PROC (e.g., Two different steps are called Step 4 within the PROC. It moves from Step 8 to Step 10 with no Step 9. Step 10 should be called Step 11 per the summary list, etc..) PROC needs to be cleaned up and numbered correctly so no confusion and to make sure all tests properly covered. (d) Requirement 5343 is supposed to be tested in Step 3, but is not listed anywhere in the PROC. Likewise this PROC is supposed to test Requirements 5341 and 5342 per the scenario, but neither is listed in this PROC anywhere. In fact, Step 3 (and several other steps) have stated the following: ""Requirements Tested: NONE"". Seems that per the scenario description and the RVTM, more requirements should be mapped to Test Steps in this PROC. (e) Even when it is obvious from a test that it is testing a requirement (e.g., Requirement 5341 which is for enable/disable) it only seems to test the ""enable portion"" and not the ""disable portion"", hence it seems some requirements are only half tested. However there is no explicit statement that this PROC is even partially testing some requirements. UPDATE 5/1/07 - see res chron for 5/1/07 for updates to this TIM.",11/14/2005
ProjectB - TIM - 2208,GCE_BGI Test: Step 7 of PROC gcea_bgi_badcommandtest.prc is missing an identifier/label,4,"The following part within Step 7 of the PROC gcea_bgi_badcommandtest.prc dated 8-16-05 is missing an identifier (test step label) of ""; Step 7. Part 3"" after the end of Step 7 Part 2. See excerpt from Step 7 below. IV&V recommends changing ""; Test Encoder Current command for each valid axis....."" To ""Step 7. Part 3; Test Encoder Current command for each valid axis...."" Actual script description after end of Step 7 Part 2:; Test Encoder Current command for each valid axis and valid state with incorrect length FOR axis =0 to 3 DO FOR state = 0 to 1 DO cmd = cmd_prefix & ""070A00""&%hex(axis, 4)& %hex(state,4)&""FFFF"" ut_setupevt (INVALID_CMD_LENGTH_EVENT) ut_sendrawcmd ""GCEA_GI"" (cmd) IF ( UT_RCS_Status = UT_RCS_CmdFailure) THEN WRITE ""Encoder Current Command with bad length Rejected -- axis: "",axis,"" state: "", state",11/14/2005
ProjectB - TIM - 2207,GCE_BGI Test: Test in Step 28 of test script gcea_bgi_commandtest.prc appears to be incomplete,3,"While verifying ProjectB-TIM-1866, IV&V noticed that Test in Step 28 of test script gcea_bgi_commandtest.prc appears to be incomplete. Per the ProjectB GCE Gimbal Interface (GI) and Analog (AN) Build Verification Test Scenarios dated 4/11/2005, the tests for Step 28 have 5 tests whereas the current script only shows the first 4 tests. 28.5 "" Use utility ut_sendcmd() to send the Stop Processing Antenna Move commands for all axes."" appears to be missing from the test procedure dated 8/24/05.",11/14/2005
ProjectB - TIM - 2206,GCE_BGI Test: Possible error in Steps 26 and 27 of GCE test script gcea_bgi_commandtest.prc,3,"While verifying ProjectB-TIM-1866, noticed that Tests in Step 26 and Step 27 of test script gcea_bgi_commandtest look incorrect. It appears that Step 26 & 27 are testing 4 commands (azimuth & elevation for each axis) as many of the previous tests in this procedure do, in which case it should iterate 4 times (i = 1 - 4) and the phrase ""STEP 2"" prior to the ""DO"" statement does not appear to belong. Maybe this is a cut/paste error, but IV&V does not believe this test would work properly as structured or intended. Step 26 below is from PROC gcea_bgi_commandtest.prc ;**********************************************************; Step 26. Test Positive limit command for each elevation ; Default value is 8267 counts from home or 62 degrees; New telemetered counts will be home +uplinked limit = 24000 +8299 = 32299; **********************************************************; Requirements Tested 5322, 5412.1 FC= 11 failure =1 partial_success =0 Command_Name = ""Positive_Limit"" WRITE ""Beginning Step 26 -Test the Positive Limit Commands"" FOR i=2 TO 4 STEP 2 DO ; Positive Set for each elevation axis: PZAZ, PZEL, MZAZ, MZEL ut_sendcmd (""GCEA_GI_""&AXIS[i]&""_PLIMIT LIMIT =8299"") IF ( UT_SC_Status = UT_SC_Success) THEN WRITE ""-- GCEA_GI_CMDPC did increment nominally"" ---------------------- The other tests that cover each elevation access are structured as follows: ""For i=1 to 4 DO""",11/14/2005
ProjectB - TIM - 2205,ProjectB ACE IRU - incorrect array initialization in file sh_iru.c,3,The SH_IRU_InputsTable.SH_CntIRUPulse[5] array element is initialized with the incorrect value in file sh_iru.c in function SH_ProcessIRUData at line 94. The array element is initialized with the ACE_RawSensorDataPkt.IruRawPosData[2][0] value. The element should be initialized with the ACE_RawSensorDataPkt.IruRawPosData[2][1] value. Code Fragment from file sh_iru.c: 86 /* 87 * Copy IRU HW reads over to input vaiables 88 */ 89 SH_IRU_InputsTable.SH_CntIRUPulse[0] = ACE_RawSensorDataPkt.IruRawPosData[0][0]; 90 SH_IRU_InputsTable.SH_CntIRUPulse[1] = ACE_RawSensorDataPkt.IruRawPosData[0][1]; 91 SH_IRU_InputsTable.SH_CntIRUPulse[2] = ACE_RawSensorDataPkt.IruRawPosData[1][0]; 92 SH_IRU_InputsTable.SH_CntIRUPulse[3] = ACE_RawSensorDataPkt.IruRawPosData[1][1]; 93 SH_IRU_InputsTable.SH_CntIRUPulse[4] = ACE_RawSensorDataPkt.IruRawPosData[2][0]; 94 SH_IRU_InputsTable.SH_CntIRUPulse[5] = ACE_RawSensorDataPkt.IruRawPosData[2][0];,11/9/2005
ProjectB - TIM - 2204,ProjectB ACE IRU - spelling error in sh_iru_tbl.c,5,In the file sh_iur_tbl.c - Line 266 the word parameter is misspelled in the file prologue in the sentence that starts with Purpose - it is spelled Parmater.,11/7/2005
ProjectB - TIM - 2203,ProjectB ACE IRU - static variables should be global instead of local - sh_iru.c,3,There are three variables declared inside the function SH_ProcessIRUData that either should not be declared static or should be declared as global static variables outside of the function. Line 76 - static uint16 CntIRUPulsePrev[6] Line 77 - static double RateIruFrameIruPrev[6] Line 78 - static uint16 FirstTime = TRUE,11/7/2005
ProjectB - TIM - 2202,PSE Build 2: PS_SLOW_HK_TLM_SIZE and MI_SLOW_HK_TLM_SIZE are defined as the size of the fast packet.,3,"The macro PS_SLOW_HK_TLM_SIZE is defined as the size of the PS task's fast housekeeping telemetry packet instead of the PS task's slow housekeeping telemetry packet size, and the macro MI_SLOW_HK_TLM_SIZE is defined as the size of the MI task's fast housekeeping telemetry packet instead of the MI task's slow housekeeping telemetry packet size. Code fragments are included to show where these definitions occur. Definition of PS_SLOW_HK_TLM_SIZE: 2325 typedef struct{ 2326 2327 uint8 ValidCmdCounter; 2328 uint8 InvalidCmdCounter; 2329 uint16 spare1; 2330 2331 } ps_fast_hk_tlm_t; 2332 2333 #define PS_FAST_HK_TLM_SIZE sizeof (ps_fast_hk_tlm_t) 2334 2335 2336 typedef struct{ 2337 2338 uint32 spare2; 2339 2340 2341 } ps_slow_hk_tlm_t; 2342 2343 #define PS_SLOW_HK_TLM_SIZE sizeof(ps_fast_hk_tlm_t) Definition of MI_SLOW_HK_TLM_SIZE: 2401 typedef struct{ 2402 2403 uint32 spare1; 2404 2405 2406 } mi_fast_hk_tlm_t; 2407 2408 #define MI_FAST_HK_TLM_SIZE sizeof(mi_fast_hk_tlm_t) 2409 2410 2411 typedef struct{ 2412 2413 uint32 spare2; 2414 2415 2416 } mi_slow_hk_tlm_t; 2417 2418 #define MI_SLOW_HK_TLM_SIZE sizeof(mi_fast_hk_tlm_t)",10/11/2005
ProjectB - TIM - 2201,The Bootstrap/Loader/Monitor (BLM) SRS document needs updating to reflect that it is to power on EEPROM Bank 2,3,"The Bootstrap/Loader/Monitor (BLM) Requirements document (SRS) needs to be updated with the new information regarding that the software needs to automatically powers on EEPROM bank 2, which allows for the software to be the same for breadboards and ETU/Flight units. At the FSW CDR (20-21 SEP 05), design material was presented which stated that the BLM software needs to power on EEPROM bank 2. Previously, at the FSW PDR (6-7 OCT 04), the design did not include this functionality. In the analysis of the CDR material and the latest BLM Requirements SRS document (Draft 9/10/04 revision), it was found that the document is lacking the current CDR design information. The document needs to be updated to reflect the the latest MS design, as described at the CDR. This issue is being used as a placeholder to ensure that the needed change is made. This issue also relates to the completeness of the requirements to ensure continuity between the requirements and the design.",10/7/2005
ProjectB - TIM - 2200,The Memory Scrub (MS) SRS document needs updating to reflect that Bulk Memory needs to be initialized before beginning to scrub recorder memory,3,"The Memory Scrub (MS) Requirements document (SRS) needs to be updated with the new information regarding that the MS FSW should wait for Bulk Memory to be initialized before starting to scrub recorder memory. At the FSW CDR (20-21 SEP 05), design material was presented which stated that the MS task needs to wait for Bulk Memory to be initialized before starting to scrub recorder memory. Previously, at the FSW PDR (6-7 OCT 04), the design did not include this functionality. In the analysis of the CDR material and the latest Memory Scrub (MS) Requirements SRS document (8/22/05 revision), it was found that the document is lacking the current CDR design information. The document needs to be updated to reflect the the latest MS design, as described at the CDR. This issue is being used as a placeholder to ensure that the needed change is made. This issue also relates to the completeness of the requirements to ensure continuity between the requirements and the design.",10/7/2005
ProjectB - TIM - 2199,The Memory Scrub (MS) SRS document needs updating to reflect that the MS task needs to initialize bulk memory (EDAC checkbits),3,"The Memory Scrub (MS) Requirements document (SRS) needs to be updated with the new information regarding the new requirement for MS to initialize bulk memory (initialize the EDAC checkbits). At the FSW CDR (20-21 SEP 05), design material was presented which stated that the MS task needs to initialize bulk memory (EDAC checkbits). Previously, at the FSW PDR (6-7 OCT 04), the design did not include this functionality. In the analysis of the CDR material and the latest Memory Scrub (MS) Requirements SRS document (8/22/05 revision), it was found that the document is lacking the current CDR design information. The document needs to be updated to reflect the the latest MS design, as described at the CDR. This issue is being used as a placeholder to ensure that the needed change is made. This issue also relates to the completeness of the requirements to ensure continuity between the requirements and the design.",10/7/2005
ProjectB - TIM - 2198,The Telemetry & Statistics Monitor (TS) SRS document needs updating to reflect that 512 points will be monitored as described at the FSW CDR.,3,"The Telemetry & Statistics Monitor (TS) Requirements document (SRS) needs to be updated with the new information regarding the number of monitor points the TS task will monitor - 512 points. Specifically the information in Section 6.1 of the document needs updated to reflect the new design. At the FSW CDR (20-21 SEP 05), material was presented which stated that the TS task will be designed to monitor 512 points. Previously, at the FSW PDR (6-7 OCT 04), the design was to monitor 256 points. In the analysis of the CDR material and the latest Telemetry and Statistics (TS) Requirements SRS document [9/14/05 revision], it was found that the document still references the old (PDR) design. The document needs to be updated to reflect the new 512 monitor point design, as described at the CDR. This issue is being used as a placeholder to ensure that the needed change is made. This issue also relates to the completeness of the requirements to ensure continuity between the requirements and the design.",10/7/2005
ProjectB - TIM - 2197,The 1553 Bus Controller (BC) SRS document needs updating to reflect new initialization design information which was presented at the FSW CDR.,3,"The 1553 Bus Controller (BC) Requirements Document (SRS) needs to be updated with the new information regarding initialization - specifically, information pertaining to if the 1 Hz interrupt is not received in 6 seconds during initialization, the XB FSW continues the startup sequence (where it used to pend indefinitely). At the FSW CDR (20-21 SEP 05), material was presented which stated that the Bus now will continue the startup sequence if the 1Hz interrupt is not received in 6 seconds. Previously, at the FSW PDR (6-7 OCT 04), the Bus was designed to hold indefinitely. In the analysis of the CDR material and the latest 1553 Bus Controller (BC) Requirements SRS document [3/25/05 revision], it was found that the document still references the old (PDR) design. The document needs to be updated to reflect the new initialization sequence as described at the CDR. The info in the CDR presentation material references ProjectB FSW RFA 010, as the source for the change. This issue is being used as a placeholder to ensure that the needed change is made. This issue also relates to the completeness of the requirements to ensure continuity between the requirements and the design.",10/7/2005
ProjectB - TIM - 2196,PSE Build 2 - comments for else statements,4,In the function ps_task_main - line 722 of the code review packet in the code block starting if ( PseConsecLowVoltageFlagForThresOne >= PSE_LOW_VOLTAGE_CONSECUTIVE_THRESHOLD_COUNT ) the corresponding else needs a comment in order for sustaining engineering to better understand the developer's intent. The same is true on line 754 in the code block starting if ( PseConsecLowVoltageFlagForThresTwo >= PSE_LOW_VOLTAGE_CONSECUTIVE_THRESHOLD_COUNT ),10/7/2005
ProjectB - TIM - 2195,Checksum (CS) Requirements document (SRS) needs updating to reflect that the 8-bit with carry checksum alogithm is utilized,3,"The Checksum (CS) Requirements Document (SRS) needs to be updated with the new checksum algorithm information - 8 bit, with carry. At the FSW CDR (20-21 SEP 05), material was presented which stated that the checksum algorithm has changed since the FSW PDR (6-7 OCT 04). The algorithm used to use 16-bit without carry (PDR info). However since the PDR and as presented at the CDR, the algorithm has been changed to 8-bit with carry. In the analysis of the CDR material and the latest Checksum SRS document (6/20/05 revision), it was found that the document still references the 16-bit algorithm. The document needs to be updated to reflect the use of the 8-bit algorithm. This issue is being used as a placeholder to ensure that the needed change is made. This issue also relates to the completeness of the requirements to ensure continuity between the requirements and the design.",10/7/2005
ProjectB - TIM - 2194,Unreachable Code in xbmakewu.c line 323,3,ProjectB-SBC Code is unreachable due to first_block never being set to TRUE. xbmakewu.c: 264 /* JDP- boolean first_block = TRUE; */ 265 boolean first_block = FALSE; ... 318 /* Set 'base_delay' field of wu for use in fine timing 319 adjusts. Only the timing of the first block is ever 320 altered; base_delay remembers nominal timing. */ 321 if (first_block) 322 { 323 wup->base_delay = delay_ticks; 324 first_block = FALSE; 325 } 326,9/21/2005
ProjectB - TIM - 2193,Array Out-of-Bounds in todsif.c line 138,3,"ProjectB-SBC Buffer overflow, array index of 'to_ort' may be outside the bounds. Array 'to_ort' of size 8 declared at tobuffer.h:45 may use index value 8 due to the condition at todsif.c:136, if ((recorder_id > 0 ) && (recorder_id <= MAX_TELEMETRY_SOURCES)). The valid ranges of values for the index, 'recorder_id', should not include MAX_TELEMETRY_SOURCES. The same error occurs at the following lines of todsif.c: 204, 246, 324 and 392. todsif.h: 41 /* the defines for the recorders MUST match the recorder number that Data Storage uses */ 42 typedef enum { 43 REAL_TIME, 44 RECORDER_1, 45 RECORDER_2, 46 RECORDER_3, 47 RECORDER_4, 48 PATTERN_0, 49 PATTERN_1, 50 PATTERN_2, 51 MAX_TELEMETRY_SOURCES 52 } telemetry_source; tobuffer.c: 157 ort_entry to_ort[MAX_TELEMETRY_SOURCES][2]; todsif.c: 136 if ((recorder_id > 0 ) && (recorder_id <= MAX_TELEMETRY_SOURCES)) 137 { 138 ort_entry *ort = &to_ort[recorder_id][retransmit != 0]; ... 202 if ((recorder_id > 0 ) && (recorder_id <= MAX_TELEMETRY_SOURCES)) 203 { 204 ort_entry *ort = &to_ort[recorder_id][retransmit != 0]; ... 244 if ((recorder_id > 0 ) && (recorder_id <= MAX_TELEMETRY_SOURCES)) 245 { 246 ort_entry *ort = &to_ort[recorder_id][retransmit != 0]; ... 315 if ((recorder_id > 0 ) && (recorder_id <= MAX_TELEMETRY_SOURCES)) 316 { 317 OS_PerfLogEntry(DS_SEM_TASK_PERF_ID); 318 TO_OR_lock(); { 319 boolean retransmit; 320 OS_PerfLogExit(DS_SEM_TASK_PERF_ID); 321 OS_PerfLogEntry(DS_SEM_TASK_PERF_ID); 322 for (retransmit = 0; retransmit <2; retransmit ++) 323 { 324 ort_entry *ort = &to_ort[recorder_id][retransmit != 0]; ... 388 if ((recorder_id > 0 ) && (recorder_id <= MAX_TELEMETRY_SOURCES)) 389 { 390 OS_PerfLogEntry(DS_SEM_TASK_PERF_ID); 391 TO_OR_lock(); { 392 ort_entry *ort = &to_ort[recorder_id][retransmit != 0];",9/21/2005
ProjectB - TIM - 2192,Array Out-of-Bounds tobuffer.c line 467,3,"ProjectB-SBC Buffer overflow, array index of 'to_ort' may be outside the bounds. Array 'to_ort' of size 8 declared at line 157 may use index value 8. Should provide a check to ensure the index, 'cpe->source' is less than MAX_TELEMETRY_SOURCES. todsif.h: 41 /* the defines for the recorders MUST match the recorder number that Data Storage uses */ 42 typedef enum { 43 REAL_TIME, 44 RECORDER_1, 45 RECORDER_2, 46 RECORDER_3, 47 RECORDER_4, 48 PATTERN_0, 49 PATTERN_1, 50 PATTERN_2, 51 MAX_TELEMETRY_SOURCES 52 } telemetry_source; tochntbl.h: 81 typedef struct { 82 telemetry_destination destination; 83 telemetry_source source; 84 boolean retransmit_flag; /* retransmit_type */ 85 int virtual_channel_id; 86 } channel_priority_entry; tobuffer.c: 157 ort_entry to_ort[MAX_TELEMETRY_SOURCES][2];... 453 /* 454 ** Name: TO_OR_data_available 455 ** 456 ** Purpose: Returns TRUE if there is data awaiting output to the 457 ** given telemetry destination. 458 ** 459 ** Assumptions and Notes: 460 */ 461 boolean TO_OR_data_available(telemetry_destination d) 462 { 463 int i; 464 for(i=0; i < MAX_TO_CHAN; i++) 465 { 466 channel_priority_entry *cpe = &to_channel_priority_table[i]; 467 if ((cpe->destination == d) && to_ort[cpe->source][cpe->retransmit_flag != 0].count) {",9/21/2005
ProjectB - TIM - 2191,Array Out-of-Bounds in tobuffer.c line 359,3,"ProjectB-SBC Buffer overflow, array index of 'to_ort' may be outside the bounds. Array 'to_ort' of size 8 declared at line 157 may use index value 8. Should provide a check to ensure that index 'source' is less than MAX_TELEMETRY_SOURCES. todsif.h: 41 /* the defines for the recorders MUST match the recorder number that Data Storage uses */ 42 typedef enum { 43 REAL_TIME, 44 RECORDER_1, 45 RECORDER_2, 46 RECORDER_3, 47 RECORDER_4, 48 PATTERN_0, 49 PATTERN_1, 50 PATTERN_2, 51 MAX_TELEMETRY_SOURCES 52 } telemetry_source; tobuffer.c: 157 ort_entry to_ort[MAX_TELEMETRY_SOURCES][2];... 347 /* 348 ** Name: TO_OR_get_pb_vcdu 349 ** 350 ** Purpose: Retrieves one Playback VCDU from the ORT. 351 ** 352 ** Assumptions & Notes: 353 ** 354 */ 355 vcdu *TO_OR_get_pb_vcdu(telemetry_source source, boolean retrans) 356 { 357 vcdu *v = NULL; 358 359 ort_entry *ort = &to_ort[source][retrans != 0];",9/21/2005
ProjectB - TIM - 2190,"Unreachable Code in timepkt.h, timetask_client.c line 211",3,Code is unreachable timepkt.h: 114 #define TIME_INITIAL_TONE_DELAY 0x00000000 /* TBD seconds */ timetask_client.c: 209 if(((int32)TIME_ToneDelay.Subseconds) < 0) 210 { 211 TIME_ToneDelay.Seconds = 0xFFFFFFFF; 212 },9/21/2005
ProjectB - TIM - 2189,Unreachable Code in ospci.c line 263,3,"Code at ospci.c:263 is unreachable due to the prior conditions on lines 248 and 255 covering all cases, which prevents the else from ever being executed. ospci.c: 248 if (bar_readback == 0) /* Bar not needed */ 249 { 250 pci_configuration[target].base_address[bar] = 0; /* Set it all to ZERO as an indicator that it isn't initialized */ 251 pci_configuration[target].length[bar] = 0; 252 pci_configuration[target].memory_type[bar] = 0; 253 continue; 254 } 255 else if (bar_readback & 0x1) /* I/O Space */ 256 { 257 base_address = next_bar_address | 0x1; 258 memory_type = OS_PCI_RESOURCE_IO; 259 command |= PCI_CMD_IO_ENABLE; 260 } 261 else /* Mem Space */ 262 { 263 base_address = next_bar_address & ~0x1; 264 memory_type = OS_PCI_RESOURCE_MEM; 265 command |= PCI_CMD_MEM_ENABLE; 266 }",9/21/2005
ProjectB - TIM - 2188,Array Out-of-Bounds in hdtask.c line 713,3,"ProjectB-SBC Buffer overflow, array index of 'HD_MonitorKa' may be outside the bounds. Array 'HD_MonitorKa' of size 2 declared at line 267 may use index values 2..11 due to the condition at hdtask.c:711, ((Cmd->Link.LinkNumber) < HD_MAX_LINKS). Since the 'HD_MonitorKA' array was declared with HD_MAX_KA_CARDS size, the condition should be changed to ensure that Cmd->Link.LinkNumber is less than HD_MAX_KA_CARDS (i.e. 2). hdtask.h: 133 #define HD_MAX_KA_CARDS 2 /* Number of Ka Comm Cards */ hdtask.c: 267 uint16 HD_MonitorKa[HD_MAX_KA_CARDS]; /* Enable/Disable for Non-HSB monitoring of a Ka Comm Card */ hdpkt.h: 128 #define HD_MAX_LINKS 12 /* Number of Links supported by HD software */ hdtask.c: 709 if((((Cmd->Link.State) == HD_ENABLED) || 710 ((Cmd->Link.State) == HD_DISABLED)) && 711 ((Cmd->Link.LinkNumber) < HD_MAX_LINKS)) 712 { 713 HD_MonitorKa[Cmd->Link.LinkNumber] = Cmd->Link.State;",9/21/2005
ProjectB - TIM - 2186,Unreachable Code in timetask_client.c line 211,3,"ProjectB-GCE, ProjectB-ACE, ProjectB-SBC Code at line 211 is unreachable due to the assignment on line 208 (TIME_ToneDelay.Subseconds assigned to zero) and the check on line 209 (TIME_ToneDelay.Subseconds is check for less than zero). timepkt.h: 114 #define TIME_INITIAL_TONE_DELAY 0x00000000 /* TBD seconds */ timetask_client.c: 207 /* Invalidate Time update structures and reset counters. */ 208 TIME_ToneDelay.Subseconds = TIME_INITIAL_TONE_DELAY; 209 if(((int32)TIME_ToneDelay.Subseconds) < 0) 210 { 211 TIME_ToneDelay.Seconds = 0xFFFFFFFF; 212 }",9/21/2005
ProjectB - TIM - 2185,"Unreachable Code in timepkt.h, timetask_client.c line 211",3,Code is unreachable timepkt.h: 114 #define TIME_INITIAL_TONE_DELAY 0x00000000 /* TBD seconds */ timetask_client.c: 207 /* Invalidate Time update structures and reset counters. */ 208 TIME_ToneDelay.Subseconds = TIME_INITIAL_TONE_DELAY; 209 if(((int32)TIME_ToneDelay.Subseconds) < 0) 210 { 211 TIME_ToneDelay.Seconds = 0xFFFFFFFF;,9/21/2005
ProjectB - TIM - 2184,Non-Initialized Data in rtems.c line 206,3,"'sr' is used uninitialized in this function. rtems.c: 185 /* 186 ******************************************************************************** 187 * OS_BSPRestart -- Used to perform cold/warm restarts in RTEMS 188 ********************************************************************************* 189 */ 190 191 void OS_BSPRestart(uint32 reset_type) 192 { 193 /* 194 ** rtems_interrupt_level is a macro that eventually initializes the sr 195 ** variable. Â Hence, this declaration also initializes the variable. 196 */ 197 198 rtems_interrupt_level sr; 199 200 if ( reset_type == OS_COLD ) 201 { 202 printf(""Performing a COLD start\n""); 203 /* 204 ** Disable interrupts 205 */ 206 rtems_interrupt_disable(sr);",9/21/2005
ProjectB - TIM - 2183,Non-Initialized Data in osapi.c line 1454,3,'old_level' is used uninitialized in this function. osapi.c: 1432 /* 1433 ** Name: OS_IntSetLevel 1434 ** Purpose: 1435 ** Set the interrupt level to a specific level 1436 ** and below. 1437 ** 1438 ** Assumptions and Notes: 1439 ** 1440 ** Parameters: Level of interrupt 1441 ** 1442 ** Global Inputs: None 1443 ** 1444 ** Global Outputs: None 1445 ** 1446 ** 1447 ** Return Values: 1448 ** The current interrupt level before setting 1449 */ 1450 uint32 OS_IntSetLevel ( uint32 new_level ) 1451 { 1452 uint32 old_level; 1453 1454 m68k_get_interrupt_level( old_level ); 1455 m68k_set_interrupt_level( new_level ); 1456 return(old_level) ; 1457 },9/21/2005
ProjectB - TIM - 2182,Non-Initialized Data in osapi.c line 1428,3,'old_level' is used uninitialized in this function. osapi.c: 1407 /* 1408 ** Name: OS_IntGetLevel 1409 ** Purpose: 1410 ** Return the current interrupt level 1411 ** 1412 ** Assumptions and Notes: 1413 ** 1414 ** Parameters: None 1415 ** 1416 ** Global Inputs: None 1417 ** 1418 ** Global Outputs: None 1419 ** 1420 ** 1421 ** Return Values: 1422 ** The current interrupt level 1423 */ 1424 uint32 OS_IntGetLevel ( void ) 1425 { 1426 uint32 old_level; 1427 1428 m68k_get_interrupt_level( old_level ); 1429 return(old_level) ; 1430 },9/21/2005
ProjectB - TIM - 2181,"Array Out-of-Bounds in acs_def.h, capkt.h, ace_command_actuators_task.c line 646",2,"ProjectB-ACE Buffer overflow, array index of 'PulseWidths' will go outside the bounds. Array 'PulseWidths' of size 8 declared at capkt.h:180 may use index value 8. Also there are 8 similar errors on lines 659, 660, 661, 662, 663, 665, 670, 747. acs_def.h: 46 /* EVD (Thruster) Related */ 47 #define ACS_NUM_THRUSTERS 8 capkt.h: 170 /* 171 * 5 Hz Actuator commands from ACS to ACE 172 */ 173 typedef struct { 174 CCSDS_PriHdr_t PriHdr; 175 CCSDS_CmdSecHdr_t SecHdr; 176 /* RWA */ 177 uint16 RwaTorques [ACS_NUM_WHEELS]; /* Wheel torque */ 178 /* Thrusters */ 179 uint16 ValidEvdCmd; /* True-> ACE to issue cmd */ 180 uint16 PulseWidths [ACS_NUM_THRUSTERS]; /* Thruster pulses */ 181 /* Health Indicators */ 182 uint16 ImOkCounter; /* ImOk counter */ 183 184 } ACE_ActuatorCmdPkt_t; ... 140 /* 141 * CA Reaction Wheel Torqur Override Command. The command overrides the current touque commands for the RWs. 142 */ 143 #define NUM_THRUSTERS 9 ace_command_actuators_task.c: 643 /* OS_MemCpy( &ACE_ActuatorCmdPkt.PulseWidths[0], &ACE_ControlTable.EVD_FireCountCmd[0], NUM_THRUSTERS ); */ 644 for ( i = 0; i < NUM_THRUSTERS; i++ ) 645 { 646 ACE_ActuatorCmdPkt.PulseWidths[i] = ACE_ControlTable.EVD_FireCountCmd[i]; 647 } ... 657 for ( i = 0; i < NUM_THRUSTERS; i++) 658 { 659 if ( (ACE_ActuatorCmdPkt.PulseWidths[i] == 0) || 660 (ACE_ActuatorCmdPkt.PulseWidths[i] == 1) || 661 (ACE_ActuatorCmdPkt.PulseWidths[i] == 2) || 662 (ACE_ActuatorCmdPkt.PulseWidths[i] == 3) || 663 (ACE_ActuatorCmdPkt.PulseWidths[i] == 5) ) 664 { 665 Temp32BitPulse = ACE_ActuatorCmdPkt.PulseWidths[i]; 666 AssembledMeThrusterTime |= ( Temp32BitPulse << ( i * 3 ) ); 667 } 668 else 669 { 670 eventf(CA_TASK_ID, ""ACA120: Bad Thruster Value: Thruster %1d, Value=%d"", i, ACE_ActuatorCmdPkt.PulseWidths[i]); ... 747 if ( ACE_ActuatorCmdPkt.PulseWidths[8] )",9/21/2005
ProjectB - TIM - 2180,Two Requirements in document that utilize the same requirement number/id - Requirement 3500,3,"In the 3/30/05 Based-lined revision of the Telemetry Output (TO) document [464-FSW-SPEC-0066], there are two requirements that utilize the same requirement number/id - 3500. Section: 8.4.15 Dumps Page: 24 Requirement 3500: ""The Flight Software shall support a protocol to throttle the production of low priority high rate telemetry such as memory, table, or event dumps"" - Traceability: 464-FSW-REQ-0056 CDHMP-50 Requirement 3500: ""The TO Flight Software shall complete one dump, before accepting commands to begin a new dump session. NOTE: Only one active dump is allowed at a time."" - Traceability: 464-FSW-REQ-0056 CDHMP-61 This issue concerns the document's accuracy and completeness.",9/14/2005
ProjectB - TIM - 2179,PSE Build 1 - unused global in .c file,4,\fsw\cpu\pse\tasks\tt\tt_task_main.c uint16 PSE_ADC_OutputTable[PSE_NUMBER_OF_ANALOG];,9/2/2005
ProjectB - TIM - 2178,PSE Build 1 - unused externs in .c file,4,"\fsw\cpu\pse\tasks\tt\tt_task_main.c ""/* PSE input table to OS ADC function */ extern OS_ADCInputTable_t PSE_ADCInputTable[]; /* Battery Temp Control parameters */ extern PSE_BattTempParms PSE_BattTempParmsTbl;""",9/2/2005
ProjectB - TIM - 2177,PSE Build 1 - unused defines in .c file,4,"\fsw\cpu\pse\tasks\tt\tt_task_main.c ""Line 128 - 131 /* ADC declares */ #define PSE_ADC_FAST_PACKET_START_LOCATION 0 /* start index in ADC Output Table */ #define PSE_ADC_FAST_PACKET_COPY_SIZE 118 /* bytes */ #define PSE_ADC_SLOW_PACKET_START_LOCATION 59 /* start index in ADC Output Table */ #define PSE_ADC_SLOW_PACKET_COPY_SIZE 18 /* bytes */ """,9/2/2005
ProjectB - TIM - 2176,PSE Build 1 - unused defines in .h file,4,"Unused defines in file \fsw\cpu\pse\tasks\include\pse_internal.h ""#define MASK_OUT_CONVERSION_STATUS_BIT 0x1000 #define SHIFT_OVER_CONVERSION_STATUS_BIT 12 #define PSE_BM_BATTERY_COMMAND_1_REGISTER 0x00000008 #define PSE_BM_BATTERY_COMMAND_2_REGISTER 0x0000000C #define PSE_WATCHDOG_TIMER_REGISTER 0x00000074 #define PSE_SAM_WATCHDOG_SET_TIMER_VALUE 0x000000FA #define PSE_WATCHDOG_REFRESH_REGISTER 0x00000078 #define PSE_WATCHDOG_REFRESH_COMMAND 0x0000003D #define PSE_ALLOWABLE_RESTORE_ATTEMPTS_PER_CYCLE 1 """,9/2/2005
ProjectB - TIM - 2175,PSE Build 1 - #defines in middle of source file are a violation of coding standards,4,\fsw\cpu\pse\tasks\pct\pct_utilities.c Lines 1236-1241 #define PseFdcGlobalEnableDisableFlag_BIT_POSITION 1 #define PseFdcOmSwitchMonitoringEnableDisableFlag_BIT_POSITION 2 #define PseFdcBattTempEnableDisableFlag_BIT_POSITION 4 #define PseFdcBattVoltLoadShedEnableDisableFlag_BIT_POSITION 8 #define PseFdcBattCellVoltEnableDisableFlag_BIT_POSITION 16 #define PseFdcBusVoltEnableDisableFlag_BIT_POSITION 32 Lines 1319-1321 #define PsePrimaryBattTemp_BIT_POSITION 1 #define PseDiagEnabledFlag_BIT_POSITION 2 #define PseEnableDisableWatchSepartionSignals_BIT_POSITION 4 Line 1362-1368 #define OM1_Present_BIT_POSITION 1 #define OM2_Present_BIT_POSITION 2 #define OM3_Present_BIT_POSITION 4 #define SAM1_Present_BIT_POSITION 8 #define SAM2_Present_BIT_POSITION 16 #define BM_Present_BIT_POSITION 32 #define DM_Present_BIT_POSITION 64,9/2/2005
ProjectB - TIM - 2174,PSE Build 1 - possible array out of bounds in main command task,2,"***** DUPLICATE of TIM-2148 ***** pct_task_main.c at line 982 ""The array index of 'OM_SwitchRestoreFailures' may be outside the bounds. Array 'OM_SwitchRestoreFailures' of size 3 declared at ttpkt.h:106 may use index values 3..5 This can occur because on line 979 PSE_CardNumber = PSE_CardNumber - 1 and then is compared to PSE_ZERO_ALL_COUNTERS_FOR_FAILED_RESTORES on line 982. This will never be true because of the if statement on line 957. It appears that the if statement on line 982 is most likely supposed to be if( PSE_CardNumber+1 == PSEPSE_ZERO_ALL_COUNTERS_FOR_FAILED_RESTORES) which is similar to the statments on lines 811, and 903."" pse_common.h: 34 #define PSE_NUMBER_OF_OMs 3 35 #define PSE_OM_NUMBER_OF_SERVICES 8 ttpkt.h: 106 uint8 OM_SwitchRestoreFailures[PSE_NUMBER_OF_OMs][PSE_OM_NUMBER_OF_SERVICES]; pct_task_main.c: 951 PSE_CardNumber = 952 (uint8) ( cmd->parameter[0] ); 953 954 PSE_ServiceNumber = 955 (uint8) ( cmd->parameter[1] ); 956 957 if ( ( PSE_CardNumber < 1 || PSE_CardNumber > PSE_NUMBER_OF_OMs ) && 958 ( PSE_CardNumber != PSE_ZERO_ALL_COUNTERS_FOR_FAILED_RESTORES ) ) { 959 960 eventf( PCT_TASK_ID, 961 ""XCT113Reset Failed Restore Attempts Cmd - Invalid Card Number: %d"", 962 PSE_CardNumber ); 963 964 CT_HkPkt.fast.InvalidCmdCounter++; 965 966 } else if ( PSE_ServiceNumber < 1 || 967 PSE_ServiceNumber > PSE_OM_NUMBER_OF_SERVICES ) { 968 969 eventf( PCT_TASK_ID, 970 ""XCT114Reset Failed Restore Attempts Cmd - Invalid Service Number: %d"", 971 PSE_ServiceNumber ); 972 973 CT_HkPkt.fast.InvalidCmdCounter++; 974 975 } else { 976 977 CT_HkPkt.fast.ValidCmdCounter++; 978 979 PSE_CardNumber = PSE_CardNumber - 1; /* Internal representation */ 980 PSE_ServiceNumber = PSE_ServiceNumber - 1; /* Internal representation */ 981 982 if ( PSE_CardNumber == PSE_ZERO_ALL_COUNTERS_FOR_FAILED_RESTORES ) { 983 984 /* Zero all bits */ 985 986 for ( i=0; i < PSE_NUMBER_OF_OMs; i++ ) { 987 988 for ( j=0; j < PSE_OM_NUMBER_OF_SERVICES; j++ ) { 989 990 PSE_TlmFastFreqPkt.OM_SwitchRestoreFailures[i][j] = 991 PSE_CLEAR; 992 993 } 994 } 995 996 } else { 997 998 /* Clear one counter */ 999 1000 PSE_TlmFastFreqPkt.OM_SwitchRestoreFailures[PSE_CardNumber][PSE_ServiceNumber] = 1001 PSE_CLEAR; 1002 1003 } 1004 1005 }",9/2/2005
ProjectB - TIM - 2173,464-CDH-SPEC-0012 Requirement 2.10.3-F-G was not tested or verified by test procedures,3,"In section 3.3 of the test procedures, in the ""Requirements Under Test"" table, it is specified that Requirement 2.10.3-F-G [464-CDH-SPEC-0012] is tested and verified by the test procedures described for this section. However, IV&V could not find where Requirement 2.10.3-F-G was tested and verified. 464-CDH-SPEC-0012 Requirement 2.10.3-F-G states: ""Monitor software shall provide a set-baud-rate command that changes the UART baud rate."" Note: In the ""Relationships"" link for TIM-2162, the Results document and Log files of the test can be found, and there is no info in them to indicate that the requirement was tested and verified.",8/8/2005
ProjectB - TIM - 2172,Test Step Verification information and description is vague and unclear as to what results the UART log file should capture,4,"IV&V finds that step 4.2 is vague with respect to exactly what needs to be verified in this step. The verification description for step 4.2 states to ""verify that the WDT utility executed as expected"". However, in examining the uart log file, it is unclear what explicit information sets the standard for verifying this step. There is information in the log file about the WDT being set to 2 seconds and some other information, but it is not clear if this information is the expected information needed to verify this step. Generally, the issue is that the test step verification description for step 4.2 should provide more explicit and more precise log file information concerning what to check in regard to verifying this step. Note: In the ""Relationships"" link for TIM-2162, the Results document and Log files of the test can be found. See UART Log File: 2005-07-18-SUROMMonitorTest-304.log",8/8/2005
ProjectB - TIM - 2171,Test Step description and Verification description appear to be reversed/switched,4,"The ""Test Step"" description and the ""Verification"" description for step 2.4 appear to be reversed / switched. The verification description says to Execute the EEPROM write enable command, which should be the test step description. Note: In the ""Relationships"" link for TIM-2162, the Results document and Log files of the test can be found. See UART Log File: 2005-07-18-SUROMMonitorTest-302.log",8/8/2005
ProjectB - TIM - 2170,"A memory dump needs to be performed prior to Step 2.3, to form a baseline comparison for the dump indicated in this step",3,"A dump prior to step 2.3 was never performed, and needs to be performed, for the purpose to compare against the dump specified in step 2.3. Essentially, there is no 'baseline' from which to make a comparison in step 2.3 and in order to properly verify EEPROM Write Enable/Disable functionality. Note: In the ""Relationships"" link for TIM-2162, the Results document and Log files of the test can be found. See UART Log File: 2005-07-18-SUROMMonitorTest-302.log",8/8/2005
ProjectB - TIM - 2169,Step 2.3 was not performed and the functionality described in same was not properly verified as indicated in the Test Step procedures,3,"Step 2.3 states to Dump the EEPROM address to verify that the EEPROM was not successfully filled with the pattern indicated in step 2.2. However, after examining the uart log file, the dump indicated in step 2.3 was not performed. Instead the log file shows that after attempting to fill the EEPROM with ""write disabled"" (step 2.2), the next thing the tester did was ""enable write"" the EEPROM (step 2.4), and the dump was never performed as indicated in step 2.3. Therefore, proper verification was not performed. Note: In the ""Relationships"" link for TIM-2162, the Results document and Log files of the test can be found. See UART Log File: 2005-07-18-SUROMMonitorTest-302.log",8/8/2005
ProjectB - TIM - 2168,Test Step description and Verification description appear to be reversed/switched,4,"The ""Test Step"" description and the ""Verification"" description for step 2.1 appear to be reversed / switched. The test step description says to ""Verify"" that the EEPROM is ""not"" write enabled, and the verification description says to Execute the EEPROM write disable command. Note: In the ""Relationships"" link for TIM-2162, the Results document and Log files of the test can be found. See UART Log File: 2005-07-18-SUROMMonitorTest-302.log",8/8/2005
ProjectB - TIM - 2167,Verification description for indicated test step is vague and unclear as to what should be expected in UART log file as it concerns test results,4,"In step 1.8, the verfication description states ""Verfiy that the FSW start-up sequence is displayed via the uart."" Upon examining the log file for output related to this step, it is unclear and hard to determine exactly what the tester should be looking for in the uart output. IV&V's issue is that the verification description for step 1.8 is lacking information to explicitly define exactly what should be checked and verified in this step. Essentially the verfication description is vague, and should indicate explicit information and data to check for in order to verify this step. Note: In the ""Relationships"" link for TIM-2162, the Results document and Log files of the test can be found. See UART Log File: 2005-07-18-SUROMResetTest-201.log",8/8/2005
ProjectB - TIM - 2166,"It is unclear why the UART result log shows that the starting address is the same after a POR Rest and a ""Non"" POR Reset when the governing requirements for the conditions indicate otherwise",3,"In step 1.3 a POR Reset is performed. Requirement 1002 which governs a POR Reset essentially states that an image of the SUROM software will be copied into RAM and the software will jump to the ""start"" [address] of the newly loaded image in RAM. 464-FSW-SPEC-0117 Requirement 1002 states: ""If the reset type is Power-On Reset, then the SUROM FSW shall copy the PROM based boot loader image from the PROM chip on the BMC into RAM and jump to the start of the newly loaded image in RAM."" In step 1.7 a ""Not a Power-On Reset"" (Internal Hardware Reset) is performed. Requirement 1003 which governs a ""Non POR Reset"" (Not a Power-On Reset), essentially states that the FSW shall jump to the start [address] of the EEPROM to begin there. 464-FSW-SPEC-0117 Requirement 1003 states: ""If the reset type is NOT a Power-On Reset, then the SUROM FSW shall jump to the start of EEPROM to start the default FSW image stored there."" Upon examining the results of the log file (uart output) for both these test steps (step 1.3 / Req. 1002 and step 1.7 / Req. 1003), it appears that software execution begins at the same starting address location - 0xfff05a70, which contradicts the functionality described in the respective requirements. It may be a lack of understanding on IV&V's part, but based upon the requirement statements governing the POR Reset (1002) and a Non-POR Reset (1003), the starting addresses should be different since after a POR Reset, software execution should start at the address of the new loaded image in RAM. And for a Non-POR Reset, software execution should start at the address of the image stored in the EEPROM. After the two types of reset are performed, it is unclear to IV&V why the two jump to the same starting address Note: In the ""Relationships"" link for TIM-2162, the Results document and Log files of the test can be found. See UART Log File: 2005-07-18-SUROMResetTest-201.log",8/8/2005
ProjectB - TIM - 2165,Captured test results in the UART log file do not match Verification description for indicated test step,4,"The verification description for step 1.5 indicates that ""devNo = 0x0000001"", should be captured in the log file. However, the log file shows that ""devNo = 0x0000001c"". IV&V's issue is that the Test Procedure verification documentation should be thorough and complete. But in this instance, it is not and therefore it is difficult to determine if the results of this test step are correct or not, since there is a difference in the verification description and the results in the uart log file. Note: In the ""Relationships"" link for TIM-2162, the Results document and Log files of the test can be found. See UART Log File: 2005-07-18-SUROMResetTest-201.log",8/8/2005
ProjectB - TIM - 2164,On a POR Reset it is unclear why UART log file indicates that RAM was preserved when Requirement 1002 states otherwise,4,"In Step 1.3 a POR Reset is performed, and the test steps indicate that certain criteria be checked in the log file (uart output). The log file indicates that a POR Reset was detected, however the log file text also indicates that the ""RAM contents [were] preserved"". This is contrary to the functionality described in Requirement 1002, which essentially states that PROM image will be copied into RAM. Therefore, it is unclear to IV&V why the log file states that RAM was preserved. 464-FSW-SPEC-0117 Requirement 1002 states: ""If the reset type is Power-On Reset, then the SUROM FSW shall copy the PROM based boot loader image from the PROM chip on the BMC into RAM and jump to the start of the newly loaded image in RAM."" Note: In the ""Relationships"" link for TIM-2162, the Results document and Log files of the test can be found. See UART Log File: 2005-07-18-SUROMResetTest-201.log",8/8/2005
ProjectB - TIM - 2163,Captured test results in the UART log file do not match Verification description for indicated test step,4,"In test step 1.3, the test step verification indicates that the log file should capture the SUROM Banner: ""RAD750 SUROM ProjectB MKS version v1.0.0 build 1 (May 3 2005 12:46:40)"". However, the log file indicates: ""RAD750 SUROM ProjectB MKS version v1.1.0 build build 1 (Jul 18 2005 14:01:38)"". It is acceptable and understandable that a new build version and build date is indicated in log. However, IV&V's issue is that the Test Procedure verification documentation should be thorough and complete, and should therefore explicitly indicate the exact build version and build date expected when the test step is executed. Note: In the ""Relationships"" link for TIM-2162, the Results document and Log files of the test can be found. See UART Log File: 2005-07-18-SUROMResetTest-201.log",8/8/2005
ProjectB - TIM - 2162,Test Steps do not indicate which requirements are being tested and verified,3,"In the test steps presented in the document, there is no indication as to which requirements are being verified and tested during each particular test step. This issue applies to all test steps presented in the document. Note: In ""Relationships"" link, the Results document and Log files of the test can be found.",8/8/2005
ProjectB - TIM - 2161,Test Procedure document deviates from outline and document format previously provided by ProjectB project,5,"Generally, this document deviates significantly from previously produced Test Procedures or Test Scenario documents delivered by the ProjectB project, in the fashion and manner in which the test procedures are described and laid-out. See Attachments provided in 'Relationships' for TIM-2156 for the Test Procedure document.",8/8/2005
ProjectB - TIM - 2160,Test Procedures Document lacks thorough descriptions of the test procedures to be utilized,3,"In the Test Procedure document, in Section 5 Table 1 - Test Matrix, in the Test Coverage column, there are many test procedures listed (example: sdn_pbb_sram.prc), however, the test procedures are not thoroughly described or presented in the document. There is only one procedure mentioned, and it is ""sdn_pbbl.prc"", and it is in section 6.1, and it is only shown and is not described. See Attachments provided in 'Relationships' for TIM-2156 for the Test Procedure document.",8/8/2005
ProjectB - TIM - 2159,Document lacks specifying explicit requirements which are tested and verified by respective test procedure steps,3,"In Section 6 - ""Test Descriptions"" and the subsequent subsections for section 6, in the tables for the various test descriptions, there are no requirements specified as being verified in the associated and respective tables for the various test descriptions. For example, in Section 6.2.1 ""NOOP"", in the test description table, there is no relevant requirement(s) specified which are verified by this test, when it is obvious that Requirement 2005 is tested by this test. See Attachments provided in 'Relationships' for TIM-2156 for the Test Procedure document.",8/8/2005
ProjectB - TIM - 2158,"No ""Test Coverage"" information is provided for the first 11 requirement entries in the Text Matrix table",3,"In Section 5, in Table 1 Test Matrix, for the first eleven (11) entries in the table, there is no ""Test Coverage"" information provided, for the associated requirements listed in the table. See Attachments provided in 'Relationships' for TIM-2156 for the Test Procedure document.",8/8/2005
ProjectB - TIM - 2157,No requirement numbers shown for the first five requirement entries in the Text Matrix,4,"In Section 5, in Table 1 - Test Matrix, for the first five (5) requirements entries, there is no requirement number provided with the associated requirement statements. See Attachments provided in 'Relationships' for TIM-2156 for more illustration info regarding this issue.",8/8/2005
ProjectB - TIM - 2156,No Requirements Document reference is provided with Test Procedures,4,"In Section 2 of the Test Procedures Document, ""Reference Documents"", for the ""ProjectB SDN Bootstrap Prom Loader Requirement"" document - no document reference number is provided. Thus, it is unclear in the Test Procedure document where the referenced requirements are originated from. For example in the 464-FSW-SPEC-0098 document, the numbering system for the requirements in that document do not match the numbering of the requirement shown in the Test Procedure document. However, there is a document from the ProjectB-MIS website named ""CCR_336_0_3_3(1).xls"" which is more consistent with the numbering shown in the Test Procedure.",8/8/2005
ProjectB - TIM - 2155,MP PBBL Test Report: Minor formatting enhancements recommended.,5,"Note regarding the document to which this TIM is linked. While the review held on 07/12/05 was called a 'Test Case Review', it was actually a review of both the MP PBBL test procedures and MP PBBL Test Report. This notation is intended to minimize confusion that might arise from using 'System Test Results Analysis' as the WBS Task. IV&V recommends the following enhancements to the MP PBBL Test Report: 1. All pages - Page numbering recommended. 2. All pages - Change header from 'PBBL Test Report' to 'MP PBBL Test Report'. 3. Section 1.2 - Provide document reference number for 'ProjectB (ProjectB) Project Main Processor Programmable Read-Only Memory (PROM) Based Boot Loader Specification'. This document number, 464-FSW-SPEC-0115, is provided later in Section 1.3, but should also be included here during its initial reference. 4. Section 2.3.1 - Add the following bullets under item #2: - Dump Packets Remaining - Pointless Point",8/2/2005
ProjectB - TIM - 2154,MP PBBL Test Procedure sbc_pbbl_commandtest.prc: Recommend additional test for potential error condition.,3,"Note regarding the document to which this TIM is linked. While the review held on 07/12/05 was called a 'Test Case Review', it was actually a review of both the MP PBBL test procedures and MP PBBL Test Report. This notation is intended to minimize confusion that might arise from using 'System Test Results Analysis' as the WBS Task. Question regarding Step 6: What is the expected behavior when an attempt is made to load a number of words into RAM that exceeds the maximum capacity? Is this something that should be tested?",8/2/2005
ProjectB - TIM - 2153,MP PBBL Test Procedure sbc_pbbl_initverify.prc: Procedure contains several steps for which there are no requirements.,3,"Note regarding the document to which this TIM is linked. While the review held on 07/12/05 was called a 'Test Case Review', it was actually a review of both the MP PBBL test procedures and MP PBBL Test Report. This notation is intended to minimize confusion that might arise from using 'System Test Results Analysis' as the WBS Task. IV&V was unable to determine what requirements are being tested by Steps 1.13, 1.14, 1.15, and 1.16. Are there requirements (recently added, maybe?) that are being tested by each of these steps? (It appears as if ProjectB (ProjectB) Project Main Processor Programmable Read-Only Memory (PROM) Based Boot Loader Specification (464-FSW-SPEC-0115) could have expanded requirement #1004, perhaps?) Or are they additional things that it occurred to the test developer that it would be important to test? If the latter, should the requirements also be updated?",8/2/2005
ProjectB - TIM - 2152,"Requirement CDHMP-303 and the use of ""SC"" subsystem allocation",4,"In the FSW Level 3 Requirements document, L3 requirement CDHMP-303 is allocated to the ""SC"" subsystem. IV&V assumes this to mean ""Stored Command"" since other level 3 Stored Command requirements are indicated as such with this abbreviation. However, it is unclear if CDHMP-303 actually applies to the Stored Command Level 4 requirements SRS document since Level 3 requirement CDHMP-303 is concerned with Fault Detection and Correction (FDC). Thus, ""SC"" in this case may mean ""Spacecraft"" and not ""Stored Command"". IV&V's issue is that a clearer distinction should be indicated in the use of ""SC"" for Spacecraft and Stored Command.",7/26/2005
ProjectB - TIM - 2151,"Requirement CDHMP-180 and the use of ""SC"" subsystem allocation",4,"In the FSW Level 3 Requirements document, L3 requirement CDHMP-180 is allocated to the ""SC"" subsystem. IV&V assumes this to mean ""Stored Command"" since other level 3 Stored Command requirements are indicated as such with this abbreviation. However, it is unclear if CDHMP-180 actually applies to the Stored Command Level 4 requirements SRS document since Level 3 requirement CDHMP-180 is concerned with instrument notification. Thus, ""SC"" in this case may mean ""Spacecraft"" and not ""Stored Command"". IV&V's issue is that a clearer distinction should be indicated in the use of ""SC"" for Spacecraft and Stored Command.",7/26/2005
ProjectB - TIM - 2150,"Requirement CDHMP-166 and the use of ""SC"" subsystem allocation",4,"In the FSW Level 3 Requirements document, L3 requirement CDHMP-166 is allocated to the ""SC"" subsystem. IV&V assumes this to mean ""Stored Command"" since other level 3 Stored Command requirements are indicated as such with this abbreviation. However, it is unclear if CDHMP-166 actually applies to the Stored Command Level 4 requirements SRS document since Level 3 requirement CDHMP-166 is concerned with thrusters. Thus, ""SC"" in this case may mean ""Spacecraft"" and not ""Stored Command"". IV&V's issue is that a clearer distinction should be indicated in the use of ""SC"" for Spacecraft and Stored Command.",7/26/2005
ProjectB - TIM - 2149,FSW Level 3 Requirement CDHMP-33 is not implemented in any requirements in the Stored Command SRS Level 4 document,3,"In the Level 3 FSW Requirements Document [464-FSW-REQ-0056; Baselined Version 1.5], Requirement CDHMP-33 is allocated to the ""SC"" (Stored Command) FSW subsystems"". However, this Level 3 requirement's functionality is not implemented or cannot be traced to any child requirement in the SC SRS Document [464-FSW-SPEC-0062; 6/28/05 Revision].",7/26/2005
ProjectB - TIM - 2148,"Array Out-of-Bounds in pse_common.h, ttpkt.h, pct_task_main.c line 1000",2,"The array index of 'OM_SwitchRestoreFailures' may be outside the bounds. Array 'OM_SwitchRestoreFailures' of size 3 declared at ttpkt.h:106 may use index values 3..5 This can occur because on line 979 PSE_CardNumber = PSE_CardNumber - 1 and then is compared to PSE_ZERO_ALL_COUNTERS_FOR_FAILED_RESTORES on line 982. This will never be true because of the if statement on line 957. It appears that the if statement on line 982 is most likely supposed to be if( PSE_CardNumber+1 == PSEPSE_ZERO_ALL_COUNTERS_FOR_FAILED_RESTORES) which is similar to the statments on lines 811, and 903. pse_common.h: 34 #define PSE_NUMBER_OF_OMs 3 35 #define PSE_OM_NUMBER_OF_SERVICES 8 ttpkt.h: 106 uint8 OM_SwitchRestoreFailures[PSE_NUMBER_OF_OMs][PSE_OM_NUMBER_OF_SERVICES]; pct_task_main.c: 951 PSE_CardNumber = 952 (uint8) ( cmd->parameter[0] ); 953 954 PSE_ServiceNumber = 955 (uint8) ( cmd->parameter[1] ); 956 957 if ( ( PSE_CardNumber < 1 || PSE_CardNumber > PSE_NUMBER_OF_OMs ) && 958 ( PSE_CardNumber != PSE_ZERO_ALL_COUNTERS_FOR_FAILED_RESTORES ) ) { 959 960 eventf( PCT_TASK_ID, 961 ""XCT113Reset Failed Restore Attempts Cmd - Invalid Card Number: %d"", 962 PSE_CardNumber ); 963 964 CT_HkPkt.fast.InvalidCmdCounter++; 965 966 } else if ( PSE_ServiceNumber < 1 || 967 PSE_ServiceNumber > PSE_OM_NUMBER_OF_SERVICES ) { 968 969 eventf( PCT_TASK_ID, 970 ""XCT114Reset Failed Restore Attempts Cmd - Invalid Service Number: %d"", 971 PSE_ServiceNumber ); 972 973 CT_HkPkt.fast.InvalidCmdCounter++; 974 975 } else { 976 977 CT_HkPkt.fast.ValidCmdCounter++; 978 979 PSE_CardNumber = PSE_CardNumber - 1; /* Internal representation */ 980 PSE_ServiceNumber = PSE_ServiceNumber - 1; /* Internal representation */ 981 982 if ( PSE_CardNumber == PSE_ZERO_ALL_COUNTERS_FOR_FAILED_RESTORES ) { 983 984 /* Zero all bits */ 985 986 for ( i=0; i < PSE_NUMBER_OF_OMs; i++ ) { 987 988 for ( j=0; j < PSE_OM_NUMBER_OF_SERVICES; j++ ) { 989 990 PSE_TlmFastFreqPkt.OM_SwitchRestoreFailures[i][j] = 991 PSE_CLEAR; 992 993 } 994 } 995 996 } else { 997 998 /* Clear one counter */ 999 1000 PSE_TlmFastFreqPkt.OM_SwitchRestoreFailures[PSE_CardNumber][PSE_ServiceNumber] = 1001 PSE_CLEAR; 1002 1003 } 1004 1005 }",7/25/2005
ProjectB - TIM - 2147,Non-Initialized Data in quaternionTest.c line 540,4,'counter' is used uninitialized in this function. Variable 'counter' declared at line 527 is used uninitialized under conditions - i<=1 is true at line 532 and j<=1 is true at line 534 and k<=1 is true at line 536 and l<=1 is true at line 538 quaternionTest.c: 527 int counter; 528 double magnitude; 529 double difference; 530 double calculatedMagnitude; 531 532 for (i = -1; i <= 1; i += stepSize) 533 { 534 for (j = -1; j <= 1; j += stepSize) 535 { 536 for (k = -1; k <= 1; k += stepSize) 537 { 538 for (l = -1; l <= 1; l += stepSize) 539 { 540 counter++;,7/25/2005
ProjectB - TIM - 2146,Non-Initialized Data in quaternionTest.c line 444,4,'counter' is used uninitialized in this function. Variable 'counter' declared at line 431 is used uninitialized under conditions - i<=1 is true at line 436 and j<=1 is true at line 438 and k<=1 is true at line 440 and l<=1 is true at line 442 quaternionTest.c: 431 int counter; 432 Quaternion inputQuat; 433 Quaternion duplicateInputQuat; 434 Quaternion outputQuat; 435 436 for (i = -1; i <= 1; i += stepSize) 437 { 438 for (j = -1; j <= 1; j += stepSize) 439 { 440 for (k = -1; k <= 1; k += stepSize) 441 { 442 for (l = -1; l <= 1; l += stepSize) 443 { 444 counter++;,7/25/2005
ProjectB - TIM - 2145,Non-Initialized Data in mat3x3d_ut.c line 1169,4,"'Compare' might be used uninitialized in this function. Variable 'Compare' declared at line 1157 might be used uninitialized under conditions - Residual<0.0 is false at line 1159 and Residual>(1.0+Tolerance)||Residual<(1.0-Tolerance) is false at line 1163 mat3x3d_ut.c: 1153 int Matrix3d_ScalarCompare (double Scalar1, 1154 double Scalar2, 1155 double Tolerance) { 1156 double Residual; 1157 int Compare; 1158 Residual = Scalar1 / Scalar2; 1159 if (Residual < 0.0) { 1160 Compare = 0; 1161 } 1162 else { 1163 if(Residual > (1.0 + Tolerance) || 1164 Residual < (1.0 - Tolerance)) { 1165 Compare = 0; 1166 } 1167 } 1168 1169 return (Compare); 1170 1171 } /* End of Matrix3x3d_ScalarCompare */",7/25/2005
ProjectB - TIM - 2144,Possible use of an uninitialized variable in pciAutoConfig.c line 2208,2,"******* DUPLICATE of TIM-2128 ******* 'alignAdjust' might be used uninitialized in this function. Variable 'alignAdjust' declared at line 2193 might be used uninitialized under conditions - (base&sizeMask)>0 is false at line 2201 pciAutoConfig.c: 2176 /******************************************************************************* 2177 * 2178 * pciAutoAddrAlign - Align a PCI address and check boundary conditions. 2179 * 2180 * RETURNS: OK, or ERROR if available memory has been exceeded. 2181 * 2182 */ 2183 2184 STATUS pciAutoAddrAlign 2185 ( 2186 uint32 base, /* base of available memory */ 2187 uint32 limit, /* last addr of available memory */ 2188 uint32 reqSize, /* required size */ 2189 uint32 *pAlignedBase /* output: aligned address put here */ 2190 ) 2191 { 2192 uint32 sizeMask; 2193 uint32 alignAdjust; 2194 2195 /* make the size mask */ 2196 2197 sizeMask = reqSize - 1; 2198 2199 /* see if the address needs to be adjusted */ 2200 2201 if ((base & sizeMask) > 0) 2202 { 2203 alignAdjust = reqSize - (base & sizeMask); 2204 } 2205 2206 /* see if the aligned base exceeds the resource boundary */ 2207 2208 if ( ((base + alignAdjust) < base) || 2209 ((base + alignAdjust) > limit) ) 2210 { 2211 return ERROR; 2212 } 2213 2214 *pAlignedBase = base + alignAdjust; 2215 2216 /* see if the aligned base+size exceeds the resource boundary */ 2217 2218 if ( ((base + alignAdjust + reqSize) < base) || 2219 ((base + alignAdjust + reqSize) > limit) ) 2220 { 2221 return ERROR; 2222 } 2223 2224 return OK; 2225 }",7/25/2005
ProjectB - TIM - 2143,"Requirement CDHMP-136 has no subsystem allocation for ""HD"" (High-Speed Bus Director)",4,"In the High-Speed Director (HD) Requirements Specification document, Requirement 1313 refers to as being derived from FSW Level 3 Requirement CDHMP-136. However in the Level 3 FSW Requirements Document [464-FSW-REQ-0056; Version 1.5; 3/30/05], CDHMP-136 is shown as being allocated only to the ""HS"" (Health & Safety) Subsystem. The subsystem allocation for Level 3 Requirement CDHMP-136 should be updated to include the ""HD"" (High-Speed Bus Director).",7/21/2005
ProjectB - TIM - 2142,FSW Level 3 Requirement CDHMP-130 is not implemented in any requirements in the HD SRS Level 4 document,3,"In the Level 3 FSW Requirements Document [464-FSW-REQ-0056; Baselined Version 1.5], Requirement CDHMP-130 is allocated to ""All CDHMP FSW subsystems"". However, this requirement's functionality is not implemented or cannot be traced to any child requirement in the HD SRS Document [464-FSW-SPEC-0119].",7/21/2005
ProjectB - TIM - 2141,FSW Level 3 Requirement CDHMP-66 is not implemented in any requirements in the HD SRS Level 4 document,3,"In the Level 3 FSW Requirements Document [464-FSW-REQ-0056; Baselined Version 1.5], Requirement CDHMP-66 is allocated to ""All CDHMP FSW subsystems"". However, this requirement's functionality is not implemented or cannot be traced to any child requirement in the HD SRS Document [464-FSW-SPEC-0119].",7/21/2005
ProjectB - TIM - 2140,FSW Level 3 Requirement CDHMP-60 is not implemented in any requirements in the HD SRS Level 4 document,3,"In the Level 3 FSW Requirements Document [464-FSW-REQ-0056; Baselined Version 1.5], Requirement CDHMP-60 is allocated to ""All CDHMP FSW subsystems"". However, this requirement's functionality is not implemented or cannot be traced to any child requirement in the HD SRS Document [464-FSW-SPEC-0119].",7/21/2005
ProjectB - TIM - 2139,FSW Level 3 Requirement CDHMP-59 is not implemented in any requirements in the HD SRS Level 4 document,3,"In the Level 3 FSW Requirements Document [464-FSW-REQ-0056; Baselined Version 1.5], Requirement CDHMP-59 is allocated to ""All CDHMP FSW subsystems"". However, this requirement's functionality is not implemented or cannot be traced to any child requirement in the HD SRS Document [464-FSW-SPEC-0119].",7/21/2005
ProjectB - TIM - 2138,FSW Level 3 Requirement CDHMP-52 is not implemented in any requirements in the HD SRS Level 4 document,3,"In the Level 3 FSW Requirements Document [464-FSW-REQ-0056; Baselined Version 1.5], Requirement CDHMP-52 is allocated to ""All CDHMP FSW subsystems"". However, this requirement's functionality is not implemented or cannot be traced to any child requirement in the HD SRS Document [464-FSW-SPEC-0119].",7/21/2005
ProjectB - TIM - 2137,FSW Level 3 Requirement CDHMP-24 is not implemented in any requirements in the HD SRS Level 4 document,3,"In the Level 3 FSW Requirements Document [464-FSW-REQ-0056; Baselined Version 1.5], Requirement CDHMP-24 is allocated to ""All CDHMP FSW subsystems"". However, this requirement's functionality is not implemented or cannot be traced to any child requirement in the HD SRS Document [464-FSW-SPEC-0119].",7/21/2005
ProjectB - TIM - 2136,"No subsystem allocation in document for ""HD"" (High-Speed Bus Director)",4,"In regard to the HD SRS Document (464-FSW-SPEC-0119), in the Level 3 FSW Requirements Document [464-FSW-REQ-0056; Version 1.5; Baselined], there is no subsystem allocation for ""HD"" (High-Speed Bus Director). This makes it difficult to identify which Level 3 requirements are / should be allocated to the HD SRS Document. IV&V suggests adding a ""HD"" subsystem allocation to the Level 3 FSW Requirements Document.",7/21/2005
ProjectB - TIM - 2135,"Multiple requirements in HD SRS reference Level 3 requirement CDHMP-182 as their parent requirement, but CDHMP-182 does not exist",3,"Multiple Requirements in HD SRS document refer to Level 3 Requirement CDHMP-182 as their parent requirement. However, CDHMP-182 does not exist in the Level 3 FSW Requirements Document [464-FSW-REQ-0056; Revision 1.5; 3/30/05]. It is IV&V's understanding that there is a CCR which proposes CDHMP-182. However, the requirement has not been formally placed into the document and released. So this issue is being written as a placeholder to ensure that the missing parent CDHMP-182 is implemented in the Level 3 document. IV&V will closed this issue once it has been verified that CDHMP-182 has been included in the release of a new Level 3 FSW Requirements document [464-FSW-REQ-0056]. List of affected HD SRS Requirements: 1205 1206 1207 1208 2001 2002 2004 2005 2006 2007 2101 2102 2202 2203 2204 2205 2206 2207 2208 2209 2210 2211 3001 3002",7/21/2005
ProjectB - TIM - 2134,MP PBBL - Incorrect comment in pbblCCSDS.c,5,"Function: CCSDS_SetTimestamp() ""The CCSDS_SetTimestamp( ) function ends with comment /* END CCSDS_WriteTime() */ """,7/19/2005
ProjectB - TIM - 2133,MP PBBL - incorrect comments in Systart.s in the ram-init and prom-load directories,5,"The following are incorrect comments in Systart.s in the directory \tools\ram-init and \tools\prom-load. The files appear to be the same, but in different directories, and it is IV&V's understanding that these directories support utility programs for initialization and testing of the software. Line 2: Incorrect Comment: ** File: sysInit.s Description: ""sysStart.s has an incorrect file name reference in its file prologue."" Line 40: Incorrect Comment: * jumps to the C routine romStart() in bootInit.c Description: ""sysStart() function has an incorrect function description comment in the function's prologue."" Line 36: Incorrect Comment: * sysInit - start after boot Description: ""sysStart() function has an incorrect function name in the function's prologue."" Line 52: Incorrect Comment: * void sysInit (void) Description: ""sysStart() function has an incorrect function prototype comment in the function's prologue.""",7/19/2005
ProjectB - TIM - 2132,MP PBBL - incorrect ending comments on several header files in the build,5,File: pbbl1553.h Comment: /* Inclusion of ppbl1553h */ File: pbblCCSDS.h Comment: #endif /* _ccsds_ */ File: pbblCmd.h Comment: /* Inclusion of ppblCmdh */ File: pbblLog.h Comment: /* Inclusion of ppblLogh */ File: pbblMemMap.h Comment: /* Inclusion of ppblMemMaph */ File: pbblTelem.h Comment: /* Inclusion of ppblTelemh */,7/19/2005
ProjectB - TIM - 2131,MP PBBL - pbblRegs.h - incorrect header definition and ending comment,4,"""#ifndef _INCppciRegsh #define _INCppciRegsh #endif /* _INCppciRegsh */ """,7/19/2005
ProjectB - TIM - 2130,MP PBBL - hardware.h #endif is not at end of file,4,"""#endif is defined before the end of file and before list of prototypes. Prototypes could be multiply defined.""",7/19/2005
ProjectB - TIM - 2129,MP PBBL - Macro Clash - EEPROM_FSW_START_ADDRESS defined with different values,3,"In the files ""mp_pbbl\tools\prom-load\load.c mp_pbbl\tools\ram-init\ram-init.c"" ""Defined in load.c: #define EEPROM_FSW_START_ADDRESS 0x03400000 Defined in ram-init.c: #define EEPROM_FSW_START_ADDRESS 0x034000""",7/19/2005
ProjectB - TIM - 2128,MP PBBL - pciAutoConfig.c - Variable used before initialized,2,"The variable alignAdjust may be used before it is initialized. The function is pciAutoAddrAlign () - Lines 2193, 2201, 2208-2219 2193 uint32 alignAdjust; 2194 2195 /* make the size mask */ 2196 2197 sizeMask = reqSize - 1; 2198 2199 /* see if the address needs to be adjusted */ 2200 2201 if ((base & sizeMask) > 0) 2202 { 2203 alignAdjust = reqSize - (base & sizeMask); 2204 } 2205 2206 /* see if the aligned base exceeds the resource boundary */ 2207 2208 if ( ((base + alignAdjust) < base) || 2209 ((base + alignAdjust) > limit) ) 2210 { 2211 return ERROR; 2212 } 2213 2214 *pAlignedBase = base + alignAdjust; 2215 2216 /* see if the aligned base+size exceeds the resource boundary */ 2217 2218 if ( ((base + alignAdjust + reqSize) < base) || 2219 ((base + alignAdjust + reqSize) > limit) )",7/19/2005
ProjectB - TIM - 2127,SDN PBBL - Unused structure members defined in sdnpbbl.h,4,There are a number of unused structure members in the file sdnpbbl.h. A complete list is as follows (starting with line number): 129 PBBL_RangeCmd_t::StreamId 140 PBBL_JumpCmd_t::StreamId 150 PBBL_LoadCmd_t::StreamId 121 PBBL_BasicCmd_t::Sequence 131 PBBL_RangeCmd_t::Sequence 141 PBBL_JumpCmd_t::Sequence 151 PBBL_LoadCmd_t::Sequence 121 PBBL_BasicCmd_t::Length 131 PBBL_RangeCmd_t::Length 141 PBBL_JumpCmd_t::Length 151 PBBL_LoadCmd_t::Length 132 PBBL_RangeCmd_t::Secondary 132 PBBL_JumpCmd_t::Secondary 153 PBBL_LoadCmd_t::Secondary 154 PBBL_LoadCmd_t::MemType,6/22/2005
ProjectB - TIM - 2126,SDN PBBL - Missing error message to ground in function PBBL_KnowThyself,4,"The function PBBL_KnowThyself has the following clear purpose: ** Purpose: ** This function determines the RT address of the SDN, from the DDC 61582, and then determines ** which APIDs should be used for that SDN from a table. Note that these values are not set if the RT ** Address doesn't match anything in the table -- if that is the case there is not much that can be done ** */ IV&V would like the function to send an error message to the ground, to communicate that there is something wrong with the RT addresses.",6/20/2005
ProjectB - TIM - 2125,SDN PBBL - Unused #defines in sdnpbbl.h,4,There are a number of unused #defines in the file sdnpbbl.h. A complete list is as follows (starting with line number): 42 #define PBBL_MemWrite8 196 #define DDC_REG_RT_STATUS 200 #define DDC_MEM_CMD_STACK_PTR DDC_MEM_TO_CF(0x0100) /* PTR to the NEXT command block to be written */ 205 #define DDC_MEM_BUSY_LOOKUP 206 #define DDC_MEM_BCST_ACTIVE 207 #define DDC_MEM_BCST_MC_LO 208 #define DDC_MEM_BCST_MC_HI 209 #define DDC_MEM_RCV_ACTIVE 210 #define DDC_MEM_XMIT_ACTIVE 227 #define DDC_REG_INT_MASK_VAL 279 #define SDN_MET_SW_HIGH32_REG 284 #define SDN_WATCHDOG_STATUS_REG 289 #define SDN_RESET_CAUSE_REGISTER 290 #define SDN_RESET_CAUSE_POWERON_MASK 291 #define SDN_RESET_CAUSE_RSTO_MASK 293 #define SDN_RESET_CAUSE_ASD_MASK 294 #define SDN_RESET_CAUSE_SW_MASK 295 #define SDN_RESET_CAUSE_HCPCI_MASK,6/20/2005
ProjectB - TIM - 2124,Traceability for requirement 5326.1 is incomplete,4,"ProjectB Project GCE FSW Requirements Document [464-FSW-SPEC-0054]; Draft 2; 5/5/05 The traceability for Requirement 5326.1 is incomplete. In the document, there is no indicated traceability for the requirement in the traceability column - neither a Level 3 FSW Requirement parent nor if the requirement is derived. IV&V suspects that Level 3 FSW Requirement SDN-11 is the parent. This issue concerns the completeness and traceability of Requirement 5326.1.",6/15/2005
ProjectB - TIM - 2123,Traceability for requirement 5021 indicates that it is derived however Level 3 Requirements SDN-3 and/or SDN-5 seem more applicable,4,"ProjectB Project GCE FSW Requirements Document [464-FSW-SPEC-0054]; Draft 2; 5/5/05 In the FSW Requirements Document the traceability shown for Requirement 5021 is ""Derived"". IV&V believes that a more applicable and complete trace would be FSW Level 3 Requirement(s) SDN-3 and/or SDN-5. This issue concerns the completeness and traceability of Requirement 5021.",6/15/2005
ProjectB - TIM - 2122,Inst1/Inst3: SUR_007650 contains an invalid reference for the source requirement,4,"Start-Up ROM (SUROM) Software Requirements Specification Draft A June 18, 2004 2H00363 Page 21, Section 4.1.3.25, Paragraph 4.1.3.25 The reference for SUR_007650 should be “1553_ICD_3.1.3.3” not “1153_ICD_3.1.3.3” IV&V suggests updating the SUROM SRS to indicate the proper source.",6/6/2005
ProjectB - TIM - 2121,Incorrect function description comment in function prologue,5,"In file pbblMemMap.c, the function, PBBL_MemSet, has an incorrect function description comment in its function prologue.",6/6/2005
ProjectB - TIM - 2120,Incorrect header file name definitions in PROM Based Boot Loader (PBBL) header files,4,"The PROM Based Boot Loader (PBBL) header files (pbbl.h, pbblRegs.h, pbblMemMap.h, pbblUart.h, pbblLog.h, pbblTime.h, pbblBMC.h, pbbl1553.h, pbblCCSDS.h, pbblCCSDSCmd.h, pbblCmd.h, and pbblTelem.h) all have an incorrect header file name definition at the beginning of the header file and an incorrect header file comment at the end of the header file.",6/6/2005
ProjectB - TIM - 2119,PBBL - Function is defined but is not used,4,File - pbbl1553Service.c Function - PBBL_1553_Update_Active_SComm Line 148 The above named function only performs a noop and returns. It is not called by another function in the codebase and it is not advertised in the corresponding header file.,6/3/2005
ProjectB - TIM - 2118,MP PBBL - error handling variables are defined but not used - point to missing error handling requirements,3,"IV&V found several instances of variables used as error counters that were initialized to zero but never incremented or used. Examples: File - pbbl1553Init.c Function - PBBL_1553_Init_Summit_Shared_Ram Line 70 Variable - Errorcnt File - pbbl1553Init.c Function - PBBL_1553_Init_Bus_Schedule line 262 Variable - Errorcnt File - pbbl1553Service.c Function - PBBL_1553_Read_Command_Packets_From_Summit Line 231 Variable - NumErr File - pbbl1553Service.c Function - PBBL_1553_Write_Telem_Packets_To_Summit Line 246 Variable - NumErr During code walkthrough, it was noted that requirements needed to be written for error handling. This TIM is a placeholder to ensure that it happens",6/3/2005
ProjectB - TIM - 2117,PBBL - typedef not defined according to coding standards,4,In the pbbl1553.h - the typedef for PBBL_Summit32 is missing the _t suffix. This is a violation of branch 582 coding standards. Line 128.,6/3/2005
ProjectB - TIM - 2116,PBBL - #defines should be placed in header file,4,"File name pbblBMC.c Line 94 - #define PBBL_BMC_BCRT_REG_SPECIFIES_BC 1, Line 95 - #define PBBL_BMC_BCRT_BIT_MASK 0x00000001 are in the middle of this file. They should be placed in the header file (pbblBMC.H) as they need to be visible externally.",6/3/2005
ProjectB - TIM - 2115,PBBL - Incorrect comment for end of function,5,In the file PBBL_log.c - the end of function comment is incorrect - it is as follows /*end of PBBL_Post_Log_Word should be /*end of PBBL_Post_Log_Write,6/3/2005
ProjectB - TIM - 2114,PBBL - incorrect spelling for an array index comment,5,In the file pbblLog.c Line 31 The comment /*Researved - should be /*Reserved,6/3/2005
ProjectB - TIM - 2113,PBBL - Incorrect name for the main function in PBBL,4,In the file pbblMain.c Line 49 The main function name for the PBBL codebase should be named pbbl_main instead of just pbbl. The ProjectB team has been following this standard.,6/3/2005
ProjectB - TIM - 2112,Requirement 4431.5 - Level 3 Parent Requirement ACE-31 does not seem to correlate with child requirement 4431.5,3,"Attitude Control Electronics Flight Software Requirements Specification; 464-FSW-SPEC-0049; Draft 3; 05/06/05; Baselined ACE Requirement 4431.5 in the above mentioned Level 4 document, has listed as it's parent requirement: ProjectB FSW Level 3, Requirement ACE-31. It is unclear to IV&V how requirement ACE-31 from the the Level 3 requirement document is the parent requirement for Level 4 Requirement 4431.5, since there seems to be no correlation between the two. ACE 4431.5 (child req.) states: ""If executing an RW override command when a new valid RW override is received, the ACE FSW shall a. terminate execution of the currently executing command b. execute the newly received RW override command"" FSW Level 3 ACE-31 (parent req.) states: ""The ACE SDN software shall provide open loop torque commands to the reaction wheels."" IV&V does not believe that this is the correct parent requirement. Based on a review of the parent requirement document; 464-FSW-SPEC-0056, IV&V believes that ACE-32 seems a more befitting parent requirement. ACE-32 states: ""All override actuators commands shall take priority over control modes calculated actuator commands."" IV&V suggests re-specifying a more befitting parent or examining this issue in order provide clarification.",5/31/2005
ProjectB - TIM - 2111,Requirement 4431.4 - Level 3 Parent Requirement ACE-31 does not seem to correlate with child requirement 4431.4,3,"Attitude Control Electronics Flight Software Requirements Specification; 464-FSW-SPEC-0049; Draft 3; 05/06/05; Baselined ACE Requirement 4431.4 in the above mentioned Level 4 document, has listed as it's parent requirement: ProjectB FSW Level 3, Requirement ACE-31. It is unclear to IV&V how requirement ACE-31 from the the Level 3 requirement document is the parent requirement for Level 4 Requirement 4431.4, since there seems to be no correlation between the two. ACE 4431.4 (child req.) states: ""If executing an RW override command, the ACE FSW shall ignore RW torque commands generated by the ACE FSW."" FSW Level 3 ACE-31 (parent req.) states: ""The ACE SDN software shall provide open loop torque commands to the reaction wheels."" IV&V does not believe that this is the correct parent requirement. Based on a review of the parent requirement document; 464-FSW-SPEC-0056, IV&V believes that ACE-32 seems a more befitting parent requirement. ACE-32 states: ""All override actuators commands shall take priority over control modes calculated actuator commands."" IV&V suggests re-specifying a more befitting parent or examining this issue in order provide clarification.",5/31/2005
ProjectB - TIM - 2110,Requirement 4431.3 - Level 3 Parent Requirement ACE-31 does not seem to correlate with child requirement 4431.3,3,"Attitude Control Electronics Flight Software Requirements Specification; 464-FSW-SPEC-0049; Draft 3; 05/06/05; Baselined ACE Requirement 4431.3 in the above mentioned Level 4 document, has listed as it's parent requirement: ProjectB FSW Level 3, Requirement ACE-31. It is unclear to IV&V how requirement ACE-31 from the the Level 3 requirement document is the parent requirement for Level 4 Requirement 4431.3, since there seems to be no correlation between the two. ACE 4431.3 (child req.) states: ""If executing an RW override command, the ACE FSW shall ignore RW torque commands generated by the ACE Safehold control law."" FSW Level 3 ACE-31 (parent req.) states: ""The ACE SDN software shall provide open loop torque commands to the reaction wheels."" IV&V does not believe that this is the correct parent requirement. Based on a review of the parent requirement document; 464-FSW-SPEC-0056, IV&V believes that ACE-32 seems a more befitting parent requirement. ACE-32 states: ""All override actuators commands shall take priority over control modes calculated actuator commands."" IV&V suggests re-specifying a more befitting parent or examining this issue in order provide clarification.",5/31/2005
ProjectB - TIM - 2109,Requirement 4430.2 - Level 3 Parent Requirement ACE-1 does not seem to correlate with child requirement 4430.2,3,"Attitude Control Electronics Flight Software Requirements Specification; 464-FSW-SPEC-0049; Draft 3; 05/06/05; Baselined ACE Requirement 4430.2 in the above mentioned Level 4 document, has listed as it's parent requirement: ProjectB FSW Level 3, Requirement ACE-1. It is unclear to IV&V how requirement ACE-1 from the the Level 3 requirement document is the parent requirement for Level 4 Requirement 4430.2, since there seems to be no correlation between the two. ACE 4430.2 (child req.) states: ""If the 'RW command suppression' timer has not yet expired, the ACE FSW shall not send RW commands.."" FSW Level 3 ACE-1 (parent req.) states: ""The ACE SDN software shall arbitrate, independent of the 1553, which ACE is commanding the actuators."" IV&V does not believe that this is the correct parent requirement. Based on a review of the parent requirement document; 464-FSW-SPEC-0056, IV&V was unable to identify a more appropriate parent requirement. IV&V suggests re-specifying a more befitting parent or examining this issue in order to provide clarification.",5/31/2005
ProjectB - TIM - 2108,Requirement 4430.1 - Level 3 Parent Requirement ACE-1 does not seem to correlate with child requirement 4430.1,3,"Attitude Control Electronics Flight Software Requirements Specification; 464-FSW-SPEC-0049; Draft 3; 05/06/05; Baselined ACE Requirement 4430.1 in the above mentioned Level 4 document, has listed as it's parent requirement: ProjectB FSW Level 3, Requirement ACE-1. It is unclear to IV&V how requirement ACE-1 from the the Level 3 requirement document is the parent requirement for Level 4 Requirement 4430.1, since there seems to be no correlation between the two. ACE 4430.1 (child req.) states: ""If the ACE FSW is not in control, the ACE FSW shall not send RW commands under any circumstances."" FSW Level 3 ACE-1 (parent req.) states: ""The ACE SDN software shall arbitrate, independent of the 1553, which ACE is commanding the actuators."" IV&V does not believe that this is the correct parent requirement. Based on a review of the parent requirement document; 464-FSW-SPEC-0056, IV&V was unable to identify a more appropriate parent requirement. IV&V suggests re-specifying a more befitting parent or examining this issue in order to provide clarification.",5/31/2005
ProjectB - TIM - 2107,Requirements Spec 0017 (SUROM updates to PROM based boot loader) is of poor quality and readability,4,"This entire document appears to have been rushed through the baseline approval process as it is lacking in background information as to the reason for the SUROM updates. Also, there are technical pictures embedded in the rqeuirements tracking section (section 5.0) that don't belong in that section. The readability of this artifact is poor. IV&V also questions the completeness of the SUROM updates as there are only 5 requirements supporting the updates.",5/24/2005
ProjectB - TIM - 2106,Incomplete updates to affected requirement specs caused by Main Processor PROM based boot loader,2,"In section 7.2 Detailed PROM Based Boot Loader Operations, there is a paragraph that states the following: The functionality implemented by the Command Ingest and Telemetry Output tasks are far too large, and complicated to be implemented in the Main Processor PROM based boot loader. Therefore, these functions are implemented on the S/COMM SDN. The Bus Controller and Software Manager functions (load, and dump memory) is implemented by the main processor PROM based boot loader. IV&V expects to see PROM based boot loader updates to the S/Comm SDN, Command Ingest and Telemetry Output requirement specs as needed to incorporate the new functionality.",5/24/2005
ProjectB - TIM - 2104,S-Comm - unused word os_object_table_end,4,\fsw\cpu\scomm\all\config\osobjtab.c os_object_table_end defined at Line 137,5/19/2005
ProjectB - TIM - 2103,S-Comm - Unused structure type,4,\fsw\platform\sdn\inc\osprocessor.h MCF_EXCEPT_STACK_FRAME at Line 58,5/19/2005
ProjectB - TIM - 2102,S-Comm - unused structure member vector,4,"\fsw\fsw\platform\sdn\hal\ospci.c In structure OS_PCIInfo_t, vector is not used. vector is defined at Line 289.",5/19/2005
ProjectB - TIM - 2101,S-Comm - unused structure member config_endian,4,"\fsw\platform\sdn\hal\ospci.c Structure Name and Structure Member: In structure type OS_PciExpectedTargets_t, config_endian is not used. config_endian is defined at Line 296",5/19/2005
ProjectB - TIM - 2100,S-Comm - Unused parameters in function OS_TaskCreate file osapi.c,4,"\fsw\osapi\rtems\osal\osapi.c Function: OS_TaskCreate Arguments: task_name, stack_pointer, and flags parameter are not used at Line 295",5/19/2005
ProjectB - TIM - 2099,S-Comm - unused parameter in function OS_BinSemCreate file osapi.c,4,"\fsw\osapi\rtems\osal\osapi.c Function: OS_BinSemCreate Arguments: sem_name variable, sem_initial_value variable, and the options variable are unused parameters at line 783",5/19/2005
ProjectB - TIM - 2098,S-Comm - unused parameter in function OS_QueueCreate file osapi.c,4,\fsw\osapi\rtems\osal\osapi.c Function OS_QueueCreate Arguments queue_name and flags variables are not used at Line 487,5/19/2005
ProjectB - TIM - 2097,S-Comm - unused parameter in function MatrixMxNd_Mult file matmxnd.c,4,\fsw\shared\math\matmxnd.c Function MatrixMxNd_Mult Unused argument RightRowSize line 137,5/19/2005
ProjectB - TIM - 2096,S-Comm - unused parameter in rtems.c rtems_task_argument,4,\fsw\platform\sdn\bsp\rtems.c Function rtems_task_Init ignored variable is not used Line 126 The ignored variable is rtems_task_argument,5/19/2005
ProjectB - TIM - 2095,S-Comm - Multiple copies of the same file defined in the build - osexception.c,4,"osexception.c is in two directory locations. This may be more of a ""Build"" issue, rather than a ""Code"" issue. \fsw\cpu\scomm\all\config\osexception.c \fsw\platform\sdn\dev\osexception.c",5/19/2005
ProjectB - TIM - 2094,SDN S-Comm - Duplicate Macros - NULL causes macro clash,3,"NULL is multiply defined in ostypes.h Line 99 and system.h Line 129. Both defines correctly check to see if NULL has already been defined, but the define in ostypes.h should undefine NULL and reset its definition because the two definitions of NULL are different. system.h is a file that was not included in the received build. The build system.h file should be checked to see if NULL is defined as zero. Defined in \fsw\shared\inc\ostypes.h and missing\rtems\system.h ""1) Defined in \fsw\shared\inc\ostypes.h: #ifndef NULL #define NULL ((void *) 0) #endif 2) Defined in system.h: #ifndef NULL #define NULL 0 #endif 3) Defined in types.h: #ifndef NULL # define NULL 0 #endif""",5/19/2005
ProjectB - TIM - 2093,SDN S-Comm - Duplicate Macros - MBAR causes macro clash,3,"MBAR is multiply defined in osprocessor.h Line 73 and bsp.h Line 70. bsp.h is a file that was not included in the received build. The build bsp.h file should be checked to see if MBAR is defined. Defined in \fsw\platform\sdn\inc\osprocessor.h and missing\bsp.h ""1) Defined in \fsw\platform\sdn\inc\osprocessor.h: #define MBAR 0x10000000 2) Defined in bsp.h: #define MBAR (BSP_MEM_ADDR_IMM)""",5/19/2005
ProjectB - TIM - 2092,S-Comm - Duplicate Macros - SET_BIT causes macro clash,3,"SET_BIT is multiply defined in sb_li.c Line 35, ul.h Line 66, and dlmain.c Line 109 Defined in \fsw\cpu\scomm\a\config\sb_li.c, \fsw\cpu\scomm\tasks\ul\ul.h, \fsw\cpu\scomm\tasks\dl\dlmain.c ""1) Defined in sb_li.c: #define SET_BIT(r) (DBIT((r) % 32)) 2) Defined in ul.h: #define SET_BIT(i,x) ((i) |= BIT(x)) 3) Defined in dlmain.c: #define SET_BIT(i,x) ((i) |= BIT(x))""",5/19/2005
ProjectB - TIM - 2091,S-Comm - Duplicate Macros - BIT cause macro clash,3,"The Macro, BIT, is defined in numerous places. ) Defined in \fsw\cpu\scomm\tasks\ul\ul.h: #define BIT(x) (1 << (x)) 2) Defined in \fsw\cpu\scomm\tasks\dl\dlmain.c: #define BIT(x) (1 << (x)) 3) Defined in \fsw\shared\inc\ccsds_vcdu.h: #define BIT(x) (1 << (x)) 4) Defined in \fsw\cpu\scomm\a\config\sb_si.c: #undef BIT #define BIT(x) (11 << (x))",5/19/2005
ProjectB - TIM - 2090,SDN S-Comm - Array-out-of-bounds violation - OS_BinSemCreate - Line 795,4,"osids.h: typedef enum { OS_RT_SEM_ID, OS_TIME_1HZ_SEM_ID, OS_DL_SEM_ID, OS_UL_SEM_ID, OS_AP_SEM_ID, OS_UL_FIFO_SEM_ID, OS_UL_FIFO_START_SEM_ID, OS_NUM_OF_SEMAPHORES } os_semaphore_index_type; \fsw\osapi\rtems\osal\osapi.c: sem_t os_semaphore_blocks_array[OS_NUM_OF_SEMAPHORES] ; Function: OS_BinSemCreate Line 795: return_code = sem_init((sem_t *)&(os_semaphore_blocks_array[sem_id]),",5/19/2005
ProjectB - TIM - 2089,SDN S-Comm - Array-out-of-bounds violation - OS_BinSemCreate - Line 790,2,"osids.h: typedef enum { OS_RT_SEM_ID, OS_TIME_1HZ_SEM_ID, OS_DL_SEM_ID, OS_UL_SEM_ID, OS_AP_SEM_ID, OS_UL_FIFO_SEM_ID, OS_UL_FIFO_START_SEM_ID, OS_NUM_OF_SEMAPHORES } os_semaphore_index_type; \fsw\osapi\rtems\osal\osapi.c: sem_t os_semaphore_blocks_array[OS_NUM_OF_SEMAPHORES] ; Line 790: if((sem_id > OS_NUM_OF_SEMAPHORES) || (os_semaphore_blocks_array[sem_id] != 0) ) { return OS_ERROR; }",5/19/2005
ProjectB - TIM - 2087,SDN S-Comm - Array-out-of-bounds violation - OS_QueuePut - Line 705,2,Array 'os_queue_blocks_array' of size 26 declared at line 138 may use index value 26. This will also cause an array index out of bounds on line 513. osids.h #define OS_MAX_QUEUE_IDS 26 File: \fsw\osapi\rtems\osal\osapi.c Function: OS_QueuePut Line 138: rtems_id os_queue_blocks_array [OS_MAX_QUEUE_IDS] 702 /* 703 ** Check Parameters 704 */ 705 if( (queue_id > OS_MAX_QUEUE_IDS) || (os_queue_blocks_array[queue_id] == 0) ),5/19/2005
ProjectB - TIM - 2083,SDN S-Comm - Array out-of-bounds violation - OS_QueueGet - Line 576,2,Array 'os_queue_blocks_array' of size 26 declared at line 138 may use index value 26. This will also cause an array index out of bounds on line 513. osids.h #define OS_MAX_QUEUE_IDS 26 File: \fsw\osapi\rtems\osal\osapi.c Function: OS_QueueGet Line 138: rtems_id os_queue_blocks_array [OS_MAX_QUEUE_IDS] 573 /* 574 ** Check Parameters 575 */ 576 if( (queue_id > OS_MAX_QUEUE_IDS) || (os_queue_blocks_array[queue_id] == 0) ) { return OS_QUEUE_ID_ERROR; },5/19/2005
ProjectB - TIM - 2081,SDN S-Comm - Array out-of-bounds - OS_QueueCreate - Line 495,2,Array 'os_queue_blocks_array' of size 26 declared at line 138 may use index value 26. This will also cause an array index out of bounds on line 495. osids.h #define OS_MAX_QUEUE_IDS 26 File: \fsw\osapi\rtems\osal\osapi.c Function: OS_QueueCreate Line 138: rtems_id os_queue_blocks_array [OS_MAX_QUEUE_IDS]; 495 if( (queue_id > OS_MAX_QUEUE_IDS) || (os_queue_blocks_array[queue_id] != 0) ) { return OS_ERROR; },5/18/2005
ProjectB - TIM - 2078,SDN S-Comm - Array-out-of-bounds violation in OS_TaskCreate - Line 310,2,osids.h: 80 #define OS_MAX_TASK_IDS 20 File: \fsw\osapi\rtems\osal\osapi.c Function: OS_TaskCreate Lines: see below 135 sem_t os_semaphore_blocks_array[OS_NUM_OF_SEMAPHORES] ; ... Array 'os_task_blocks_array' of size 20 declared at line 137 may use index value 20. This also causes an array index out of bounds on line 310. 310 if( (task_id > OS_MAX_TASK_IDS) || (os_task_blocks_array[task_id] != 0) ),5/18/2005
ProjectB - TIM - 2077,SDN S-Comm - Array out-of-bounds in function OS_TaskSetPriority - Line 240,2,"osids.h: 80 #define OS_MAX_TASK_IDS 20 File: \fsw\osapi\rtems\osal\osapi.c Function: OS_TaskSetPriority Lines: see below 135 sem_t os_semaphore_blocks_array[OS_NUM_OF_SEMAPHORES] ; ... Array 'os_task_blocks_array' of size 20 declared at line 137 may use index value 20. This also causes an array index out of bounds on line 245. 240 if( (task_id > OS_MAX_TASK_IDS) || (os_task_blocks_array[task_id] == 0) ) 241 { 242 return OS_ERROR; 243 } 244 245 status = rtems_task_set_priority(os_task_blocks_array[task_id], new_priority, &old_pri);",5/18/2005
ProjectB - TIM - 2076,SDN S-Comm - unreachable code in OS_ADCGetRawSample function,3,"File: \fsw\platform\sdn\hal\osadc.c Function: OS_ADCGetRawSample Line: 217 ""The OsPerfLogExit function is unreachable due to the return_Success statement that is before it in the function"" 217 return OS_SUCCESS; 218 OS_PerfLogExit(OS_ADC_PERF_ID); 219 }",5/18/2005
ProjectB - TIM - 2075,SDN S-Comm - unreachable code in the function rtems.c,2,"There is unreachable code in the following fragment: Function: OS_get_reset_subtype File: \fsw\platform\sdn\bsp\rtems.c Line: 117 112 if(poweron_reset_bit != 0) 113 return OS_POWER_CYCLE; 114 else if(pushbutton_reset_bit != 0) 115 return OS_PUSH_BUTTON; 116 else if(pushbutton_reset_bit != 0) 117 return OS_HW_SPECIAL_COMMAND; 118 else 119 return 0xFF; The second else if condition will never be reached, it is the same as the first.",5/18/2005
ProjectB - TIM - 2074,SDN S-Comm - array out of bounds violation in file osapi.c - Line 1049,4,"In the file \fsw\cpu\scomm\all\inc\osids.h: Enumerated type with the following definition: (comments deleted) 112 typedef enum { OS_SB_SHARED_DATA_MUT_ID, OS_PCI_ACCESS_MUT_ID, OS_ADC_ACCESS_MUT_ID, OS_ADC_EXTERN_MUT_ID, OS_UL_Q_MUT_ID, OS_NUM_OF_MUTEXES } os_mutex_index_type; In the file \fsw\osapi\rtems\osal\osapi.c 136 pthread_mutex_t os_mutex_blocks_array[OS_NUM_OF_MUTEXES] ; sem_id may be 5 or greater in the function OS_MutSemCreate 1049 return_code = pthread_mutex_init((pthread_mutex_t *) &os_mutex_blocks_array[sem_id],&mutex_attr);",5/17/2005
ProjectB - TIM - 2073,SDN S-Comm - osapi.c - array-out-of-bounds violation for the variable sem_id - Line 1012,2,"In the file \fsw\cpu\scomm\all\inc\osids.h: Enumerated type with the following definition: (comments deleted) 112 typedef enum { OS_SB_SHARED_DATA_MUT_ID, OS_PCI_ACCESS_MUT_ID, OS_ADC_ACCESS_MUT_ID, OS_ADC_EXTERN_MUT_ID, OS_UL_Q_MUT_ID, OS_NUM_OF_MUTEXES } os_mutex_index_type; In the file \fsw\osapi\rtems\osal\osapi.c 136 pthread_mutex_t os_mutex_blocks_array[OS_NUM_OF_MUTEXES] ; There is a possibility that sem_id will be 5 or greater in the following code. In which case there will be an array-out-of-bounds violation. In the function OS_MutSemCreate ( 1012 if( (sem_id > OS_NUM_OF_MUTEXES) || os_mutex_blocks_array[sem_id] != 0) ) 1013 { 1014 #if ( OS_DEBUG_LEVEL >= 1 ) 1015 printf(""Error: semID is not init. or out of range = %d\n"",sem_id); 1016 #endif 1017 return OS_ERROR; 1018 }",5/13/2005
ProjectB - TIM - 2072,ace_biru_data_proc_conversion test scenario: Inconsistent verbiage in step 15.3 for assigning passing/failing status,4,"Step 15.3 Lines 2269-2271 To keep the style consistent with the format of the rest of the document, IV&V recommends adding the following instruction, ""If it does not, FAIL ACS requirement 2241.5.""",5/9/2005
ProjectB - TIM - 2071,ace_biru_data_proc_conversion test scenario: Unclear where requirement 2241 is verified in step 15.3,3,"Step 15.3 Line 2268 Requirement #2241 is included on the list of those tested in this step. This requirement reads, ""the ACS FSW shall validate IRU data"". What determines whether the IRU data is valid or invalid, i.e. what result(s) determine whether #2241 passes or fails in this step?",5/9/2005
ProjectB - TIM - 2070,ace_biru_data_proc_conversion test scenario: Possible incorrect requirement listed as being tested by step 15.3,3,"Step 15.3 Line 2266 Should requirement #2242.2, on the list of requirements tested, be 2242.4 instead?",5/9/2005
ProjectB - TIM - 2069,ace_biru_data_proc_conversion test scenario: Requirement 2243 b not properly assigned a passing/failing status in step 15.3,3,Step 15.3 Line 2266 Is this the point at which requirement #2243b should also be verified?,5/9/2005
ProjectB - TIM - 2068,ace_biru_data_proc_conversion test scenario: Requirement 2243 a not properly assigned a passing/failing status in step 15.2,3,Step 15.2 Line 2244 Is this the point at which requirement #2243a should also be verified?,5/9/2005
ProjectB - TIM - 2067,ace_biru_data_proc_conversion test scenario: Requirement 2243 b not properly assigned a passing/failing status in step 11.2,3,Step 11.2 Line 2137 Is this the point at which requirement #2243b should also be verified?,5/9/2005
ProjectB - TIM - 2066,ace_biru_data_proc_conversion test scenario: Requirement 2243 a not properly assigned a passing/failing status in step 11,3,Step 11 Line 2115 Is this the point at which requirement #2243a should also be verified?,5/9/2005
ProjectB - TIM - 2065,ace_biru_data_proc_validation test scenario: Requirement 2243 C does not appear to be assigned a failing or passing status,3,"Step 16.2 - Line 1255 Step 16.5 - Line 1364 Step 17.5 - Line 1495 The requirements tested section for these steps indicates 2243 C is tested. However, IV&V did not see any steps that assign a passing or failing status to 2243 C. For steps 16.2 and 16.5: IV&V assumes that if 2241.1, then so should 2243 C. Is that accurate? For step 17.5: IV&V assumes that if 2241.2 with the data validity flag fails, then so should 2243 C. Is that accurate?",5/9/2005
ProjectB - TIM - 2064,ace_biru_data_proc_validation test scenario: Requirement 2241.1 partially tested in step 16.2,3,"Step 16.2 Requirement 2241.1 appears to be partially tested in this step. The requirement states: If an ACE RSD packet is not received, the ACS FSW shall a. flag the IRU data for that ACE as invalid b. retain the prior IRU-implied body rate It does not appear that b. is verified in this step, only a.",5/9/2005
ProjectB - TIM - 2063,ace_biru_data_proc_validation test scenario: TBDs for AO.IRU_I_Cur_Volts parameter,3,"Lines 989, 1028, 1274, 1390, 1521 IV&V is curious as to the nature of the TBDs for the variable AO.IRU_I_Cur_Volts? Is test waiting on development to get the information? How long until this is resolved?",5/9/2005
ProjectB - TIM - 2062,ace_biru_data_proc_validation test scenario: Tolerance ranges are TBD,3,"Lines 882, 926, 998, 1037, 1128, 1154, 1187, 1223, 1342, 1348, 1354, 1357, 1359, 1361, 1387, 1399, 1414, 1454, 1488, 1490, 1492, 1518, 1530, 1545, 1616, 1653, 1716 IV&V is curious as to the nature of the tolerance range TBDs? Is test waiting on development or the requirements to get the information? How long until this is resolved?",5/9/2005
ProjectB - TIM - 2061,ace_biru_data_5hz test scenario: TBD in step 4,3,Step 4 Line 637 IV&V is curious as to the nature of the TBD? Is test waiting on development to get the information? How long until this is resolved?,5/9/2005
ProjectB - TIM - 2060,ace_biru_data_5hz test scenario: Tolerance ranges are TBD in steps 3 & 6,3,Step 3 - Line 628 Step 6 - Line 664 IV&V is curious as to the nature of the tolerance range TBDs? Is test waiting on development or the requirements to get the information? How long until this is resolved?,5/9/2005
ProjectB - TIM - 2059,ace_biru_data_acquisition test scenario: TBDs in steps 5.1 and 5.2 on IRU A/D conversion error,3,Step 5.1 and 5.2 What is the status of the TBDs on procedures to cause and correct an IRU A/D conversion error?,5/9/2005
ProjectB - TIM - 2058,ace_biru_data_acquisition test scenario: Tolerance ranges are TBD in step 4.6,3,"Step 4.6 Lines 362, 374, 389 IV&V is curious as to the nature of the tolerance range TBDs? Is test waiting on development or the requirements to get the information? How long until this is resolved?",5/9/2005
ProjectB - TIM - 2057,ace_biru_data_acquisition test scenario: Test step appears to be missing in step 4,3,"Step 4.5 Lines 328 - 330 Is there a step missing between line 328 and 329? Or should line 328 be deleted as a duplicate of lines 329/330? Line 328 states If the telemetry point fails to update, FAIL ACE requirements 4100, 4141, and 4143 Line 329 states If the telemetry point fails to update, FAIL ACE requirements 4100, 4101 and 4143, ACS requirements 2203 and 2203.1.1 Since no functionality occurred between lines 328 and 329, IV&V questions the reason that requirements 2203 and 2203.1.1 are verified in line 329 and not 328. Earlier in the test procedure, there are lines like the following: If the telemetry point fails to update, FAIL ACE requirements 4100, 4141, and 4143 Use UT_hwreadword to verify ACS raw current counts = calc_current_cts_iru_i If the verifier fails, FAIL ACE requirements 4100, 4101 and 4143, ACS requirements 2203 and 2203.1.1 This example has a functional step between the failing of the requirements. IV&V is wondering if a step like this should be included between line 328 and 329 OR if one of the lines is a duplicate of the other.",5/9/2005
ProjectB - TIM - 2056,ace_biru_data_acquisition test scenario: TBDs in step 3,3,Step 3 Line 276 IV&V is curious as to the nature of the TBDs? Is test waiting on development to get the information? How long until this is resolved?,5/9/2005
ProjectB - TIM - 2055,"SDN_BAC_RW_Process Test Scenario: Requirements listed as being tested, but they are not",4,"General Lines 10 – 15: In the requirements tested section for the scenario, the following requirements are listed as being tested when they are not found as being verified by the test scenario (I.e. there are no statements that check for these requirements and possibly set them to fail based on the outcome):2271, 2271.7 and 4430",5/9/2005
ProjectB - TIM - 2054,SDN_BAC_RW_Process Test Scenario: Discrepancy between the Test Scenario and the RVTM,4,General: There exists a discrepancy between the RVTM and the test scenario. Requirement 2272.4 is not listed in the RVTM as being verified by test scenario SDN_BAC_RW_PROCESS. IV&V suggests fixing the discrepancy.,5/9/2005
ProjectB - TIM - 2053,SDN_BAC_RW_Process Test Scenario: ACS requirement 2272.4 does not appear to be verified in step 12,3,Step 12: IV&V is curious how requirement 2272.4 is verified by step 12. It states that the ACS shall select wheel speeds and momenta based on RW data from the ACE in control. How does step 12 verify this as there are no test steps to indicate such actions of the ACS selecting speeds and momenta?,5/9/2005
ProjectB - TIM - 2052,SDN_BAC_RW_Process Test Scenario: Step 12 identifies verifying requirements that do not exist,4,"Step 12: Step 12 indicates that it verifies 2272.5 and 2272.6 which are requirements that do not exist. IV&V suggests deleting these from line 791, requirements tested.",5/9/2005
ProjectB - TIM - 2051,SDN_BAC_RW_Process Test Scenario: Step 11 not fully verifying ACS requirement 2272.1.1,3,"Step 11: It appears as if step 11 does not properly test requirement 2272.1.1 as it states the ACS shall notify FDC. However, there is nothing in step 11 that checks for the software notifying FDC.",5/9/2005
ProjectB - TIM - 2050,"SDN_BAC_RW_Process Test Scenario: ACS Requirement 2272.2 : Term ""convert"" appears incorrect in the context of the requirement",4,"Step 10, Requirement #2272.2: Requirement 2272.2 reads, ""the ACS FSW shall convert the estimated wheel speed to wheel momentum for each wheel"". The use of the term 'convert' here seems incorrect in that the entity is not being converted from one set of units to another, but instead being calculated from operations performed upon two separate entities (the other entity being 'moment of inertias'). IV&V recommends that the requirement be re-worded to say ""the ACS FSW shall calculate the wheel momentum for each wheel using the estimated wheel speeds"".",5/9/2005
ProjectB - TIM - 2049,SDN_BAC_RW_Process Test Scenario: ACS Requirement 2272 not properly listed as failing when it should fail in step 10,3,"Step 10 Lines 740 – 743: It appears that requirement 2272 should also fail if 2272.3 fails since 2272.3 is a ""sub-requirement"" of 2272. If the RW summed momentum is not properly calculated, 2272 should also fail.",5/9/2005
ProjectB - TIM - 2048,SDN_BAC_RW_Process Test Scenario: Step 9 notations do not protect against invalid speed values,4,"Step 9, lines 607-608: Intended meaning of parenthetical notation seems as if it should say ""Ensure that the new maximum is LARGE enough that the current wheel speeds will not trigger this error."" Although you are narrowing the range itself, you don't want it to be SO narrow that it causes the current wheel speed to be invalid.",5/9/2005
ProjectB - TIM - 2047,SDN_BAC_RW_Process Test Scenario: Step 8 only partially verifies ACS requirement 2271.5,3,"Step 8: Step 8 appears to be partially testing requirement 2271.5 in the sense that it does not verify that the last valid value for RW momentum is retained when a tachometer pulse reading deviates more than a database-specified amount. For example, in the case of an out of limits change to RW 1 speed (lines 454 to 474), line 455 states to save the value of RW 1 speed in a local variable. It does not save the momentum. Also in line 461, the test is verifying that the speed for RW 1 is unchanged. However, the momentum for RW 1 also needs to be verified as unchanged. According to requirement 2271.5, item c. states to retain the last valid value for the RW speed and momentum for that wheel. This problem also applies to lines 484 & 490, 513 & 519, 542 & 548, 574, 581 & 582.",5/9/2005
ProjectB - TIM - 2046,SDN_BAC_RW_Process Test Scenario: Scenario lacking test for what should never occur in step 7,3,Step 7: Testing for what should 'never occur'. Is it known what would happen in the event that database tables for RW operating ranges were uploaded that would cause the current RW speed to fall outside the new limits? Is it 100% safe to assume 'nothing' or should there be a test step to find out for sure? (Just playing devil's advocate here...),5/9/2005
ProjectB - TIM - 2045,SDN_BAC_RW_Process Test Scenario: Requirement 2271.3.1 only partially tested in step 6,3,"Step 6 Various lines for requirement 2271.3.1: For all of the cases where less than 3 wheels are powered on (i.e. 2 wheels on lines 225 and 267, 1 wheel on lines 236 and 256, and 0 wheels on line 247), IV&V believes as currently written, requirement 2271.3.1 is only partially tested. There are two conditions for requirement 2271.3.1 - a. FDC be notified and b. knowledge of the anomaly is made available for downlink. As currently written, the test scenario only checks that FDC is notified. IV&V suggests including some type of check or verbiage that the telemetry is checked to ensure any knowledge of the anomaly is also reported. Otherwise, 2271.3.1 is only partially verified here. IV&V question:Requirement #2271.3.1 b specifies to ""make available for downlink knowledge of the anomaly"" when fewer than 3 RWs are powered on. It seems to suggest something beyond merely the data typically downlinked whenever any individual RW is not powered on (i.e. the data validity flags, measured wheel speed, and wheel momentum). IV&Vs two-part question is, what is the intended meaning of ""knowledge of the anomaly"", and what distinguishes it from ""knowledge of the anomaly"" when an individual RW is not powered on (Requirement 2271.3)?",5/9/2005
ProjectB - TIM - 2044,SDN_BAC_RW_Process Test Scenario: missing requirement in Requirements Tested section of step 5,4,Step 5 Line 198: The Requirements tested should also list 4431.1 and it currently does not.,5/9/2005
ProjectB - TIM - 2043,SDN_BAC_RW_Process Test Scenario: incorrect requirement assigned failing status,3,"Step 5 Line 195: Line 195 states that if the value is incorrect, flag 4431.1 as fail. IV&V believes this should be 4431, not 4431.1 because in step 5 line 192, the RW torques are sent valid values and the command wasn't checked for rejection. 4431 states: On receipt of a ground-issued RW override command, the ACE FSW shall execute the RW override command.Note: Override commands are in the form of a set of torques for the wheels and a time period over which the torques are to be applied. 4431.1 states:If the command-specified time duration for execution of RW override commands exceeds a database-specified value, the ACE FSW shall reject the command.",5/9/2005
ProjectB - TIM - 2042,SDN_BAC_RW_Process Test Scenario: missing check for FDC notification in steps 4 & 5,3,"Steps 4 and 5, lines 165-166 and 188-189: IV&V recommends adding an instruction to 'verify that FDC is notified' in order to completely satisfy requirement #2272.1.1",5/9/2005
ProjectB - TIM - 2041,SDN_BAC_RW_Process Test Scenario: Check for RW momenta missing from Step 2 for requirement 2273,3,"Step 2 Lines 134 – 141: It appears that the check for each RW momenta is missing from this verification. Part b of 2273 states that the RW momenta should be provided in telemetry. However, these lines do not check the value of each RW momenta.",5/9/2005
ProjectB - TIM - 2040,SDN_BAC_RW_Process Test Scenario: Check for RW momenta missing from Step 2 for requirement 2271.1,3,"Step 2 Lines 122 – 131: It appears that the check for each RW momenta is missing from this verification. Part b of 2271.1 states that the prior values of the speeds, momenta and summed momentum should be retained. However, these lines do not check the value of each RW momenta.",5/9/2005
ProjectB - TIM - 2039,SDN_BAC_RW_Process Test Scenario: No passing or failing of ACS requirement 2270,3,"Step 2 Line 143: ACS 2270 is listed as a requirement being tested in step 2. However, there are no ""if"" statements to change the 2270 pass value to Fail if needed. For example, it appears that if any one of the 2271.1 or 4150 requirements fails for this step, 2270 would also fail. IV&V suggests including a substep that indicates when (in step 2) ACS requirement 2270 might fail. Requirement 2270 states: The ACS FSW shall process RW data at 5 Hz for a. ACE-A: all wheels b. ACE-B: all wheels",5/9/2005
ProjectB - TIM - 2038,RT SRS: RT SRS does not address allocated requirement SDN-35,3,"Requirement SDN-35 is allocated to the ""RT"" subsystem in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/6/2005
ProjectB - TIM - 2037,RT SRS: RT SRS does not address allocated requirement SDN-32,3,"Requirement SDN-32 is allocated to the ""RT"" subsystem in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/6/2005
ProjectB - TIM - 2036,RT SRS: RT SRS does not address allocated requirement SDN-31,3,"Requirement SDN-31 is allocated to the ""RT"" subsystem in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/6/2005
ProjectB - TIM - 2035,RT SRS: RT SRS does not address allocated requirement SDN-24,3,"Requirement SDN-24 is allocated to ""All SDN FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/6/2005
ProjectB - TIM - 2034,RT SRS: RT SRS does not address allocated requirement SDN-23,3,"Requirement SDN-23 is allocated to ""All SDN FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/6/2005
ProjectB - TIM - 2033,RT SRS: RT SRS does not address allocated requirement SDN-22,3,"Requirement SDN-22 is allocated to the ""RT"" subsystem in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/6/2005
ProjectB - TIM - 2032,RT SRS: RT SRS does not address allocated requirement SDN-21,3,"Requirement SDN-21 is allocated to ""All SDN FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/6/2005
ProjectB - TIM - 2031,RT SRS: RT SRS does not address allocated requirement SDN-13,3,"Requirement SDN-13 is allocated to ""All SDN FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/6/2005
ProjectB - TIM - 2030,RT SRS: RT SRS does not address allocated requirement SDN-12,3,"Requirement SDN-12 is allocated to ""All SDN FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/6/2005
ProjectB - TIM - 2029,RT SRS: RT SRS does not address allocated requirement CDHMP-130,3,"Requirement CDHMP-130 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/5/2005
ProjectB - TIM - 2028,RT SRS: RT SRS does not address allocated requirement CDHMP-66,3,"Requirement CDHMP-66 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/5/2005
ProjectB - TIM - 2027,RT SRS: RT SRS does not address allocated requirement CDHMP-65,3,"Requirement CDHMP-65 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/5/2005
ProjectB - TIM - 2026,RT SRS: RT SRS does not address allocated requirement CDHMP-60,3,"Requirement CDHMP-60 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/5/2005
ProjectB - TIM - 2025,RT SRS: RT SRS does not address allocated requirement CDHMP-59,3,"Requirement CDHMP-59 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/5/2005
ProjectB - TIM - 2024,RT SRS: RT SRS does not address allocated requirement CDHMP-52,3,"Requirement CDHMP-52 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/5/2005
ProjectB - TIM - 2023,RT SRS: RT SRS does not address allocated requirement CDHMP-51,4,"Requirement CDHMP-51 is allocated to ""All CHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that consideration be given to 1301-1306 as the appropriate child requirements.",5/5/2005
ProjectB - TIM - 2022,RT SRS: RT SRS does not address allocated requirement CDHMP-24,3,"Requirement CDHMP-24 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the RT SRS.",5/5/2005
ProjectB - TIM - 2021,RT SRS: RT SRS does not address allocated requirement CDHMP-13,4,"Requirement CDHMP-13 is allocated to ""All"" subsystems in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that consideration be given to 1206, 1208, and 2004 as the appropriate child requirements.",5/5/2005
ProjectB - TIM - 2020,RT SRS: RT SRS does not address allocated requirement CDHMP-6,4,"Requirement CDHMP-6 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that consideration be given to 1006 as the appropriate child requirement.",5/5/2005
ProjectB - TIM - 2019,RT SRS: RT SRS does not address allocated requirement CDHMP-5,4,"Requirement CDHMP-5 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the RT SRS. IV&V suggests that consideration be given to 1001 and 1002 as the appropriate child requirements.",5/5/2005
ProjectB - TIM - 2018,RT SRS: Requirement 1208 could be worded better,4,"Requirement 1208 currently appears as follows: ""If any command in 1201, 1202,1203,1204 or 1207 fails the validation specified in 1206, the RT software shall reject the command an increment the command rejected counter by the value of ‘1’."" IV&V suggests explicitly stating the commands and the validation in the text of the requirement vice referring to prior requirement numbers. If the referenced requirement numbers (1201, 1202,1203,1204 or 1207 and 1206) change, this (1208) requirement may be overlooked and cause inconvenience and/or incorrect implementation. IV&V also suggests resolving the discrepancy between the reference to “command error counter” in requirement 1206 and “command rejected counter” in requirement 1208.",5/5/2005
ProjectB - TIM - 2017,RT SRS: Requirement 1007 could be worded better,4,"Requirement 1007 currently states: ""The RT software shall reset and reconfigure the 1553 interface in the event that no communication is received for a long period of time (receipt of 45 Housekeeping packets with no successful packet sends or receipts on the 1553 bus)."" IV&V suggests that the text ""long period of time"" be removed and that the description of the length of time, as called out in the current requirement, be retained.",5/5/2005
ProjectB - TIM - 2016,RT SRS: Incorrect reference to Appendix in requirement 1002,4,"Requirement 1002 includes a reference to appendix A as follows: ""Following a Power-On or Cold Reset, The RT software shall assure that the shared RAM on the 1553 Interface is initialized properly to the values specified in Appendix A."" However, appendix A is the “DDC BU-6158X Registers and Memory”. IV&V believes that the reference should be to Appendix B, Rollover Counters.",5/5/2005
ProjectB - TIM - 2015,ACE_command_processing_1.0 test scenario: Intended meaning of requirements is unclear.,3,"With regard to line 50, IV&V is pleased to see that the test team is identifying these specific issues with the requirements and trying to determine what they mean. The fact that these issues exist demonstrates to IV&V that some of these requirements are untestable and open to intrepretation as currently written.",5/2/2005
ProjectB - TIM - 2014,H&S SRS: H&S SRS does not address allocated requirement SDN-24,3,"Requirement SDN-24 is allocated to ""All SDN FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2013,H&S SRS: H&S SRS does not address allocated requirement SDN-23,3,"Requirement SDN-23 is allocated to ""All SDN FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2012,H&S SRS: H&S SRS does not address allocated requirement SDN-21,3,"Requirement SDN-21 is allocated to ""All SDN FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2011,H&S SRS: H&S SRS does not address allocated requirement SDN-13,3,"Requirement SDN-13 is allocated to ""All SDN FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2010,H&S SRS: H&S SRS does not address allocated requirement SDN-12,3,"Requirement SDN-12 is allocated to ""All SDN FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2009,H&S SRS: H&S SRS does not address allocated requirement SDN-11,3,"Requirement SDN-11 is allocated to ""All"" subsystems in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2008,H&S SRS: H&S SRS does not address allocated requirement CDHMP-133,3,"Requirement CDHMP-133 is allocated to ""HS"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2007,H&S SRS: H&S SRS does not address allocated requirement CDHMP-132,3,"Requirement CDHMP-132 is allocated to ""HS"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2006,H&S SRS: H&S SRS does not address allocated requirement CDHMP-66,3,"Requirement CDHMP-66 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2005,H&S SRS: H&S SRS does not address allocated requirement CDHMP-65,3,"Requirement CDHMP-65 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2004,H&S SRS: H&S SRS does not address allocated requirement CDHMP-60,3,"Requirement CDHMP-60 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2003,H&S SRS: H&S SRS does not address allocated requirement CDHMP-59,3,"Requirement CDHMP-59 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2002,H&S SRS: H&S SRS does not address allocated requirement CDHMP-52,3,"Requirement CDHMP-52 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2001,H&S SRS: H&S SRS does not address allocated requirement CDHMP-24,3,"Requirement CDHMP-24 is allocated to ""All CDHMP FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the H&S SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the H&S SRS.",5/2/2005
ProjectB - TIM - 2000,H&S SRS: Incorrect parent requirement for 2401,4,"Requirement 2401 has an incorrect parent requirement identified. Currently, the parents identified are CDHMP-140 and SDN-57. However, SDN-57 is not allocated to the H&S subsystem in the most recent (4-5-05) version of the ProjectB S/C L3 FSW SRS. IV&V suggests correcting this discrepancy by identifying the correct parent requirement in the H&S SRS or allocating SDN-57 to the H&S subsystem in the S/C FSW L3 SRS.",5/2/2005
ProjectB - TIM - 1999,H&S SRS: Difficult to understand wording for requirement 2400,4,"Rerquirement 2400 currently states: Once per second, the Flight Software shall reset the watchdog timer provided that: · all critical tasks have checked in · the IDLE process has not been prevented from executing for no more than 6 seconds. IV&V suggest rewording the second bullet as requirements written with two negative statements can be difficult to interpret.",5/2/2005
ProjectB - TIM - 1998,"H&S SRS: Additional capability provided in requirements 2200, 2201, and 2202",4,"The parent requirements for H&S requirements 2200, 2201, and 2202 state that ""The CDHMP software shall monitor event messages and effect..."", ""The SDN software shall monitor event messages and effect..."", or ""The CDHMP software shall possess..."" However, each of the H&S requirements identified here (2202, 2201, and 2202) state that ""The Flight Software shall monitor event messages and provide operators the ability to effect..."" It appears as if the responsibility for effecting the warm reset (2200), cold reset (2201), and/or activitation of a pre-selected Relative Time Command Sequence (2202) has been allocated to the operator and is not being fulfilled directly by the software as intended by the parent requirement. Or is this simply the resulting implementation of the term ""effect"" in the parent requirement? IV&V would like clarification.",5/2/2005
ProjectB - TIM - 1997,H&S SRS: Insufficient detail in requirement 2100,3,"The text preceding the list of requirements, beginning with 2100, indicates that ""Every 4 seconds, a table of tasks defining who is critical and who has checked in is scanned to see if any critical tasks are not responding."" However, the text for requirement 2100 does not indicate that there is a frequency (every 4 seconds) related to the table check to determine if any critical tasks are not responding. IV&V suggests that the requirement be amended to indicate the frequency for checking the table.",5/2/2005
ProjectB - TIM - 1996,H&S SRS: Incorrect parent requirement for 1206,4,"Requirement 1206 has an incorrect parent requirement identified. Currently, the parents identified are CDHMP-3 and SDN-2. The child requirement does not address the SDN-2 parent requirement. IV&V suggests correcting this discrepancy by identifying the correct parent requirement. IV&V suggests that consideration be given to SDN-3 as the correct parent requirement.",5/2/2005
ProjectB - TIM - 1995,H&S SRS: Incorrect parent requirement for 1203,4,"Requirement 1203 has an incorrect parent requirement identified. Currently, the parents identified are CDHMP-3 and SDN-2. The child requirement does not address the SDN-2 parent requirement. IV&V suggests correcting this discrepancy by identifying the correct parent requirement. IV&V suggests that consideration be given to SDN-3 as the correct parent requirement.",5/2/2005
ProjectB - TIM - 1994,H&S SRS: Incorrect parent requirement for H&S 1002,4,"Requirement 1002 has an incorrect parent requirement identified. Currently, the parents identified are CDHMP-134 and SDN-51. The child requirement does not address the SDN-51 parent requirement. IV&V suggests correcting this discrepancy by identifying the correct parent requirement. IV&V suggests that consideration be given to SDN-52 as the correct parent requirement.",5/2/2005
ProjectB - TIM - 1993,GCE_BGI_ANTENNA_STOP test scenario: Clarification needed as to intention behind test of 'ground in-control' command near end of scenario.,3,"This may be a misunderstanding on IV&V's part: Step 8 tests requirement 5331.2, which states: If an HGA move command is received from a source not enabled for commanding, the GCE FSW shall reject the command. Note: The two source options for HGA move commands are the ACS FSW and the ground. Only one may be enabled at any given time. Step 8.1 puts the ACS in control, but then step 8.2 wants to verify that the antenna move command did not get processed. How can this be verifying the requirement, when the notes of the requirement state that the source options for the HGA move command are the ACS and the ground. These test scenario steps appear to contradict the requirement. Also, step 8.3 sets the ground to be in control, but then there is not test step after that to show that a move command is accepted. This appears to be incomplete.",4/28/2005
ProjectB - TIM - 1992,GCE_BGI_ANTENNA_LIMIT test scenario: Additional instructions needed for tests of glitch position error counters when drive pulse counts are updated.,3,"With regard to Step 9.3, line 3739, part of requirement 5204.2 is to a. read the glitch position and pulse count registers. IV&V does not see in this test step where these values are checked or verified. Therefore, requirement 5204.2 appears only to be partially tested by step 9",4/28/2005
ProjectB - TIM - 1991,GCE_BGI_ANTENNA_LIMIT test scenario: Additional instructions needed for tests of glitch position error counters when home/position values are updated.,3,"With regard to Step 7.3, line 3700, and Step 8.2, line 3717, part of requirement 5204.1 is to a. read the glitch position and pulse count registers. IV&V does not see in this test step where these values are checked or verified. Therefore, requirement 5204.1 appears only to be partially tested by steps 7 and 8",4/28/2005
ProjectB - TIM - 1990,GCE_BGI_ANTENNA_LIMIT test scenario: Additional instruction is needed to verify that the 'command rejected' counter has incremented.,4,"With regard to Step 6.2, line 3689, throughout many of the test scenarios, when a command is accepted, it is listed to verify that the command processed counter has incremented. IV&V suggests for step 6.2 that the ""command rejected"" counter also be checked here as one way to ensure the command was rejected. Currently, there is no mention of checking this counter, only a vague statement of ""verify antenna move command is rejected."" IV&V's question: how? Be more specific.",4/28/2005
ProjectB - TIM - 1989,GCE_BGI_WARMSTART test scenario: RVTM lists requirement that is not being tested in this scenario.,3,"With regard to lines 4099-4115, there's a discrepancy between the requirements listed in the requirements tested section and the RVTM. The RVTM includes 5150 as being tested by this scenario, yet the scenario does not test it.",4/28/2005
ProjectB - TIM - 1988,GCE_BGI_GIMBAL_TABLE test scenario: Requirements tested section lists requirement that is not mentioned as being tested within any test steps.,3,"Requirement 5430 is not explicitly listed as being verified by any of the steps in the scenario, yet is it listed in the requirements tested section.",4/28/2005
ProjectB - TIM - 1987,GCE_BGI_GIMBAL_TABLE test scenario: Requirements listed in scenario as being tested differ from requirements listed in RVTM as being tested by this scenario.,4,"With regard to lines 4022-4029, there are some discrepancies between the requirements listed in the requirements tested section and the RVTM. The RVTM does not list any requirements as being verified by gce_bgi_gimbal table.",4/28/2005
ProjectB - TIM - 1986,GCE_BGI_ANTENNA_LIMIT test scenario: Close of opposite side isolation relay is not being tested.,3,Requirement 5355 appears to be partially verified by step 18. Step 18 only sends a command to open opposite side relay. There is no command sent to close opposite side relay.,4/28/2005
ProjectB - TIM - 1985,GCE_BGI_ANTENNA_LIMIT test scenario: Tests of the run register settings for absolute/delta moves require additional instructions.,2,"With regard to Steps 14 and 16, IV&V questions where in this step that requirements 5332.1 and 5332.1.1 are verified? For requirement 5332.1, there does not appear to be a check of the 200HZ. For requirement 5332.1.1, there does not appear to be a check that the step commands were written to the register.",4/28/2005
ProjectB - TIM - 1984,GCE_BGI_ANTENNA_LIMIT test scenario: Tests of the jog register settings for absolute/delta moves require additional instructions.,2,"With regard to Steps 13 and 15, IV&V questions where in this step that requirements 5332.1 and 5332.1.2 are verified? For requirement 5332.1, there does not appear to be a check of the 200HZ. For requirement 5332.1.2, there does not appear to be a check that the step commands were written to the register.",4/28/2005
ProjectB - TIM - 1983,GCE_BGI_ANTENNA_LIMIT test scenario: Clarification needed on whether instruction to 'reset' is intended to mean the same as 'initialize'.,3,"With regard to Step 12, lines 3786-3814, IV&V is curious how requirement 5311.2 is verified in this step. Step 12.3 checks to verify that the axis init flag is reset after the command to home position. However, 5311.2 states: If the “gimbal axis initialization” flag was set to “initialized” prior to execution of the Home command, the GCE FSW shall again set the flag to “initialized” upon completion of the Home command. There appears to be a contradiction in what the test scenario says to verify (""verify that axis init flag is reset"") and what the requirement says should happen.",4/28/2005
ProjectB - TIM - 1982,GCE_BGI_ANTENNA_LIMIT test scenario: Clarification needed on whether instruction to set motor direction to 'positive' is a setup step or a command being tested.,4,"With regard to Step 6, IV&V questions the motor direction before step 6. Was it negative? It not, IV&V suggests updating the scenario so that the command sent in step 6.1 is truly a change to what has occurred before.",4/28/2005
ProjectB - TIM - 1981,GCE_BGI_ANTENNA_LIMIT test scenario: Scenario steps need criteria for passing or failing requirements.,3,"With regard to Steps 2, 3, and 12, IV&V suggests including in detail where each requirement is considered to pass or fail in the step. For example, step 2.1 should partially verify requirement 5322. This should be indicated in a sub-bullet in step 2.1. An example would be: If command processed counter increased by 1 and the telemetry indicates the correct positive value for the HGAs (i.e. the correct positive value being the one it was sent in the command), then 5322 = ""P"", otherwise 5322 = ""F"". This applies to step 3 and 12 as well. For step 12, if everything in step 12.3 is verified, then it appears that 5311.1 should pass, but there is no indication of that. Only a blanket statement at the end of the step where the ""requirements tested"" are listed.",4/28/2005
ProjectB - TIM - 1980,GCE_BGI_ANTENNA_LIMIT test scenario: Additional instructions needed in tests to verify commands that set positve/negative limits on elevation axis position.,3,"IV&V questions the vague wording contained in steps 2.1 and 2.2. The wording says to set the positive (or negative) elevation limits. This command is supposed to be verified just by checking telemetry that it indicates a new positive (or negative) value for the HGAs. First of all, it doesn't appear that the scenario is checking the actual value commanded for the limit, only that the limit has changed or is new. IV&V also has a question. IV&V's question is this: are there bounds that have to be placed on these positive and negative limits? If so, the test scenario should check that the commands that contain valid limits are accepted, but that the commands that contain invalid limits are rejected. Because of this, 5322 and 5323 are only partially tested by step 2. This applies to step 3 as well.",4/28/2005
ProjectB - TIM - 1979,GCE_BGI_ANTENNA_LIMIT test scenario: Requirements listed in scenario as being tested differ from requirements listed in RVTM as being tested by this scenario.,3,"With regard to lines 3568-3581, there are some discrepancies between the requirements listed in the requirements tested section and the RVTM. The RVTM indicates that 5204, 5204.1, 5204.2, 5204.3, 5310, 5311, 5311.2, 5311.3, 5312, 5313, 5322, 5323, 5330, 5331, 5331.3, 5331.4.1, 5331.4.2, 5331.4.4, 5332, 5332.1, 5332.1.1, 5332.1.2, 5352, 5353, 5354, 5355, 5411 and 5431 are all tested by this scenario. The test scenario does not include 5310, 5313, 5352, 5353, 5411, or 5431. The test scenario does include 5332 and 5355 but they are not listed in the requirements tested section at the front of the scenario. The test scenario does include 5140.c 140.d, 5311.1, 5320, 5331.4, 5356, 5332.2 and 5332.3 which are not listed as being verified by this scenario in the RVTM. Steps 7 and 8 actually test 5204.1, not 5204.2 as indicated by the ""requirements tested"" after each step. Steps 7 and 8 deal with the position glitch flag, not the pulse glitch flag. Step 19 of this scenario says it tests requirement 5356 which isn't listed in the requirements tested section or the RVTM as being verified by this test scenario.",4/28/2005
ProjectB - TIM - 1978,GCE_BGI_ANTENNA_STOP test scenario: Clarification needed on methodogy for testing the 'axis disable' command.,4,"With regard to Step 6, IV&V is curious as to the method behind testing requirement 5341. It is not clear how many steps need to pass in order for the requirement to pass. It may be the case where all of steps 6.1 - 6.7 have to complete successfully in order to 5341 to pass, but it is not clearly indicated in the scenario. Also it appears as there should be another sub step that sends a move command after step 6.7.",4/28/2005
ProjectB - TIM - 1977,GCE_BGI_ANTENNA_STOP test scenario: Wrong requirement is listed as being tested in step to test the GCE-A Processor in control/not in control command.,3,"Step 5 indicates that it is testing requirement 5342 but it does not. Step 5 deals with the ""in control"" command described in requirement 5343. It does not deal with the ""enable/disable encoder current"" command.",4/28/2005
ProjectB - TIM - 1976,GCE_BGI_ANTENNA_STOP test scenario: Scenario steps need criteria for passing or failing requirements.,3,"This entire scenario needs more detail added to it as to what steps are verifying certain requirements or parts of requirements. For example, steps 2 and 3 are verifying the test stop command. However, there is no indication in any of the substeps the point in which requirement 5334 passes or fails based on the software's actions. IV&V is looking for more detailed information on what constitutes these requirements as passing and failing in any given step or sub-step. These blanket statements that the requirements are verified by the entire step does not provide the detail needed to develop a proper, detailed test procedure and assign a ""P"" or ""F"" to the requirement.",4/28/2005
ProjectB - TIM - 1975,GCE_BGI_ANTENNA_STOP test scenario: Clarification needed as to why step to test 'ground control command' (slated for build 2) is in this scenario.,4,Step 8 indicates that it will test the ground control command and that it is slated for build 2. IV&V recommends removing this step from the build 1 test scenario.,4/28/2005
ProjectB - TIM - 1974,GCE_BGI_ANTENNA_STOP test scenario: Clarification needed on distinction between 'gimbal axis init' and 'gimbal axis enable/disable' commands (if any).,4,"This may be a misunderstanding on IV&V's part: IV&V is confused about the two different commands being tested in step 6 vs. step 7. Step 6 talks about an axis disable/enable command which is referenced in requirement 5341. However, step 7 seems to make a further distinction of a Axis init enable/disable command. Step 7 also tests 5340, which states: The GCE FSW shall execute Gimbal Axis Init commands. IV&V did not find any specific requirement(s) stating there is a difference between a gimbal axis enable/disable command and a gimbal axis init enable/disable command. IV&V would appreciate an explanation to clarify what is going on here.",4/28/2005
ProjectB - TIM - 1973,GCE_BGI_ANTENNA_STOP test scenario: Either step 4 is missing or the test scenario is misnumbered.,4,Step 4 appears to be missing or the test scenario is misnumbered.,4/28/2005
ProjectB - TIM - 1972,GCE_BGI_ANTENNA_STOP test scenario: Instructions need criteria for passing or failing the steps.,3,"There is not enough detail contained in step 2 to indicate which requirements pass and which fail based on what is happening in the step. For example, in step 2.1, what if the antenna axis is initialized? Which requirement will fail because of that? 5334? Another example relates to the remaining steps. Do they all have to pass in order for 5331.1 to pass? IV&V suggest including that type of detailed passing and failing information in the step. The testers need to be aware of the which outcomes constitute a requirement as passing or failing. Just stating ""use the utility to pass/fail requirements"" does not provide the detail needed to write a test procedure which assigns a ""P"" or ""F"" to the requirement. That information needs to be included in the test scenario. This same comment applies to step 3 as well.",4/28/2005
ProjectB - TIM - 1971,GCE_BGI_ANTENNA_STOP test scenario: Clarification needed on purpose of 'axis init commands' in steps testing antenna stop command.,4,"With regard to Steps 2.7 and 3.6, IV&V is curious as to how this extra step helps to verify requirement 5331.1 or 5334 (i.e. what added functionality is it testing that wasn't included in steps 2.1-2.6)? This comment applies to step 3 as well.",4/28/2005
ProjectB - TIM - 1970,GCE_BGI_ANTENNA_STOP test scenario: Clarification needed on status of 'gimbal axis initialization flag' upon execution of 'stop antenna move' command.,3,"This may be a misunderstanding on IV&V's part, but step 2.1 in conjunction with step 2.2 appears to be contradicting what requirement 5334 is intending. Step 2 is testing a stop command while the antenna is not moving. (Note: Step 3 is testing a stop command while the antenna is moving.) Requirement 5334 states: The GCE FSW shall execute a stop antenna move command processing command. Note: This command will set the “gimbal axis initialization” flag to “initialized” and stop the processing of the current and future antenna move commands until the enable “gimbal axis initialization” command is received. The default state is enabled. Step 2.1 has a sub-bullet to verify in telemetry that the antenna axis is not initialized. However, in the notes of the requirement, the stop command is to set the flag to initialized. Step 2.2 has the command being rejected since the flag is not initialized. IV&V would appreciate an explanation of the logic for this step as it appears to contradict what is stated in the notes of the requirement. This question applies to step 3 as well.",4/28/2005
ProjectB - TIM - 1968,GCE_BGI_ANTENNA_STOP test scenario: Requirements listed in scenario as being tested differ from requirements listed in RVTM as being tested by this scenario.,4,"With regard to lines 3345-3353, there exist some discrepancies between the requirements listed in the requirements tested section and the RVTM. The RVTM indicates that 5331.1, 5331.2, 5334, 5340, 5341, 5342, 5343 and 5423.1 are all tested by this scenario. The test scenario does not include 5343 and 5423.1. The test scenario does include 5356 and 5412.2 which are not listed as being verified by this scenario in the RVTM. Also, requirement 5356 is not explicitly listed in the test scenario as being tested by any of the test steps.",4/28/2005
ProjectB - TIM - 1967,GCE_BGI_COLDSTART test scenario: RVTM lists requirement that is not being tested in this scenario.,3,"With regard to lines, 4206-4218, theres a discrepancy between the requirements listed in the requirements tested section and the RVTM. The RVTM includes 5150 as being tested by this scenario, yet the scenario does not test it.",4/27/2005
ProjectB - TIM - 1966,GCE_BGI_ACS_HGA_PACKET test scenario: RVTM refers to this test scenario as GCE_BGI_HGA_PKT.,4,"There exists a discrepancy between the name of the scenario in the RVTM and the name in the review package. The RVTM indicates this scenario is called gce_bgi_hga_pkt, not gce_bgi_acs_hga_packet. IV&V suggests fixing the discrepancy.",4/27/2005
ProjectB - TIM - 1965,GCE_BGI_ANTENNA_MOVE_DELTA test scenario: Steps testing delta moves crossing 0 point do not seem to map to correct requirements.,3,"With regard to Steps 26 and 27, in the gce_bgi_antenna_move_absolute scenario, these steps indicate that requirement 5332 is tested. However, in gce_bgi_antenna_move_delta, these steps indicate requirements 5203 and 5220(which does not exist) are tested. Why the difference? This is inconsistent.",4/27/2005
ProjectB - TIM - 1964,GCE_BGI_ANTENNA_MOVE_DELTA test scenario: Steps to test FSW execution of HGA 'move' commands need to specify criteria for 'failure'.,4,"In steps 24 and 25, which of the instructions within these steps have to fail in order for the entire requirement 5332 to fail? IV&V suggests indicating in detail where (i.e which instruction) actually verifies the requirement.",4/27/2005
ProjectB - TIM - 1963,GCE_BGI_ANTENNA_MOVE_DELTA test scenario: Instructions need criteria for passing or failing the steps.,3,"There is not enough detail contained in step 2 to indicate which requirements pass and which fail based on what is happening in the step. For example, in step 2.3, what if the end position is not correct? Which requirement will fail because of that? Another example is in step 2.1. what if the motor direction was not set to positive? Does that mean 5333 fails? IV&V suggests including that type of detailed passing and failing information in the step. The testers need to be aware of which outcomes constitute a requirement as passing or failing. Just stating ""use the utility to pass/fail requirements"" does not provide the detail needed to write a test procedure which assigns a ""P"" or ""F"" to the requirement. That information needs to be included in the test scenario. This comment applies to steps 3 - 27 as well.",4/27/2005
ProjectB - TIM - 1962,GCE_BGI_ANTENNA_MOVE_DELTA test scenario: Scenario steps need criteria for passing or failing requirements.,3,"This entire scenario needs more detail added to it as to what steps are verifying certain requirements or parts of requirements. For example, steps 20 and 21 are verifying maximum positive and negative directions for each gimbal. However, the requirements listed as being verified are the same as those listed in the previous 19 steps. IV&V is looking for more detailed information on what constitutes these requirements as passing and failing and why all of these cases are being performed. These blanket statements that all of the requirements are verified by each step do not provide the detail needed to develop a proper, detailed test procedure.",4/27/2005
ProjectB - TIM - 1961,GCE_BGI_ANTENNA_MOVE_DELTA test scenario: Instructions need description on how to verify that the 'end position' is correct.,4,"There is no specific information on how to check that the end position is correct. IV&V suggests including how to verify that the end position is correct (i.e. check in telemetry). IV&V is unclear if this should be a known quantity based on the command and parameters given. If so, IV&V suggests including this detailed information in the scenario so that the test procedure can be easily written to check the accurate end position. This applies to steps 2 - 23.",4/27/2005
ProjectB - TIM - 1960,GCE_BGI_ANTENNA_MOVE_DELTA test scenario: Scenario steps need to specify where requirements are only being partially tested.,3,"IV&V would like to point out that the requirements being listed as tested by this step are only partially tested. IV&V believes the test scenario should indicate when a requirement is partially tested as opposed to fully tested by a test step. For example, this test scenario deals with commanded delta count. It does not address commanded absolute counts (which IV&V assumes is addresed in gce_bgi_antenna_move_absolute). This type of information should be mentioned or listed somewhere...at the beginning of the scenario in the notes.",4/27/2005
ProjectB - TIM - 1959,GCE_BGI_ANTENNA_MOVE_DELTA test scenario: Instruction needs to specify how the motor direction for each gimbal will be verified.,4,It is not clear how will verification of the motor direction for each gimbal be performed. IV&V suggests being more specific as to how to verify this (i.e. check in telemetry).,4/27/2005
ProjectB - TIM - 1958,GCE_BGI_ANTENNA_MOVE_DELTA test scenario: Instructions to verify time and completion of a commanded step need additional details.,3,"With regard to steps 2 through 23, based on the way the scenario is written, IV&V is not clear how 5332.1 and 5336 are verified by these steps. For 5332.1, IV&V is guessing that step 2.4 may play some part of the verification but it is not exactly clear how. IV&V suggests including more verbiage to indicate 1) how to verify the time (i.e. look in telemetry?) 2) why to verify the time? (to support verification of what requirement). As currently written, this step lacks detail needed to be translated into a good test procedure. For 5336, what line in step 2 verifies that the GCE will determine when a commanded step is complete? Where is the check for this? These comments apply to steps 3 - 23 as well.",4/27/2005
ProjectB - TIM - 1957,"GCE_BGI_ANTENNA_MOVE_DELTA test scenario: Scenario testing requirement 5220, which does not exist.",4,These steps indicate that they test requirement 5220. There is no such requirement. IV&V suggests deleting this from the requirements tested section.,4/27/2005
ProjectB - TIM - 1956,GCE_BGI_ANTENNA_MOVE_DELTA test scenario: Requirements listed in scenario as being tested differ from requirements listed in RVTM as being tested by this scenario.,4,"With regard to lines 2933-2936, there exist some discrepancies between the requirements listed in the requirements tested section and the RVTM. The RVTM indicates that 5310, 5311, 5330, 5332, 5332.1, 5332.2, 5333 and 5336 are all tested by this scenario. The test scenario does not include 5310 and 5311. The test scenario does include 5331 and 5331.4 which are not listed as being verified by this scenario in the RVTM. Also, there is a test scenario in the RVTM called gce_bgi_antmove_delta which is associated with requirement 5203. 5203 is not listed as being verified by this scenario in the requirements tested section, even though it is listed as being verified by steps 26 and 27of this scenario. IV&V assumes that gce_bgi_antmove_delta is supposed to be the same as gce_bgi_antenna_move_delta. IV&V recommends updating the name in the RVTM.",4/27/2005
ProjectB - TIM - 1955,GCE_BGI_ANTENNA_MOVE_ABSOLUTE test scenario: Requirements aren't mapped to instructions within steps.,3,"With regard to steps 24-27, which of the instructions within these steps have to fail in order for the entire requirement 5332 to fail? IV&V suggests identifying the specific test line that actually verifies the requirement.",4/27/2005
ProjectB - TIM - 1954,GCE_BGI_ANTENNA_MOVE_ABSOLUTE test scenario: Scenario steps need criteria for passing or failing requirements.,3,"This entire scenario needs more detail added to it as to what steps are verifying certain requirements or parts of requirements. For example, steps 20 and 21 are verifying maximum positive and negative directions for each gimbal. However, the requirements listed as being verified are the same as those listed in the previous 19 steps. IV&V is looking for more detailed information on what constitutes these requirements as passing and failing and why all of these cases are being performed. These blanket statements that all of the requirements are verified by each step does not provide the detail needed to develop a proper, detailed test procedure.",4/27/2005
ProjectB - TIM - 1953,GCE_BGI_ANTENNA_MOVE_ABSOLUTE test scenario: Step 6 for 'positive gimbal motor direction with initial time delay' is not clearly mapped to requirements.,3,"With regard to Step 6, IV&V has noticed three issues: Issue 1: In line 2663, IV&V questions as to how requirement 5203 is verified by this step 6. There does not appear to be any type of checking of the SIM zone temperatures. Step 6 reads to be very similar as steps 2-5, but with a few different parameters. IV&V does not see how the change in these parameters verify 5203 in this step, but not in the others. IV&V suggests double checking the test steps and associated requirements listed as being tested by the test steps. Issue 2: The following requirements listed as being tested by step 6 do not exist: 5210, 5466, 5467, 5220. IV&V suggests removing them from the test scenario. Issue 3: IV&V questions why requirements 5330, 5331, 5331.4, 5332, 5332.1, 5333 and 5336 do not apply in Step 6 like they did for steps 2 - 5. IV&V suggests double checking test step 6 and including all requriements that are verified.",4/27/2005
ProjectB - TIM - 1952,GCE_BGI_ANTENNA_MOVE_ABSOLUTE test scenario: Instructions need criteria for passing or failing the steps.,3,"There is not enough detail contained in step 2 to indicate which requirements pass and which fail based on what is happening in the step. For example, in step 2.3, what if the end position is not correct? Which requirement will fail because of that? Another example is in step 2.1. what if the motor direction was not set to positive? Does that mean 5333 fails? IV&V suggests that information be included to identify which requirements pass/fail. The testers need to be aware of the which outcomes constitute a requirement as passing or failing. Just stating ""use the utility to pass/fail requirements"" does not provide the detail needed to write a test procedure which assigns a ""P"" or ""F"" to the requirement. That information needs to be included in the test scenario. This comment applies to steps 3 - 27 as well.",4/27/2005
ProjectB - TIM - 1951,GCE_BGI_ANTENNA_MOVE_ABSOLUTE test scenario: Instructions need description on how to verify that the 'end position' is correct.,3,"With regard to steps 2.3, 3.3, 4.3, 5.3 etc. through 21.3, 22.2, 23.2, IV&V suggests including how to verify that the end position is correct. Should this be a known quantity based on the command and parameters given? If so, IV&V suggests including this detailed information in the scenario so that the test procedure can be easily written to check the accurate end position.",4/27/2005
ProjectB - TIM - 1950,GCE_BGI_ANTENNA_MOVE_ABSOLUTE test scenario: Scenario steps need to specify where requirements are only being partially tested.,3,"With regard to steps 2 through 23, IV&V would like to point out that the requirements being listed as tested by this step are only partially tested. IV&V believes the test scenario should indicate when a requirement is partially tested as opposed to fully tested by a test step. For example, this test scenario deals with commanded absolute count. It does not address commanded delta counts (which IV&V assumes is addresed in gce_bgi_antenna_move_delta). This type of information should be mentioned or listed somewhere...at the beginning of the scenario in the notes.",4/27/2005
ProjectB - TIM - 1949,GCE_BGI_ANTENNA_MOVE_ABSOLUTE test scenario: Instruction needs to specify how the motor direction for each gimbal will be verified.,3,"With regard to steps 2.1, 3.1, 4.1, 5.1 etc. through 21.1, how will the motor direction for each gimbal be verified? Is this reported in telemetry? IV&V suggests being more specific as to how to verify this.",4/27/2005
ProjectB - TIM - 1948,GCE_BGI_ANTENNA_MOVE_ABSOLUTE test scenario: Instructions to verify time and completion of a commanded step need additional details.,3,"Based on the way the scenario is written, IV&V is not clear how 5332.1 and 5336 are verified by step 2 or 3. For 5332.1, IV&V is guessing that step 2.4 may play some part of the verification but it is not exactly clear how. IV&V suggests including more verbiage to indicate 1) how to verify the time (i.e. look in telemetry?) 2) why to verify the time? (to support verification of what requirement). As currently written, this step lacks detail needed to be translated into a good test procedure. For 5336, what line in step 2 verifies that the GCE will determine when a commanded step is complete? Where is the check for this? These comments apply to steps 3 - 23 as well.",4/27/2005
ProjectB - TIM - 1947,GCE_BGI_ANTENNA_MOVE_ABSOLUTE test scenario: Requirements tested differs from requirements listed as being tested in the RVTM.,3,"With regard to lines 2535-2537, there exist some discrepancies between the requirements listed in the requirements tested section and the RVTM. The RVTM indicates that 5310, 5311, 5330, 5332, 5332.1, 5332.2, 5333 and 5336 are all tested by this scenario. The test scenario does not include 5310 and 5311. The test scenario does include 5331 and 5331.4 which are not listed as being verified by this scenario in the RVTM. Also, there is a test scenario in the RVTM called gce_bgi_antmove_absolute which is associated with requirement 5203. 5203 is not listed as being verified by this scenario in the requirements tested section, even though it is listed as being verified by step 6 of this scenario. IV&V assumes that gce_bgi_antmove_absolute is supposed to be the same as gce_bgi_antenna_move_absolute. IV&V recommends updating the name in the RVTM.",4/27/2005
ProjectB - TIM - 1946,GCE_BGI_ANTENNA_MOVE_INIT test scenario: Traceability of 'gimbal axis initialization' commands to RVTM requires clarification.,3,"Requirement 5340 states: The GCE FSW shall execute Gimbal Axis Initialization command. IV&V is curious as to where a complete list of all the Gimbal Axis Init commands can be found. None of the commands listed in the RVTM were assigned to the scenario gce_bgi_antenna_move_init. Also, there are more commands being tested/checked in this scenario than those listed in 5341, 5342 and 5343. Where are these commands originating from? Where are they identified?",4/27/2005
ProjectB - TIM - 1945,GCE_BGI_ANTENNA_MOVE_INIT test scenario: Test of 'enable/disable gimbal axis ' command needs additional instructions.,3,"With regard to Step 1.9, line 2477, requirement 5341 is only partially tested by the scenario. The requirement states: The GCE FSW shall execute an enable/disable gimbal axis command. The scenario only checks that the enable part of the command works. There is no check that the gimbal axis can be disabled with the same command.",4/27/2005
ProjectB - TIM - 1944,GCE_BGI_ANTENNA_MOVE_INIT test scenario: Test of 'enable/disable encoder current ' command needs additional instructions.,3,"With regard to Step 1.8, line 2474, requirement 5342 is only partially tested by the scenario. The requirement states: The GCE FSW shall execute enable/disable encoder current command. The scenario only checks that the enable part of the command works. There is no check that the disable value of the command works.",4/27/2005
ProjectB - TIM - 1943,GCE_BGI_ANTENNA_MOVE_INIT test scenario: Test of 'gimbal in control / not in control' needs additional instructions.,3,"With regard to Step 1.3, line 2458, requirement 5343 is only partially tested by the scenario. The requirement states: The GCE FSW shall execute an “in control” command specifying for a given gimbal axis whether the GCE FSW is in control or not in control. The test scenario only tests that GCE A is in control. There is no test for GCE A ""not in control"". There is also no check of in control or not in control for GCE B.",4/27/2005
ProjectB - TIM - 1942,GCE_BGI_ANTENNA_MOVE_INIT test scenario: RVTM refers to this test scenario as GCE_BGI_ANTENNA_INIT.,4,"With regard to line 2414, there exists a discrepancy between the test scenario and the RVTM. The RVTM states that this scenario is titled gce_bgi_antenna_init. This scenario is actually called gce_bgi_atenna_move_init.",4/27/2005
ProjectB - TIM - 1941,GCE_BGI_ANTENNA_MOVE_INIT test scenario: Additional instructions needed to verify that 'gimbal axis initialization flag' is available for downlink.,3,"With regard to lines 2423-2425, there exists a discrepancy between the requirements listed in the requirements tested section and the RVTM. The RVTM indicates that 5340, 5341, 5342, 5343 and 5423.1 are all tested by this scenario. However, the scenario does not include any steps to verify 5423.1 which states: The GCE FSW shall make available for downlink the “gimbal axis initialization” flag value for each gimbal. So, 5423.1 is not verified by the scenario as indicated by the RVTM.",4/27/2005
ProjectB - TIM - 1940,SBC_BAC_CSS_SA_LoadTestTables test scenario: Name of scenario differs from name used to reference it in scenario overview.,4,"Is the naming of this scenario as LoadTestTables rather than as LoadSystemTables intentional? It's referred to as the latter in the scenario overview, but I thought this could be a convention followed for the test environment. IV&V recommends using one name to refer to the scenario in order to avoid confusion.",4/27/2005
ProjectB - TIM - 1939,SBC_BAC_SA_RangeCheck test scenario: Scenario refers to a requirement that doesn't exist.,4,Line 1442: Should the requirement listed as 4112 really be 4121? There is no Requirement 4112 in the Requirements documents that were submitted for this review. IV&V recommends changing the requirement being referenced.,4/27/2005
ProjectB - TIM - 1938,SBC_BAC_CSS_RangeCheck test scenario: Several additional instructions needed to verify FDC notification and retention of previous values.,3,"Lines 1319-1320: In addition, should previous values be retained and FDC be notified (per requirement 2221.2)? Lines 1323-1324: In addition, should previous values be retained and FDC be notified (per requirement 2221.5)? Lines 1325-1326: In addition, should previous values be retained and FDC be notified (per requirement 2221.8)? IV&V recommends adding additional instructions to ensure that requirements 2221.2, 2221.5, and 2221.8 are completely verified. Update 11/10/06 - Requirements 2221.2 and 2221.8 were deleted. Req 2221.5c still does not appear to be verified.",4/27/2005
ProjectB - TIM - 1937,SBC_BACS_CSS_DotProductCheck test scenario: Scenario contains a reference to a non-existent step.,4,"IV&V recommends changing line 1167 from ""Repeat Step 2.1"" to ""Repeat Step 43.1"".",4/27/2005
ProjectB - TIM - 1936,SBC_BAC_CSS_SA_DataAnomalies test scenario: Unable to determine how verification instruction for 'normal processing' pertains to requirement for 'incomplete deployment' processing.,4,"In Step 34.3, please clarify how verification performed by the instruction in lines 906-907 pertains to requirement 2221.3. Is this the assumption being made: Solar deployment angle was outside deployment limit so telemetry values should remain unchanged; solar angle is now inside deployment limit but telemetry values are still unchanged (although they should now be changed); problem must pertain to code built to implement requirement 2221.3...and that is why this requirement would be failed? (Ok if so...wanted to understand thought process.) Since the relationship between the instruction and the requirement is not immediately apparent, IV&V recommends adding a comment for clarification.",4/26/2005
ProjectB - TIM - 1935,SBC_BAC_CSS_SA_DataAnomalies test scenario: Tests of sub-requirements for #2221.3 need to correspond to the instructions testing them.,3,"In Step 34.2, should there be the following instruction after line 896, ""If CSS data is not flagged as invalid, mark requirement 2221.3 a as failed""? IV&V recommends adding the following verification instruction to Step 34.2: ""If CSS data is not flagged as invalid, mark requirement 2221.3 a as failed."" Noted: Test of requirement 2221.3 b is the only part of 2221.3 tested in lines 895-896. IV&V also recommends specifying 2221.3 b as the requirement being tested in that instruction, rather than 2221.3.",4/26/2005
ProjectB - TIM - 1934,SBC_BAC_CSS_SA_DataAnomalies test scenario: Tests of sub-requirements for #2221.1 need to correspond to the instructions testing them.,3,"Should the instruction in lines 852-853 also say to mark Requirement 2221.1 b as failed (in addition to requirement 2203.1.3)? IV&V recommends adding the following verification instruction to Step 31.2: ""If the current SA data is not flagged as invalid, mark requirements 2203.1.3 and 2221.1 b as failed."" Noted: Test of requirement 2221.1 a is the only part of 2221.1 tested in line 854. IV&V also recommends specifying 2221.1 a as the requirement being tested in that instruction, rather than 2221.1.",4/26/2005
ProjectB - TIM - 1933,SBC_BAC_SA_ValidateResults test scenario: 'Deployment status' does not appear to be verified.,3,"It appears that 2213 is only partially verified by this scenario. Requirement 2213 states: The ACS FSW shall, at a minimum, provide the following SA telemetry for each ACE: a. SA deployment status b. SA deployment angles c. SA data validity flags IV&V sees where the angles and validity flags are verified, but it is not clear where the deployment status is verified.",4/26/2005
ProjectB - TIM - 1932,SBC_BAC_SA_ValidateResults test scenario: RVTM does not list this test scenario as one testing requirement #2213.,4,"In the requirements tested section, there is a discrepancy between the test scenario and the RVTM. The RVTM does not identify SBC_BAC_SA_ValidateResults as a scenario that verifies requirement 2213. IV&V suggests fixing the discrepancy by updating the RVTM.",4/26/2005
ProjectB - TIM - 1931,SBC_BAC_SA_DataProcessing test scenario: Unable to determine if 'conversion status' is a data packet component.,3,"With regard to Step 24.1, line 549, IV&V is curious as to the A/D conversion status mentioned in requirement 4123. Is that conversion status part of the packet? If so, then it appears that 4123 is fully verified, otherwise it may be partially verified. Requirement 4123 states: The ACE FSW shall make available to the ACS FSW and for downlink a. the SA data b. the SA A/D conversion status",4/26/2005
ProjectB - TIM - 1930,SBC_BAC_CSS_ValidateResults test scenario: Additional instruction needed to 'verify CSS data is flagged as invalid'.,3,"With regard to step 17, lines 284-285, requirement 2221.8 reads that the FSW should also flag CSS data as invalid, however, it does not appear that the check is made with respect to 2221.8 in the test steps. Step 286 fails requirement 2223 if the data is not flagged as invalid, but shouldn't 2221.8 also fail in this case?",4/26/2005
ProjectB - TIM - 1929,SBC_BAC_CSS_DataProcessing test scenario: Unable to determine if 'conversion status' is a data packet component.,3,"Step 10.2, Line 156: IV&V is curious as to the A/D conversion status mentioned in requirement 4133. Is that conversion status part of the packet? If so, then it appears that 4133 is fully verified, otherwise it may be partially verified. Requirement 4133 states: The ACE FSW shall make available to the ACS FSW and for downlink a. all acquired CSS data b. the CSS A/D conversion status",4/26/2005
ProjectB - TIM - 1928,TI SRS: TI SRS does not address allocated requirement SDN-33,3,"Requirement SDN-33 is allocated to the ""TC"" (Time Code) subsystem in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the TI SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the TI SRS.",4/26/2005
ProjectB - TIM - 1927,TI SRS: TI SRS does not address allocated requirement SDN-24,3,"Requirement SDN-24 is allocated to ""All SDN FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the TI SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the TI SRS.",4/26/2005
ProjectB - TIM - 1926,TI SRS: TI SRS does not address allocated requirement SDN-23,3,"Requirement SDN-23 is allocated to ""All Sdn FSw subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the TI SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the TI SRS.",4/26/2005
ProjectB - TIM - 1925,TI SRS: TI SRS does not address allocated requirement SDN-21,3,"Requirement SDN-21 is allocated to ""All SDN FSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the TI SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the TI SRS. Update 12-7-06: The L-3 is the document that needs to be updated.",4/26/2005
ProjectB - TIM - 1924,TI SRS: TI SRS does not address allocated requirement SDN-13,3,"Requirement SDN-13 is allocated to 'all Sdn fSW subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the TI SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the TI SRS.",4/26/2005
ProjectB - TIM - 1923,TI SRS: TI SRS does not address allocated requirement SDN-12,4,"Requirement SDN-12 is allocated to ""All SDN FSW Subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is explicitly addressed in the TI SRS. Based on a review of the TI SRS, it appears that this requirement is satisfied by child requirement 1301 in the TI SRS. IV&V suggests adding SDN-12 as a parent requirement to requirement 1301 in the TI SRS.",4/26/2005
ProjectB - TIM - 1922,TI SRS: TI SRS does not address allocated requirement SDN-11,4,"Requirement SDN-11 is allocated to ""All"" FSW subsystems in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is explicitly addressed in the TI SRS. Based on a review of the TI SRS, it appears that this requirement is satisfied by child requirement 1203 and/or 3106 in the TI SRS. IV&V suggests adding SDN-11 as a parent requirement to requirements 1203 and/or 3106 in the TI SRS.",4/26/2005
ProjectB - TIM - 1921,TI SRS: TI SRS does not address allocated requirement SDN-10,4,"Requirement SDN-10 is allocated to ""All SDN FSW Subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is explicitly addressed in the TI SRS. Based on a review of the TI SRS, it appears that this requirement is satisfied by the follwing child requirements in the TI SRS: 1201, 1202, 3101-3106, and 4101. IV&V suggests adding SDN-10 as a parent requirement to the child requirements listed above.",4/26/2005
ProjectB - TIM - 1920,TI SRS: TI SRS does not address allocated requirement SDN-4,4,"Requirement SDN-4 is allocated to ""All SDN FSW Subsystems"" in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is explicitly addressed in the TI SRS. Based on a review of the TI SRS, it appears that this requirement is satisfied by child requirement 1001 in the TI SRS. IV&V suggests adding SDN-4 as a parent requirement to requirement 1001 in the TI SRS.",4/26/2005
ProjectB - TIM - 1919,TI SRS: TI SRS does not address allocated requirement CDHMP-118,3,"Requirement CDHMP-118 is allocated to the ""TC"" (Time Code) subsystem in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the TI SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the TI SRS. Update 12-7-06: The Level-3 document needs to be changed. This requirement should only be allocated to BC.",4/26/2005
ProjectB - TIM - 1918,TI SRS: TI SRS does not address allocated requirement CDHMP-114,3,"Requirement CDHMP-114 is allocated to the ""TC"" (Time Code) subsystem in the parent requirement document, 464-FSW-REQ-0056, S/C FSW L3 SRS. However, it does not appear that this requirement is addressed in the TI SRS. IV&V suggests that this requirement be reviewed to ensure that the appropriate child requirement(s) have been included in the TI SRS.",4/26/2005
ProjectB - TIM - 1917,TI SRS: Requirement 3106 has an incorrect parent requirement,3,"Requirement 3106 has an incorrect parent requirement identified. Currently, the parent identified is CDHMP-112. The child requirement does not address the parent requirement. IV&V suggests correcting this discrepancy by identifying the correct parent requirement. IV&V suggests that consideration be given to CDHMP-110 and SDN-11 as the parent requirements. Req. 3106: The TIME SERVER software shall provide a command to set the validity of the data in the Time packet. CDHMP-112: The CDHMP software shall maintain time and make it available to components over the 1553 bus with a relative accuracy of 10 ms over a period of 1 sec.",4/26/2005
ProjectB - TIM - 1916,TI SRS: Requirement 1201 does not have a parent requirement,3,Requirement 1201 does not have a parent requirement identified. IV&V suggests that the appropriate parent requirement is identified. IV&V suggests that consideration be given to CDHMP-110 as the parent requirement.,4/26/2005
ProjectB - TIM - 1915,"TI SRS Does not follow ""process"" for deleting requirements",5,"There are several instances where the artifact does not follow it’s own “process” for deleting requirements. The artifact states that “deleted requirement numbers and titles will be marked as such, and only the text of the requirement will be deleted from this document”. IV&V suggests that the deleted requirements are addressed accordingly. The following is a list of deleted requirements which need to be addressed: 2101, 3001, 3102, and 4001.",4/26/2005
ProjectB - TIM - 1914,SBC_BAC_CSS_ValidateResults test scenario: Additional instruction to flag CCS data as invalid needed.,3,"With regard to lines 196-198, requirement 2221.8 reads that the FSW should also flag CSS data as invalid, however, it does not appear that the check is made with respect to 2221.8 in the test steps. Step 286 fails requirement 2223 if the data is not flagged as invalid, but shouldn't 2221.8 also fail in this case?",4/23/2005
ProjectB - TIM - 1913,SBC_BAC_CSS_ValidateResults test scenario: RVTM does not list this test scenario as one testing requirement #2222.4.,4,"In the requirements tested section (lines 196-198), there is a discrepancy between the test scenario and the RVTM. The RVTM does not identify SBC_BAC_CSS_ValidateResults as a scenario that verifies requirement 2222.4. IV&V suggests fixing the discrepancy by updating the RVTM.",4/23/2005
ProjectB - TIM - 1912,SBC_BAC_CSS_DataProcessing test scenario: Step numbering / step references need correction.,4,Steps appeared to be misnumbered with this scenario starting at step 9 but step 11 refers to step 2 (which is actually step 10).,4/23/2005
ProjectB - TIM - 1911,ACE_thermistor_data_acquisision_1.0 test scenario: Test to verify Requirement #4170 doesn't appear to take place in steps 2 through 16.,3,"IV&V is curious as to why requirement 4170 is listed as being verified in steps 2 through 16 when step 17 actually indicates that it is the step to verify the 5Hz rate? It appears that 4171 is partially verified by steps 2 through 16, not 4170. 4170 is supposed to be verified by step 17. Is the intent of the scenario to determine how to verify the 5Hz rate and include that verification in steps 2 through 16? If so, then IV&V agrees with indicating that 4170 is verified by those steps. If not, however, IV&V suggests removing 4170 from the requirements tested section for steps 2 through 16.",4/23/2005
ProjectB - TIM - 1910,ACE_thermistor_data_acquisition_1.0 test scenario: Test to verify downlink of ACE assembly housekeeping data does not appear to take place.,3,"In the requirements tested table for requirement 4171, it states that all acquired ACE assembly housekeeping data should be made available for downlink. Is the thermistor data considered ""all acquired ACE assembly housekeeping data""? If so, then 4171 appears to be fully tested by this scenario. If not, then 4171 is only partially tested, specifically testing the thermistor data.",4/23/2005
ProjectB - TIM - 1909,ACE_thermistor_data_acquisition_1.0 test scenario: Conversion and Bias are TBD items.,3,"With regard to lines 20 and 24, what is the status of the TBDs described in the Test Description: specifically, why are the conversion and bias TBD? Is this information the test team is waiting on from the developers? How soon should this be resolved?",4/23/2005
ProjectB - TIM - 1908,ACE_sat_sep_data_acquisition test scenario: Test to verify Requirement #4111 doesn't appear to take place in steps 2 through 14.,3,"IV&V is curious as to why requirement 4111 is listed as being verified in steps 2 through 14 when step 15 actually indicates that it is the step to verify the 5Hz rate? It appears that 4110 is verified by steps 2 through 14, not 4111. 4111 is supposed to be verified by step 15. Is the intent of the scenario to determine how to verify the 5Hz rate and include that verification in steps 2 through 14? If so, then IV&V agrees with indicating that 4111 is verified by those steps. If not, however, IV&V suggests removing 4111 from the requirements tested section for steps 2 through 14.",4/23/2005
ProjectB - TIM - 1907,ACE_PCI_bus_1.0 test scenario: Step 2 does not test requirements 4032 and 4033.,4,"IV&V does not believe that requirements 4032 and 4033 are tested in step 2. These requirements are certainly tested throughout the rest of the scenario, just not in Step 2 as there are no missing cards to verify the correct action is taken. IV&V suggests removing these two requirements from the Requirements Tested line 85.",4/23/2005
ProjectB - TIM - 1906,ACE_PCI_bus_1.0 test scenario: Test of warm start requirement may be removed - already covered in ACE_warm_restart_1.0 test scenario.,4,IV&V does not believe it is necessary to include this warm start requirement (4022) as being tested in the PCI scenario since there is a scenario specifically dedicated to warm starts. IV&V suggests removing this requirement from the scenario.,4/23/2005
ProjectB - TIM - 1905,ACE_PCI_bus_1.0 test scenario: Requirements tested section lists requirements for which there are no corresponding test steps.,3,"In the Requirements Tested section, there is a table that lists requirements as being tested (fully or partially) by the test scenario. However, some of these requirements (4190, 4522, 4524, 4525 ) are not called out in the test scenario steps. IV&V questions the verification of these requirements. Where is that taking place in this scenario? IV&V suggests that if these requirements are implicitly verified by the actions of the test steps, they still should be listed as being verified by a particular step or maybe there should be more explicit verbiage in the test scenario stating how these requirements are verified by the overall scenario.",4/23/2005
ProjectB - TIM - 1904,ACE_event_messages_1.0 test scenario: Test steps contain several TBD items.,3,IV&V is curious as to the nature of the TBDs in the test steps. Are they from a lack of information/code from the developers or more of a general test question on how these invalid restarts can happen? An explanation would be appreciated.,4/23/2005
ProjectB - TIM - 1903,ACE_event_messages_1.0 test scenario: Requirements tested section lists requirements for which there are no corresponding test steps.,3,"On line 14, in the Requirements Tested section, there is a table that lists requirements as being tested (fully or partially) by the test scenario. However, some of these requirements (4190, 4522 ) are not called out in the test scenario steps. IV&V questions the verification of these requirements. Where is that taking place in this scenario? IV&V suggests that if these requirements are implicitly verified by the actions of the test steps, they still should be listed as being verified by a particular step or maybe there should be more explicit verbiage in the test scenario stating how these requirements are verified by the overall scenario.",4/23/2005
ProjectB - TIM - 1902,ACE_command_processing_1.0 test scenario: Requirements tested section lists requirements for which there are no corresponding test steps.,3,"On line 21, in the Requirements Tested section, there is a table that lists requirements as being tested (fully or partially) by the test scenario. However, some of these requirements (4190, 4522, 4523, 4524, 4525) are not called out in the test scenario steps. IV&V questions the verification of these requirements. Where is that taking place in this scenario? IV&V suggests that if these requirements are implicitly verified by the actions of the test steps, they still should be listed as being verified by a particular step or maybe there should be more explicit verbiage in the test scenario stating how these requirements are verified by the overall scenario.",4/23/2005
ProjectB - TIM - 1901,"ACE_command_processing_1.0 test scenario: Step 11, line 206 is a TBD item.",3,"With regard to Step 11, line 206, is there an anticipated time frame in which this TBD will be addressed?",4/23/2005
ProjectB - TIM - 1900,ACE_command_processing_1.0 test scenario: ProjectB_ACE_Command_Processing.xls worksheet contains several TBD items.,3,"With regard to the ProjectB_ACE_Command_Processing.xls worksheet, IV&V is curious as to the nature of the various TBDs. Is the test team waiting for further information from the developers or are the TBDs internal to the test team and something they need to determine? Is there an expected time frame in which these TBDs will be addressed?",4/23/2005
ProjectB - TIM - 1899,ACE_cold_restart_1.0 test scenario: Test to verify that packet sequence counters are reset to zero checks for 'low numbers' instead.,3,The bullets under step 7 indicate that the packet sequence counter numbers should be low. Requirement 4011.2 calls for them to be reset to zero. IV&V is curious as to the wording in the test…checking for low numbers instead of zero. An explanation would be appreicated.,4/23/2005
ProjectB - TIM - 1898,ACE_cold_restart_1.0 test scenario: Intended meaning of requirements is unclear.,3,"With regard to line 45, IV&V is pleased to see that the test team is identifying these specific issues with the requirements and trying to determine what they mean. The fact that these issues exist demonstrates to IV&V that some of these requirements are untestable and open to intrepretation as currently written.",4/23/2005
ProjectB - TIM - 1897,ACE_warm_restart_1.0 test scenario: Intended meaning of term 'data segments' is unclear within requirements.,3,"In step 6, line 103, and step 7, line 109, IV&V assumes the vagueness of ""data segments"" in the requirement is why the test scenario indicates that 4022 is only partially verified here. If IV&V's assumption is incorrect, IV&V would appreciate an explanation. Otherwise, IV&V agrees that the requirement as written is vague and not testable.",4/23/2005
ProjectB - TIM - 1896,ACE_warm_restart_1.0 test scenario: RVTM doesn't include this scenario on list of those testing requirement #4023.,4,"Line 15 indicates that this test scenario is testing requirement #4023. There exists a discrepancy between the RVTM and this test scenario with respect to requirement 4023. 4023 is listed in the scenario as being tested. However, the RVTM does not indicate that 4023 is verified by ACE_warm_restart_1.0. IV&V suggests updating the RVTM.",4/23/2005
ProjectB - TIM - 1895,SBC_BAC_CSS_SA_DataAnomalies test scenario: Test to verify 'RSD packets not received' processing during a warm restart needs an additional instruction.,3,"IV&V recommends adding the following verification instruction to Step 31.2: ""If the current SA data is not flagged as invalid, mark requirement 2211.1 as failed.""",4/20/2005
ProjectB - TIM - 1894,GCE_BGI_HOUSEKEEPING_PACKET test scenario: Time period over which to run utility program ut_pfindicate needs to be supplied.,3,"In Step 2.2, line 2395, the question, ""How long?"" was noted in parentheses for the instruction to run utility pfindicate. During the review, the test team had some discussion during which it was suggested that several minutes would be good, in order to 'let the jitter average out'. IV&V recommends supplying the time period here, once it is identified.",4/19/2005
ProjectB - TIM - 1893,GCE_BAN_ANALOG_PACKET test scenario: Requirement #5120 appears to only be partially tested.,3,"In Step 4, will the analog temperature data, 1-mA sense probe data, GIC active analog state, ground select, and Vref select items also be verified, as specified by requirement #5120? If so, IV&V recommends that they be included among the list of items being verified in step 4.1. If not, please change line 2259 to indicate that requirement #5120 is only being partially tested here. Also, IV&V recommends specifying which of the thermistor data items will be verified within this step. Will it be the instrument module analog thermistor data, as well as the SDN, PCC, GIC, and LPSC thermistor data? It's important to list them out in the test scenario to ensure that each one will be tested and verified.",4/19/2005
ProjectB - TIM - 1892,GCE_BAN_ANALOG_PACKET test scenario: Verification of #5130 is unclear using 'get packet rate' utility program.,3,"Step 1 runs the get packet rate utility to determine the rate of the GCE analog packet update. Requirement 5130 reads, ""The GCE shall read and distribute the following analog data at 1 Hz: a. motor currents b. drive currents c. iso-relay status d. current select e. voltage select f. driver pulse count (per gimbal) g. gimbal position count (per gimbal)"" The requirement as written is ambiguous as to how the data are to be packetized and distributed. Are all the data in the requirement packetized together and sent at 1HZ OR is each individual data point packetized and sent at 1HZ? This ambiguity needs to be addressed in order to properly test the intent of the requirement. If each item (a-g) in requirement 5130 need to be packetized individually and distributed at 1HZ, then the test scenario needs to indicate that the 'get packet rate' needs to be run for each data point a - g.",4/19/2005
ProjectB - TIM - 1891,GCE_BGI_BadCommandTest test scenario: Step 30.2 requires an additional instruction to verify that the control source does not change.,3,"Step 30.2 is a test to ensure that 'select control source' commands supplied with parameters of invalid length are rejected. IV&V recommends testing this command using a valid parameter name to which several additional characters have been added to the end (in order to make it an invalid length). If it works as expected, then the command should be rejected, i.e. the valid portion of the parameter contained within the valid number of bytes should not cause the command to be accepted. To verify that this is actually how the software works, IV&V recommends adding an instruction to 'verify that the control source does not change'.",4/19/2005
ProjectB - TIM - 1890,GCE_BGI_BadCommandTest test scenario: Modify instruction 'Verify that the negative software limit does not change' to clarify that this should not occur 'for any axis'.,3,"The instruction in Step 27.1, line 2029 reads, ""Verify that the negative software limit does not change."" IV&V recommends adding the words, ""for any axis"" to the end of this sentence for clarity.",4/19/2005
ProjectB - TIM - 1889,"GCE_BGI_BadCommandTest test scenario: Instruction in Step 15.2 contains a double negative, effectively stating the opposite of its intended meaning.",4,"The instruction on line 1665 of Step 15.2 contains a double negative, which could potentially cause confusion as to its intended meaning. It is currently written as ""Verify the no RF switch value does not change in telemetry."" IV&V recommends that the sentence be re-written as either ""Verify that no RF switch value changes in telemetry"" or ""Verify that RF switch values do not change in telemetry.""",4/19/2005
ProjectB - TIM - 1888,acea_bace_cold_restart test scenario: Question as to the existence of required telemetry point,3,Line 46: IV&V is curious about this issue. Does this mean that the developer did not code in a telemetry point reflecting the restart status even though req 4015 calls for one? IV&V is trying to understand the inconsistency. An explanation would be appreciated.,4/19/2005
ProjectB - TIM - 1887,acea_bace_cold_restart test scenario: Identified requirements are not tested in the scenario,3,"Line 12: In the Requirements Tested section, there is a table that lists the following requirements as being tested (fully or partially) by the test scenario: 4011.2, 4013.2, 4015, 4190, 4522, 4524, 4525. However, only 4011.2, 4013.2 and 4015 are identified as being tested by the specific test steps. IV&V questions the verification of the rest of the requirements. Where is that taking place in this scenario? The verification of these requirements is not explicitly called out by the test scenario. IV&V suggests that if these requirements are implicitly verified by the actions of the test steps, they still should be listed as being verified by a particular step or maybe there should be more explicit verbiage in the test scenario stating how these requirements are verified by the overall scenario.",4/19/2005
ProjectB - TIM - 1886,GCE_BGI_BadCommandTest test scenario: Wording of instructions has potential to create confusion.,4,"Step 6.1, line 1396 reads, ""Verify the no GIC self isolation relays change state"". Step 7.1, line 1426 reads, ""Verify the no encoder current state is changed"". Step 8.1, line 1455 reads, ""Verify the no processor in control flag state is changed"". Step 13.1, line 1603 reads, ""Verify the no antenna movement results"". Step 14.5, line 1643 reads, ""Verify the no axis initialization state is changed"". Step 25.17, line 1991 reads, ""Verify the no movement is seen for any gimbal"". In each of the instructions listed above, IV&V recommends changing the word 'the' to 'that'. As currently written, these instructions are somewhat confusing. Upon their initial reading, they suggest that something DOES change. You have to re-read them several times to understand the intended meaning.",4/19/2005
ProjectB - TIM - 1885,GCE_BGI_BadCommandTest test scenario: Test of the 'disable processor in control' command needs an additional instruction,3,"Step 8.5 is testing to ensure that 'disable processor in control' commands supplied with parameters of invalid length are rejected. IV&V recommends testing this command using a valid parameter name to which several additional characters have been added to the end (in order to make it an invalid length). If it works as expected, then the command should be rejected, i.e. the valid portion of the parameter contained within the valid number of bytes should not cause the command to be accepted. To verify that this is actually how the software works, IV&V recommends adding an instruction to ""Verify that no 'processor in control flag' state is changed"".",4/19/2005
ProjectB - TIM - 1884,GCE_BGI_BadCommandTest test scenario: Test of the 'turn on encoder current' command needs an additional instruction.,3,"Step 7.5 is testing to ensure that 'turn on encoder current' commands supplied with parameters of invalid length are rejected. IV&V recommends testing this command using a valid parameter name to which several additional characters have been added to the end (in order to make it an invalid length). If it works as expected, then the command should be rejected, i.e. the valid portion of the parameter contained within the valid number of bytes should not cause the command to be accepted. To verify that this is actually how the software works, IV&V recommends adding an instruction to ""Verify that no 'encoder current' state is supplied.""",4/19/2005
ProjectB - TIM - 1883,GCE_BGI_BadCommandTest test scenario: Test of the 'close GIC self isolation relay' command requires an additional instruction.,3,"Step 6.5 is testing to ensure that 'close GIC self isolation relay' commands supplied with parameters of invalid length are rejected. IV&V recommends testing this command using a valid parameter name to which several additional characters have been added to the end (in order to make it an invalid length). If it works as expected, then the command should be rejected, i.e. the valid portion of the parameter contained within the valid number of bytes should not cause the command to be accepted. To verify that this is actually how the software works, IV&V recommends adding an instruction to ""Verify that no 'GIC self isolation relays' change state.""",4/19/2005
ProjectB - TIM - 1882,GCE_BGI_BadCommandTest test scenario: Test of the '+Z az Gimbal Axis Disable' command requires an additional instruction.,3,"Step 5.5 is testing to ensure that '+Z az Gimbal Axis Disable' commands supplied with parameters of invalid length are rejected. IV&V recommends testing this command using a valid parameter name to which several additional characters have been added to the end (in order to make it an invalid length). If it works as expected, then the command should be rejected, i.e. the valid portion of the parameter contained within the valid number of bytes should not cause the command to be accepted. To verify that this is actually how the software works, IV&V recommends adding an instruction to ""Verify that no Gimbal axes change their enable/disable state.""",4/19/2005
ProjectB - TIM - 1881,GCE_BGI_CommandTest test scenario: 'Clear glitch command' test is validating a sub-requirement that doesn't exist.,4,"In Step 31, line 1083 lists 5140g as one of the requirements being tested. The sub-requirements for 5140 only run from a through f in the Requirements document provided as part of the review materials. IV&V recommends correcting this, if it is a typo (i.e. another requirement was intended to be supplied here) or removing the reference to it.",4/19/2005
ProjectB - TIM - 1880,GCE_BGI_CommandTest test scenario: Test of the 'reset the GIC control FPGA' command only partially tests Requirement 5140,4,"Step 29, line 1051, lists Requirement 5140 among the ones being tested. It appears that this requirement is only partially being tested here. If this is correct, then IV&V recommends indicating 5140 (partial).",4/19/2005
ProjectB - TIM - 1879,GCE_BGI_CommandTest test scenario: Verification instruction for test of the GIC reset command conflicts with requirement specifications,3,"The instruction in Step 29, line 1048 says to ""Verify GIC control registers and I/O registers reset to default values."" This instruction is verifying requirement 5351.1, which reads, ""update registers to their current values (stored values). During the review, the test team agreed that that the word ""default"" (which are the values to which the registers should be reset) does not equate with ""current"", and that the requirement should be modified.",4/19/2005
ProjectB - TIM - 1878,GCE_BGI_CommandTest test scenario: Step 29.1 may not be testable,3,"IV&V had requested clarification on the following notation in Step 29.1, line 1047, ""(GIC reset register cannot be read for any useful info - the read makes the reset deactivate)"". Discussion among the test team during the review determined that this capability requires further investigation. IV&V recommends following up to determine whether this verification instruction can actually be performed. It may be possible that this item cannot be tested in this manner, or even tested at all.",4/19/2005
ProjectB - TIM - 1877,GCE_BGI_CommandTest test scenario: Step 28.5 should be removed in Build 1 and placed in Build 2 scenarios,4,"Step 28.5 tests the 'stop processing antenna move' command. It appears that antenna move processing is already stopped for all axes by the time it gets to this step, due to execution of steps 28.1-28.4. IV&V asked if steps were needed to enable them prior to running step 28.5. Initially, the test team agreed that these steps would be needed, but after some discussion during the review, it was decided that this step should be removed until Build 2.",4/19/2005
ProjectB - TIM - 1876,GCE_BGI_CommandTest test scenario: Test of the 'set GIC gimbal position' command tests ionly sub-requirement 5130g.,4,"Line 765 lists requirement #5130 (partial) among those being tested in step 16. It appears that sub-requirement 5130g is being tested here. If this is correct, IV&V recommends listing this as 5130g rather than 5130 (partial). Other steps, for example #21 and #22, specify the actual sub-requirement. This recommendation is to keep consistency throughout the document.",4/19/2005
ProjectB - TIM - 1875,GCE_BGI_CommandTest test scenario: Test of the 'set CIG driver pulse counts' command tests only sub-requirement 5130f.,4,"Line 782 lists requirement #5130 (partial) among those being tested in step 17. It appears that sub-requirement 5130f is being tested here. If this is correct, IV&V recommends listing this as 5130f rather than 5130 (partial). Other steps, for example #21 and #22, specify the actual sub-requirement. This recommendation is to keep consistency throughout the scenario.",4/19/2005
ProjectB - TIM - 1874,GGE_BGI_CommandTest test scenario: Test of the 'set GIC gimbal position' command needs a value supplied for number of counts.,3,"Instructions in steps 16.1-16.4 specify setting the gimbal position to 'x' counts. IV&V recommends supplying the value of x in these instructions, as soon as those values are identified.",4/19/2005
ProjectB - TIM - 1873,GCE_BGI_CommandTest test scenario: Test of the 'set RF switch state' command tests only sub-requirement 5120g.,4,"Line 747 lists requirement #5120 (partial) among those being tested in step 15. It appears that sub-requirement 5120g is being tested here. IV&V recommends listing this as 5120g rather than 5120 (partial). Other steps, for example #21 and #22, specify the actual sub-requirement. This recommendation is to keep consistency throughout the scenario.",4/19/2005
ProjectB - TIM - 1872,GCE_BGI_CommandTest test scenario: Test ot fhe 'home' command to each antenna for each gimbal tests only sub-requirement 5140c.,4,"Line 683 lists requirement #5140 (partial) among those being tested in step 13. It appears that sub-requirement 5140c is being tested here. IV&V recommends listing this as 5140c rather than 5140 (partial). Other steps, for example #21 and #22, specify the actual sub-requirement. This recommendation is to keep consistency throughout the scenario.",4/19/2005
ProjectB - TIM - 1871,"GCE_BGI_Command_Test test scenario: Requirements are misnumbered, two different/unique requriements share the same number",3,"In Step 13, line 683, one of the requirements listed as being tested is 5331.1. There are actually two, distinct requirements in the GCE requirements spec labeled 5331.1. The first is in section 5.4.1 for antenna home commands. In this section, requirement 5331.1 is listed as a subrequirement for 5311. It states: In response to a Home command, the GCE FSW shall clear the “gimbal axis initialization” flags. This is the requirement that is being tested in the scenario. This requirement should be renumbered to 5311.1 in the requirements spec as well as corrected to 5311.1 in the test scenario. The second requirement numbered 5331.1 is found in section 5.4.3 Antenna Move Command. It states: If the “gimbal axis initialization” flag for a gimbal axis is not set, and if a command to move that gimbal is received, the GCE FSW shall reject the command. This is not the requirement that is being tested by step 13 of the GCE_BGI_Command_Test scenario. The same ""misnumbering"" occurs for 5331.2 in section 5.4.1 Antenna Home Commands. It should be renumbered to 5311.2. This problem is of a requirements nature, but test needs to be aware and proceed with the correct information for testing purposes.",4/19/2005
ProjectB - TIM - 1870,GCE_BGI_CommandTest test scenario: Test of the 'open' and 'close' opposite side relay commands only tests sub-requirement 5120h.,4,"Line 595 lists requirement #5120 among those being tested in step 9. It appears that only sub-requirement 5120h is being tested here. If this is correct, IV&V recommends listing this as 5120h rather than 5120. Other steps, for example #21 and #22, specify the actual sub-requirement. This recommendation is to keep consistency throughout the scenario.",4/19/2005
ProjectB - TIM - 1869,GCE_BAN_CommandTest test scenario: 'AN analog read' commands need clarification that they are being sent using raw (CCSDS) format.,4,"Requirement #5415 is listed as one of the ones being tested in steps 3.1 and 3.2. This requirement states that ""The ACE FSW shall accept and execute commands using the Consultative Committee on Space Data Systems (CCSDS) command format."" In step 1.2, which also tests requirment #5415, the instruction says to ""Use utility ut_senrawcmd to send one GI NOOP command using raw (CCSDS) format"". However, the instructions in steps 3.1 and 3.2 for the AN analog read commands do not clearly specify that they be executed 'using raw (CCSDS) format'. During the review, the test team pointed out that there is no 'other' format and that they think this requirement can be removed from this step because it applies to 'everything'. IV&V recommends that they either do this, or add the phrase ""using raw (CCSDS) format"" to the end of the instructions to send the AN analog read commands in lines 281 and 285.",4/19/2005
ProjectB - TIM - 1868,Incorrect parent requirement for requirement 1405,3,"Requirement 1405, as specified in the 3-25-05 version of 464-FSW-SPEC0063 states the following: “The SDN Software shall respond to housekeeping requests from the Health & Safety software.” The parent requirement, as identified in the “Rationale” column is 464-FSW-REQ-0056 SDN-53. SDN-53 states the following: “The SDN software shall monitor task execution and effect a WARM reset if one or more critical tasks fails to execute.” IV&V does not believe that this is the correct parent requirement. Based on a review of the parent requirement document; 464-FSW-SPEC-0056, IV&V was unable to identify an appropriate parent requirement. IV&V suggests that the parent requirement be identified.",4/19/2005
ProjectB - TIM - 1867,Incorrect parent requirement for requirement 1404,4,"Requirement 1404, as specified in the 3-25-05 version of 464-FSW-SPEC0063 states the following: “The SDN Software shall output its housekeeping telemetry packet at a frequency of ¼ Hz.” The parent requirement, as identified in the “Rationale” column is 464-FSW-REQ-0056 SDN-53. SDN-53 states the following: “The SDN software shall monitor task execution and effect a WARM reset if one or more critical tasks fails to execute.” IV&V does not believe that this is the correct parent requirement. IV&V believes that the correct parent requirement is 464-FSW-SPEC-0056 SCOMM-10 which states: “The S-Comm SDN software shall downlink sufficient housekeeping engineering data to the ground to allow nominal spacecraft operation and performance evaluation, as well as anomaly investigation and resolution.” IV&V suggests that the parent requirement be changed accordingly.",4/19/2005
ProjectB - TIM - 1866,"GCE_BGI_CommandTest test scenario: A number of steps require an additional instruction to 'Verify that the ACS commands processed counter increments"".",3,"Each of the following steps tests requirement #5412.1. IV&V recommends adding an additional instruction to each to ""Verify that the ACS commands processed counter increments"": 3.1 4.1 - 4.8 5.1 - 5.8 6.1 - 6.8 7.1 - 7.8 8.1 - 8.8 9.1 - 9.8 10.1 - 10.4 11.1 - 11.4 12.1 - 12.8 13.1 - 13.4 14.1 - 14.12 15.1 - 15.2 16.1 - 16.4 17.1 - 17.4 18.1 - 18.8 19.1 20.1 - 20.8 21.1 - 21.4 22.1 - 22.4 23.1 - 23.4 24.1 - 24.8 25.1 - 25.4 26.1 - 26.4 27.1 - 27.4 28.1 - 28.5 29.1 30.1 - 30.2 31.1 - 31.4",4/18/2005
ProjectB - TIM - 1865,Test Scenario sbc_bep_load_solar_lunar_tables: Non-default values to load into system tables are TBD,3,"In test Scenario sbc_bep_load_solar_lunar_tables Step 1, line 328, the non-default values to be loaded into the system tables are TBD. IV&V requests status on this open issue. While this issue was found in reviewing test materials, it appears to be an implementation problem as the TBD is a result in the development team not being able to provide the test team with the needed information.",4/14/2005
ProjectB - TIM - 1864,"ACS Ephemeris Test Scenarios contain ""Model execution counter"" that requires clarification",4,"In Test Scenarios sbc_bep_solar_lunar_empheris (step 2, line 200) and sbc_bep_load_solar_lunar_tables (step 2, line 351 and step 4, line 369) there exists a counter called ""model execution counter"". Is the model execution counter a variable used to aid with testing (i.e. verifying results) or is it a counter required by the FSW for some purpose? It is not found as being defined by the requirements.",4/14/2005
ProjectB - TIM - 1863,"Variable name ""ii"" in ""VelocityAberration"" algorithm routine is not defined in Local variable declarations",4,"Algorithm Subroutine: VelocityAberration Page(s): 1-25 and 1-26 Section Num: 1.7 ACS Velocity Aberration Correction On pages 1-25 and 1-26, there is a variable labeled ""ii"" that is used as a loop index counter and array index in various loops and expressions on these pages. This variable is not defined in the Local Variables declaration section. As a comparison, other algorithm routines have formally declared their loop counting variable in their variable declarations. This discrepancy should be corrected for clarification and completeness purposes.",4/6/2005
ProjectB - TIM - 1862,"Variable ""JED"" not defined in ""GroundStation"" algorithm routine",4,"Algorithm Subroutine: GroundStation Page(s): 1-22 Section Num: 1.5 Ground Station Ephemeris On page 1-22, there is a variable ""JED"" that is used in an expression near the top of the page. This variable is not identified or declared in either the global or the local variable declaration sections. This issue needs to be clarified and corrected.",4/6/2005
ProjectB - TIM - 1861,"Variable ""GHA"" not defined in ""GroundStation"" algorithm routine",4,"Algorithm Subroutine: GroundStation Page(s): 1-22 Section Num: 1.5 Ground Station Ephemeris On page 1-22, there is a variable ""GHA"" that is used in an expression near the top of the page. This variable is not identified or declared in either the global or the local variable declaration sections. As a comparison note, on page 15 in the NavDynamic Function algorithm routine, ""GHA"" has been defined and declared for this routine. This issue needs to be clarified and corrected.",4/6/2005
ProjectB - TIM - 1860,"Variable name ""ii"" in ""NavDynamicFunction"" algorithm routine is not defined in Local variable declarations",4,"Algorithm Subroutine: NavDynamicFunction Page(s): 1-16 and 1-17 Section Num: 1.3.1 NavDynamicFunction On pages 1-16 and 1-17, there is a variable labeled ""ii"" that is used as a loop index counter in various loops on those pages. This variable is not defined in the Local Variables declaration section. As a comparison, other algorithm routines have formally declared their loop counting variable in their variable declarations. This discrepancy should be corrected for clarification and completeness purposes.",4/6/2005
ProjectB - TIM - 1859,"Variable ""D0"" not defined in ""NavDynamicFunction"" algorithm routine",4,"Algorithm Subroutine: NavDynamicFunction Page(s): 1-16 Section Num: 1.3.1 NavDynamicFuntion On page 1-16, there appears to be a variable ""D0"" that is used in multiple expressions near the top of the page. For example: fxy2 = 3.0D0 * j2 * (5.0D0 * zr * zr - 1.0D0) This variable is not identified or declared in either the global or the local variable declaration sections. This issue needs to be clarified and corrected.",4/6/2005
ProjectB - TIM - 1858,"Variable ""mu"" is used in ""NavDynamicFunction"" algorithm routine, but it is unclear if it is the gravitational constant for the Earth, Sun or Moon",4,"Algorithm Subroutine: NavDynamicFunction Page(s): 1-15 Section Num: 1.3.1 NavDynamicFuntion On page 1-15, there is a variable ""mu"" that is used in the expression near the bottom of the page: k0= -mu / Rmag^3 The use of ""mu"" in this equation is not clear. In the Global Variables declaration list, there are variable constants defined for ""mu_earth"", ""mu_sun"" and ""mu_moon"". As mu is expressed/shown used in the expression, it is unclear for which one of the three defined gravitational constants it is supposed to represent in the equation as it is currently written. This issue needs to be clarified and corrected.",4/6/2005
ProjectB - TIM - 1857,"Variable name ""i"" in ""AcsPropModel"" algorithm routine is not defined in Local variable declarations",4,"Algorithm Subroutine: AcsPropModel Page(s): 1-12 and 1-13 Section Num: 1.3 ACS Spacecraft Ephemeris On pages 1-12 and 1-13, there is a variable labeled ""i"" that is used as a loop index counter in various loops on those pages. This variable is not defined in the Local Variables declaration section. As a comparison, other algorithm routines have formally declared their loop counting variable in their variable declarations. This discrepancy should be corrected for clarification and completeness purposes.",4/6/2005
ProjectB - TIM - 1856,"Variable name ""i"" in ""EphemerisLunar"" algorithm routine does not match variable name as specified in Local declarations",4,"Algorithm Subroutine: EphemerisLunar Page(s): 1-10 Section Num: 1.2 ACS Lunar Model On page 1-10, there is a variable labeled ""i"" that is used as a loop index counter in various loops on that page. This variable should be labeled ""I"" since this is how it is defined in the Local Variables declaration section. This discrepancy should be corrected for clarification purposes.",4/6/2005
ProjectB - TIM - 1855,"Variables ""COS_E"" and ""SIN_E"" in ""EphemerisLunar"" algorithm routine do not match variable names as specified in Global declarations",4,"Algorithm Subroutine: EphemerisLunar Page(s): 1-10 Section Num: 1.2 ACS Lunar Model On page 1-10, there are two variables labeled ""COS_E"" and ""SIN_E"" that are used in two expressions. These variables should be labeled ""COS_EPS"" and ""SIN_EPS"" since this is how they are defined in the Global Variables declaration section. This discrepancy should be corrected for clarification purposes.",4/6/2005
ProjectB - TIM - 1854,"Variable ""r"" in ""EphemerisLunar"" algorithm routine does not match variable name as specified in Local declarations",4,"Algorithm Subroutine: EphemerisLunar Page(s): 1-9 and 1-10 Section Num: 1.2 ACS Lunar Model On pages 1-9 and 1-10, there is a variable labeled ""r"" that is used in various expressions on those pages. This variable should be labeled ""R"" since this is how it is defined in the Local Variables declaration section. This discrepancy should be corrected for clarification purposes.",4/6/2005
ProjectB - TIM - 1853,"Variable ""Seconds_Per_Day"" in ""EphemerisLunar"" algorithm routine does not match variable name as specified in Global declarations",4,"Algorithm Subroutine: EphemerisLunar Page(s): 1-9 Section Num: 1.2 ACS Lunar Model On page 1-9 near the top of the page, there is an expression that uses the variable ""Seconds_Per_Day"" in an expression. The variable should be spelled: ""SECONDS_PER_DAY "", since this is how the variable is shown and defined in the global variables declaration section. This discrepancy should be corrected for clarification purposes.",4/6/2005
ProjectB - TIM - 1852,"Variable ""t"" in ""EphemerisLunar"" algorithm routine does not match variable name as specified in Local declarations",4,"Algorithm Subroutine: EphemerisLunar Page(s): 1-9 and 1-10 Section Num: 1.2 ACS Lunar Model On pages 1-9 and 1-10, there is a variable labeled ""t"" that is used in various expressions on those pages. This variable should be labeled ""T"" since this is how it is defined in the Local Variables declaration section. This discrepancy should be corrected for clarification purposes.",4/6/2005
ProjectB - TIM - 1851,"Variable ""lambdap"" in algorithm routine does not match variable name as specified in Local declarations",4,"Algorithm Subroutine: EphemerisSolar Page(s): 1-5 Section Num: 1.1 ACS Solar Model On page 1-5, there is a variable labeled ""lambdap"" that is used in an expression on those pages, near the center of the page. This variable should be labeled ""Lambdap"" since this is how it is defined in the Local Variables declaration section. This discrepancy should be corrected for clarification purposes.",4/6/2005
ProjectB - TIM - 1850,"Variable ""eta"" in algorithm routine does not match variable name as specified in Local declarations",4,"Algorithm Subroutine: EphemerisSolar Page(s): 1-5 Section Num: 1.1 ACS Solar Model On page 1-5, there is a variable labeled ""eta"" that is used in various expressions on those pages. This variable should be labeled ""Eta"" since this is how it is defined in the Local Variables declaration section. This discrepancy should be corrected for clarification purposes.",4/6/2005
ProjectB - TIM - 1849,"Variable name ""i"" in ""EphemerisSolar"" algorithm routine does not match variable name as specified in Local declarations",4,"Algorithm Subroutine: EphemerisSolar Page(s): 1-4, 1-5 and 1-6 Section Num: 1.1 ACS Solar Model On pages 1-4, 1-5 and 1-6, there is a variable labeled ""i"" that is used as a loop index counter in various loops on those pages. This variable should be labeled ""I"" since this is how it is defined in the Local Variables declaration section. This discrepancy should be corrected for clarification purposes.",4/6/2005
ProjectB - TIM - 1848,"Variable ""t"" in ""EphemerisSolar"" algorithm routine does not match variable name as specified in Local declarations",4,"Algorithm Subroutine: EphemerisSolar Page(s): 1-4 and 1-6 Section Num: 1.1 ACS Solar Model On pages 1-4 and 1-6, there is a variable labeled ""t"" that is used in various expressions on those pages. This variable should be labeled ""T"" since this is how it is defined in the Local Variables declaration section. This discrepancy should be corrected for clarification purposes.",4/6/2005
ProjectB - TIM - 1847,"Variable ""Seconds_Per_Day"" in ""EphemerisSolar"" algorithm routine does not match variable name as specified in Global declarations",4,"Algorithm Subroutine: EphemerisSolar Page(s): 1-4 Section Num: 1.1 ACS Solar Model On page 1-4 near the bottom of the page, there is an expression that uses the variable ""Seconds_Per_Day"" in the expression. The variable should be spelled: ""SECONDS_PER_DAY "", since this is how the variable is shown and defined in the global variables declaration section. This discrepancy should be corrected for clarification purposes.",4/6/2005
ProjectB - TIM - 1846,"Variable ""Pos_GciF_ScWrtEarth"" not defined in ""EphemerisGenerator"" algorithm routine",4,"Algorithm Subroutine: EphemerisGenerator Page(s): 1-1 and 1-2 Section Num: 1.0 Ephemeris Generator On pages 1-1 and 1-2, there is a variable that is used - ""Pos_GciF_ScWrtEarth"", which is not identified or declared in either the global or the local variable declaration sections. This issue needs to be clarified and corrected.",4/6/2005
ProjectB - TIM - 1845,PSE Requirement 1213.1 is vague and not testable,3,"PSE Requirement 1213.1 states: The PSE FSW shall provide a command to reset all Switched Services FD/C telemetry counters. IV&V believes the requirement is vague and does not believe the term ""all Switched Services FD/C telemetry counters"" is testable as currently written. IV&V suggests either including a bulletized list of all the telemetry counters or a reference to where all of the telemetry counters can be located. This will ensure that the test team has adequate information to fully test the requirements and intent of the software.",4/1/2005
ProjectB - TIM - 1844,ProjectB SUROM - commas after the last members of array initializations,3,"On lines 942, 1006, 1018, and 1030 in sysInit.c, there are commas afer the last members of array initializations.",3/31/2005
ProjectB - TIM - 1843,ProjectB SUROM - external declarations are not prefaced by an extern keyword,4,"For lines 1353-1358 in pciConfig.c, external function declarations are not prefaced by an extern keyword.",3/31/2005
ProjectB - TIM - 1842,ProjectB SUROM - incorrect comment explaining the assembly instruction,4,"For line 573 in sysStart.s, the comment explanation, ""clear p0"" does not match the assembly instruction.",3/31/2005
ProjectB - TIM - 1841,ProjectB SUROM - incorrect comment in function description,4,"For line number 350 in sysStart.s, the function description of the sysStart function refers to systart as the sysInit() function.",3/31/2005
ProjectB - TIM - 1840,PSE Requirement 2107 incomplete,3,PSE Requirement 2107 is incomplete as currently written. It is missing all of the orbit based quantities. 2107 states: The PSE FSW shall calculate the following orbit based quantities,3/31/2005
ProjectB - TIM - 1839,"PSE Requirements 2101.2, 2101.4, 2101.7, 2104.1, 2104. and 2201.5 all have partial traces. Missing trace to SDN-21 & 22",4,"PSE Requirements 2101.2, 2101.4, 2101.7, 2104.1, 2104. and 2201.5 all mention reporting information in telemetry, yet the parent requirements to which they currently trace do not incorporate that aspect of the requirement. In order to provide a complete trace, IV&V suggests including 464-FSW-REQ-0056 SDN-21 & SDN-22 in the traces. 464-FSW-REQ-0056 SDN-21 states: The SDN software shall provide real time telemetry for all mission and time critical activities (including but not limited to separation, solar array & HGA deployment, acquisition, critical Delta-V maneuvers) to allow monitoring from the ground. 464-FSW-REQ-0056 SDN-22 states: The SDN software shall provide sufficient telemetry (available through the 1553 bus) to fully verify electrical subsystem development, system status knowledge, performance, and anomaly investigation and resolution .",3/31/2005
ProjectB - TIM - 1838,PSE Requirement 1304 is incomplete and cannot be tested as currently written,3,"PSE 1304 states: The PSE FSW shall respond to the Housekeeping Request with its housekeeping telemetry as specified in the PSE telemetry spreadsheet. There is no more information describing the PSE telemetry spreadsheet or stating where this spreadsheet is contained/maintained. For example, IV&V would like to see a note in the requirement or additional text stating that the PSE telemetry spreadsheet can be found as an appendix to the PSE requirements or in some other concrete artifact. As currently written, this requirement cannot be tested since there is no indication of where this spreadsheet is located/maintained.",3/31/2005
ProjectB - TIM - 1837,PSE Requirements 1239 and 1240 have partial traces to the parent Level 3 FSW SRS,4,"PSE Requirements 1239 and 1240 are missing a trace to 464-FSW-RES-0056 PSE-3. Currently, they are only traced to PSE-1. IV&V suggests including PSE-3 in the trace as a parent requirement for these child requirements. PSE 1239 states: The PSE FSW shall provide a command to assert/relinquish control of the Solar Array Modules. PSE 1240 states: The PSE FSW shall provide a command to set the Over Voltage threshold on the Solar Array Module 464-FSW-RES-0056 PSE-3 states: The PSE SDN software shall have the capability to receive and execute commands to deploy the solar array. 464-FSW-RES-0056 PSE-1 states: The PSE SDN software shall have the capability to receive and execute commands for PSE specific functions.",3/31/2005
ProjectB - TIM - 1836,PSE Requirements 1236.1 and 1237.1 have incomplete/inaccurate traces to Level 3 FSW SRS,4,"PSE Requirement 1236.1 is traced to 464-FSW-REQ-0056 PSE-1 and PSE-11. However, IV&V believes a more accurate and complete trace would be to trace to SDN-4, which specifically deals with providing default values for power on and cold starts. PSE Requirement 1237.1 is stated as being Derived, when it too could be traced to 464-FSW-REQ-005 SDN-4. PSE 1236.1 states: Following a COLD or Power-On Reset, the PSE FSW shall default the command specified in 1236 to using battery temperature 1 PSE 1237.1 states: Following a COLD or Power-On Reset, the PSE FSW shall default the command specified in 1237 to disabled. 464-FSW-REQ-0056 SDN-4 states: The SDN software shall provide default values for proper initialization of all key operating parameters following a power on or cold restart. 464-FSW-REQ-0056 PSE-1 states: The PSE SDN software shall have the capability to receive and execute commands for PSE specific functions. 464-FSW-REQ-0056 PSE-11 states: The PSE SDN software shall monitor battery temperatures and shall provide autonomous switching on/off of battery heaters.",3/31/2005
ProjectB - TIM - 1835,PSE Requirement 1213 is incomplete are currently written,3,PSE Requirement 1213 is incomplete as currently written. It does not list the telemetry points to reset. 1213 states: The PSE FSW will provide commands to reset the following telemetry points;,3/30/2005
ProjectB - TIM - 1834,PSE Requirements 1212 & 1216 have incomplete traces to parent requirement in Level 3 FSW SRS,4,"PSE requirements 1212 and 1216 currently are only traced to 464-FSW-REQ-0056 PSE-9. To complete the trace, these requirements, which deal with commands, should also trace to 464-FSW-REQ-0056 PSE-1. Including 464-FSW-REQ-0056 PSE-1 will also make the traces for these command requirements consistent with the traces for the other command requirements which trace to 464-FSW-REQ-0056 PSE-1 464-FSW-REQ-0056 PSE-1 states: The PSE SDN software shall have the capability to receive and execute commands for PSE specific functions. PSE 1212 states: The PSE FSW shall provide a command to set the control loop maximum desired current. PSE 1216 states: The PSE FSW shall provide a command to select the Pulse Width Modulator (PWM-1 or PWM-2) to be used in the PSE PWM Controller.",3/30/2005
ProjectB - TIM - 1833,PSE FSW Requirement 1206 has incomplete trace to Level 3 FSW requirements,4,"PSE Requirement 1206 is listed as derived. It also contains a trace to 464-PWR-REQ-0026 Req 3.2.2.1.2.2. IV&V believes this requirement is not derived and that there does exist an accurate and complete trace to the Level 3 FSW Requirements Specification. IV&V suggests removing the word ""Derived"" for PSE requirement 1206 and replacing it with 4640-FSW-REQ-0056 PSE-1. The current trace to 464-PWR-REQ-0026 Req 3.2.2.1.2.2 is acceptable and can be left as is. PSE 1206 states: The PSE FSW shall provide a command to open and close the PSE battery relay 4640-FSW-REQ-0056 PSE-1 states: The PSE SDN software shall have the capability to receive and execute commands for PSE specific functions.",3/30/2005
ProjectB - TIM - 1832,PSE FSW Requirements: 1202 & 1203 have incomplete traces to Level 3 FSW Reqs,4,"There appears to be some inconsistency as well as some incomplete traces with several of the PSE Command requirements. 1202 and 1203 should include 464-FSW-REQ-0056 SDN-12 in their traces, yet they do not. Both of these requirements deal with updating the valid or invalid command counter which is available in telemetry. IV&V believes parent requirement SDN-12 applies to both of these requirements as well. Currently, SDN-12 is not listed as a parent for either 1202 or 1203. The inconsistency comes when 1205 does list SDN-12 as a parent requirement. 1205 also mentions the valid command counter. In order to make the traces complete and consistent, IV&V suggests including SDN-12 as a parent for 1202 and 1203. 464-FSW-REQ-0056 SDN-12 states: The SDN software shall routinely make available in telemetry sufficient status information to verify the receipt and execution of all commands. PSE 1202 states: The PSE FSW shall validate the function code and length of each received command, and, if valid, execute the command and increment the valid command counter. PSE 1203 states: If any command fails validation (as specified in 1202), the PSE FSW shall reject the command, provide an event message in telemetry and increment the invalid command counter. PSE 1205 states: The PSE FSW shall provide a “NO-OP” command whose function is to increment the valid command counter.",3/30/2005
ProjectB - TIM - 1831,Not An Issue,5,Not An Issue,3/30/2005
ProjectB - TIM - 1830,ProjectB SUROM - missing explanation for warm restart,4,"For the file prologue in boot.c The developer should include a comment in the file prologue that this code will never be called on a warm restart, and that it is for Power On and Cold Restarts Only.",3/29/2005
ProjectB - TIM - 1829,ProjectB SUROM - Incorrect Section Labels,5,Line 1350 in file pciconfig.c Line 1868 in file boot.c The sections labeled /** Imported Functions **/ are labeled incorrectly according to the branch standards. The section should be labeled /** External Definitions /,3/29/2005
ProjectB - TIM - 1828,"Test Scenarios sbc_bac_restart, sbc_bac_gt_process, and sbc_bac_gt_tabletest define acronymns inconsistently",4,"Test Scenarios sbc_bac_restart, sbc_bac_gt_process, and sbc_bac_gt_tabletest Does the ProjectB test team have standards for project-specific acronym definitions within test documents? An example of such a standard might be to spell out the acronym completely the first time it is referenced within the document, followed by the acronymn in parentheses. This practice is applied in lines 7-8 of the ACS Guide Telescope Data Processing scenario, where the first instance of guide telescope is written as 'Guide Telescope (GT) and then referred to as GT thereafter. In Step 1.3 of the ACS Restart scenario, all instances of guide telescope are written as GT without it ever being defined. If such a standard is in place, then it should be applied across all test scenario documents. The following project-specific acronyms were not defined: 1. In the ACS Restart test scenario review 'cover sheet': ProjectB, ACS, AC, ASIST, STOL, and GT. 2. In the ACS Restart test scenario, sbc_bac_restart: ProjectB, ASIST, FSW, GT, ACS, FDC, and ACE. Sun Acquisition is spelled out the first time. However, it would be preferable to write this as Sun Acquisition (SA), since the acronym SA is used later in the document. 3. In the ACS Guide Telescope test scenario review 'cover sheet': ProjectB, ACS, AC, ASIST, STOL, FSW. 4. In the Guide Telescope process test scenario, sbc_bac_gt_process: ProjectB, ASIST, FSW, GDS, and FDC. 5. In the Guide Telescope table test scenario, sbc_bac_gt_tabletest: ProjectB and ASIST.",3/24/2005
ProjectB - TIM - 1827,Test Scenario sbc_bac_restart doesn't define what is meant by 'all' ACS statistics and 'all' FDC notifications,3,"Test Scenario sbc_bac_restart These steps deal with requirements that state ""all ACS statistics"" and ""all FDC notifications"". IV&V is curious how the test team plans to ensure that they have verified all of the data mentioned in these requirements? Is a list or table of these data available from the developers to the test team? Are these data currently being defined/created by the developers or are they already known? IV&V recommends, if possible, including some indication in the test scenario as to the amount of data (i.e number) needing to be checked. For example, for all ACS statistics, how many are there? 10 or 100? It would be good to have an idea so that the tester is aware of ballpark figures that need to be checked. It is possible that this is a database specified value read from a table. If so, that should be made clear in the test scenario as well.",3/24/2005
ProjectB - TIM - 1826,Test Scenario sbc_bac_restart doesn't specify which 'prior solutions' to initialize to zeroes,3,"Test Scenario sbc_bac_restart It does not appear that 2113.10 is fully tested by steps 2.12 & 2.13. Step 2.12 specifically addressed requirement 2113.10.1 and Step 2.13 specifically addressed 2113.10.2. However, requirement 2113.10 states ""The ACS FSW shall initialize prior solutions for all sensor and actuator data processing results. Note: All such values can be set to zero, except as noted in the following sub-requirement. Operationally, the vehicle should be left in Sun Acquisition mode until proper prior solutions have been established, which nominally should only require two processing cycles."" IV&V questions the other solutions not specifically identified in the sub-requirements. Where are they verified? IV&V does not see any values checked to be zero in these steps.",3/24/2005
ProjectB - TIM - 1825,Test Scenario sbc_bac_restart: TBD Parameters,3,"Test Scenario sbc_bac_restart For steps 1.15, 2.5, and 3.5, what is the status of the parameters that are TBD? What is the reason for the TBD? Is the test team waiting for information from the developers?",3/24/2005
ProjectB - TIM - 1824,464-FSW-SPEC-0050: Requirement difference between Warm Restart and Cold Restart,3,"In 464-FSW-SPEC-0050, requirement 2122 states: On warm restart, the FSW shall conserve ACS data segments during a Warm Restart of the main processor. Note: This is actually realized by the C&DH FSW. IV&V would like to question the completeness of the requirement based on the information contained in the Cold Restart requirements. Requirement 2111 has two sub requirements associated with it. Requirement 2111 states: On cold restart, the FSW shall initialize all ACS data segments, causing all variables to be zeroed or reset to their preset values stored in EEPROM. Requirement 2111.1 states: The FSW shall reset all ACS database-specifiable parameters to their preset values stored in EEPROM. Requirement 2111.2 states: The FSW shall set all ACS telemetry and command output packet buffers to zero. IV&V's question is this: since the Cold Restart has two subrequirements pointing out specific reactions for the database parameters and the telemetry and command output packet buffers, why aren't these specific areas also pointed out as Warm Restart issues as well? For example, why isn't there a specific requirement (2122.2) stating something similar to ""The FSW shall preserve all ACS telemetry and command output buffers after a Warm Restart.""",3/24/2005
ProjectB - TIM - 1823,464-FSW-SPEC-0050 ACS FSW Requirements do not distinguish between 'Cold Restart' and 'Power On',3,"In 464-FSW-SPEC-0050, requirement 2110 states: The ACS FSW shall initialize itself following a Cold Restart of the main processor. Note: For the ACS FSW, “power-on” and “cold restart” are functionally equivalent. IV&V believes this to be a requirements issue. IV&V believes the test scenario is accurate in testing both a Cold Restart and Power On. However, there is no explicit requirement stating that for the ACS FSW, the Power On has the same functionality as a Cold Restart. A Power On is not even listed in the ACS FSS requirements (except in the notes). IV&V believes there should be a distinct, independnet Power On requirement stating how the ACS should react since for the rest of the spacecraft, these are two distinct operations/functions.",3/24/2005
ProjectB - TIM - 1822,"Test Scenario sbc_bac_gt_process steps 4, 5, 6 & 7 lack detail and don't fully verify requirements as currently written",3,"Test Scenario sbc_bac_gt_process IV&V does not believe that numerous requirements (2261, 2262, 2262.1, 2262.2, 2263, 2264 and 2265) are adequately verified in multiple steps throughout the procedure(4.1-4.4, 4.8-4.18, 5, 6, 7). These test steps rely too heavily on the phrase ""verify output"". There needs to be more specifics and direction from the test scenario for the test procedures as to what output is to be verified as well as what constitutes the requirement as passing or failing. There is too much detail lacking from these test steps. The test scenario also needs to indicate which cases are valid and invalid with respect to the data being tested. Below are some examples of how detail is lacking in these test steps: For test steps 4.1-4.4: 2261 - at this stage in the test scenario, 2261 is only partially tested 2262 - there is no mention in the test steps that the ACS has calcuated the GT implied sun direction vector and that it is being verified. 2262.1 - there do not appear to be checks for both conditions listed in the requirement. There also does not appear to be an explicit check that the ACS flagged the data as valid. 2262.2 - there does not appear to be a check of the two conditions needed to flag the data as valid for this requirement. There also does not appear to be an explicit check that the ACS flagged the data as valid. 2263 - there does not appear to be a check for the condition in this requirement and there is no specific mention to check that the sun direction vector was properly converted to a spacecraft pointing (Y,Z) error. 2264 - there is no check of the three conditions needed for this requirement to take place. There is also no check for the implied body rate. 2265 - there is no explicit check for the sun direction vector, pointing error, body rate or data validity flags.",3/23/2005
ProjectB - TIM - 1821,Test Scenario sbc_bac_gt_process step 2.1 lacks details on the parameters that need to be verified,4,"Test Scenario sbc_bac_gt_process For requirement 2261.1 that is being tested in step 2.1, there are no specifics in step 2.1 that indicate the GT implied spacecraft pointing error, body rate or data quality flag are being checked for their prior values. IV&V suggests identifying these specific parameters in step 2.1.",3/23/2005
ProjectB - TIM - 1820,Test Scenario sbc_bac_gt_process does not completely verify requriement 2203,3,"Test Scenario sbc_bac_gt_process In order to fully verify 2203, 2203.1 through 2203.6.1 all need to be verified. Currently, in sbc_bac_gt_process, 2203 is only partially verified by being supported by 2203.4 and 2203.4.1.",3/23/2005
ProjectB - TIM - 1819,Test Scenario sbc_bac_gt_process step 1.3 tests an unrequired measurement counter,3,"Test Scenario sbc_bac_gt_process IV&V has several questions relating to test step 1.3. 1. Where is the ACS FSW requirement that describes or establishes this measurement counter? What does ""measurement counter"" mean? If this counter is a vital part of FSW software, then it should be specifically and explicitly defined, and its functionality explained in a formal requirement. This seems to be the case, since it is frequently referred to in test validation procedures and referenced in other requirements where the counter is designated to be initialized or reset or retain specific values and/or the like. 2. From the step description, it sounds as this is something that would be good to test, but that it may not be possible to test (hence, the statement ""if available in telemetry""). Why wouldn't this be available in telemetry or why is there a question as to its availability? IV&V requests clarification on this item.",3/23/2005
ProjectB - TIM - 1818,Test Scenario sbc_bac_gt_process is lacking a test to set controlling GT to something other than the primary or backup,3,Test Scenario sbc_bac_gt_process IV&V recognizes that there are two requirements (2113.9 and 2260.2) that state the controlling GT must be either the primary or the backup. Are there any tests to see what happens if a command is sent that sets a GT other than the primary or backup as the controlling GT? How will the software react? Is this being tested?,3/23/2005
ProjectB - TIM - 1817,Test Scenario sbc_bac_restart: Discrepancy between test scenario and RVTM.,4,"Under assumptions and constraints, the third paragraph states that 2111 and 2122 are to be verified by inspection, not demonstration. However, the RVTM displays a ""D"" in the Test Method column, indicating demonstration. IV&V suggests updating the RVTM to indicate ""I"" for inspection for 2111 and 2122.",3/23/2005
ProjectB - TIM - 1816,464-FSW-REQ-0056 has two requirements that are the same,4,"464-FSW-REQ-0056 CDHMP-56 and CDHMP-62 are the exact same requirement, but numbered differently. IV&V suggests removing one of the requirements and updating affected artifacts (like child artifacts that trace to those requirements) as needed.",3/22/2005
ProjectB - TIM - 1815,TO Requirement 3203 has an incomplete trace (the trace is TBD),3,"As currently written, the trace for TO requirement 3203 is TBD. IV&V suggests using 464-FSW-REQ-0056 CDHMP-59 as the parent for this child requirement. TO 3203 states: The Flight Software shall provide the ability to queue realtime VCDU's to avoid dropping telemetry packets at low data rates when the telemetry is bursty. 464-FSW-REQ-0056 CDHMP-59 states: The CDHMP software shall provide the capability to collect and downlink housekeeping telemetry through all phases of the mission",3/22/2005
ProjectB - TIM - 1814,TO Requirement 3202 is actually 2 requirements and the trace is incomplete as currently written,4,"TO requirement 3202 actually contains 2 requirements, even though it is numbered/grouped as one requirement. There are two shall statements in the requirement. The trace for the requirement is currently incomplete. The trace currently includes 464-FSW-REQ-0056 CDHMP-73. This satisfies the second shall statement of requirement 3202. The first shall statement of 3202 is not traced. In order to provide complete traceability for this requirement, IV&V suggests including 464-FSW-REQ-0056 CDHMP-60 in the trace as well. TO 3202 states: Real time output shall always be “ON”. TO shall generate “fill packets” at low data rates to minimize the generation of “fill VCDU’s” by the S-Comm SDN hardware when there are partially complete real time VCDU’s.NOTE: There is no requirement to output real time VCDU’s via the High Rate FIFO; Data Storage continuous playback should provide an alternative in the event of Low Rate failure. 464-FSW-REQ-0056 CDHMP-73 states: The CDHMP software will provide fill packets and fill VCDUs whenever there is no other telemetry to send. 464-FSW-REQ-0056 CDHMP-60 states: The CDHMP software shall collect and transmit Observatory housekeeping telemetry to the ground station in (near) real time.",3/22/2005
ProjectB - TIM - 1813,TO Requirement 3202 has no trace (it is TBD),3,"TO Requirement 3202 currently has a ""TBD"" in its traceability field. IV&V suggests determining the origin of this requirement and including it in the traceability field.",3/22/2005
ProjectB - TIM - 1812,TO Requirement 2800 has incomplete trace,4,TO Requirement 2800 is currently traced to 464-FSW-REQ-0056 CDHMP-73. IV&V is questioning whether or not this trace is complete as is. It appears that CDHMP-67 should also be included in the trace to make it complete. TO 2800 states: When constructing Fill Frames the Flight Software shall set each 16-bit word of the M_PDU Packet Data Zone to the value of 0xEB90. 464-FSW-REQ-0056 CDHMP-73 states: The CDHMP software will provide fill packets and fill VCDUs whenever there is no other telemetry to send. 464-FSW-REQ-0056 CDHMP-67 states: The CDHMP software shall format CCSDS AOS telemetry MPDUs.,3/22/2005
ProjectB - TIM - 1811,TO Requirement 2101 has incomplete trace,4,"TO Requirement 2101 is currently traced to 464-FSW-REQ-0056 CDHMP-54. IV&V is questioning whether or not this trace is complete as is. It appears that CDHMP-69 should also be included in the trace to make it complete. TO 2101 states: The Flight Software shall use CCSDS, Virtual Channel Zero (VC0) as the realtime downlink telemetry channel 464-FSW-REQ-0056 CDHMP-54 states: The CDHMP software shall format the housekeeping downlink telemetry as recommended by the CCSDS AOS protocol 464-FSW-REQ-0056 CDHMP-69 states: The CDHMP software shall generate CCSDS telemetry virtual channels as defined in the ProjectB CCSDS Implementation Plan.",3/22/2005
ProjectB - TIM - 1810,TO Requirement 1220 does not have an accurate trace to a parent requirement,4,TO requirement 1220 is currently traced to Heritage Design. IV&V believes 464-FSW-REQ-0056 CDHMP-50 is a more accurate trace which provides a direct mapping from the Level 3 requirement to the Level 4 requirement. TO 1220 states: The Flight Software shall output housekeeping telemetry in response to a housekeeping telemetry request packet. 464-FSW-REQ-0056 CHDMP-50 states: The CDHMP software shall have the capability to transfer data from the spacecraft to the ground system in order to carry out mission operations,3/22/2005
ProjectB - TIM - 1809,"TO requirements 1103, 1104, 1105 , 1106 and 1109 lack trace to 464-FSW-REQ-0056 CDHMP-10",4,"For consistency to other traces in the TO requirements artifact as well as for completeness, TO requirements 1103, 1104, 1105, 1106 and 1109 should all include 464-FSW-REQ-0056 CDHMP-10 as a parent, but they currently do not. Currently as written, these requirements have only partial traces to their parent Level 3 FSW requirements. For full completeness, they need to trace to CDHMP-10 which supports the entire definition of the command. 464-FSW-REQ-0056 CDHMP-10 states: The CDHMP software shall have the capability to receive and execute commands from the ground system in order to carry out mission operations. TO 1003 states: The Flight Software shall provide a command to select a realtime telemetry filter table, which immediately begins filtering telemetry packets according to the parameters stored in the filter table specified in the command. TO 1104 states: The Flight Software shall provide a command to replace the filter table factors for the specified Application ID.NOTE: MAP refers to this command as the JAM FILTER FACTOR command. TO 1105 states: The Flight Software shall provide a command to swap the filter table factors of the two specified Application ID’s. NOTE: MAP refers to this command as the SWAP FILTER FACTOR command TO 1106 states: The Flight Software shall provide a command to set the realtime telemetry rate limit. Note: Realtime output is always limited to no more than 32kbps. Realtime output can be effectively turned OFF by commanding a value of 0kbps. TO 1109 states: The Flight Software shall provide a command to select either the A-Side or the B-side of the redundant S-Comm SDN and Transponder to be the recipient of TO high and low rate telemetry.",3/22/2005
ProjectB - TIM - 1808,TO requirement 1008 does not accurately trace to Level 3 requirements as currently written,3,"TO requirement 1008 is traced to 464-FSW-REQ-0056 CDHMP-5 & CDHMP-6. IV&V does not believe this is an accurate trace. The resetting of values to default(for cold start) and the preserving of values (in warm start) do not appear to address the aborting of an in-progress dump. IV&V could not find or identify a different CDHMP requirement to be the parent of TO requirement 1008. Requirement 1008 states: Upon a Reset (Power-On, Warm or Cold), the TO Flight Software shall abort any in-progress dumps. CDHMP-5 states: The CDHMP software shall provide default values for proper initialization of all key operating parameters following a power on or cold restart. CHDMP-6 states: The CDHMP software shall retain the state of key operating parameters through a warm restart",3/22/2005
ProjectB - TIM - 1807,ProjectB CD&H - missing function purposes and parameter definitions in function comment headers in file osapiarch.c,4,"Function comment headers in file osapiarch.c are missing individual function purposes and parameter definitions on lines 3421, 3576, 3584, 3630, 3638, 3684, 3692.",3/14/2005
ProjectB - TIM - 1806,ProjectB RWA Processing - initialization routine does not initialize array MomRwaF to a set of values,2,The AC_RwaInitProcessor function does not initialize the array MomRwaF to a set of values.,3/11/2005
ProjectB - TIM - 1805,ProjectB RWA Processing - wrong filenames referenced in end of file comments,4,"In file ac_faultdet.h, the end of file comment references filename faultdet.h instead of ac_faultdet.h. In file ac_rwa.c, the end of file comment references filename RWA.C instead of ac_rwa.c. In file ac_rwatbl.c, the end of file comment references filename RWATBL.C instead of ac_rwatbl.c.",3/11/2005
ProjectB - TIM - 1804,"ProjectB CD&H - PCI API, VxWorks API, Exception Handling, EEPROM - incorrect comments",4,"In the file osapiarch.c lines 3882 and 3930 the comments on the return code are incorrect. The return code is commented as OS_SUCCESS, but the code returns OS_ERROR.",3/11/2005
ProjectB - TIM - 1803,"ProjectB CD&H - PCI API , EEPROM writes, Exception Handling, VxWorks API - not following branch standards for code sections",4,"This is a global comment on the files osexception.c, vxworks.c and ospci.c - The branch standards are not being followed in terms of section labelling - file headers (no MKS keywords) - function headers, etc. Please ensure that these files adhere to these standards.",3/11/2005
ProjectB - TIM - 1802,"ProjectB C&DH - PCI API, EEPROM, VxWorks API - typename does not conform to branch standards",4,"On Line 1556 and 1574 at osexception.c, the typename does not conform to the 582 branch standards for type naming. It should be exception_context_t.",3/11/2005
ProjectB - TIM - 1801,"ProjectB C&DH PCI API, Exception Handling, VxWorks API - parameters are not checked for the NULL Pointer",3,"On lines 3168 and 3145 - functions OS_PciBusRead and OS_PciBusWrite These functions cast a uint32 variable type to a pointer, but the pointer is never checked if it is a NULL pointer. At the review, there was some discussion of whether these functions were being used. As such, this TIM is a placeholder, to check to see if parameter checking will be done for the NULL pointer, or whether these functions will be deleted from the code base.",3/11/2005
ProjectB - TIM - 1800,"ProjectB C&DH PCI API, Exception Handling, VxWorks - misleading variable name",4,"Line 1192 in the code review materials Please change the name of the variable OS_WarmRestartKey. ProjectB has three types of restarts Cold, Warm, and Power On. The name of the key implies only warm restarts are performed.",3/11/2005
ProjectB - TIM - 1799,S-Comm Test Scenario Review: Problems with Traceability Matrix,3,"Several comments apply to the ProjectB FSW Build Verification Requirements-to-Test Traceability Matrix: a) Update the names of the test scenarios in this sheet. For example, “scomm_bvt_restarttest” should be named “com_bvt_restarttest” and “coma_bvt_badcmds_test” should be named “com_bvt_badcmds_test”. b) Update the list of procedures for requirement 1403 to include “com_bvt_restarttest”. c) Update the list of procedures for requirement 2100 to include “com_bvt_telemetry” and “com_bvt_restarttest”.",3/9/2005
ProjectB - TIM - 1798,S-Comm Test Scenario Review: com_bvt_telemetry: Question as to how step 2 verifies 1405,4,com_bvt_telemetry Line 1264 It is not readily apparent to IV&V as to how Step 2.0 verifies requirement 1405.,3/9/2005
ProjectB - TIM - 1797,"S-Comm Test Scenario Review: com_bvt_badcmds_test: Steps 6, 7 & 8 do not indicate requirements tested",3,"com_bvt_badcmds_test Lines 1140, 1158, 1187 Steps 6.0, 7.0, and/or 8.0 do not indicate the requirements addressed by these steps in the test scenario. Suggest updating the test scenario materials to identify the requirements addressed by these steps.",3/9/2005
ProjectB - TIM - 1796,S-Comm Test Scenario Review: com_bvt_local_cmds: discrepancy between incrementation...is it by 1 or 2?,3,"com_bvt_local_cmds Lines 949 & 964 There exists a discrepancy between the incremented telemetry value in line 949 and the one in line 964, when they should be the same. Line 949 indicates that the scenario should verify that the local commands executed count should have incremented by 2 (one for power off and one for power on command). However, Line 964 (after a similar power off and power on) has the scenario checking that the local commands executed count incremented by 1. Should the counter increment by 1 or 2? IV&V suggested making the appropriate change and applying it consistently in the required areas.",3/9/2005
ProjectB - TIM - 1795,S-Comm Test Scenario Review: com_bvt_pulse_cmd: inconsistent use of enable/disable and on/off to mean the same thing,5,"com_bvt_pulse_cmds Line 423 Step 1.1 uses terms such as ""enable"" and ""disable"" to describe the state of the oscillator. However, the requirements use ""off"" and ""on"". IV&V notices in step 1.2, 1.3, etc use the terms ""off"" and ""on"" are used and consistent with the requirements. IV&V recommends changing step 1.1. to read consistent with the requirements and other test steps. In other words, change the ""enable"" and ""disable"" terminology to ""on"" and ""off"".",3/9/2005
ProjectB - TIM - 1794,S-Comm Test Scenario Review: com_bvt_pulse_cmd: Disable mistakenly used for Enable,3,"com_bvt_pulse_cmds Lines 435 Line 435 in step 1.1 indicates the send a command to ""disable"" the Oscillator, when it should read to ""enable"" the oscillator. (It actually should read ""turn On"" the oscillator.)",3/9/2005
ProjectB - TIM - 1793,S-Comm Test Scenario Review: com_bvt_generic_cmd: No indication of source for default configuration in step 6,3,"com_bvt_generic_cmds Lines 345 & 348 In step 6, what is the source of the default configuration? In other words, where is this information documented/ where can it be found?",3/9/2005
ProjectB - TIM - 1792,S-Comm Test Scenario Review: com_bvt_generic_cmd: No indication of source for default configuration info,4,"com_bvt_generic_cmds Lines 323-328 In Step 4.0, IV&V suggests including some kind of reference to or source of the default configuration information. In other words, where is this information documented so that it can be confirmed/checked/referenced if needed?",3/9/2005
ProjectB - TIM - 1791,S-Comm Test Scenario Review: com_bvt_generic_cmd: Confusion surrounding command variables,4,"com_bvt_generic_cmds Line 302 Step 3. This may be a requirement interpretation issue or a misunderstanding on IV&V's part. The requirement reads as if the values for configuring the downlink are pulled from a table. Yet, the test scenario reads as if each of the 4 fields (rate, convolutional encoding enable, reed solomon encoding enable and pseudo randomization enable) are sent as individual parameters in the command. IV&V would like to get clarification on the way this command is supposed to work: should the command contain a table id which then contains the specifics or should the command contain the specifics?",3/9/2005
ProjectB - TIM - 1790,"S-Comm Test Scenario Review: com_bvt_generic_cmds, pulse_cmds, local_cmds:Scenarios do not indicate passing/failing conditions for requirements",3,"None of the steps in these scenarios do an adequate job of identifying when a requirement should pass and when it should fail. IV&V recommends including statements that indicate when a requirement passes or fails. For example: In step 1.0 of bvt_generic_cmds, there should be some type of check/verification that the No-op command worked. If it did, the step needs to indicate that the requirement passes. If it did not, the step needs to indicate that the requirement fails. For example, after lines 281 & 283, there should be a statement similar to the following ""Verify that the command accepted counter incremented by 1. If it did, Pass 1101, otherwise Fail 1101"".",3/9/2005
ProjectB - TIM - 1789,S-Comm Test Scenario Review: RestartTest: Requirement 1006 not explicitly addressed in scenario,4,Suggest including an explicit statement in steps 1.0 and 4.0 to address how requirement 1006 is accommodated in this test scenario.,3/9/2005
ProjectB - TIM - 1788,ProjectB RWA Processing - Missing enumerated types in code review packet introduction,5,"Enumerated Fault Detector Component (FDC) types FD_ACE_A_RWA_ABS_TIME_1, FD_ACE_B_RWA_ABS_TIME_1, FD_ACE_A_RWA_ABS_TIME_2, FD_ACE_B_RWA_ABS_TIME_2, FD_ACE_A_RWA_ABS_TIME_3, FD_ACE_B_RWA_ABS_TIME_3, FD_ACE_A_RWA_ABS_TIME_4, FD_ACE_B_RWA_ABS_TIME_4 are not listed in the FDC Chart in Section 4.4 of the Code Review Packet Introduction.",3/8/2005
ProjectB - TIM - 1787,ProjectB Command Actuator Code Review - static variable declaration incorrect usage,3,"The lines of code in question are the following: 525 /* 526 ** Global Definitions 527 */ 528 static uint16 ACE_PyrosArmed[EVD_NUMBER_OF_PYROS]; 529 static uint16 ACE_PyrosEnabled[EVD_NUMBER_OF_PYROS]; Please remove the static keyword in variable declarations from line 528 and 529 of the code packet. The comment before the declaration of these variables indicates that these are global variables. Code review indicated that there was a misunderstanding of the static keyword, in that it would initialize values to 0; this is not the case - and the usage of static is error-prone in this context Since these variables are declared as static, the value of these variables will be retained on subsequent block invocations and will not retain their initialized values. This might cause problems in the maintenance phase, especially if a function that uses these variables is patched and relies on these variables to be initialized.",3/7/2005
ProjectB - TIM - 1786,ProjectB ACE Command Actuator Task - reference unused variables to prevent compiler warnings,3,"The Command Actuator Task is re-using heritage code. As such, there are three instances of function calls used where a parameter is not used in the body of the code. IV&V's understanding is that a build must not have any compiler warnings as per the branch standards, so to prevent compiler warnings, the variable must be referenced in the code even if it is not used. Line 665 - Cmd is unused so insert a reference after this line (void *) Cmd; Line 683 - Pkt is unused so insert a reference after this line; (void *) Pkt Line 1376 - Pkt is unused so insert a reference after this line; (void *) Pkt",3/7/2005
ProjectB - TIM - 1785,ProjectB RWA Data Processing - explicit typecasts for an eeprom table should be removed,4,"In the file rwatbl.c - starting at line 1618 - the macros defined in the eeprom table have explicit typecasts, these defines are declared and should be typed somewhere else, as this is a table loaded from the ground. If a type has to change, it will be easier to change it in one place via a header file.",3/2/2005
ProjectB - TIM - 1784,ProjectB RWA Data Processing - Purpose of function does not reflect the code,4,Line 1144 of ac_rsdutils.c The purpose of this function does not accurately describe what the function does. It implies that it is going to check the upper and lower limits to see if the upper limit is greater than the lower limit and whether the lower limit increases each time this function is called. Neither of these two checks is done. The purpose should be re-written to provide more clarity for what the function truly does.,3/2/2005
ProjectB - TIM - 1783,ProjectB RWA Task Code Review - section label violates branch standards,4,Line 1313 - /*Domestic File Variables should be /*Local File Variables,3/2/2005
ProjectB - TIM - 1782,ProjectB - ACE IV Task Code - event statement will not get executed on warm restart,3,"Line 254 in the file ace_IsolationValve_task.c eventf(IV_TASK_ID, ""Ace 303: Task Initialized: %s"", (reset_type !=OS_COLD)? ""WARM"":""COLD""; will never get executed for a warm restart since it is inside a case statement that only executes if the restart is cold. Ensure that this statement will get executed if the restart is cold, power-on, or warm.",3/2/2005
ProjectB - TIM - 1781,ProjectB - ACE IV Task Code - section label violates branch standards,4,"Line 40 of the file named ace_ground_cmds.h should be labeled /*Macro definitions instead of SDN Commands. Also, remove the line labeled /*Command Function Codes as this label is not allowed as per the branch standards. The same applies to line 30 in the file ace_iv_cmd.h. In this case, these are not /*Type Definitions but /*Macro Definitions.",3/2/2005
ProjectB - TIM - 1780,ProjectB - ACE IV Task - incorrect comment for macro definitions sections,4,On line 530 of the code review packet - the comment is incorrect. It states /* Arm All Normally Open Pyros */ and the comment should read /* Arm All Normally Closed Pyros */,3/2/2005
ProjectB - TIM - 1779,ProjectB ACE IV Task Code Review - incorrect suffix name for .h file,5,"On Line 3 of the code review packet, in the file name ace_HW_Interface.h the file is called out as ace_HW_Interface.h.h",3/2/2005
ProjectB - TIM - 1778,ProjectB - S-Comm SDN Downlink Software - label for section of code violates branch standards - DUPLICATE of TIM-1738,4,"In the function dlmain.c - there are a set of #defines starting on line 45 that are labeled as /*type definitions section. In the coding standards, global and local type defintions are reserved for the construction of new types via structs and typedefs. This section should be labeled as /*Macro Definitions Sections The above comment also applies to the file dlpkt.h - line 31. DUPLICATE of TIM-1738",3/2/2005
ProjectB - TIM - 1777,ProjectB - S-Comm SDN Uplink FSW - missing comments around complex if statement,4,"For function UL_ExecuteLocalCommand - There is a very complex, nested if/else statement starting on line 397 that validates and processes local commands. While the nesting identation is correct and the function prolog is well commented, it would be very helpful to match if/else statement closing braces with a comment such as /*end if (SB_SendCopy(CommandPtr) == SB_Normal). The above also applies to the if statement starting on line 739 in the function UL_ReadCodeblockFIFO.",3/2/2005
ProjectB - TIM - 1776,ProjectB - S-Comm ProjectB Uplink FSW - inconsistency of comments between same function in uplink and downlink code,4,"In the comparable code for the downlink function (DL_ProcessCommands) there is a comment after the first three case statements that states case SB_NORMAL: case SB_BUFF_OVERRUN: case SB_QUEUE_FULL: /* For SB return statuses that imply a message: process it. */ This comment is missing from the comparable uplink function (Ul_ProcessCommands) line 176. IV&V finds this comment useful from a maintenance and consistency perspective, as design/ICD documents may not give a clear understanding of what messages are considered useful from the software bus. Also, the branch standards require that such fall-through cases be clearly commented in the code.",3/2/2005
ProjectB - TIM - 1775,ProjectB - GCE GI Task Code - Missing comment on default statement of switch,4,"From a maintenance standpoint, it is desirable to have comments on default actions of case statements, even when there is no executable code in the default statement. In this case, it would be useful from a maintenance standpoint to insert a comment on line 2109 of the code review packet stating that an invalid packet, while not being checked by this default statement, is being checked farther down in this particular function.",3/2/2005
ProjectB - TIM - 1774,ProjectB GCE GI Task - switch statements throughout code violate coding standards - no default,4,"Throughout the code, there are many instances of switch statements that do not have do not have defaults. This violates the coding standards as set forth by Branch 582. Many of the switch statements switch on the value of an enumerated type, but there may be an instance of data corruption that will need to be handled with a default statement and a corresponding event.",3/2/2005
ProjectB - TIM - 1773,ProjectB ACE Sensor Data Code Review - not necessary to capture MemreadStatus if not checking the returned value,4,"In the function GetSensorData in the file ace_sensor_data_task.c - lines 671-718. Although the functions OS_MemRead32 and OS_MemRead16 do return a value (MemReadStatus), this value is not checked in the code. The recommendation is to not capture the return value if the variable is not checked for failure. OS_MemRead32 and OS_MemRead16 are considered robust heritage functions, and the majority of code using these functions does not check the return value. There are many lines of code that capture MemReadStatus, but do not check it, as such, IV&V finds that it is confusing to use this construct.",3/2/2005
ProjectB - TIM - 1772,ProjectB ACE Raw Sensor Data Processing - Read-only pointer parameters - missing usage of const,4,"Line 186 - for the file ac_pkt.c The ACE team is following the practice of using const in the parameter lists of any read-only variable, especially pointer variables. There is some discussion of making this part of the branch 582 coding standards. As such, the variable *tbl in the parameter list needs to be declared as const *tbl.",3/2/2005
ProjectB - TIM - 1771,LPSC SRS Req 1206 is incomplete,3,"Req 1206 states that... ""The LPSC FSW shall provide a command to switch ON or OFF any LPSC provided service."" The parent requirement, 464-FSW-REQ-0056 SDN-80, as called out in the LPSC SRS states that... ""The Common SDN software shall accept and execute commands to switch power services on/off, except for the PSE SDN for which this requirement does not apply."" This requirement is allocated to the LPSC subsystem alone. Req. 1206 in the LPSC SRS is incomplete in the sense that it does not address the exception that this requirement does not apply to the PSE SDN subsystem.",2/4/2005
ProjectB - TIM - 1770,"LPSC SRS does not explicitly address all requirements allocated from the parent document, Level 3 S/C FSW SRS",3,"There are several requirements, specified in the Level 3 S/C FSW SRS (464-FSW-REQ-0056) that are allocated to the LPSC that have not been explicitly called out in the LPSC SRS. These parent requirements are implicity met by the LPSC SRS, they just need to be identified as such Specifically: SDN-82 is allocated to ""LPSC"" but not explicitly identified in the LPSC SRS. IV&V feels that requirement 1301 meets the parent requirement SDN-82, but it is not stated in the LPSC SRS rationale column for that requirement. SDN-10 is allocated to all FSW subsystems, but it is not explicitly identified in the LPSC. IV&V feels that the entire commands section (1200) addresses this parent requirement. IV&V suggests putting a comment or a trace in the rationale to indicate such. SDN-12 is allocated to all FSW subsystems, but it is not explicitly identified in the LPSC. IV&V feels that several requirements meet this parent requirement. IV&V feels that 1301, 1203, 2002.2 and 2003.2 all provide sufficient evidence that the telemetry information will verify the receipt and execution of all commands. There are also requirements that are not even implicitly addressed in the LPSC SRS, Specifically: SDN-23 and SDN-24 are completely left out of the LPSC SRS. They are not even implicitly addressed. In other words, there are no child LPSC SRS requirements that adress the parent requirements.",2/4/2005
ProjectB - TIM - 1769,LPSC Child req 1006 defines more capability than parent requirement,3,"Req 1006 states that ""...the LPSC FSW shall initialize the LPSC switch states to their default EEPROM stored values (ON or OFF)."" However, the parent requirement, as specified in the LPSC, SRS; 464-SPN-REQ-0040 Req. 2.5 states: ""The LPSC bus voltage switched services shall come up in the OFF state upon power up."" Child req 1006 provides for additional capability that is not specified in the parent requirement. The parent requirement explicitly states that the LPSC shall come up in the OFF state upon power up.",2/4/2005
ProjectB - TIM - 1768,TO SRS Does not include complete traceability,3,"The JAN 05 version of the TO SRS does not include complete traceability for all level 4 requirements. The SRS includes a column labeled ""rationale"" that, accoridng to the SRS, ""provides the justification for each requirement"". However, this does not address traceability for all level 4 requirements. In most cases, the ""rationale"" column includes a trace to a level 3 document. However, there are numerous cases, some mentioned below, for which no traceability is provided. It is our suggestion that traceability be addressed for ALL level 4 requirements in the TO SRS. Examples of requirements with NO traceability follow: 1101 - Ratioanle text provides an explanation, not traceability 1107 - Rationale text states ""Heritage Design"". This is not traceability. 1108, 1110 - Rationale text refers to ""S/COMM HW/SW ICD"" but does not provide traceability to an explcit requirement within the ICD. 1220, 3201, 3203 - Rationale text states ""Heritage Design"" and refers to a MAP requirement. This does not provide traceability to an ProjectB FSW level 3 requirement. 3204, 3205 - Rationale text states ""Test Point"" and refers to a MAP requirement. This does not provide traceability to an ProjectB FSW level 3 requirement. 3100, 3102 - Rationale text states ""Design Practice"". This is not traceability.",1/27/2005
ProjectB - TIM - 1767,1553 XB Test Scenario Review - Need for new requirement which describes how the command error counter should work,3,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_BadCommandTest Line #: There is no requirement stating how the command error counter should work. For example, one would expect to see a requirement such as: The XB FSW shall maintain a unique Command Error counter which is incremented by the value of one (1), each time a command to the software fails to execute successfully. However, there is no such requirement in the ProjectB Bus Controller (BC) FSW Requirements Spec 464-FSW-SPEC-0051. IV&V will submit a request to include such a requirement. With that type of requirement, every step in the MP_BXB_BadCommandTest would verify that requirement. The steps currently in the badcommandtest scenario do not verify the requirements stated. For example, in step 1 on line 300, sending a bad NOOP command does not verify that a valid NOOP command works, so requirement 1201 is not verified by this step. The same logic is applied to the rest of the test scneario. Requirements 1201-1210 are not verified by this test scenario. The thing that is verified by this entire scenario is that the command error counter updates by 1 each time an invalid command is sent. However, this is not a requirement to date, so no requirements are fully verified by this test scenario to date.",1/25/2005
ProjectB - TIM - 1766,"1553 XB Test Scenario Review - ""TBD Commands..."" in procedures",4,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_InitCounters Line #: 725 General IV&V issue/concern: ""Send TBD Commands"". This issue needs addressed to in order to finalize, complete the scenario procedures.",1/24/2005
ProjectB - TIM - 1765,1553 XB Test Scenario Review - The initialization of counters as specified in Req. 1001 is unclear,4,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_Restart Line #: 676-682 This portion of the procedure does not seem to explicitly address the initialization of the counters called out in requirement 1001: ""After a cold restart or power-on restart, the XB FSW shall initialize the command execution counter, the command failed counter, and all 1553 status counters in housekeeping telemetry to zero (0).""",1/24/2005
ProjectB - TIM - 1764,1553 XB Test Scenario Review - The preservation of counters as specified in Req. 1004 is unclear,4,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_Restart Line #: 666-674 This portion of the procedure does not seem to explicitly address the preservation of the counters called out in requirement 1004: ""After a warm restart, the XB software shall preserve the command execution counter, the command failed counter, and all 1553 status counters in housekeeping telemetry.""",1/24/2005
ProjectB - TIM - 1763,1553 XB Test Scenario Review - Grammatical error on line 599 in MP_BXB_Reset test procedure,5,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_Reset Line #: 599 Improper grammar: ""Start procedure ut_sendresetcmd to verify issue the reset command…"". Change to read as follows: ""Start the ut_sendresetcmd procedure to verify that the reset command is issued…""",1/24/2005
ProjectB - TIM - 1762,1553 XB Test Scenario Review - Grammatical error on line 598 in MP_BXB_Reset test procedure,5,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_Reset Line #: 598 Change ""an"" to ""and"". This issue concerns the readability of the test procedure.",1/24/2005
ProjectB - TIM - 1761,1553 XB Test Scenario Review - Vague housekeeping terminology inhibits proper verification of Req. 1302,4,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_Reset Line #: 592 ""All housekeeping values"" and ""non-default values"" are vague terms which do not explicitly identify the housekeeping values and non-default values that should be used to ensure that requirement 1302 is properly tested.",1/24/2005
ProjectB - TIM - 1760,1553 XB Test Scenario Review - Reference made in procedures to repeat steps 3.1 through 3.4 is incorrect,4,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_1553Interface Line #: 531 On line 531, the procedure states: ""Repeat steps 3.1 through 3.4 for each SDN"". There are no steps in this scenario identified as 3.1 through 3.4.",1/24/2005
ProjectB - TIM - 1759,1553 XB Test Scenario Review - Req. 1303 is not properly verified as indicated by MP_BXB_1553Interface procedures,3,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_1553Interface Line #: 496 It is not clear how Requirement 1303 is completely verified in this scenario, particularly with respect to the part of the requirement that states the CCSDS packet will be formatted with a specific APID, which seems to be a relevant part of the requirement. Requirement 1303 states: ""The XB FSW shall format the data read as a result of the “RT to BC Message” command into a CCSDS packet with a specified APID and send it over the software bus for distribution. (See Requirement 1205)."" There are not procedures in the test scenario that explicitly verify checking the APID code.",1/24/2005
ProjectB - TIM - 1758,1553 XB Test Scenario Review - Requirement 2002 is not checked by the MP_BXB_1553Interface test procedures,4,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_1553Interface Line #: 430 On line 430, the scenario indicates that Requirements 2002, 2004 and 2005 are tested. (1) Concerning Requirement 2002, in the procedure, there is no indication where Req. 2002 is tested or verified. Thus it is unclear if this requirement is actually tested. (2) Concerning Requirements 2004 and 2005 - there are no requirements uniquely identified as ""2004"" or ""2005"" in the Requirements Document. The last requirement identified in the Requirements Document is requirement 2003.",1/24/2005
ProjectB - TIM - 1757,1553 XB Test Scenario Review - BadCommandTest does not verify requirements identified,3,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_BadCommandTest Line #: There is no requirement stating how the command error counter should work. For example, one would expect to see a requirement such as: The XB FSW shall maintain a unique Command Error counter which is incremented by the value of one (1), each time a command to the software fails to execute successfully. However, there is no such requirement in the ProjectB Bus Controller (BC) FSW Requirements Spec 464-FSW-SPEC-0051. IV&V will submit a request to include such a requirement. With that type of requirement, every step in the MP_BXB_BadCommandTest would verify that requirement. The steps currently in the badcommandtest scenario do not verify the requirements stated. For example, in step 1 on line 300, sending a bad NOOP command does not verify that a valid NOOP command works, so requirement 1201 is not verified by this step. The same logic is applied to the rest of the test scneario. Requirements 1201-1210 are not verified by this test scenario. The thing that is verified by this entire scenario is that the command error counter updates by 1 each time an invalid command is sent. However, this is not a requirement to date, so no requirements are fully verified by this test scenario to date.",1/24/2005
ProjectB - TIM - 1756,1553 XB Test Scenario Review - Req. 1211 needs to be added as being checked by MP_BXB_CommandTest procedures,4,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: 98 Line 98: Requirement 1211 is not listed as being verified by this scenario, but it is included in Step 11, line 240, as being checked.",1/24/2005
ProjectB - TIM - 1755,1553 XB Test Scenario Review - Req. 1212 not verified by procedures in MP_BXB_CommandTest,3,1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: n/a Requirement 1212 was not included in and thus not verified by this test scenario.,1/24/2005
ProjectB - TIM - 1754,1553 XB Test Scenario Review - Req. 1301 and 1302 are not properly verified throughout the MP_BXB_CommandTest procedures,3,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: n/a The entire test scenario does not fully verify requirement 1301 or 1302. For 1301, it does not appear that any requests were made for housekeeping telemetry. For 1302, only parts of it were used throughout the scenario. There was no verified count of rejected ground commands, synch to 1 Hz error counter, status of last command, value of 1553 bus control controller register or value of interrupt mask register. UPDATE 5/1/07 - see res chron on 11/10/06 for updates to this TIM.",1/24/2005
ProjectB - TIM - 1753,1553 XB Test Scenario Review - Req. 1209 and 1210 are not properly verified in steps 9 & 10 in MP_BXB_CommandTest,3,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: 219 & 228 Steps 9 & 10: IV&V questions the verification method used in these steps. Line 223 and Line 232 indicate that the respective requirements will be verified by checking for an event message with its packet length error. Also, IV&V suggests including more detail in Line 220 & Line 229 to indicate that the mapping has to occur from the ST to the GDS ST (for step 9) and from the ACE to the GDS ACE (for step 10).",1/24/2005
ProjectB - TIM - 1752,1553 XB Test Scenario Review - Req. 1208 is not properly tested and verified in step 8 of MP_BXB_CommandTest,3,1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: 210 Step 8 only partially verifies requirement 1208. 1208 involves disabling and enabling. This test scenario only checks that the diagnostic channel can be enabled. IV&V also questions the verification method listed in line 223 of checking the event message with the packet length error.,1/24/2005
ProjectB - TIM - 1751,1553 XB Test Scenario Review - Req. 1207 is not properly verified in Step 7 of the MP_BXB_CommandTest procedures,3,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: 201 Step 7 does not properly verify the command to generate the event message - Requirement 1207. In order to properly verify this command, in line 205, the statement needs to read something like the following: · Verify that the appropriate event message is generated indicating - the number of retries performed for the RT- the number of errors encountered for the RT- the number of packets successfully transferred- the number of failed packet transfers. Also, for full verification, the test needs to have a baseline from which to compare the numbers reported. For example, the test scenario could send the event message command to read the current values of the data. Next, the test could perform various actions which would increase the data by known quantities. Then, the test could send the event message command and compare the baseline data to the updated data in the event message to see if the numbers reported are correct.",1/24/2005
ProjectB - TIM - 1750,1553 XB Test Scenario Review - Req. 1206 is only partially verified by Step 6 of the MP_BXB_CommandTest,3,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: 191 Step 6 only partially verifies requirement 1206. The disable portion of the command is verified, but not the enable portion of the command. Also, the verification method is in question. Line 195 & 196 verify that the proper event message was generated and that the housekeeping telemetry counters have not been reset. How do those two things verify that the I/O on a 1553 bus channel has been disabled? Should a command be given to try to read from or write to a bus channel to make sure it cannot happen since the I/O is disabled?",1/24/2005
ProjectB - TIM - 1749,1553 XB Test Scenario Review - Verification method for Requirement 1205 is questionable,3,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: 182 Step 5: Requirement 1205 states that the XB FSW shall provide a single “RT to BC Message” command that reads data from a specified RT and sub-address, and returns the data in a specific CCSDS formatted packet. In line 186, the test scenario indicates that an event message should have been generated indicating the packet length error. IV&V is unclear how the packet length error verifies that the data is returned in a specific CCSDS formatted packet. IV&V questions the verification method in this step. It also appears that if Requirement 1205 is properly verified, it would also lead to verifying requirement 1303. UPDATE 5/1/07 - see res chron for 5/1/07 for more information.",1/24/2005
ProjectB - TIM - 1748,1553 XB Test Scenario Review - Verification method for requirement 1204 is questionable in CommandTest scenario,3,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: 173 Step 4: Requirement 1204 states that the XB FSW shall provide a “BC to RT Message” command that writes a specified data pattern to a specified RT and sub-address. In line 177, the test scenario indicates that an event message should have been generated indicating the packet length error. IV&V is unclear how the packet length error verifies that the specified data pattern was written to the specified RT and sub-address. IV&V questions the verification method in this step.",1/24/2005
ProjectB - TIM - 1747,1553 XB Test Scenario Review - Req. 1203 only partially tested in Step 3 of MP_BXB_CommandTest,3,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: 163 Step 3: The step as currently written appears to be a high-level, vague description of what should happen. In order to fully test the requirement 1203, IV&V suggests that the retry command is sent until all four bus controller configurations have been selected, to prove that all four can be selected by the command. Currently as written, the test scenario reads as if only to send one reset command to have one of the four bus configurations selected. Test needs to ensure that all four bus configurations can be reached using the reset command.",1/24/2005
ProjectB - TIM - 1746,1553 XB Test Scenario Review - Req. 1206 is not properly verified by MP_BXB_CommandTest procedures in Step 2,3,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: 152, 161 Step 2 does not properly verify requirement 1206 For 1206, there is no command identified or sent (other than the NOOP command) that enables and/or disables I/O on any 1553 bus channel.",1/24/2005
ProjectB - TIM - 1745,1553 XB Test Scenario Review - Conflicting test scenario information makes the test procedure unclear,4,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: 152 Step 2 contains two conficting statements. After sending the reset command in line 155, one would expect that the counters to reset to zero (without the command execution counter increasing by 1 and then resetting to zero). The way the test is written, it checks to make sure the command execution counter increments but then that it equals zero. IV&V assumes that with the reset command, the counters are supposed to be reset to zero without incrementing beforehand. If not, how much time elapses between the time the command execution counter increments by 1 to indicate a valid reset command and when the counter is actually reset to zero? This doesn't appear to make sense. The indication that the command was successful comes by checking that the command execution counter equals zero, not that it increments by one and then changes to zero.",1/24/2005
ProjectB - TIM - 1744,1553 XB Test Scenario Review - Req.1206 is not properly verified by MP_BXB_CommandTest procedures in Step 1.1 and 1.2,3,"1553 External Bus (XB) Controller Test Review - 1/21/05 Test Scenario Name: MP_BXB_CommandTest Line #: 139, 146 Steps 1.1 & 1.2 do not properly verify requirements 1206 For 1206, there is no command identified or sent (other than the NOOP command) that enables and/or disables I/O on any 1553 bus channel.",1/24/2005
ProjectB - TIM - 1743,Flight Software Actuator Command - include void in the parentheses for the advertised function in the header file,3,"file ac_build1_actuatorcmd.h line 43 - include ""void"" in the parentheses for the function that is to be visible externally",1/17/2005
ProjectB - TIM - 1742,EVD Code Review - remove memcpy and use OS_memcpy,3,In File ac_evd.c - Line 151 - remove the memcpy and use the Memory Management routines provided by the project via osapi.h,1/17/2005
ProjectB - TIM - 1741,Fault Detection Software - better matching of closing comments to 'if' statements,3,"Function ac_faultdet.c Line 134 - Change comment to ""End if DetectorID Valid"" - doesn't match the 'if' statement at all Line 186 - Change comment to match the 'if' statement it describes; make the description clearer.",1/17/2005
ProjectB - TIM - 1740,Fault Detection Software not following 582 branch standards - labels for discrete sections of code,4,The file ac_faultdet.h -- Line 83 should be 'File Data' Line 94 should be 'Local Function Prototypes',1/17/2005
ProjectB - TIM - 1739,S-Comm SDN Flight Software Requirements - unclear on what level requirements are being specified.,3,The requirements document does not state in its introduction that it is a Level 4 software requirements documents. It is IV&V's understanding that these documents need to be explicitly labelled as such in order to understand and trace the requirements hierarchy,1/11/2005
ProjectB - TIM - 1738,S-Comm SDN Downlink - violation of coding standards in terms of commenting sections of code,3,"For the following files in the code packet - dlmain.c dlpkt.h dlq.c there are sections of code with #defines that are labelled as 'Type Definition Sections' instead of 'Macro Definitions Sections'. This is a violation of branch standards, also #defines are macros even though they might be used as types in certain cases.",1/11/2005
ProjectB - TIM - 1737,HD - Better commenting around if and else if statements,4,Lines 1895 and 1899 are end-bracketed for a complex if-else if construct. IV&V requests that these end brackets contain comments that point to the particular if/else-if statement that they are enclosing.,1/11/2005
ProjectB - TIM - 1736,HD - Numerous switch constructs in the codebase are unclear on whether they break or fall through,3,"Throughout the source code there are numerous switch statements with numerous case statements. Some of these case statements fall through, some of these cases statements break. During the code review, we identified as much as possible missing breaks in the case statements, and asked for clearer comments on the fall throughs. IV&V would like the developer to re-examine complex switch statements where appropriate and ensure that breaks are placed where needed in the logic and fall-throughs are commented clearly, as it may be that code review did not catch all errors.",1/11/2005
ProjectB - TIM - 1735,HD - No comments on default statement for switch - violates coding standards,4,"Line 1111 - Insert a comment for the default case that explains that if this default case is reached - the error was checked for and output before reaching the particular default statement. Also, it is a violation of the 582 coding standards to not have a well-reasoned comment if there is no default case.",1/11/2005
ProjectB - TIM - 1734,"ACS Algorithm Document - Incorrect requirements specified for FDC purposes in the ""ProcessGCEData"" algorithm",3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessGCEData Page(s): 3-37 Section #: 3.2.5 Notebox #: Notebox Beneath ""BEGIN ProcessGCEData"" On page 3-37, requirements 2121.1 and 2121.1.1 are called out for checking the validity and data freshness of the GCE data for FDC purposes. These two requirements do not pertain to GCE, but pertain to IRU data processing. The correct requirements should be identified and clarified. This discrepancy should be corrected for requirement implementation purposes and clarification purposes.",1/4/2005
ProjectB - TIM - 1733,ACS Algorithm Document - Piezoelectric Transducer (PZT) algorithm appears to be incomplete,3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessPZTData Page(s): 3-36 Section #: 3.2.4 Notebox #: n/a On page 3-36, there is no algorithm information for the Piezoelectric Transducer (PZT) data processing, and the algorithm appears to be incomplete. There is a note for the algorithm that says the routine will pass through the data from the PZT, and if no data is available, notify FDC and pass previous data. However, there are no global or local variables defined which will ensure that this functionality is accomplished. By comparison, the other algorithm routines have variables defined for this same purpose. This issue needs to be addressed and clarified.",1/4/2005
ProjectB - TIM - 1732,ACS Algorithm Document - Variable name in algorithm routine does not match variable name as specified in local declarations,4,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessEvdData Page(s): 3-33 and 3-34 Section #: 3.2.3 Notebox #: 2 and 3 On pages 3-33 and 3-34, there is a variable used which is identified and spelled ""Flag_GtDataValid_Acs"". The variable should be spelled ""Flag_GtDataValid_ACS"" since this is how it is identified in the Local Variables declaration section. This discrepancy should be corrected for clarification purposes.",1/4/2005
ProjectB - TIM - 1731,"ACS Algorithm Document - Incorrect requirements specified for FDC purposes in the ""ProcessGTData"" algorithm",3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessGTData Page(s): 3-32 Section #: 3.2.3 Notebox #: Notebox Beneath ""BEGIN ProcessGTData"" On page 3-32, requirements 2121.1 and 2121.1.1 are called out for checking the validity and data freshness of the GT data for FDC purposes. These two requirements are incorrect, and pertain to the IRU data. Requirements 2142.1 and 2142.1.1 appear to be the relevant requirements. This discrepancy should be corrected for requirement implementation purposes and clarification purposes.",1/4/2005
ProjectB - TIM - 1730,"ACS Algorithm Document - ""Quat_VelAberr_Corr_Def"" variable not defined in ""ProcessTrackerData"" algorithm",3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessTrackerData Page(s): 3-29 Section #: 3.2.2 Notebox #: n/a On page 3-29, there is a variable that is used ""Quat_VelAberr_Corr_Def"", which is not identified or declared in either the global or the local variable declaration sections. It is not clear if there is a corresponding variable defined in either of the variable declaration lists. This issue needs to be clarified and corrected.",1/4/2005
ProjectB - TIM - 1729,"ACS Algorithm Document - ""Vel_BcsF_Sc"" variable not defined in ""ProcessTrackerData"" algorithm",3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessTrackerData Page(s): 3-29 Section #: 3.2.2 Notebox #: n/a On page 3-29, there is a variable that is used ""Vel_BcsF_Sc"", which is not identified or declared in either the global or the local variable declaration sections. It is not clear if there is a corresponding variable defined in either of the variable declaration lists. This issue needs to be clarified and corrected.",1/4/2005
ProjectB - TIM - 1728,"ACS Algorithm Document - ""Quat_error"" variable not defined in ""ProcessTrackerData"" algorithm",3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessTrackerData Page(s): 3-29 Section #: 3.2.2 Notebox #: n/a On page 3-29, near the top of the page, the algorithm makes use of a variable called ""Quat_error"". This variable is not defined in either the global or local variable declaration sections, and it is not clear if there is a corresponding variable defined in either of the variable declaration lists. The variable appears to be a local, temporary used variable. This issue needs to be clarified and corrected.",1/4/2005
ProjectB - TIM - 1727,"ACS Algorithm Document - Requirement 2132.3 needs to be addressed by the ""ProcessTrackerData"" algorithm",4,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessTrackerData Page(s): 3-28 Section #: 3.2.2 Notebox #: n/a On page 3-28, about 2/3 of the way down the page, there is a note in the middle of the algorithm which says: ""We need to add Req. 2132.3 (Compute quaternion magnitude)"". IV&V assumes that this note means that the algorithm which addresses Req. 2132.3 needs to be added in a later revision of the ACS Algorithm document, and that the requirement is not addressed by the algorithm. This issue needs to be addressed and clarified.",1/4/2005
ProjectB - TIM - 1726,ACS Algorithm Document - Star Tracker data processing algorithm routine names do not match,4,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessGyroData Page(s): 3-28 Section #: 3.2.2 Notebox #: n/a On page 3-1, in the ""ProcessInputData"" routine, the subroutine name for the Star Tracker data processing procedure is ""ProcessSTData"". On page 3-28, the name used for the ST data processing produre is ""ProcessTrackerData"". The two names used, do not match. The two names used, do not match and should be corrected for clarification purposes.",1/4/2005
ProjectB - TIM - 1725,"ACS Algorithm Document - Incorrect requirements specified for FDC purposes in the ""ProcessDSSData"" algorithm",3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessDSSData Page(s): 3-24 Section #: 3.2.1 Notebox #: Notebox Beneath ""BEGIN ProcessDSSData"" On page 3-24, requirements 2121.1 and 2121.1.1 are called out for checking the validity and data freshness of the DSS data for FDC purposes. These two requirements are incorrect, and pertain to the IRU data. The correct requirements should be identified and clarified, since it is unclear which requirements from the ACS Requirements Document are applicable to the Digital Sun Sensor data processing. This discrepancy should be corrected for requirement implementation purposes and clarification purposes.",1/4/2005
ProjectB - TIM - 1724,ACS Algorithm Document - Variable name in algorithm routine does not match variable name as specified in global declarations,4,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessEvdData Page(s): 3-22 Section #: 3.1.5 Notebox #: 15 On page 3-22, at the top, there is an expression that uses the variable ""Time_Thr_Pulse"" in an expression. The variable should be spelled: ""Time_THR_Pulse"", since this is how the variable is shown and defined in th global variables declaration section. This discrepancy should be corrected for clarification purposes.",1/4/2005
ProjectB - TIM - 1723,ACS Algorithm Document - Variable name in algorithm routine does not match variable name as specified in global declarations,4,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessEvdData Page(s): 3-21 Section #: 3.1.5 Notebox #: 15 On page 3-21, beneath Notebox [15.], there is a variable that is used and is spelled ""Flag_PktInvalidCnt_Thr"". This variable should be spelled ""Flag_PktInvalidCnt_THR"" since this is how the variable is defined in the global variables declaration section. This discrepancy should be corrected for clarification purposes.",1/4/2005
ProjectB - TIM - 1722,ACS Algorithm Document - Variable name in algorithm routine does not match variable name as specified in global declarations,4,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessEvdData Page(s): 3-21 Section #: 3.1.5 Notebox #: 15 On page 3-21, beneath Notebox [15.], there is a variable that is used and is spelled ""Cnt_PktInvalid_Thr_Max"". This variable should be spelled ""Cnt_PktInvalid_THR_Max"" since this is how the variable is defined in the global variables declaration section. This discrepancy should be corrected for clarification purposes.",1/4/2005
ProjectB - TIM - 1721,ACS Algorithm Document - Variable name in algorithm routine does not match variable name as specified in global declarations,4,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessEvdData Page(s): 3-21 Section #: 3.1.5 Notebox #: 15 On page 3-21, beneath Notebox [15.], there is a variable that is used and is spelled ""Cnt_PktInvalid_Thr"". This variable should be spelled ""Cnt_PktInvalid_THR"" since this is how the variable is defined in the global variables declaration section. This discrepancy should be corrected for clarification purposes.",1/4/2005
ProjectB - TIM - 1720,ACS Algorithm Document - Variable name in algorithm routine does not match variable name as specified in global declarations,4,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessEvdData Page(s): 3-21 Section #: 3.1.5 Notebox #: 14 On page 3-21, beneath Notebox [14.], in the second nested IF statement, the variable ""Flag_Enable(0)"" is used. This variable is not defined in the global or local variable declaration sections. It is not clear if there is an existing variable in the variable lists that is applicable or not. However, IV&V assumes that it is possible that the variable name should be or is supposed to be the ""Flag_THR_Enable(0)"" variable from the Global Variable list since its description seems to fit most closely. This discrepancy should be corrected for clarification purposes.",1/4/2005
ProjectB - TIM - 1719,ACS Algorithm Document - Variable name in algorithm routine does not match variable name as specified in global declarations,4,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessEvdData Page(s): 3-21 Section #: 3.1.5 Notebox #: 12 On page 3-21, beneath Notebox [12.], the algorithm makes use of a variable ""Flag_Thr_Inuse"". The variable should be spelled: ""Flag_THR_Inuse"", since this is how the variable is defined and shown in the global variables declaration section. This discrepancy should be corrected for clarification purposes.",1/4/2005
ProjectB - TIM - 1718,ACS Algorithm Document - Variable name in algorithm routine does not match variable name as specified in global declarations,4,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessEvdData Page(s): 3-20 Section #: 3.1.5 Notebox #: 11 On page 3-20, at the bottom, there is an expression that uses the variable ""Time_Thr_Pulse"" in the expression. The variable should be spelled: ""Time_THR_Pulse"", since this is how the variable is shown and defined in the global variables declaration section. This discrepancy should be corrected for clarification purposes.",1/4/2005
ProjectB - TIM - 1717,"ACS Algorithm Document - Incorrect requirements specified for FDC purposes in the ""ProcessEvdData"" algorithm",3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessEvdData Page(s): 3-19 Section #: 3.1.5 Notebox #: Notebox Beneath ""BEGIN ProcessEvdData"" On page 3-19, requirements 2121.1 and 2121.1.1 are called out for checking the validity and data freshness of the RWA data for FDC purposes. These two requirements are incorrect, and pertain to the IRU data processing. The correct requirement that should be cited is 2161 and/or its sub requirements. This discrepancy should be corrected for requirement implementation purposes and clarification purposes.",1/4/2005
ProjectB - TIM - 1714,ACS Algorithm Document - Note concerning the need for a new ACS Requirement pertaining to jitter.,3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessRWAData Page(s): 3-16 Section #: 3.1.4 Notebox #: 6 On page 3-16, in 'Notebox [6]', near the bottom of the page, there is a note in the notebox about jitter limits and the apparent need for a new ACS requirement which concerns jitter - ""...(ACS FSW Req't. NEW)"" IV&V assumes this to mean that there is a need for a new requirement concerning jitter/jitter limits, and that this new requirement needs to be added to the ACS Requirements document. This is a general IV&V concern and observation: This issue needs to be clarified and addressed.",1/4/2005
ProjectB - TIM - 1713,"ACS Algorithm Document - ""Flag_RWADeltaPulseValid"" variable appears to always have a FALSE state",3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessRWAData Page(s): 3-16 Section #: 3.1.4 Notebox #: 4 and 5 On page 3-16, beneath notebox [4.], there is an ELSEIF block where a variable called ""Flag_RWADeltaPulseValid(i)"" is set to FALSE for FDC purposes --> ""Flag_RWADeltaPulseValid(i)"" = FALSE Then after the ELSEIF code block in notebox [4.], there is an ELSE block that starts and whose code extends down into notebox [5.]. In this ELSE block, the variable ""Flag_RWADeltaPulseValid(i)"" is never set to ""TRUE"", and it appears that the variable will always be FALSE. IV&V's concern is that for FDC purposes and/or other computing purposes, the variable ""Flag_RWADeltaPulseValid(i)"" will always have the state of ""FALSE"", since it is never set otherwise. For example, it is IV&V's understanding that all global variables are available for telemetry downlink. Thus, if the variable was always ""FALSE"" and never set to ""TRUE"" when it was appropriate, and there was some sort of ACS/RWA problem that ground control was trying to troubleshoot which concerned this variable, this could lead to a lot of confusion in trying to debug a problem. For instance in the context of this example, the RWA Delta Pulse could in fact be valid - true, however the telemetry for the variable would always show false or invalid. IV&V suggests examining this issue in order to determine the validity of this issue, and to correct or remedy the issue as required.",1/4/2005
ProjectB - TIM - 1712,ACS Algorithm Document - Variable name in algorithm routine does not match variable name as specified in global declarations,4,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessRWAData Page(s): 3-16 and 3-17 Section #: 3.1.4 Notebox #: 3 and 7 On the top of page 3-16 and the top of page 3-17, there is a variable used that is not defined in either the global or local variable sections. The name of the variable used is: ""Rate_RWA"". It is not clear if there is an existing variable in the variable lists that is applicable or not. However, IV&V assumes that it is possible that the variable name should be or is supposed to be the ""Rate_RWA_Tach"" variable from the Global Variable list since its description seems to fit most closely. This discrepancy should be corrected and clarified.",1/4/2005
ProjectB - TIM - 1711,"ACS Algorithm Document - Incorrect requirements specified for FDC purposes in the ""ProcessRWAData"" algorithm",3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessRWAData Page(s): 3-15 Section #: 3.1.4 Notebox #: Beneath ""BEGIN ProcessRWAData"" On page 3-15, requirements 2121.1 and 2121.1.1 are called out for checking the validity and data freshness of the RWA data for FDC purposes. These two requirements are incorrect, and pertain to the IRU data processing. The correct requirements that should be cited are: 2151.2 and 2151.2.1 This discrepancy should be corrected for requirement implementation purposes and clarification purposes.",1/4/2005
ProjectB - TIM - 1710,ACS Algorithm Document - Variable name in algorithm routine does not match variable name as specified in global declarations,3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessGyroData Page(s): 3-9 Section #: 3.1.3 Notebox #: 4 On page 3-9, there is a ""flag"" variable used in the code beneath ""Note Box [4.]"", and the name of the variable is ""Flag_DataValid_IRU"". However in the global variable list, the name of flag variable is shown as ""Flag_IRU_DataValid"", and this name is assumed to be the correct and applicable variable name. The two names for the flag variable do not match and this discrepancy should be corrected or clarified for clarification purposes.",1/4/2005
ProjectB - TIM - 1709,ACS Algorithm Document - Variable name in algorithm routine does not match variable name as specified in global declarations,3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessGyroData Page(s): 3-9 Section #: 3.1.3 Notebox #: 4 On page 3-9, there is a ""flag"" variable used in the code beneath ""Note Box [4.]"", and the name of the variable is ""Flag_DataStatic_IRU"". However in the global variable list, the name of flag variable is shown as ""Flag_IRU_StaticData"", and this name is assumed to be the correct and applicable variable name. The two names for the flag variable do not match and this discrepancy should be corrected or clarified for clarification purposes.",1/4/2005
ProjectB - TIM - 1708,ACS Algorithm Document - Note indicating Requirement 2121.4 needs to be changed to fit the algorithm,3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessGyroData Page(s): 3-9 Section #: 3.1.3 Notebox #: 2 On page 3-9, at the top of the page in the ""Note Box [2.]"", there is a note that says ""Change FSW Req to fit. Req. # 2121.4"". This is an IV&V general issue and observation regarding the need to change the FSW requirement 2121.4 to fit the algorithm: This issue needs to be clarified and addressed.",1/4/2005
ProjectB - TIM - 1707,ACS Algorithm Document - IRU Data processing algorithm routine names do not match,4,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessGyroData Page(s): 3-8 Section #: 3.1.3 Notebox #: n/a On page 3-1, in the ""ProcessInputData"" routine, the subroutine name for the IRU data processing procedure is ""ProcessIRUData"". On page 3-8, the name used for the IRU data processing procedure is ""ProcessGyroData"". The two names used, do not match and should be corrected for clarification purposes.",1/4/2005
ProjectB - TIM - 1706,"ACS Algorithm Document - Requirement 2031 not fully addressed by ""ProcessSolarArrayData"" algorithm",3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessSolarArrayData Page(s): 3-2 Section #: 3.1.1 Notebox #: n/a On page 3-2, it is not clear how Requirement 2031 is met via the algorithm for the ProcessSolarArrayData routine. However, this issue may be a lack of understanding on IV&V's part. Specifically, Req. 2031 indicates if the Solar Array potentiometers have not indicated that the Solar Arrays have been successfully deployed, the ACS FSW shall zero the position errors and reduce body rates via rate nulling. In the algorithm, if ""Flag_SA_Deploy=FALSE"", the only action taken is the ACS is transferred to into the SunAquisition Mode, and the algorithm does not address zeroing the position errors and reducing body rates via rate nulling. And no where else in any other algorithm - no where else in the algorithm document - is ""zeroing of position errors"" covered in relation to this subject. Thus it is not clear or understood how Requirement 2031 is fully addressed in the algorithm and the Algorithm document in general.",1/4/2005
ProjectB - TIM - 1705,ACS Algorithm Document - Incorrect requirements specified for FDC purposes in the 'ProcessSolarArrayData' algorithm,3,"ACS Algorithm Document; 464-ACS-REQ-0053; Revision 0; 11/12/04 Algorithm Subroutine: ProcessSolarArrayData Page(s): 3-2 Section #: 3.1.1 Notebox #: Notebox beneath ""BEGIN ProcessSolarArrayData"" On page 3-2, immediately beneath the ""BEGIN ProcessSolarArrayData"" line, in the 'note box', Requirements 2111.2, 2111.2.1, and 2111.3 are called out as requirements for the routine. This routine is concerned with the deployment of the Solar Arrays, and related data. However, the requirements cited are concerned with Course Sun Sensors. It is not clear how these requirements apply to the deployment of Solar Array, or the SA in general. The correct applicable requirements from the ACS Requirements Document should be specified and cited.",1/4/2005
ProjectB - TIM - 1704,SDN_BCS_ADDSEGMENT: Line 1855 Indicates a passing of 1210 when it should indicate failure,3,SDN_BCS_ADDSEGMENT Line 1855 This line in Step 13.3 indicates a passing of 1210 when it should indicate a failure.,12/27/2004
ProjectB - TIM - 1703,SDN_BCS_ADDSEGMENT: Various TBDs throughout scenario,3,"SDN_BCS_ADDSEGMENT Lines 1517, 1519, 1520, 1591, 1595, 1655, 1659, 1694, 1734, 1737, 1739, 1740, 1750, 1789, 1791, 1972, 1793, 1803, 1805, 1852 Various TBDs throughout the scenario need to be resolved.",12/27/2004
ProjectB - TIM - 1702,SDN_BCS_ADDSEGMENT: Discrepancy between the test scenario and RVTM with respect to 1209 & 1301,4,"SDN_BCS_ADDSEGMENT The requirements verification matrix indicates 1209 and 1301 are to be tested by this scenario, but these requirements are not in the actual test scenario. IV&V suggests fixing the discrepancy.",12/27/2004
ProjectB - TIM - 1701,"SDN_BCS_TABLE_ENTRY_JAM: Requirements 1305 & 1306 are partially tested by Step 2, but not indicated as such",4,SDN_BCS_TABLE_ENTRY_JAM Lines: 1306-1314 Step 2 appears to also partially test telemetry requirements 1305 and 1306 (specifically with the statement that a miscompare is reported).,12/27/2004
ProjectB - TIM - 1700,SDN_BCS_TABLE_ENTRY_JAM: No comments/conditions exist to indicate how 2009 passes or fails verification,3,"SDN_BCS_TABLE_ENTRY_JAM: Lines 1306-1314 There are no comments as to what indicates a passing or failure of 2009 (I.e. no statement saying ""use ut_pfindicate to report 2009 as passing"" or ""failing""). The scenario wants to verify that the checksums are different and a miscompare is reported. This should indicate a passing of the requirement since the checksum is supposed to be recomputed.",12/27/2004
ProjectB - TIM - 1699,SDN_BCS_RATE_LIMIT: Discrepancy between the requirements listed in the test scenario and those in the RVTM,4,"SDN_BCS_RATE_LIMIT The test scenario indicates the testing of only 1 requirement (2008). However, the requirements verification matrix indicates both 2007 and 2008 are to be tested by this scenario. IV&V suggests fixing the discrepancy.",12/27/2004
ProjectB - TIM - 1698,SDN_BCS_RATE_LIMIT: Line 1147 contains vague information that does not appear to aid in verification,4,"SDN_BCS_RATE_LIMIT Line 1147 IV&V suggests including text to explain the variables (cmdpc and sm_cmdpc), the assignment and the reason for line 1147.",12/27/2004
ProjectB - TIM - 1697,SDN_BCS_RATE_LIMIT: Various TBDs contained in test scenario,3,"SDN_BCS_RATE_LIMIT Lines: 1181-1189 In step 3 there are various TBDs and variables (step X, req #A) that need to be resolved. These are most likely due to incomplete requirements, which are not the responsibility of the test team. However, IV&V needs to check on the reason for the TBDs to be sure.",12/27/2004
ProjectB - TIM - 1696,SDN_BCS_TABLE_SEGMENTS: No comments/conditions exist indicating when requirement 2004 passes or fails,3,"SDN_BCS_TABLE_SEGMENTS Throughout the test scenario: There are no comments/conditions as to what indicates a passing or failure of 2004 (I.e. no statement saying ""use ut_pfindicate to report 2004 as passing"" or ""failing"")",12/27/2004
ProjectB - TIM - 1695,"SDN_BCS_TABLE_SEGMENTS: Requirements 1305 & 1306 are partially tested by Step 2, but not indicated as such",4,SDN_BCS_TABLE_SEGMENTS Lines: 1072-1081 Step 2 appears to also partially test telemetry requirements 1305 and 1306 (specifically with the statement that a miscompare is reported).,12/27/2004
ProjectB - TIM - 1694,SDN_BCS_TABLE_SEGMENTS: Contains question on how functionality should be tested,4,"sdn_bcs_table_segments Line 981 IV&V suggests removing question ""How should this be tested"" for final version of test scenario",12/27/2004
ProjectB - TIM - 1693,SM Discrepancies between the Requirements Verification Matrix and test scenarios,4,There are discrepancies between the requirements listed as being verified in the matrix and those listed in the headings of the test scenarios. IV&V suggests reviewing the information to ensure that the requirements verified by the test scenario are those that are listed in the matrix.,12/22/2004
ProjectB - TIM - 1692,SDN_BSM_UNINTERRUPTIBLE_LOAD: several spellings of the same scenario,4,"SDN_BSM_UNINTERRUPTIBLE_LOAD There are multiple misspellings of ""uninterruptible"" throughout the test scenario and test verification matrix. IV&V suggests fixing these.",12/22/2004
ProjectB - TIM - 1691,SM Test Scenarios do not indicate when requirements should pass or fail,3,"SDN_BSM_DUMP_ONLY_SYSTEM TABLE SDN_BSM_LOAD_DUMP_COMMIT SDN_BSM_LOAD_DUMP_SYSTEM_TABLES SDN_BSM_RAM_SYSTEM_TABLES SDN_BSM_LOAD_DUMP_MEMORY SDN_BSM_UNINTERRUPTIBLE_LOAD SDN_BSM_MEMORY_LOAD_BAD_CHECKSUM Overall, these test scenarios do not indicate how a requirement should be passed. There are no statements indicating when a requirement passes (I.e. ut_pfindicate set to T) or fails (I.e. ut_pfindicate set to F). The general statement used is ""Use ut_pfindicate to report the requirement pass/fail status to the log file."" It is up to the test scenario to indicate the value of the requirement pass/fail status. This is missing from these test scenarios.",12/22/2004
ProjectB - TIM - 1690,SDN_BSM_MEMORY_LOAD_BAD_CHECKSUM: Requirement 1206 not verified,3,SDN_BSM_MEMORY_LOAD_BAD_CHECKSUM Line: 13 The test scenario indicates that it verifies 1206 but it does not.,12/22/2004
ProjectB - TIM - 1689,SDN_BSM_MEMORY_LOAD_BAD_CHECKSUM: Requirements 2004 & 2005 not verified.,3,"SDN_BSM_MEMORY_LOAD_BAD_CHECKSUM Lines 67-72 Requirements 2004 and 2005 are not verified by this step. Enabling the checksum does not meet the requirements that the SM Flight Software shall not perform a memory load to the RAM (or EEPROM), as specified in requirement 1202 and 1203, if the checksum, uploaded with the load data fails on-board verification.",12/22/2004
ProjectB - TIM - 1688,SDN_BSM_MEMORY_LOAD_BAD_CHECKSUM: Step 3 does not properly verify 1203 and 2000 as indicated,3,"SDN_BSM_MEMORY_LOAD_BAD_CHECKSUM Lines 58-64 Step 3 does not verify requirements 1203 and 2000 as indicated by the test scenario. However, it does partially verify 2015. In order to fully verify 2015, the scenario would also need to verify that the error counter was incremented by 1.",12/22/2004
ProjectB - TIM - 1687,SDN_BSM_MEMORY_LOAD_BAD_CHECKSUM: Requirement 2003 not verified,3,"SDN_BSM_MEMORY_LOAD_BAD_CHECKSUM Lines 46-55 Requirement 2003 is not verified since no command to dump has been given, there is no table to verify.",12/22/2004
ProjectB - TIM - 1686,SDN_BSM_MEMORY_LOAD_BAD_CHECKSUM: Requirements 1207 & 2000 are not properly verified in step 2,3,SDN_BSM_MEMORY_LOAD_BAD_CHECKSUM: Lines 39-43 Requirements 1207 and 2000 are not properly verified by step 2. The only action performed in this step is to create a file for dumping. No command is issued (as described in 1207) and no dumping takes place (as described in 2000). These requirements are not verified as the test scenario is currently written.,12/22/2004
ProjectB - TIM - 1685,Questionable interpretation for Requirements 1206 & 1207 for SM test scenarios LOAD DUMP MEMORY and UNINTERRUPTIBLE LOAD,3,"SDN_BSM_LOAD_DUMP_MEMORY Lines 42, 76, 104, 138, 166, 200 SDN_BSM_UNINTERRUPTIBLE_LOAD Lines 33, 68, 95, 130, 158, 193 IV&V questions the interpretation of the two requirements 1206 & 1207 as implemented in the test. It appears that there are two different requirements calling for memory dump from EEPROM (1206) and RAM (1207). It appears from the test scenario, that there is only one command for both of these requirements. Is that a proper interpretation of the requirement or do there need to be two different commands, one to specifically address the dump from EEPROM and one to address the dump from RAM?",12/22/2004
ProjectB - TIM - 1684,Questionable interpretation for Requirements 1208 & 1209 in LOAD DUMP MEMORY and UNINTERRUPTBILE LOAD SM scenarios,3,"SDN_BSM_LOAD_DUMP_MEMORY Lines 34, 63, 96, 125, 158, 187, 220 SDN_BSM_UNINTERRUPTIBLE_LOAD Lines 54, 88, 116, 150, 179, 213 IV&V questions the interpretation of the two requirements 1208 & 1209 as implemented in the test. It appears that there are two different requirements calling for an abort of a memory dump from EEPROM (1208) and RAM (1209). It appears from the test scenario, that there is only one command for both of these requirements. Is that a proper interpretation of the requirement or do there need to be two different commands, one to specifically address the dump abort from EEPROM and one to address the dump abort from RAM?",12/22/2004
ProjectB - TIM - 1683,SDN_BSM_RAM_SYSTEM_TABLES: Call to LOAD_DUMP_COMMIT is vague and unsupported,4,SDN_BSM_RAM_SYSTEM_TABLES Lines 53-57 There is no clear explanation as to why SDN_BSM_LOAD_DUMP_COMMIT is needed to be called from the test scenario. Further detail is required.,12/22/2004
ProjectB - TIM - 1682,SDN_BSM_RAM_SYSTEM_TABLES: Requirement 2006 only partially verified,3,"SDN_BSM_RAM_SYSTEM_TABLES Lines 34-38, 66-70 Requirement 2006 is only partially verified by the test scenario. Requirement 2006 identifies 5 commands that can terminate a table session, only one is verified in this test scenario.",12/22/2004
ProjectB - TIM - 1681,SDN_BSM_RAM_SYSTEM_TABLES: Requirement 1214 not properly verified,3,"SDN_BSM_RAM_SYSTEM_TABLES Lines 28-32, 60-64 Requirement 1214 is not properly verified. There is no indication that the scenario checks to make sure the termination of the table session does not affect other onboard versions of the table.",12/22/2004
ProjectB - TIM - 1680,"SDN_BSM_LOAD_DUMP_SYSTEM_TABLES: Steps 3, 4 & 5 are too vague as currently written to perform any proper verification",3,"SDN_BSM_LOAD_DUMP_SYSTEM_TABLES Lines 77-95 Steps 3, 4 & 5 are too vague as written to understand the use of verifying any requirements. The use of source and replace parameters is not clear, especially when referring to the SDN_BSM_RAM_SYSTEM_TABLE scenario. There is no indication in that scenario that those source and replace parameters are even used.",12/22/2004
ProjectB - TIM - 1679,SDN_BSM_LOAD_DUMP_SYSTEM_TABLES: Requirement 2006 only partially verified,3,"SDN_BSM_LOAD_DUMP_SYSTEM_TABLES Lines 70-74 Requirement 2006 is only partially verified by the test scenario. Requirement 2006 identifies 5 commands that can terminate a table session, only one is verified in this test scenario.",12/22/2004
ProjectB - TIM - 1678,SDN_BSM_LOAD_DUMP_SYSTEM_TABLES: Requirement 1214 is not properly verified,3,SDN_BSM_LOAD_DUMP_SYSTEM_TABLES Lines 65-68 Requirement 1214 is not properly verified. There is no indication that the scenario checks to make sure the termination of the table session does not affect other onboard versions of the table.,12/22/2004
ProjectB - TIM - 1677,SDN_BSM_LOAD_DUMP_SYSTEM_TABLES: Requirement 1312 not fully verified,3,"SDN_BSM_LOAD_DUMP_SYSTEM_TABLES Line 61 Requirement 1312 is only partially verified. To fully verify, the tlm needs to be checked when its value is something other than zero as well.",12/22/2004
ProjectB - TIM - 1676,SDN_BSM_LOAD_DUMP_SYSTEM_TABLES: Requirement 1311 in only partially verified,3,"SDN_BSM_LOAD_DUMP_SYSTEM_TABLES Line 55 Requirement 1311 is only partially verified. To fully verify, the tlm needs to be checked when its value is something other than zero as well.",12/22/2004
ProjectB - TIM - 1675,SDN_BSM_LOAD_DUMP_SYSTEM_TABLES: Requirement 1300 is only partially verified,3,SDN_BSM_LOAD_DUMP_SYSTEM_TABLES Line 49 Requirement 1300 is only partially verified here. The part that is verified is that the counter exists. The rest of the requirement calls for it to be incremented by one each time a command to the SM fails to execute. This part is not verified in the test scenario.,12/22/2004
ProjectB - TIM - 1674,SDN_BSM_LOAD_DUMP_SYSTEM_TABLES: Requirement 1301 only partially verified,3,SDN_BSM_LOAD_DUMP_SYSTEM_TABLES Line 43 Requirement 1301 is only partially verified here. The part that is verified is that the counter exists. The rest of the requirement calls for it to be incremented by one each time a command to the SM is successfully executed. This part is not verified in the test scenario.,12/22/2004
ProjectB - TIM - 1673,SDN_BSM_LOAD_DUMP_COMMIT: Requirement 1216 is not properly verified,3,SDN_BSM_LOAD_DUMP_COMMIT Lines 168-172 Requirement 1216 is not properly or fully verified. There is no indication that the table session has been terminated or that the table was replaced by the table in the working buffer.,12/22/2004
ProjectB - TIM - 1672,SDN_BSM_LOAD_DUMP_COMMIT: Requirement 1217 not fully verified,3,"SDN_BSM_LOAD_DUMP_COMMIT Lines 160-165 Requirement 1217 is not properly or fully verified. There are three things that must be specified and checked in order to ensure the dump table command worked as required: 1. the starting offset within the table working buffer 2. the number of words to telemeter from the table working buffer 3. the number of copies, between 1 and 8, of the data to telemeter. For item 3, this is a boundary situation where boundaries must also be tested (i.e. 0 copies and 9 copies). None of this information is properly verified by the test scenario as currently written.",12/22/2004
ProjectB - TIM - 1671,SDN_BSM_LOAD_DUMP_COMMIT: Test step in line 115-119 does not fit in test scenario,4,"SDN_BSM_LOAD_DUMP_COMMIT Lines 115-119 This Step makes no sense. Requirements 1212, 2007 and 2008 do not apply here and are not verified. Need to fix.",12/22/2004
ProjectB - TIM - 1670,SND_BSM_LOAD_DUMP_COMMIT: Requirements 1214 & 2006 are not properly verified,3,"SND_BSM_LOAD_DUMP_COMMIT Lines 71-87 Requirements 1214 and 2006 are not properly verified. For requirement 1214, the test scenario needs to verify that current table session was terminated without affecting the onboard versions of the selected table. The test scenario does not include that. For requirement 2006, it is only partially verified.",12/22/2004
ProjectB - TIM - 1669,SDN_BSM_LOAD_DUMP_COMMIT: Requirement 2018 is not addressed in test scenario but is listed as being verified,4,"SDN_BSM_LOAD_DUMP_COMMIT Lines 63-68, 107-112, 145-150 These sections of the test scenario do not fit in and need to be removed or more testing information needs to be added. Requirement 2018 is not verified at all by this test scenario. Requirement 2018 deals with the Commit Table With Word Count Command, which is not even used or addressed in the test scenario.",12/22/2004
ProjectC - TIM - 1323,"Erroneous switch statement (Build 2, File CINIT.c, Line 119)",3,"In Build 2, file CINIT.c, line 119, the switch statement has no default and will only execute the first condition based upon a constant assigned value of 0 to symbol ‘flag’. 115 flag = 0; … 119 switch (flag) { 120 case 0: ... 138 break; 139 case 1: ... 168 break; 169 case 2: ... 190 break; 191 }",3/13/07
ProjectC - TIM - 1322,Unchecked function return values,3,,3/1/07
ProjectC - TIM - 1321,"switch statement has no default (Build 2, File genport.c, Line 2574)",4,"In Build 2, file genport.c, line 2574, the switch statement has no default. This issue was found using the Flexe-Lint code analysis tool. 2574 switch (CmdReg) 2575 { 2576 case SCC1A_COMMAND_REG : ... 2581 break; 2582 case SCC1B_COMMAND_REG : ... 2584 break; 2585 case SCC2A_COMMAND_REG : ... 2587 break; 2588 case SCC2B_COMMAND_REG : ... 2590 break; 2591 }",3/1/07
ProjectC - TIM - 1320,"Variable not initialized before use (Build 2, File mu_init.c, Line 723)",3,"In Build 2, file mu_init.c, symbol 'warm_boot_signature' was not initialized before use in condition statement. This issue was found using the Flexe-Lint code analysis tool. 716 extern unsigned long warm_boot_signature; ... 723 if(warm_boot_signature != POWERUP_STRING_VAL)",1/22/07
ProjectC - TIM - 1319,"Boolean within 'if' always evaluates to True (Build 2, File schedule.c, Lines 705 and 718)",3,"In Build 2, file schedule.c, lines 705 and 718, there are identical nested if conditionals. The second will always evaluate as the first. This issue was found using the Flexe-Lint code analysis tool. 704 // If the command size is ok continue processing it 705 if( return_status == RET_OK ) 706 { ... 718 // Continue if able to get the required vbuf or no vbuf is required 719 if( return_status == RET_OK ) 720 {",1/22/07
ProjectC - TIM - 1318,"Boolean within 'if' always evaluates to True (Build 2, File schedule.c, Lines 705 and 718)",3,"In Build 2, file rd_task.c, the Boolean within 'if' always evaluates to True. This issue was found using the Flexe-Lint code analysis tool. 1432 WORD return_status = RETURN_OK; ... 1450 if ( !return_status ) 1451 {",1/22/07
ProjectC - TIM - 1317,"Possible access of out-of-bounds pointer (Build 2, File read_a2d.c, Line 194)",3,"In Build 2, file read_a2d.c, line 194, the source will access of out-of-bounds pointer. The conditional statement is uses '>=' therefore the index 'channel' may be larger than the maximum length of A2D_Lookup. This issue was found using the Flexe-Lint code analysis tool. from file mu_a2d.if: 166 extern BYTE 167 A2D_Lookup[MAX_A2D_MUX_CHANNELS]; from file read_a2d.c: 188 /* If the Channel number is greater than the maximum possible Mux Channels (32) */ 189 /* then must enable the Sub_Mux before the ADC read. */ 190 if(Channel >= MAX_A2D_MUX_CHANNELS) 191 Mu_Read_A2d(Channel, &Enable_Val); 192 193 /* Now prepare the ADC MUX */ 194 outp( Mux, A2D_Lookup[Channel] );",1/22/07
ProjectC - TIM - 1316,Thermal Testing of Components Not Done During Integration,3,"In Glory I&T Test Plan document thermal testing is not mentioned in sections 5.4.3.6 (VDE and Propulsion Integration), 5.4.3.9 (Battery Integration), 5.4.3.10 (Reaction Wheel Integration), and 5.4.3.13 (SAD and SADE Integration). Each of these systems have their own set of heaters (heater and backup heater) as noted in the Performance Specification Requirements document (detailed in sections 9.2.1.1, 9.2.1.2, 9.2.1.3, and 9.2.1.4). Additional requirements referencing the thermal needs of these components can be seen in the ADACS SRS (3.08.05), the C&DH SRS (1.04.36, and 1.04.37), and the TIM ICD (7.1.2). Although there is a final thermal test described after all components are integrated (sections 6.8 and 6.9), there is no mention in any of the independent integration procedures of testing their individual component's thermal thresholds.",1/22/07
ProjectC - TIM - 1315,Reference to Perf. Spec. Rqt 6.4.20 Is Inaccurate in DN-ProjectC-ACS-010,3,"During the review of the ACS Test Plan (DN-ProjectC-ACS-036_rev5 (1/18/07), the values being validated against in the test plan (tests cases mentioned in TIM-1314) the pitch, roll, yaw were reviewed. There is an inaccurate reference to these values on pages 5 and 11. The section states: ""Based on Glory Spacecraft Performance Spec (Reference [1]), the pointing requirement is as follows: 6.4.20 The ACS Controller Errors + Attitude Knowledge Errors (all-inclusive) shall meet the accuracy requirements per axis as specified below. The errors shall be itemized in a Glory Program Pointing Accuracy Design Note, and maintained/updated from EDC through on-orbit checkout. (5.2.14) Axis Accuracy (1sigma) - Roll 150 arc-sec - Pitch 1050 arc-sec - Yaw 450 arc-sec."" The performance specification (S919-PF3200_B(cdrl_19).pdf, 6/06/06) requirement 6.4.20 states: "" 6.4.20 The ACS Controller Errors + Attitude Knowledge Errors (all-inclusive) shall meet the accuracy requirements per axis as specified below. The errors shall be itemized in a Glory Program Pointing Accuracy Design Note, and maintained/updated from EDC through on-orbit checkout. (5.2.14) Axis Accuracy (1ó) Pitch 350 arc-sec Roll 50 arc-sec Yaw 150 arc-sec"" All numbers are different from the performance specification requirement. These values should be evaluation and reconciled.",1/22/07
ProjectC - TIM - 1314,Inconsistent Roll/Pitch/Yaw Accuracy Values in Requirements documents and Design Notes,3,"During an analysis of the ACS Test Plan (DN-ProjectC-ACS-036) it was discovered that there were inconsistent values related to Roll/Pitch/Yaw accuracy pointing throughout requirements documents (PS and SMRD) and several design note documents referencing them. Here are the various documents: ACS Test plan (DN-ProjectC-ACS-036, dated 1/23/07) contains many test cases with the following Pass/Fail criteria: ""Verify that the 3-sigma attitude errors are within 150 asec in X, 1050 asec in Y, and 350 asec in Z."" The list of test cases are as follows: 5.2.1, 5.2.2, 5.2.4, 5.2.5, 5.2.6, 5.2.10, 5.2.11, 5.2.12, 5.2.13, 5.2.14, 5.2.15, 5.2.15, 5.2.16, 5.2.17, 5.2.18, 5.2.19, 5.2.20, 5.2.21, 5.2.22, 5.2.23, 5.2.24, 5.2.25, 5.9.1, 5.9.2, 5.9.3 The pitch/roll/yaw values are being validated in the above test cases against differing roll/pitch/yaw values from the performance specification requirement referenced. DN-Glory-ACS-001 Rev B(ptg bdgt), last updated 8/03/05, references requirement 5.2.14 (SMRD rqt) for the Roll/Pitch/Yaw accuracy on pages 3 and 4. It associates the following pointing accuracy (3-sigma accuracy) values to SMRD rqt 5.2.14: Roll: 150 asec Pitch: 1050 asec Yaw: 450 asec DN-Glory-ACS-010, last updated 1/18/07, references PS requirement 6.4.20 for the Roll/Pitch/Yaw accuracy on pages 5, and 11. It associates the following pointing accuracy (3-sigma accuracy) values to PS requirement 6.4.20: Roll: 150 asec Pitch: 1050 asec Yaw: 450 asec PS (document S919 PF3200 B cdrl 019, dated 6/06/06) requirement 6.4.20 has the following accuracy (1-sigma accuracy) requirements: Roll: 50 asec Pitch: 350 asec Yaw: 150 asec SMRD (revision B, dated April 18, 2005) requirement 5.2.14 has the following accuracy requirements (1 sigma accuracy): Roll: 50 asec Pitch: 350 asec Yaw: 150 asec",1/22/07
ProjectC - TIM - 1313,Wording Differs in Traced Rqt to MU FSW 2.2.6.3 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 2.2.6.3 states: ""Reject Hazardous comands if no Enable"" 2.2.6.3 traces to Glory Spacecraft to TIM System ICD requirement 8.3. The wording of the items listed in this requirement differs enough that a second evaluation of this trace should be done.",1/22/07
ProjectC - TIM - 1312,Wording Differs in Traced Rqt to MU FSW 2.2.6.2 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 2.2.6.2 states: ""Enable is disabled on next command"" 2.2.6.2 traces to Glory Spacecraft to TIM System ICD requirement 8.3. The wording of the items listed in this requirement differs enough that a second evaluation of this trace should be done.",1/22/07
ProjectC - TIM - 1311,Wording Differs in Traced Rqt to MU FSW 2.2.6.1 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 2.2.6.1 states: ""Accept Hazardous commands on valid opcode AND immediately preceding Enable command"" 2.2.6.1 traces to Glory Spacecraft to TIM System ICD requirement 8.3. The wording of the items listed in this requirement differs enough that a second evaluation of this trace should be done.",1/22/07
ProjectC - TIM - 1310,Wording Differs in Traced Rqt to MU FSW 2.2.6 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 2.2.6 states: "" The MU shall require enables for Hazardous Commands as follows"" 2.2.6 traces to Glory Spacecraft to TIM System ICD requirement 8.3. The wording of the items listed in this requirement differs enough that a second evaluation of this trace should be done.",1/22/07
ProjectC - TIM - 1309,Incomplete Trace for SOC 3.7.1 of TIM Rqts Traceability Matrix document,4,"SOC Section 3.7.1 states: ""All software, calibration data, science data products, and other information shall be maintained under strict configuration control."" 3.7.1 is traced to ""Derived"". If possible this should be traced to a specific requirement.",1/22/07
ProjectC - TIM - 1308,Incomplete Trace for TIM 3.6 of TIM Rqts Traceability Matrix document,4,"TIM Section 3.6 of TIM Rqts Traceability Matrix document states: ""Time Sync mode code."" 3.6 is traced to ""Derived"". If possible, this should be traced to a specific requirement.",1/22/07
ProjectC - TIM - 1307,Incomplete Trace for MU FSW 1.3.1.4 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 1.3.1.4 of TIM Rqts Traceability Matrix document states: ""Power-down warning message."" 1.3.1.4 is traced to Comm ICD. If possible, this should be traced to a specific requirement.",1/22/07
ProjectC - TIM - 1306,Incomplete Trace for MU FSW 1.3.1.3 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 1.3.1.3 of TIM Rqts Traceability Matrix document states: ""Time Message."" 1.3.1.3 is traced to Comm ICD. If possible, this should be traced to a specific requirement.",1/22/07
ProjectC - TIM - 1305,Incomplete Trace for MU FSW 1.3.1.2 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 1.3.1.2 of TIM Rqts Traceability Matrix document states: ""ACS Status Message."" 1.3.1.2 is traced to Comm ICD. If possible, this should be traced to a specific requirement.",1/22/07
ProjectC - TIM - 1304,Incomplete Trace for MU FSW 1.3.1.1 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 1.3.1.1 of TIM Rqts Traceability Matrix document states: ""Time Sync mode code."" 1.3.1.1 is traced to Comm ICD. If possible, this should be traced to a specific requirement.",1/22/07
ProjectC - TIM - 1303,Incorrect Trace for MU FSW 7.2.2 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 7.2.2 states: ""The TIM shall remain in safing mode, once initiated by the spacecraft, until receipt of specific commands from the spacecraft to transition to another mode."" The trace to MU FSW Section 7.2.2 is listed as traced to SMRD 5.4.13. This requirement does not appear to be a valid trace. Provide a valid requirement trace.",1/22/07
ProjectC - TIM - 1302,Incorrect Trace for MU FSW 7.2 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 7.2 states: ""After safing mode has been commanded by the spacecraft, the MU shall maintain the power-down-safe configuration until commanded to another mode by the spacecraft."" The trace to MU FSW Section 7.2 is listed as traced to SMRD 5.4.15. This requirement does not appear to be a valid trace. Provide a valid requirement trace.",1/22/07
ProjectC - TIM - 1301,Incorrect Trace for MU FSW 7.2.1 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 7.2.1 states: ""TIM operational modes shall not inhibit the safing command from the spacecraft to place it into safing mode."" The trace to MU FSW Section 7.2.1 is listed as traced to SMRD 5.4.12. This requirement does not appear to be the correct trace. Provide a valid requirement trace.",1/22/07
ProjectC - TIM - 1300,Incomplete Trace for MU FSW 3.1.15 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.1.15 of TIM Rqts Traceability Matrix document states: ""Instrument science telemetry time stamp error shall be less than or equal to 0.1 seconds, with respect to the current spacecraft clock."" 3.1.15 is traced to ""Derived"". If possible, this should be traced to a specific requirement.",1/22/07
ProjectC - TIM - 1299,Incomplete Trace for MU FSW 3.1.7 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.1.7 of TIM Rqts Traceability Matrix document states: ""The MU shall ensure that timetags are synchronized with S/C time to 0.1 sec or better."" 3.1.7 is traced to ""Derived"". If possible, this should be traced to a specific requirement.",1/22/07
ProjectC - TIM - 1298,Incomplete Trace for TPS Control 1.2 of TIM Rqts Traceability Matrix document,4,"TPS Control Section 1.2 of TIM Rqts Traceability Matrix document states: ""The TPS shall support an INERTIAL TARGETING MODE using joint feedback and knowledge of the spacecraft attitude and position state to point the platform at a given inertial target."" 1.2 is traced to SMRD requirement 5.4.6. This requirement states: ""The TIM instrument assembly shall be capable of performing instrument calibration maneuvers independent of the spacecraft attitude while the satellite is nadir pointing and in Normal Operations Mode."" An additional requirement trace should be provided since no mention of INERTIAL TARGETING MODE was made in the SMRD trace provided. Please provide additional requirement traces.",1/22/07
ProjectC - TIM - 1297,Incomplete Trace for TPS Control 1.1 of TIM Rqts Traceability Matrix document,4,"TPS Control Section 1.1 of TIM Rqts Traceability Matrix document states: ""The TPS shall support a SOLAR AUTO-TRACKING MODE using the FSS to close the loop on the control law."" 1.1 is traced to SMRD requirement 5.4.6. This requirement states: ""The TIM instrument assembly shall be capable of performing instrument calibration maneuvers independent of the spacecraft attitude while the satellite is nadir pointing and in Normal Operations Mode."" An additional requirement trace should be provided since no mention of SOLAR AUTO-TRACKING MODE was made in the SMRD trace provided. Please provide additional requirement traces.",1/22/07
ProjectC - TIM - 1296,Incorrect Trace for Mechanical 5.2 of TIM Rqts Traceability Matrix document,4,"Mechanical Section 5.2 states: ""Component mass shall(2) be measured to an accuracy of ± 0.05 kg (± 0.11 lb)."" The trace to Mechanical Section 5.2 is listed as traced to SMRD 3.9.1. This requirement does not exist in the SMRD. This trace appears to be incorrect. Provide a valid requirement trace.",1/22/07
ProjectC - TIM - 1295,Incorrect Trace for Mechanical 5.5 of TIM Rqts Traceability Matrix document,4,"Mechanical Section 5.5 states: ""A measurement of the TIM mass with the TIM in it’s launch configuration(with TIM panel) shall(5) be performed prior to shipment of the TIM System to Orbital for integration and reported in the TIM Final Test Report."" The trace to Mechanical Section 5.5 is listed as traced to SMRD 3.9.1. This requirement does not exist in the SMRD. This trace appears to be incorrect. Provide a valid requirement trace.",1/22/07
ProjectC - TIM - 1294,Incorrect Trace for Mechanical 5.4 of TIM Rqts Traceability Matrix document,4,"Mechanical Section 5.4 states: ""The TIM mass shall(4) be based on margined mass."" The trace to Mechanical Section 5.4 is listed as traced to SMRD 3.9.1. This requirement does not exist in the SMRD. This trace appears to be incorrect. Provide a valid requirement trace.",1/19/07
ProjectC - TIM - 1293,Incorrect Trace for Mechanical 5.3 of TIM Rqts Traceability Matrix document,4,"Mechanical Section 5.3 states: ""The mass of the TIM System shall(3) include all hardware reflected in the MICD."" The trace to Mechanical Section 5.3 is listed as traced to SMRD 3.9.1. This requirement does not exist in the SMRD. This trace appears to be incorrect. Provide a valid requirement trace.",1/19/07
ProjectC - TIM - 1292,Incorrect Trace for TIM 5.1 of TIM Rqts Traceability Matrix document,4,"TIM Section 5.1 states: ""quad radiometer internal baffle shall block incident light at >20 degree half cone angle."" The trace to TIM Section 5.1 is listed as traced to ""Derived, SMRD 3.3.2"". There is no requirement 3.3.2 in the SMRD. This trace appears to be incorrect. Provide a valid requirement trace.",1/19/07
ProjectC - TIM - 1291,Standard not found referenced in Mechanical 1.11.2 of Tim Rqts Traceability Matrix document,4,"Mechanical Section 1.11.2 states: ""TIM-Glory shall be tested to MIL-STD-461E listed in table"". It is traced to ICD 10. STD-461E could not be found anywhere in the Spacecraft to TIM System ICD (although reference to STD-461C and STD-461D was found). Review Mechanical Section 1.11.2 to verify the standard reference is what was intended.",1/19/07
ProjectC - TIM - 1290,Incomplete Trace for Mechanical 2.8 of TIM Rqts Traceability Matrix document,4,"Mechanical Section 2.8 states: ""Minimum TIM glint free TPS sun tracking duration shall be 40 minutes."" If possible, this should be traced to a requirement.",1/19/07
ProjectC - TIM - 1289,Missing Trace for Mechanical 2.6.2 of TIM Rqts Traceability Matrix document,4,"Mechanical Section 2.6.2 of TIM Rqts Traceability Matrix document states: ""Unobstructed Fields of View."" If possible, this should be traced to a specific requirement.",1/19/07
ProjectC - TIM - 1288,Incomplete Trace for MU FSW 3.0.3 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.0.3 states: ""The MU shall be able to dump memory contents in telemetry."" Trace to 3.0.3 is noted as ""Derived"". A valid trace that includes detail about memory contents in telemetry should be provided if possible.",1/19/07
ProjectC - TIM - 1287,Incomplete Trace for MU FSW 3.1.0 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.1.0 of TIM Rqts Traceability Matrix document states: ""The MU shall timestamp instrument science telemetry to within 100 msec of the spacecraft clock."" 3.1.0 is traced to ""Derived"". If possible, this should be traced to a specific requirement.",1/19/07
ProjectC - TIM - 1286,Incomplete Trace for MU FSW 3.1.12 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.1.12 of TIM Rqts Traceability Matrix document states: ""The MU shall set telemetry flags to inform the S/C that telemetry is available."" 3.1.12 is traced to Comm ICD. If possible, this should be traced to a specific requirement.",1/19/07
ProjectC - TIM - 1285,Incomplete Trace for MU FSW 3.1.14 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.1.14 of TIM Rqts Traceability Matrix document states: ""The MU shall sychronize the microprocessor clock with that of the bus."" 3.1.14 is traced to Comm ICD. If possible, this should be traced to a specific requirement.",1/19/07
ProjectC - TIM - 1284,Incomplete Trace for MU FSW 3.1.10 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.1.10 of TIM Rqts Traceability Matrix document states: ""The MU shall ensure that all telemetry packets are an even number of bytes."" 3.1.10 is traced to Comm ICD. If possible, this should be traced to a specific requirement.",1/19/07
ProjectC - TIM - 1283,Incomplete Trace for MU FSW 3.1.5 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.1.5 of TIM Rqts Traceability Matrix document states: ""The MU shall maintain sequence counters for each APID and insert the value of the appropriate counter in the CCSDS header of each packet."" 3.1.5 is traced to Comm ICD. If possible, this should be traced to a specific requirement.",1/19/07
ProjectC - TIM - 1282,Incomplete Trace for MU FSW 3.1.9 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.1.9 of TIM Rqts Traceability Matrix document states: ""The MU shall create variable length packets as required, with a maximum total packet length of 1024 bytes"" 3.1.9 is traced to Comm ICD. If possible, this should be traced to a specific requirement.",1/19/07
ProjectC - TIM - 1281,Incomplete Trace for MU FSW 3.1.6 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.1.6 of TIM Rqts Traceability Matrix document states: ""The MU shall timetag packets using the secondary header."" 3.1.6 is traced to Comm ICD. If possible, this should be traced to a specific requirement.",1/19/07
ProjectC - TIM - 1280,Incomplete Trace for MU FSW 4.1 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 4.1 of TIM Rqts Traceability Matrix document states: ""The MU shall maintain a copy of spacecraft time, resynchronized once per second."" 4.1 is traced to Comm ICD. If possible, this should be traced to a specific requirement.",1/19/07
ProjectC - TIM - 1279,Incorrect Wording in MU FSW 2.1.3 in the TIM Rqts Traceability Matrix Document,4,"MU FSW Section 2.1.3 states: ""The MU shall interpret CCSDS packets formatted per CCSDS 203.0-B-1."" Glory Spacecraft to Instrument Communications ICD requirement 3.2.5.2 states: ""The instrument’s shall(1) support the telecommand version-1 source packet structure as defined in CCSDS 203.0-B-2, Telecommand Part 3 Data Management Service, and using the values defined in each instrument’s Telecommand Source Packet Definition, and as specified herein."" MU FSW Section 2.1.3 standards reference needs to be changed.",1/19/07
ProjectC - TIM - 1278,Incorrect Trace for Electrical 1.10.5 of TIM Rqts Traceability Matrix document,4,"Electrical Section 1.10.5 states: ""Connectors requiring launch site service shall have flight captive covers."" The trace to Electrical Section 1.10.5 is listed as traced to ICD 9.8. This requirement does not mention flight captive covers. This trace appears to be incorrect. Provide a valid requirement trace.",1/19/07
ProjectC - TIM - 1277,Incorrect Trace for Electrical 1.10.4 of TIM Rqts Traceability Matrix document,4,"Electrical Section 1.10.4 states: ""Connector’s Normal Key position shall be oriented toward TIM Panel S/C outside edge."" The trace to Electrical Section 1.10.4 is listed as traced to ICD 9.8. This requirement does not mention connector position or orientation. This trace appears to be incorrect. Provide a valid requirement trace.",1/19/07
ProjectC - TIM - 1276,Units Differ for Mechanical 2.13.2 of TIM Rqts Traceability Matrix document and TIM ICD,4,"The units differ between the Trace document and the TIM ICD. Mechanical Section 2.13.2 states: ""Non-EMI sensitive components shall be grounded to <1Ù."" Mechanical Section 2.13.2 is traced to TIM ICD 9.7.4. TIM ICD 9.7.4 states: ""For non-EMI sensitive hardware, the chassis-to-structure bond shall(6) also comply with MIL-STD-464A. Interfaces between all isolated conducting items (except antenna) which are external to the vehicle and have any linear dimension greater than 3 inches, or otherwise are subject to frictional charging, shall(7) have secure connections to the vehicle structure. The resistance of the connection shall(8) be less than 1 ."" The trace document appears to be correct regarding units (displaying the ohms character in the 1 Ù value), in which case the Glory Spacecraft to TIM System ICD requirement 9.7.4 needs corrected.",1/19/07
ProjectC - TIM - 1275,Units Differ for Mechanical 2.13.1 of TIM Rqts Traceability Matrix document and TIM ICD,4,"The units differ between the Trace document and the TIM ICD. Mechanical Section 2.13.1 states: ""The Electromagnetic susceptible or generating components shall be grounded to <10mÙ."" Mechanical Section 2.13.1 is traced to TIM ICD 9.7.4. TIM ICD 9.7.4 states: ""For electrical components that generate or are susceptible to electromagnetic energy, the chassis-tostructure bond shall(4) comply with MIL-STD-464A, with a maximum DC resistance of 10 m across the mated surface. The trace document appears to be correct regarding units (displaying the ohms character in the 10mÙ value), in which case the Glory Spacecraft to TIM System ICD requirement 9.7.4 needs corrected. Not specifying traced requirements could lead to an incomplete verification/development effort for the TIM interface. Recommend tracing MU FSW Section 2.0.5 to Glory Spacecraft to TIM System ICD requirement 3.3.1.1. This requirement states: ""The instruments shall(2) employ a unique subaddress (SA) for each command channel. Command channels are supported and will accommodate commands, memory loads, and status packets to the instruments.""",1/19/07
ProjectC - TIM - 1274,Incomplete Trace to Electrical 1.10.2 of TIM Rqts Traceability Matrix document,4,"Electrical Section 1.10.2 states: ""The Red flexible coupling shall hold protective covers to component."" The trace to Electrical Section 1.10.2 is listed as traced to ICD 9.8. The requirement section does not indicate the red flexible nature of the protective covers.",1/19/07
ProjectC - TIM - 1273,Incomplete Trace for TPS FSW 3.2.4 of TIM Rqts Traceability Matrix document,4,"TPS FSW Section 3.2.4 states: ""The TPS task shall accept a command to decimate FSS offset data."" Trace to 3.2.4 is noted as Derived ICD 3.2.5, TPS 1.5. Reference to FSS offset data could not be found in the Glory Spacecraft to TIM System ICD. Additionally requirement 3.2.5 does not exist in the TIM ICD document. Not having the TPS requirements document, the trace is at least incomplete (with an invalid ICD requirement listed). A valid trace that includes detail about FSS offset data is needed.",1/19/07
ProjectC - TIM - 1272,Incomplete Trace for TPS FSW 3.2.3 of TIM Rqts Traceability Matrix document,4,"TPS FSW Section 3.2.3 states: ""The TPS task shall accept a command to decimate potentiometer position data."" Trace to 3.2.3 is noted as Derived ICD 3.2.5, TPS 1.5. Reference to potentiometer position could not be found in the Glory Spacecraft to TIM System ICD. Additionally requirement 3.2.5 does not exist in the TIM ICD document. Not having the TPS requirements document, the trace is at least incomplete (with an invalid ICD requirement listed). A valid trace that includes detail about potentiometer positioning is needed.",1/19/07
ProjectC - TIM - 1271,Incorrect Trace for MU FSW 9.3 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 9.3 states: ""TIM shall be held in the safe configuration during a ram angle violation. Upon exiting the ram angle violation, TIM shall return to it's previous configuration"" Trace to 9.3 is noted as Operations Concept Document. The ram angle violation was not referred to in the Operations Concept Document (or other Glory ICD documents). A valid trace that includes detail about ram angle violation is needed.",1/19/07
ProjectC - TIM - 1270,Incorrect Trace for MU FSW 9.2 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 9.2 states: ""The instrument (ram) safe configuration shall consist of all cone shutters held in the closed position."" Trace to 9.2 is noted as Ops Concept document. A cone shutters were not referred to in the Glory Operations Concept document, or any other Glory ICD document. A valid trace that includes detail about cone shutters is needed.",1/19/07
ProjectC - TIM - 1269,Incorrect Trace to MU FSW 9.14 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 9.14 states: ""An instrument GCI housekeeping telemetry packet shall be time stamped within 1.0 seconds of receipt of the PCIIO telemetry ready interrupt."" Trace to 9.14 is noted as ""3.1.16"". There is no requirement number in the Glory Spacecraft to Instrument Communications ICD (or the Glory Spacecraft to TIM System ICD). Additionally there is no mention of PCIIO telemetry ready interrupt. A valid trace that includes detail about PCIIO telemetry ready interrupts is needed.",1/19/07
ProjectC - TIM - 1268,Incorrect Trace for MU FSW 7.1.4 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 7.1.4 states: ""Upon detection of a ""red"" telemetry item for more than N telemetry cycles, where N is configurable, the MU shall cancel all active operations and sequences and place the TIM and TPS in a power-down-safe configuration"" Trace to 7.1.4 is noted as Comm ICD. There was no reference to ""red"" telemetry in the Glory Spacecraft to Instrument Communications ICD. A valid trace that includes detail about MU ADC subsystem is needed.",1/19/07
ProjectC - TIM - 1267,Incorrect Trace for MU FSW 4.3 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 4.3 states: ""The MU shall packetize ADC data in housekeeping telemetry packets"" Trace to 4.3 is noted as Comm ICD. The packetized ADC data was not referred to in the Glory Spacecraft to Instrument Communications ICD (or the Glory Spacecraft to TIM System ICD). A valid trace that includes detail about packetized ADC data is needed.",1/19/07
ProjectC - TIM - 1266,Incorrect Trace for MU FSW 4.2 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 4.2 states: ""The The MU shall sequence the MU ADC subsystem to acquire housekeeping data"" Trace to 4.2 is noted as Comm ICD. The MU ADC subsystem was not referred to in the Glory Spacecraft to Instrument Communications ICD (or the Glory Spacecraft to TIM System ICD). A valid trace that includes detail about MU ADC subsystem is needed.",1/19/07
ProjectC - TIM - 1265,Incorrect Trace for MU FSW 3.1.13 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.1.13 states: ""The MU shall set the telemetry flags at a time when the S/C is not accessing the flags"" Trace to 3.1.13 is noted as Comm ICD. Telemetry flags were not referred to in the Glory Spacecraft to Instrument Communications ICD (or the Glory Spacecraft to TIM System ICD). A valid trace that includes detail about telemetry flags is needed.",1/19/07
ProjectC - TIM - 1264,Incorrect Trace for MU FSW 3.1.11 of TIM Rqts Traceability Matrix document,4,"MU FSW 3.1.11 states: ""The MU shall load telemetry packets in telemetry buffers when S/C is not accessing those buffers"" Trace to 3.1.11 is noted as Comm ICD. A reference to the access to the telemetry buffers could not be found in the Glory Spacecraft to Instrument Communications ICD. A valid trace that includes detail about rate is needed.",1/19/07
ProjectC - TIM - 1263,Incorrect Trace for MU FSW 3.1.3 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.1.3 states: ""The telemetry buffer size shall be large enough for at least 32 telemetry packets"" Trace to 3.1.3 is noted as Comm ICD. A specific number of telemetry packets was not referred to in the Glory Spacecraft to Instrument Communications ICD. A valid trace that includes detail about a specific number of telemetry packets is needed.",1/19/07
ProjectC - TIM - 1262,Incorrect Trace for MU FSW 3.1.1 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 3.1.1 states: ""The MU shall make telemetry available for collection by the spacecraft at a maximum rate of 2 packets per second"" Trace to 3.1.1 is noted as Comm ICD. Rate was not referred to in the Glory Spacecraft to Instrument Communications ICD. A valid trace that includes detail about rate is needed.",1/19/07
ProjectC - TIM - 1261,Partial Trace for MU FSW 3.1.2 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 2.1.2 states: ""The MU shall maintain a telemetry buffer so that when telemetry packets are generated at instantaneous rates higher than 2 packets per second no packets are lost as long as the average packet rate is less than or equal to 2 packets per second"" Trace to 3.1.2 is noted as Comm ICD. A requirement in this document could not be found that adequately addressed this trace. An additional trace that includes detail about command receipt rate is needed.",1/19/07
ProjectC - TIM - 1260,Partial Trace for MU FSW 2.1.2 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 2.1.2 states: ""The MU shall receive command packets at rates up to 2 packets/sec."" Trace to 2.1.2 is noted as Comm ICD 3.3.1.1. This requirement does not specify a rate. An additional trace that includes detail about command receipt rate is needed.",1/19/07
ProjectC - TIM - 1259,Incorrect Trace for MU FSW 7.1.3 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 7.1.3 states: ""Upon instrument-detected on-orbit failure, the MU shall cancel all active operations and sequences and place the TIM and TPS in a power-downsafe configuration"" Trace to 7.1.3 is noted as Comm ICD. This item was unable to be found in either the Glory Spacecraft to Instrument Communications ICD and Glory Spacecraft to TIM System ICD. A valid trace should be provided.",1/19/07
ProjectC - TIM - 1258,IncorrectTrace for MU FSW 7.1.2 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 7.1.2 states: ""Upon loss of N consecutive TOD 1553 messages or M consecutive 1PPS pulse, where N and M are configurable, the MU shall cancel all active operations and sequences and place the TIM and TPS in a powerdown-safe configuration"" Trace to 7.1.2 is noted as Comm ICD. This item was unable to be found in either the Glory Spacecraft to Instrument Communications ICD and Glory Spacecraft to TIM System ICD. A valid trace should be provided.",1/19/07
ProjectC - TIM - 1257,Incorrect Trace to Thermal 1.4 of TIM Rqts Traceability Matrix document,4,"Thermal Section 1.4 states: ""Heat sink shall maintain the quad radiometer at 26±1 C"" "". Thermal Section 1.4 is traced to ""TIM 2.3"". This trace could not be verified. In the Glory Spacecraft to TIM System ICD document does not have a requirement 2.3. The Glory Spacecraft to Instrument Communications ICD had a 2.3 requirement, however it did not apply to radiometers. There needs to be a valid trace provided.",1/19/07
ProjectC - TIM - 1256,Incomplete Trace for MU FSW 2.0.5 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 2.0.5 states: ""The MU shall accept immediate memory loads."" The trace to MU FSW Section 2.0.5 is listed as traced to ""Derived"". If possible, a specific requirement should be indicated (see Corrective action).",1/19/07
ProjectC - TIM - 1255,Partial Trace for TPS Control 1.7 of TIM Rqts Traceability Matrix document,4,"TPS Control Section 1.7 of TIM Rqts Traceability Matrix document states: ""The TPS shall be capable of minimum platform SLEW RATES in both axes of 20 deg/min. "" 1.7 is traced to SMRD requirement 5.4.7. This requirement states: ""The TIM instrument assembly shall be capable of performing dark space calibrations."" This trace does apply, but it does not specify the deg/min stated in the TIM Rqts Traceability Matrix section. Another trace is needed to completely cover TPS Control Section 1.7.",1/19/07
ProjectC - TIM - 1254,Incorrect Trace for MU FSW Section 1.3.0 of TIM Rqts Traceability Matrix document,4,"MU FSW Section 1.3.0 states: ""The MU shall establish and maintain communications with the S/C bus"" In the Tim Rqts Traceability Matrix document it is traced to SMRD requirement 3.6.2. There is no requirement 3.6.2 in the SMRD requirements document. A valid trace is needed.",1/18/07
ProjectC - TIM - 1253,Incorrect Trace for Electrical 2.2.4 of TIM Rqts Traceability Matrix document,4,"Electrical Section 2.2.4 of TIM Rqts Traceability Matrix document states: ""The total combined maximum power shall be 17 Watts EOL."" 2.2.4 is traced to Glory Spacecraft to TIM System ICD requirement 9.2.3. This requirement does not involve survival heaters. Recommend tracing to TIM ICD requirement 9.2.4. Glory Spacecraft to TIM System ICD requirement 9.2.4 states: ""TIM System survival power shall(1) not exceed 17W Orbit Average Power EOL at worst-case low bus voltage for each circuit. This power covers all of the heater power required to maintain the TIM System at or above the non-operational survival temperature when the spacecraft is either in the LEOP portion of the mission, in Safe Mode, or performing an orbit correction maneuver.""",1/18/07
ProjectC - TIM - 1252,Incorrect Trace for Electrical 2.2.3 of TIM Rqts Traceability Matrix document,4,"Electrical Section 2.2.3 of TIM Rqts Traceability Matrix document states: ""Only resistive heating devices shall be used."" 2.2.3 is traced to Glory Spacecraft to TIM System ICD requirement 9.2.3. This requirement does not involve survival heaters. Recommend tracing to TIM ICD requirement 9.2.4. Glory Spacecraft to TIM System ICD requirement 9.2.4 states: ""Survival power shall(3) be used within the TIM System only for resistive heaters (and associated thermal control device) which maintain the instrument at minimum turn-on temperature when the main power busis disconnected from the instrument.""",1/18/07
ProjectC - TIM - 1251,Incorrect Trace for Electrical 2.2.2 of TIM Rqts Traceability Matrix document,4,"Electrical Section 2.2.2 of TIM Rqts Traceability Matrix document states: ""Each system shall use serial redundant thermal controls."" 2.2.2 is traced to Glory Spacecraft to TIM System ICD requirement 9.2.3. This requirement does not involve survival heaters. Recommend tracing to TIM ICD requirement 9.2.4. Glory Spacecraft to TIM System ICD requirement 9.2.4 states: ""The design shall(5) also preclude under nominal survival conditions that only one circuit is active. Survival heater power buses shall(6) be electrically isolated from each other, from other instrument thermal control, from chassis, and have independent power returns.""",1/18/07
ProjectC - TIM - 1250,Incorrect Trace for Electrical 2.2.1 of TIM Rqts Traceability Matrix document,4,"Electrical Section 2.2.1 of TIM Rqts Traceability Matrix document states: ""The suvival heaters shall employ duplicate primary & secondary System."" 2.2.1 is traced to Glory Spacecraft to TIM System ICD requirement 9.2.3. This requirement does not involve survival heaters. Recommend tracing to TIM ICD requirement 9.2.4. Glory Spacecraft to TIM System ICD requirement 9.2.4 states: ""TIM System design shall(4) be such that having both primary and redundant survival heater circuits enabled does not violate any thermal or power requirement.""",1/18/07
ProjectC - TIM - 1249,Incorrect Trace for Electrical Section 3.13 of TIM Rqts Traceability Matrix document,4,"Electrical Section 3.13 of TIM Rqts Traceability Matrix document states: ""The TIM electrical interface connections are defined in Appendix B. LASP shall provide the harness mating connectors to Orbital for use in the spacecraft harness. These parts shall be space-flight qualified."" 3.13 is traced to Glory Spacecraft to TIM System ICD requirement 9.8.6. There is no requirement 9.8.6 in the TIM ICD document. Recommend tracing to TIM ICD requirement 9.8.5. Glory Spacecraft to TIM System ICD requirement 9.8.5 states: ""LASP shall(1) provide to Orbital the harness mating connectors with crimp connections for use in the spacecraft harness. These parts shall(2) be space-flight qualified. The TIM System electrical interface connections are defined in Section 15.""",1/18/07
ProjectC - TIM - 1248,Incorrect Trace for Mechanical Section 2.12 of TIM Rqts Traceability Matrix document,4,"Mechanical Section 2.12 of TIM Rqts Traceability Matrix document states: ""The TPS shall be capable of minimum platform SLEW RATES in both axes of 20 deg/min."" 2.12 is traced to Glory Spacecraft to TIM System ICD requirement 3.3.4.7. There is no requirement 3.3.4.7 in the ICD document. Recommend tracing to TIM ICD requirement 3.3.4.6. Glory Spacecraft to TIM System ICD requirement 3.3.4.6 states: ""The material and finish of the TIM System components shall(1) be compatible with the aluminum finish of the TIM panel. The aluminum finish will include a chemical conversion protective coating per MIL-C-5541, class 3.""",1/18/07
ProjectC - TIM - 1247,Incorrect Wording for Electrical Section 1.2.2 of TIM Rqts Traceability Matrix document,5,"TIM Rqts Traceability Matrix Electrical Section 1.2.2 states: ""Peak is less than 2 Amps for 2 Amp relay"" This is traced to TIM ICD requirement 9.1.5 which states: ""..., and 2 Amps for a 2 Amp FET."" The wording of the TIM Rqts Traceability Matrix Electrical section 1.2.2 should be the same as the TIM ICD requirement. Replace ""relay"" with ""FET"" in TIM Rqts Traceability Matrix Electrical Section 1.2.2",1/18/07
ProjectC - TIM - 1246,Incorrect Wording for Electrical Section 1.2.1 of TIM Rqts Traceability Matrix document,5,"TIM Rqts Traceability Matrix Electrical Section 1.2.1 states: ""Peak is less than 5 Amps for 5 Amp FET"" This is traced to TIM ICD requirement 9.1.5 which states: ""...its peak no greater than 5 Amps for a 5 Amp relay..."" The wording of the TIM Rqts Traceability Matrix Electrical section 1.2.1 should be the same as the TIM ICD requirement.",1/18/07
ProjectC - TIM - 1245,Incorrect Trace for MU FSW Section 1.2.0 of TIM Rqts Traceability Matrix document,3,"MU FSW Section 1.2.0 of the TIM Rqts Traceability Matrix document states: ""The MU shall communicate with the S/C bus via a 1553 bus"" is traced to SMRD requirement 4.2.1. SMRD requirement 4.2.1 states: ""The Glory satellite shall achieve a sun-synchronous, circular orbit inclined 98.7 degrees ±0.15 degrees (1ó) with a target altitude of 824 km ±30 km (3ó)."" There is no mention of the 1553 bus in the SMRD requirement.",1/18/07
ProjectC - TIM - 1244,Incorrect Trace for Electrical Section 1.2.3 of TIM Rqts Traceability Matrix document,3,"Electrical Section 1.2.3 of the TIM Rqts Traceability Matrix document states: ""Duration less than 10 ìs"" is traced to TIM ICD requirement 9.1.5. There is no mention of 10 ìs in TIM ICD requirement 9.1.5.",12/13/06
ProjectC - TIM - 1243,Incorrect text shown in Mechanical Section 4.7 in the TIM Rqts Traceability Matrix document,5,"Mechanical Section 4.7 states: ""Specialized hardware shall(8) not require removal of the TIM System or other instruments (APS, Cloud Cameras, etc) depicted in Figure 3.1.1-2."" The Spacecraft to TIM System ICD requirement 3.3.4.4 to which this section is traced states: ""Specialized hardware shall(9) not require removal of the TIM System or other instruments (APS, Cloud Cameras, etc) depicted in Figure 3.1.1-2."" The paragraph reference in Mechanical section 4.7 of the TIM Rqts Traceability Matrix document should be changed from (8) to (9).",11/13/06
ProjectC - TIM - 1242,Incorrect text shown in Mechanical Section 4.6 in the TIM Rqts Traceability Matrix document,5,"Mechanical Section 4.6 states: ""Specialized hardware of this sort shall(7) not require mounting provisions outside of the TIM System."" The Spacecraft to TIM System ICD requirement 3.3.4.4 to which this section is traced states: ""Specialized hardware of this sort shall(8) not require mounting provisions outside of the TIM System."" The paragraph reference in Mechanical section 4.6 of the TIM Rqts Traceability Matrix document should be changed from (7) to (8).",11/13/06
ProjectC - TIM - 1241,Incorrect text shown in Mechanical Section 4.5 in the TIM Rqts Traceability Matrix document,5,"Mechanical Section 4.5 states: ""LASP shall(6) furnish all specialized equipment for aligning or verifying pointing between internal TIM components and the TIM alignment cube."" The Spacecraft to TIM System ICD requirement 3.3.4.4 to which this section is traced states: ""LASP shall(7) furnish all specialized equipment for aligning or verifying pointing between internal TIM components and the TIM Optical Cube."" The paragraph reference in Mechanical section 4.5 of the TIM Rqts Traceability Matrix document should be changed from (6) to (7).",11/13/06
ProjectC - TIM - 1240,Incorrect Table listed in TIM Rqts Traceability Matrix Document,5,"The following Sections (in the MU FSW section of the TIM Rqts Traceability Matrix document) trace to ""Comm ICD Table 3.2.2.2-1"". The correct trace is to ""Comm ICD Table 3.2.2-1"". The MU FSW section numbers are: 1.2.3, 1.2.3.1, 1.2.3.2, 1.2.3.3, 1.2.3.4, 1.2.3.5, 1.2.3.6, 1.2.3.7, 1.2.3.8",11/13/06
ProjectC - TIM - 1239,Sections in the TIM Rqts Traceability Matrix Have No Traces Listed,4,"The following Sections from the TIM Requirements Traceability Matrix do not contain traces to other documents: (Note: This document requires noting the Section type (Mechanical, TPS FSW, etc) because section numbers are repeated throughout document) Mechanical Section: 2.6.1 MU FSW Sections: 8.3, 8.4, 10.1.1, 10.1.2 TPS FSW Sections: 2.2.2, 2.2.3, 2.2.4 TPS Control Sections: 1.1.1, 1.1.2, 1.1.3, 1.2.1, 1.2.2, 1.3.1, 1.3.2, 1.4.1, 1.4.2, 1.5.1, 1.5.2",11/7/06
ProjectC - TIM - 1238,TIM ICD Requirements Are Not Traced in the TIM Rqts Traceability Matrix document,4,"The following sections in the Glory Spacecraft to TIM System Interface Control Document (S919320002Y0 - 11/30/05) do not have traces in the Tim Requirements Traceability Matrix - Rev. B: 3.2.4, 3.3.1(2,3,4), 3.3.2, 3.3.1(1), 3.3.4.1(2,3), 3.3.4.2, 3.3.4.3(1), 3.3.4.4(1,2,3,4,5,6), 3.3.4.5, 3.4(2,3,4), 3.5(1,3,4,5,6), 3.6, 3.7(2,3,6), 3.8, 3.9.1, 3.9.2, 3.9.3, 3.11(3), 3.12(1,2), 3.13.1, 3.13.2, 4.13, 4.14, 4.15, 5 (paragraph 1) and (4), 5.1.2 (second paragraph), 5.1.3, 5.1.4, 5.1.5(4), 5.2(2), 5.3, 5.3.1, 5.3.2, 5.4.2, 5.5, 5.5.1, 5.5.2, 5.6(1,4), All Section 6, 7.1, 7.1.1, 7.1.2, 7.1.3, 7.1.4, 7.3.1, 7.4, 7.4.1(1,2), 8, all 8.2 (and subsections), 8.3(2,3,5,6), 8.4, 8.5.1, 8.6 (all except 8.6.1), 9.1.1, 9.1.2, 9.1.4, 9.1.5(1,4,5), 9.1.6(2), 9.2.1, 9.2.2, 9.2.3, 9.3, 9.4, 9.5(1), 9.6.1. 9.6.2, 9.7.2(5), 9.7.4(?), 9.7.5, 9.8, 10.1 (except 10.1(1)), 10.2, 10.3(1), 10.3.1, 11 (all subsections), 12 (all except 12.2), 13 (all subsections), 14 (all subsections), 15 (all except 15.12)",10/24/06
ProjectC - TIM - 1237,Emergency Mode Voltage Threshold References Inconsistent,4,"In researching spacecraft modes it has been discovered that there are inconsistent references to the voltage threshold that triggers Emergency mode. In the following documents the Emergency mode threshold is listed as 17 volts: Glory Performance Specification (section 12.2 mode diagram), DN-ProjectC-SYS-014 (Figure 1, Table 4.2.2-2, Section 5, and Section 5.2), DN-ProjectC-EPS-006, DN-ProjectC-EPS-007, DN-ProjectC-SYS-021, DN-ProjectC-SYS-22, CDR Day 1 (page 383), in addition to various other documents that display the satellite mode diagram described below. In the following documents the Emergency mode threshold is listed as 17.5 volts: Glory Performance Specification (requirement 8.3.3), GDRD (requirements 4.1.24, 4.1.25), DN-ProjectC-SYS-034 (section 2.1 EPS), EPS.ppt (p 23) The main concern lies within the requirements documents (and the design note documents referenced directly within SRS requirements documents). Specifically, the Performance Specification document, and DN-ProjectC-SYS-014 (Safehold mode). Within the Performance Specification document section 12.2 contains a figure that indicates that the threshold to enter Emergency is 17 volts and to exit is 27 Volts. This figure is contained in many of the other design note documents and the CDR Day 1 powerpoint document. Later in the Performance Specification document is a requirement that specifies that Emergency mode has an entry threshold of 17.5 volts. Currently the main design note document that is of higher concern is DN-ProjectC-SYS-014. This document is specified in both the PIP and ADACS SRS requirements documents. In addition to the figure mentioned above, it includes several places where 17 V is specified as the Emergency Mode entry threshold. It is referenced in text throughout the document as 17 volts (Table 4.2.2-2, Section 5, and Section 5.2). Any design activites being based from this document would be considered high risk, as the voltage would not be accurate.",10/24/06
ProjectC - TIM - 1236,Requirement 2.23.12 Is Not Mapped to Test Case in Glory FSW Test Plan,3,"PIP Requirement 2.23.12 states: ""The FSW shall provide time to the TIM System that is synchronized to the spacecraft time to within 5-millisec nominally."" This requirement is indicated to be verified via test, however, no test case is mapped to it in the Glory Flight Software Test Plan document (S919-4911 Rev -, 7/20/2006).",10/24/06
ProjectC - TIM - 1235,Requirement 2.29.06 Is Not Listed in Glory FSW Test Plan Document,3,"PIP Requirement 2.29.06 states: ""The FSW shall stop monitoring all APS telemetry points after an APS telemetry point exceeds the specified criteria."" This requirement is not listed in the Glory Flight Software Test Plan document (S919-4911 Rev -, 7/20/2006). This requirement is included in the PIP Flight Software Requirements Specification document (S919-SRS4930, Rev -, 7/10/2006), but was not included in the Test Plan document.",10/24/06
ProjectC - TIM - 1234,Requirement 3.12.01 Is Not Mapped to Test Case From Glory FSW Test Plan,3,"PIP Requirement 3.12.01 states: ""FSW shall provide command, telemetry, and processing capability for the Star Tracker."" This requirement in not mapped to any test case in the Glory Flight Software Test Plan document (S919-TP4911 Rev -, 7/20/2006). Additionally, this requirement is not indicated to be verified through Documentation, Analysis or Inspection.",10/24/06
ProjectC - TIM - 1233,Requirement 2.19.01 Is Not Mapped to Test Case From Glory FSW Test Plan,3,"PIP Requirement 2.19.01 states: ""The FSW shall use the 1Hz clock to initiate the bus schedule."" This requirement in not mapped to any test case in the Glory Flight Software Test Plan document (S919-TP4911 Rev -, 7/20/2006). Additionally, this requirement is not indicated to be verified through Documentation, Analysis or Inspection.",10/24/06
ProjectC - TIM - 1232,ADACS FSW Requirement Specification Requirement 3.06.09 Does Not Specify Who Should Perform Command,3,"ADACS FSW Requirement Specification Requirement 3.06.09 states: ""The FSW shall switch to a new uploaded FSW image when commanded."" The requirement states it shall be commanded, but does not specify by whom (ground, software, or both).",10/24/06
ProjectC - TIM - 1231,C&DH FSW Requirement Specification Requirement 1.16.04 Should Specify What Is Used For Software Validation,3,"C&DH FSW Requirement Specification Requirement 1.16.04 states: ""FSW shall validate the SW Subsystem and/or SW Component destination(s) of incoming Telecommand Source Packets."" This requirement states that a FSW will validate the SW Subsystem/SW component destination(s), but doesn't indicate what resource it will use to validate them.",10/24/06
ProjectC - TIM - 1230,C&DH FSW Requirement Specification Requirement 1.16.03 Should Specify What Is Used For Sizing Validation,3,"C&DH FSW Requirement Specification Requirement 1.16.03 states: ""FSW shall validate the size of incoming Telecommand Source Packets."" This requirement states that the size of the Telecommand Source Packets will be validated, but doesn't indicate what resource it will use to validate it.",10/24/06
ProjectC - TIM - 1229,C&DH FSW Requirement Specification Requirement 1.01.18 Should Include the Parameter Validation Criteria,3,"C&DH FSW Requirement Specification Requirement 1.01.18 states: ""FSW shall only perform commands that pass parameter validation."" This requirement indicates that parameter validation takes place, but does not indicate a source that lists the validation criteria.",10/24/06
ProjectC - TIM - 1228,C&DH FSW Requirement Specification Requirement 1.14.12 Includes a Generic Reference to a Pattern,4,"C&DH FSW Requirement Specification Requirement 1.14.12 states: ""The FSW shall be capable of filling one or more 64K Mass Memory blocks with a specific pattern."" This requirement includes a general reference to a ""specific pattern"".",10/24/06
ProjectC - TIM - 1227,C&DH FSW Requirement Specification Requirement 1.05.23 Contains General Reference to 2 Separate Commands,3,"C&DH FSW Requirement Specification Requirement 1.05.23 states: ""FSW shall require two (2) separate commands in to power up an RF transmitter."" This requirement indicates that 2 separate commands will be performed, but doesn't indicate which commands would be performed.",10/24/06
ProjectC - TIM - 1226,C&DH FSW Requirement Specification Requirement 1.02.07 Includes Generic Reference to a Ground Command,3,"C&DH FSW Requirement Specification Requirement 1.02.07 states: ""FSW shall only exit S/C Safehold mode via a specific ground command."" This requirement includes a general reference to a ""specific ground command"".",10/24/06
ProjectC - TIM - 1225,C&DH FSW Requirement Specification Requirement 1.01.22 Indirectly References a Higher Level Requirement Containing a TBR,3,"C&DH FSW Requirement Specification Requirement 1.01.22 states: ""FSW shall have the capability to suspend the affected components before activating the software patch."" A search of other parent documents (upon which this document depends) for the ""software patch"" term, shows that the Space to Ground ICD document references (10.6.2 states: ""The Software Patch Command Format can be found in the (TBR) document.""). Because of the dependency of these requirements on a parent document, it puts this requirement in a higher risk category.",10/24/06
ProjectC - TIM - 1224,C&DH FSW Requirement Specification Requirement 1.17.42 Should Include List of Emergency Conditions,3,"C&DH FSW Requirement Specification Requirement 1.17.42 states: ""FSW shall configure the downlink Card for 3.90625 Kbps, convolutionally encoded, Sband transmission of real-time S/C SOH by default, for beaconing, and under all emergency conditions."" This requirement mentions ""all emergency conditions"" but doesn't list or reference a list of the emergency conditions.",10/24/06
ProjectC - TIM - 1223,C&DH FSW Requirement Specification Requirement 1.17.30 Should Specify Complete List of Non-Realtime Telemetry Sources,4,"C&DH FSW Requirement Specification Requirement 1.17.30 states: ""FSW shall send all Mass Memory Non-realtime telemetry (CSOH, Detailed, MTT, … etc) to the ground over CCSDS Virtual Channel VC-8."" This requirement contains an incomplete list of non-realtime telemetry types/sources.",10/24/06
ProjectC - TIM - 1222,"C&DH FSW Requirement Specification Requirement 1.01.26 Should Specify Term ""Maximum Loads""",4,"C&DH FSW Requirement Specification Requirement 1.01.26 states: ""Under maximum loads, the CPU throughput shall not exceed 80 percent of its design value."" The term ""maximum loads"" is not specific enough to be accurately verified.",10/24/06
ProjectC - TIM - 1221,"C&DH FSW Requirement Specification Requirement 1.01.17 Includes Generic Term ""as appropriate""",3,"C&DH FSW Requirement Specification Requirement 1.01.17 states: ""FSW shall validate each command's parameter fields, as appropriate, prior to execution."" The term ""as appropriate"" needs to be replaced with more specific wording.",10/24/06
ProjectC - TIM - 1220,C&DH FSW Requirement Specification Requirement 1.18.06 Does Not Specify Who Should Issue Request,3,"C&DH FSW Requirement Specification Requirement 1.18.06 states: ""GPSR Position message requests shall be enabled or disabled by command."" This requirement mentions a command will be issued, but does not specify who (ground, software, both) issues the request.",10/24/06
ProjectC - TIM - 1219,C&DH FSW Requirement Specification Requirement 1.06.01 Is A Compound Requirement,4,"C&DH FSW Requirement Specification Requirement 1.06.01 states: ""FSW shall provide a boot capability that validates, loads, and starts execution of the desired application software, and allows programming of the application EEPROMs."" This requirement contains two distinct functions (boot capability and programming ability).",10/24/06
ProjectC - TIM - 1218,C&DH FSW Requirement Specification Requirement 1.18.12 Does Not Specify Who Should Issue Request,3,"C&DH FSW Requirement Specification Requirement 1.18.12 states: ""The CDH SW shall forward the GPSR PVT initialization message to the ADACS SW Subsystem upon request."" This requirement mentions a request will be issued, but does not specify who (ground, software, both) issues the request.",10/24/06
ProjectC - TIM - 1217,C&DH FSW Requirement Specification Requirement 1.17.60 Does Not Specify What Command is Received,3,"C&DH FSW Requirement Specification Requirement 1.17.60 states: ""FSW shall exit the Beacon state upon receipt of a ground command."" This requirement states that a ground command is sent, but doesn't specify what command is sent.",10/24/06
ProjectC - TIM - 1216,C&DH FSW Requirement Specification Requirement 1.17.59 Does Not Specify What Command is Received,3,"C&DH FSW Requirement Specification Requirement 1.17.59 states: ""FSW shall enter the Beacon state upon receipt of a ground command."" This requirement states that a ground command is sent, but doesn't specify what command is sent.",10/24/06
ProjectC - TIM - 1215,C&DH FSW Requirement Specification Requirement 1.17.45 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.45 states: ""FSW shall exit the communication event state if its duration has been reached without receiving a command to exit this state."" This requirement indicates it will receive a command to exit this state, but does not indicate who issued the command (ground, software, both).",10/24/06
ProjectC - TIM - 1214,C&DH FSW Requirement Specification Requirement 1.17.44 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.44 states: ""When commanded, the FSW shall configure the S-Band transponder for a 62.5 Kbps data rate."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1213,C&DH FSW Requirement Specification Requirement 1.17.43 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.43 states: ""When commanded, the FSW shall configure the S-Band transponder for a 3.90625 Kbps data rate."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1212,C&DH FSW Requirement Specification Requirement 1.17.28 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.28 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route TIM Instrument/Science PlayBack data on Virtual Channel VC-18 over the X-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1211,C&DH FSW Requirement Specification Requirement 1.17.27 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.27 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route APS/CC Instrument/Science PlayBack data on Virtual Channel VC-17 over the X-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1210,C&DH FSW Requirement Specification Requirement 1.17.26 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.26 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route SSR Stored SOH telemetry data on Virtual Channel VC-16 over the X-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1209,C&DH FSW Requirement Specification Requirement 1.17.25 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.25 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route Non-realtime telemetry data on Virtual Channel VC-8 over the X-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1208,C&DH FSW Requirement Specification Requirement 1.17.24 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.24 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route realtime Cloud Camera2 SOH telemetry data on Virtual Channel VC-5 over the X-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1207,C&DH FSW Requirement Specification Requirement 1.17.23 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.23 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route realtime Cloud Camera1 SOH telemetry data on Virtual Channel VC-4 over the Xtransmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1206,C&DH FSW Requirement Specification Requirement 1.17.22 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.22 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route realtime APS SOH telemetry data on Virtual Channel VC-3 over the X-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1205,C&DH FSW Requirement Specification Requirement 1.17.21 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.21 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route realtime TIM SOH telemetry data on Virtual Channel VC-2 over the X-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1204,C&DH FSW Requirement Specification Requirement 1.17.20 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.20 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route realtime SOH telemetry data on Virtual Channel VC-1 over the X-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1203,C&DH FSW Requirement Specification Requirement 1.17.19 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.19 states: ""When commanded, the FSW shall configure the X-Band transponder for a 40 Mbps data rate."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1202,C&DH FSW Requirement Specification Requirement 1.17.15 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.15 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route TIM Instrument/Science PlayBack data on Virtual Channel VC-18 over the S-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1201,C&DH FSW Requirement Specification Requirement 1.17.14 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.14 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route APS/CC Instrument/Science PlayBack data on Virtual Channel VC-17 over the S-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1200,C&DH FSW Requirement Specification Requirement 1.17.13 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.13 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route SSR Stored SOH telemetry data on Virtual Channel VC-16 over the S-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1199,C&DH FSW Requirement Specification Requirement 1.17.12 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.12 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route Non-realtime telemetry data on Virtual Channel VC-8 over the S-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1198,C&DH FSW Requirement Specification Requirement 1.17.11 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.11 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route realtime Cloud Camera2 SOH telemetry data on Virtual Channel VC-5 over the S-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1197,C&DH FSW Requirement Specification Requirement 1.17.10 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.10 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route realtime Cloud Camera1 SOH telemetry data on Virtual Channel VC-4 over the S-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1196,C&DH FSW Requirement Specification Requirement 1.17.09 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.09 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route realtime APS SOH telemetry data on Virtual Channel VC-3 over the S-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1195,C&DH FSW Requirement Specification Requirement 1.17.08 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.08 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route realtime TIM SOH telemetry data on Virtual Channel VC-2 over the S-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1194,C&DH FSW Requirement Specification Requirement 1.17.07 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.07 states: ""When commanded, the FSW shall configure the downlink Card FPGA Interface to route realtime SOH telemetry data on Virtual Channel VC-1 over the S-Band transmitter."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1193,C&DH FSW Requirement Specification Requirement 1.17.06 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.17.06 states: ""When commanded, the FSW shall configure the S-Band transponder for a 2 Mbps data rate."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1192,C&DH FSW Requirement Specification Requirement 1.15.02 Should Specify Who Performs Command,3,"C&DH FSW Requirement Specification Requirement 1.15.02 states: ""When commanded, FSW shall retrieve all or a specific subset of records stored in a Mass Memory partition."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1191,C&DH FSW Requirement Specification Requirement 1.13.18 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.13.18 states: ""FSW shall delete or remove a range of commands from the Command Schedule on command."" The requirement states it shall be done on command, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1190,C&DH FSW Requirement Specification Requirement 1.13.17 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.13.17 states: ""FSW shall delete or remove a specific command from the Command Schedule on command."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1189,C&DH FSW Requirement Specification Requirement 1.13.15 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.13.15 states: ""On command, the FSW shall empty the Command Schedule and load a default Command Schedule."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1188,C&DH FSW Requirement Specification Requirement 1.06.02 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.06.02 states: ""FSW shall switch to a new uploaded FSW image when commanded."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1187,C&DH FSW Requirement Specification Requirement 1.05.13 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.05.13 states: ""The FSW shall synchronize the software time to the S/C 1Hz and RTC clock by command."" The requirement states the clock will be synchronized by command, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1186,C&DH FSW Requirement Specification Requirement 1.04.35 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.04.35 states: ""FSW shall store Detailed Telemetry generated on board to the specified destination when commanded."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1185,C&DH FSW Requirement Specification Requirement 1.04.34 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.04.34 states: ""FSW shall collect S/C Detailed telemetry on command."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1184,C&DH FSW Requirement Specification Requirement 1.04.32 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.04.32 states: ""FSW shall store MTT telemetry generated on board to the specified destination when commanded."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1183,C&DH FSW Requirement Specification Requirement 1.04.31 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.04.31 states: ""FSW shall collect S/C MTT telemetry on command."" The requirement states it shall happen ""on command"", but does not specify who (ground, software, or both) initiates the command.",10/24/06
ProjectC - TIM - 1182,C&DH FSW Requirement Specification Requirement 1.04.15 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.04.15 states: ""FSW shall collect H/W Component telemetry when commanded."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/19/06
ProjectC - TIM - 1181,C&DH FSW Requirement Specification Requirement 1.04.14 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.04.14 states: ""FSW shall collect S/W Subsystem telemetry when commanded."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/19/06
ProjectC - TIM - 1180,C&DH FSW Requirement Specification Requirement 1.02.03 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.02.03 states: ""FSW shall have the capability to be commanded to perform a software reset."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/19/06
ProjectC - TIM - 1179,C&DH FSW Requirement Specification Requirement 1.02.02 Does Not Specify Who Should Perform Command,3,"C&DH FSW Requirement Specification Requirement 1.02.02 states: ""FSW shall have the capability to be commanded to not reset the watch-dog timer."" The requirement states it shall be commanded, but does not specify who (ground, software, or both) initiates the command.",10/19/06
ProjectC - TIM - 1178,C&DH FSW Requirement Specification Requirement 1.01.25 Does Not Specify Who Should Send The Command,3,"C&DH FSW Requirement Specification Requirement 1.01.25 states: ""FSW shall exit the communication event state upon receipt of a command."" This requirement mentions the receipt of a command, however, it does not specify who (ground, software, both) initiates the command.",10/19/06
ProjectC - TIM - 1177,C&DH FSW Requirement Specification Requirement 1.01.24 Does Not Specify Who Should Send The Command,3,"C&DH FSW Requirement Specification Requirements 1.01.24 states: ""FSW shall enter the communication event state upon receipt of a command."" This requirement mentions the receipt of a command, however, it does not specify who (ground, software, both) initiates the command.",10/19/06
ProjectC - TIM - 1176,C&DH FSW Requirement Specification Requirements Refers to Operational C&DH Modes That Are Not Specified,3,"Several C&DH FSW Requirement Specification Requirements make reference to ""all operational CDH modes"". There is no reference to operational CDH modes in this or any other Glory documentation. The following is a list of requirements that contain this term: 1.04.05, 1.04.06, 1.04.07, 1.04.08, 1.04.09, 1.04.10, 1.04.11, 1.04.12, 1.05.18, 1.05.19, 1.05.20, 1.05.21, 1.05.22, 1.16.02, 1.17.02, 1.17.03",10/19/06
ProjectC - TIM - 1175,ADACS FSW Requirement Specification Requirements Refer to Operational ADACS Modes That Are Not Specified,3,"Several requirements within the ADACS FSW Requirements Specification document reference ""all operational ADACS modes"". These modes have not been listed or referenced elsewhere. The following are the requirement id's: 3.04.02, 3.04.03, 3.04.04, 3.04.05, 3.04.06, 3.04.07, 3.05.02, 3.05.03, 3.05.04, 3.05.05, 3.05.06, 3.05.07, 3.08.02, 3.12.02, 3.12.03, 3.30.02, 3.30.03, 3.31.02, 3.31.03, 3.32.02, 3.33.02, 3.33.03",10/19/06
ProjectC - TIM - 1174,ADACS FSW Requirement Specification Requirement 3.05.17 Does Not Specify Who Should Perform Command,3,"ADACS FSW Requirement Specification Requirement 3.05.17 states: ""The FSW shall be capable of synchronizing the Spacecraft Real-Time clock to the on-board GPS receiver upon command."" The requirement states it shall be commanded, but does not specify by whom (ground, software, or both).",10/19/06
ProjectC - TIM - 1173,ADACS FSW Requirement Specification Requirement 3.04.18 Does Not Specify Who Should Perform Command,3,"ADACS FSW Requirement Specification Requirement 3.04.18 states: ""FSW shall store MTT telemetry generated on board to the specified destination when commanded."" The requirement states it shall be commanded, but does not specify by whom (ground, software, or both).",10/19/06
ProjectC - TIM - 1172,ADACS FSW Requirement Specification Requirement 3.04.17 Does Not Specify Who Should Perform Command,3,"ADACS FSW Requirement Specification Requirement 3.04.17 states: ""FSW shall store Detailed Telemetry generated on board to the specified destination when commanded."" The requirement states it shall be commanded, but does not specify by whom (ground, software, or both).",10/19/06
ProjectC - TIM - 1171,ADACS FSW Requirement Specification Requirement 3.04.15 Does Not Specify Who Should Perform Command,3,"ADACS FSW Requirement Specification Requirement 3.04.15 states: ""FSW shall route MTT Telemetry data to its commanded destination when the MTT buffer has reached its capacity (default is CDH Mass Memory)."" The requirement states it shall be commanded, but does not specify by whom (ground, software, or both).",10/19/06
ProjectC - TIM - 1170,ADACS FSW Requirement Specification Requirement 3.04.09 Does Not Specify Who Should Perform Command,3,"ADACS FSW Requirement Specification Requirement 3.04.09 states: ""FSW shall collect S/C MTT telemetry on command."" The requirement states it shall be commanded, but does not specify by whom (ground, software, or both).",10/19/06
ProjectC - TIM - 1169,ADACS FSW Requirement Specification Requirement 3.04.08 Does Not Specify Who Should Perform Command,3,"ADACS FSW Requirement Specification Requirement 3.04.08 states: ""FSW shall collect S/C Detailed telemetry on command."" The requirement states it shall be commanded, but does not specify by whom (ground, software, or both).",10/19/06
ProjectC - TIM - 1168,ADACS FSW Requirement Specification Requirement 3.04.03 Does Not Specify Who Should Perform Command,3,"ADACS FSW Requirement Specification Requirement 3.04.03 states: ""FSW shall collect S/W Subsystem telemetry when commanded."" The requirement states it shall be commanded, but does not specify by whom (ground, software, or both).",10/19/06
ProjectC - TIM - 1167,ADACS FSW Requirement Specification Requirement 3.04.02 Does Not Specify Who Should Perform Command,3,"ADACS FSW Requirement Specification Requirement 3.04.02 states: ""FSW shall collect H/W Component telemetry when commanded."" The requirement states it shall be commanded, but does not specify by whom (ground, software, or both).",10/19/06
ProjectC - TIM - 1166,ADACS FSW Requirement Specification Requirement 3.02.04 Does Not Specify Who Should Perform Command,3,"ADACS FSW Requirement Specification Requirement 3.02.04 states: ""FSW shall have the capability to be commanded to perform a software reset."" The requirement states it shall be commanded, but does not specify by whom (ground, software, or both).",10/19/06
ProjectC - TIM - 1165,ADACS FSW Requirement Specification Requirement 3.02.03 Does Not Specify Who Should Perform Command,3,"ADACS FSW Requirement Specification Requirement 3.02.03 states: ""FSW shall have the capability to be commanded to not reset the watch-dog timer."" The requirement states it shall be commanded, but does not specify by whom (ground, software, or both).",10/19/06
ProjectC - TIM - 1164,ADACS FSW Requirement Specification Requirement 3.30.05 Includes Generic Reference to a Ground Command,3,"ADACS FSW Requirement Specification Requirement 3.30.05 states: ""FSW shall only exit S/C SafeHold mode via a specific ground command."" This requirement includes a general reference to a ""specific ground command"".",10/19/06
ProjectC - TIM - 1163,ADACS FSW Requirement Specification Requirement 3.04.23 Does Not Specify the Current ADACS SOH Telemetry Collection Rate,3,"ADACS FSW Requirement Specification Requirement 3.04.23 states: ""The FSW shall provide the delta between the spacecraft 1 Hz and the GPS 1PPS in ADACS SOH telemetry at the current ADACS SOH telemetry collection rate."" This requirement does not specify the current ADACS SOH telemetry collection rate.",10/19/06
ProjectC - TIM - 1162,ADACS FSW Requirement Specification Requirement 3.01.16 Indirectly References a Higher Level Requirement Containing a TBR,3,"ADACS FSW Requirement Specification Requirement 3.01.16 states: ""The FSW shall have the capability to suspend the affected components before activating the software patch."" A search of other parent documents (upon which this document depends) for the ""software patch"" term, shows that the Space to Ground ICD document references (10.6.2 states: ""The Software Patch Command Format can be found in the (TBR) document.""). Because of the dependency of these requirements on a parent document, it puts this requirement in a higher risk category.",10/19/06
ProjectC - TIM - 1161,PIP FSW Requirement Specification Requirement 2.02.06 Generically Refers to a Ground Command,3,"PIP FSW Requirement Specification Requirement 2.02.06 states: ""The FSW shall only exit SC safehold mode via a specific ground command."" This requirement doesn't specify what ground command.",10/19/06
ProjectC - TIM - 1160,PIP FSW Requirement Specification Requirement 2.28.08 Does Not Specify Maximum Instrument Generation Rate,4,"PIP FSW Requirement Specification Requirement 2.28.08 states: ""The FSW shall collect Cloud Camera telemetry at the maximum instrument generation rate, and provide a commandable filter table which allows the telemetry packets to be filtered (reduction in required bandwidth for insertion into VC-1)."" This requirement does nto specify the ""maximum instrument generation rate"".",10/19/06
ProjectC - TIM - 1159,PIP FSW Requirement Specification Requirement 2.28.06 Does Not Specify Maximum Instrument Generation Rate,4,"PIP FSW Requirement Specification Requirement 2.28.06 states: ""The FSW shall collect APS instrument telemetry at the maximum instrument generation rate, and provide a commandable filter table which allows the telemetry packets to be filtered (reduction in required bandwidth for insertion into VC-1)."" This requirement does not specify the ""maximum instrument generation rate"".",10/19/06
ProjectC - TIM - 1158,PIP FSW Requirement Specification Requirement 2.22.25 Does Not Include Specified Criteria,3,"PIP FSW Requirement Specification Requirement 2.22.25 states: ""The FSW shall take the same action when any monitored APS telemetry point exceeds the specified criteria."" The term ""specified criteria"" is too generic, and should be explicit.",10/19/06
ProjectC - TIM - 1157,PIP FSW Requirement Specification Requirement 2.01.31 Should Specify Maximum Load,3,"PIP FSW Requirement Specification Requirement 2.01.31 states: ""Under maximum loads, the CPU throughput shall not exceed 80 percent of its design value."" The term ""maximum loads"" is not specific enough to be accurately verified.",10/19/06
ProjectC - TIM - 1156,"PIP FSW Requierment Specification Requirement 2.01.21 Should Includes Generic Term ""as appropriate""",3,"PIP FSW Requierment Specification Requirement 2.01.21 states: ""FSW shall validate each command's parameter fields, as appropriate, prior to execution."" The term ""as appropriate"" is too generic.",10/19/06
ProjectC - TIM - 1155,PIP FSW Requirement Specification Requirement 2.27.31 Is Listed In Two Different Places In Document,3,"In PIP FSW Requirement Specification document requirement id 2.27.31 is listed in 2 places. Page 17: Requirement 2.27.31 states ""The FSW shall only transmit a command to the star tracker(s) no retries."" Page 18: Requirement 2.27.31 states ""The FSW shall receive 1024 bytes from each TIM System transfer."" Additionally each different requirement 2.27.31 is linked to different requirements in the traceability section of the document (pages 48 and 64).",10/19/06
ProjectC - TIM - 1154,PIP FSW Requirement Specification Requirement 2.27.30 Is Listed In Two Different Places In Document,3,"In PIP FSW Requirement Specification document requirement id 2.27.30 is listed in 2 places. Page 17: Requirement 2.27.30 states ""The FSW shall use the sub-addresses as defined in the Glory Spacecraft to Instrument Communications ICD (reference Table 3.2.2-1) to communicate with the star tracker(s)."" Page 18: Requirement 2.27.30 states ""The FSW shall transfer data to the TIM System with no retries."" Additionally each different requirement 2.27.30 is linked to different requirements in the traceability section of the document (pages 48 and 64).",10/19/06
ProjectC - TIM - 1153,PIP FSW Requirement Specification Requirement 2.08.07 Requirement Has No Parent Requirement,4,"PIP FSW Requirement Specification Requirement 2.08.07 states: ""The FSW shall adhere to the CCSDS telemetry source packets format outlined in the the Space to Ground ICD."" Requirement has no parent requirement.",10/19/06
ProjectC - TIM - 1152,PIP FSW Requirement Specification Requirement 2.08.03 Requirement Has No Parent Requirement,4,"PIP FSW Requirement Specification Requirement 2.08.03 states: ""The FSW shall encapsulate each telemetry record with a SNP Network header and Transport header."" Requirement has no parent requirement.",10/19/06
ProjectC - TIM - 1151,PIP FSW Requirement Specification Requirement 2.01.46 Requirement Has No Parent Requirement,4,"PIP FSW Requirement Specification Requirement 2.01.46 states: ""The FSW shall be capable of storing APS instrument, Cloud Camera and TIM System data to backup memory."" Requirement has no parent requirement.",10/19/06
ProjectC - TIM - 1150,PIP FSW Requirement Specification Requirement 2.26.04 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.26.04 states: ""The FSW shall transfer spacecraft telemetry to storage as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1149,PIP FSW Requirement Specification Requirement 2.26.03 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.26.03 states: ""The FSW shall transfer TIM System Packet data to storage as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1148,PIP FSW Requirement Specification Requirement 2.26.02 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.26.02 states: ""The FSW shall transfer Cloud Camera data to storage as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1147,PIP FSW Requirement Specification Requirement 2.26.01 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.26.01 states: ""The FSW shall transfer APS instrument data to storage as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1146,PIP FSW Requirement Specification Requirement 2.24.17 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.24.17 states: ""The FSW shall control spacecraft telemetry retrieval as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1145,PIP FSW Requirement Specification Requirement 2.24.16 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.24.16 states: ""The FSW shall control TIM System Packet data retrieval as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1144,PIP FSW Requirement Specification Requirement 2.24.15 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.24.15 states: ""The FSW shall control the Cloud Camera data retrieval as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1143,PIP FSW Requirement Specification Requirement 2.24.14 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.24.14 states: ""The FSW shall control the APS instrument data retrieval as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1142,PIP FSW Requirement Specification Requirement 2.24.12 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.24.12 states: ""The FSW shall provide the capability to configure the SSR to playback the specified SSR partition as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1141,PIP FSW Requirement Specification Requirement 2.24.10 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.24.10 states: ""The FSW shall control spacecraft telemetry storage as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1140,PIP FSW Requirement Specification Requirement 2.24.09 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.24.09 states: ""The FSW shall control TIM System Packet data storage as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1139,PIP FSW Requirement Specification Requirement 2.24.08 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.24.08 states: ""The FSW shall control the Cloud Camera data storage as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1138,PIP FSW Requirement Specification Requirement 2.24.07 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.24.07 states: ""The FSW shall control the APS instrument data storage as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1137,PIP FSW Requirement Specification Requirement 2.23.46 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.23.46 states: ""The FSW shall store TIM System packets on the SSR as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1136,PIP FSW Requirement Specification Requirement 2.23.31 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.23.31 states: ""The FSW shall retrieve stored TIM VCDUs and forward them to the SSR when commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1135,PIP FSW Requirement Specification Requirement 2.03.08 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.23.08 states: ""The FSW shall command the TIM System to enter SAFE mode when commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1134,PIP FSW Requirement Specification Requirement 2.22.43 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.22.43 states: ""The FSW shall store APS instrument science and telemetry packets on the SSR as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1133,PIP FSW Requirement Specification Requirement 2.22.22 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.22.22 states: ""The FSW shall retrieve stored APS instrument VCDUs and forward them to the SSR when commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1132,PIP FSW Requirement Specification Requirement 2.21.27 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.21.27 states: ""The FSW shall retrieve stored cloud camera VCDUs and forward them to the SSR when commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1131,PIP FSW Requirement Specification Requirement 2.08.08 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.08.08 states: ""The FSW shall receive and store housekeeping telemetry in the SSR as commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1130,PIP FSW Requirement Specification Requirement 2.06.01 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.06.01 states: ""The FSW shall switch to a new uploaded FSW image when commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1129,PIP FSW Requirement Specification Requirement 2.05.12 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.05.12 states: ""The FSW shall synchronize the software time to the spacecraft 1 Hertz and Real Time Clock by command."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1128,PIP FSW Requirement Specification Requirement 2.05.04 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.05.04 states: ""The FSW shall route S/C SNP commands to the appropriate software subsystem or software component destination."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",10/19/06
ProjectC - TIM - 1127,PIP FSW Requirement Specification Requirement 2.04.25 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.04.25 states: ""The FSW shall store Detailed telemetry on board to the specified destination when commanded."" The requirement states it shall be commanded, but does not specify by what (ground, software, or both).",10/19/06
ProjectC - TIM - 1126,PIP FSW Requirement Specification Requirement 2.04.22 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.04.22 states: ""The FSW shall store MTT telemetry generated on board to the specified destination when commanded."" The requirement states it shall be commanded, but does not specify by what (ground, software, or both).",10/19/06
ProjectC - TIM - 1125,PIP FSW Requirement Specification Requirement 2.04.09 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.04.09 states: ""The FSW shall collect H/W component telemetry when commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",9/25/06
ProjectC - TIM - 1124,PIP FSW Requirement Specification Requirement 2.04.08 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.04.08 states: ""The FSW shall collect S/W subsystem telemetry when commanded."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",9/25/06
ProjectC - TIM - 1123,PIP FSW Requirement Specification Requirement 2.02.02 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.02.02 states: ""The FSW shall have the capability to be commanded to perform a software reset."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",9/25/06
ProjectC - TIM - 1122,PIP FSW Requirement Specification Requirement 2.02.01 Does Not Specify Who Should Perform Command,3,"PIP FSW Requirement Specification Requirement 2.02.01 states: ""The FSW shall have the capability to be commanded to allow the watch-dog timer to expire."" The requirement states it shall be commanded, but does not specify by who/what (ground, software, or both).",9/25/06
ProjectC - TIM - 1121,PIP FSW Requirement Specification Requirement 2.01.28 is a Compound Requirement,3,"PIP FSW Requirement Specification Requirement 2.01.28 states: ""The FSW shall increment the software-controlled time seconds field and set the software controlled time sub-seconds field to zero at the start of each second."" Requirement contains two distinct functions (incrementing and resetting the software controlled time).",9/25/06
ProjectC - TIM - 1120,PIP FSW Requirement Specification Requirement 2.01.16 is a Compound Requirement,3,"PIP FSW Requirement Specification Requirement 2.01.16 states: ""The FSW shall the ability to enable/disable all contigency monitoring."" This requirement contains two distinct functions (enabling and disabling).",9/25/06
ProjectC - TIM - 1119,PIP FSW Requirement Specification Requirements Refer to Operational PIP Modes That Are Not Specified,3,"Several requirements within the PIP FSW Requirements Specification document reference ""all operational PIP modes"". These modes have not been listed or referenced elsewhere. The following are the requirement id's: 2.01.17, 2.01.18, 2.01.45, 2.04.05, 2.04.06, 2.04.10, 2.21.11, 2.21.32, 2.21.33, 2.22.36, 2.22.37, 2.22.39, 2.23.39, 2.23.41, 2.12.09, 2.12.10, 2.27.01",9/25/06
ProjectC - TIM - 1118,CDH FSW Requirement Spec 1.02.08 Has Inconsistent Requirement Definition,3,"Artifacts Referenced: Glory C&DH Flight Software Requirements Specification S919-SRS4920 Revision - 7/10/06 CDH FSW Requirement Spec Requirement 1.02.08 states: ""The CDH SW Subsystem shall wait at least 22 seconds before removing TIM & APS power under emergency conditions."" However, TIM ICD 7.1.2 states: ""When possible, the spacecraft shall place the TIM in the SAFE mode prior to initiation of SURVIVAL mode and wait 10 seconds after sending the SAFE mode command before removing operational power.""",9/25/06
ProjectC - TIM - 1117,CDH FSW Requirement Spec Has Incomplete Requirement Trace,3,"Artifact Referenced: Glory C&DH Flight Software Requirements Specification S919-SRS4920 Revision - 7/10/06 CDH FSW Requirement Spec has a missing requirement under Glory PS 5.2.7 in the C&DH document (Page 18). 5.2.7 ""The FSW shall support Satellite Modes per section 12.1 of the Glory Performance Specification document."" Ascent Mode is not addressed.",9/25/06
ProjectC - TIM - 1116,PIP FSW Requirement Spec Requirement Has Undefined Acronym USES,5,"Artifact Referenced: Glory PIP Flight Software Requirements Specification S919-SRS4930 Revision - 7/10/06 PIP FSW Requirement Spec Requirement 2.21.24 states: ""The FSW shall use the USES chip to compress the image data portion of the cloud camera message."" USES in un-defined.",9/25/06
ProjectC - TIM - 1115,PIP FSW Requirement Spec Has Missing Requirement Trace,3,"Artifacts Referenced: Glory PIP Flight Software Requirements Specification S919-SRS4930 Revision - 7/10/06. PIP FSW Requirement Spec has a missing requirement under Glory PS 5.2.3 in the PIP document (Page 25). This traces to PIP requirements for Normal Operations and Safe Hold Mode. However, it is missing a trace to Orbit Adjust.",9/25/06
ProjectC - TIM - 1114,PIP FSW Requirement Spec Requirement 2.03.07 contains a TBD entry,3,"Artifact Referenced: Glory PIP Flight Software Requirements Specification S919-SRS4930 Revision - 7/10/06 PIP FSW Requirement Spec Requirement 2.03.07 states: ""The FSW shall resync the processors at a TBD rate to correct any single processor errors and reduce the probability of double processor errors."" The requirement contains a TBD.",9/25/06
ProjectC - TIM - 1113,SMRD Requirement 7.4.1 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.4.1 sates: ""The satellite shall protect the operational flight code image from modification during loading operations to prevent incomplete or failed code uploads from corrupting the initial code version."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1112,SMRD Requirement 7.2.17 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.17 states: ""The Ground System shall be compatible with CCSDS COP-1 for the S-band communications link."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1111,SMRD Requirement 7.2.16 has no SC Performance Spec Requirement Child,4,"Artifact referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.16 states: ""The Ground System, when supporting critical operations (launch, checkout, orbital maneuvers), shall be capable of being configured to recover from any single system failure and return to operations within 5 minutes."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1110,SMRD Requirement 7.2.15 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.15 states: ""The ground stations shall store science and telemetry data for at least seven days. This allows the MOC or science operations centers to request a playback of stored data in event of data loss."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1109,SMRD Requirement 7.2.14 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.14 states: ""The average end-to-end bit error rate of science data provided to the Ground System shall not affect more than 0.1% of the science data packets."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1108,SMRD Requirement 7.2.13 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.13 states: ""The ground system shall deliver 95% of all science data from the spacecraft within 24 hours of data downlink."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1107,SMRD Requirement 7.2.12 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.12 states: ""Science data collected by the ground system shall be delivered to their respective science operations centers in files of data packets."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1106,SMRD Requirement 7.2.11 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.11 states: ""The ground system shall deliver not less than 98% of the APS data to the APS SOC. This includes the time that APS should be scheduled minus subsystem anomalies. Operational problems that prevent APS from science operations count against the 2% data loss."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1105,SMRD Requirement 7.2.10 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.10 states: ""The ground system shall deliver not less than 99.5% of the TIM data to the TIM SOC. This includes the time that TIM should be scheduled minus subsystem anomalies. Operational problems that prevent TIM from science operations count against the 0.5% data loss."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1104,SMRD Requirement 7.2.9 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.9 states: ""The Ground System shall provide real-time communication links between the MOC, ground stations, and GSFC 421.7-6.0-04 dated 04/18/2004."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1103,SMRD Requirement 7.2.8 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.8 states: ""The Ground System shall forward spacecraft housekeeping telemetry data and science data to the TIM Science Operations Center via GSFC IONET."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1102,SMRD Requirement 7.2.7 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.7 states: ""The Ground System shall forward spacecraft housekeeping telemetry data and science data to the APS Science Operations Center via GSFC IONET."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1101,SMRD Requirement 7.2.5 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.5 states: ""The Ground System shall be capable of receiving science, memory dumps, and housekeeping data from the spacecraft."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1100,SMRD Requirement 7.2.4 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.4 states: ""Ground knowledge of the satellite’s orbital elements and position shall be adequate to support determination of real time contact windows and ground antenna pointing angles."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1099,SMRD Requirement 7.2.3 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.3 states: ""The Ground System shall rely on commercial ground stations as the primary means to communicate with the satellite."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1098,SMRD Requirement 7.2.2 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.2 states: ""The Glory Ground System shall provide sufficient RF communications coverage with the spacecraft to downlink 14 Gbits of recorded data and to safely operate the spacecraft and science instruments."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1097,SMRD Requirement 7.2.1 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.2.1 states: ""The Ground Segment shall interface with the Space Segment as specified in the Glory Space to Ground ICD."" Parent requirement has no SC Performance Spec child requirement.",9/25/06
ProjectC - TIM - 1096,SMRD Requirement 7.1.17 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.17 states: ""During the 30-day early orbit checkout period, one complete orbit of recorded science data shall be delivered from the ground station to the respective TIM and APS SOCs within one hour of receipt."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1095,SMRD Requirement 7.1.16 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.16 states: ""Spacecraft and instrument checkout shall be planned to be completed within 30 days of launch."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1094,SMRD Requirement 7.1.15 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.15 states: ""The MOC shall have the capability to provide commands to and receive telemetry from Glory using the NASA Space Network."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1093,SMRD Requirement 7.1.14 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.14 states: ""The MOC shall evaluate satellite health and safety at least once per day."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1092,SMRD Requirement 7.1.13 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.13 states: ""The MOC shall have the capability to play back, evaluate, and perform trending analysis on archived housekeeping data, including both real-time, back-orbit, and arcived data."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1091,SMRD Requirement 7.1.12 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.12 states: ""The MOC shall support requests for playback of stored data from the ground system."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1090,SMRD Requirement 7.1.11 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.11 states: ""The MOC shall store the spacecraft housekeeping data for the life of the mission plus five years."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1089,SMRD Requirement 7.1.10 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.10 states: ""The MOC shall notify the APS and TIM Science Operations Centers of pre-planned spacecraft attitude slews or orbit adjustment maneuvers at least 72 hours in advance."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1088,SMRD Requirement 7.1.9 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.9 states: ""The MOC shall accept instrument command sequences from the TIM and APS Science Operation Centers to control TIM and APS instrument operation, respectively."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1087,SMRD Requirement 7.1.8 has no SC Performance Spec Requirement Child,4,"Artifact Referenced Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.8 states: ""The MOC shall support real-time command and telemetry processing in manual and automated operational modes."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1086,SMRD Requirement 7.1.7 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.7 states: ""Instrument housekeeping data shall be provided to allow the MOC to verify instrument status. Specific instrument telemetry points will be contained in the Spacecraft to TIM ICD, Spacecraft to APS ICD, and Spacecraft to Cloud Camera ICD."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1085,SMRD Requirement 7.1.6 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.6 states: ""The MOC shall monitor spacecraft and instrument telemetry and take appropriate action to maintain the health and safety of the satellite."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1084,SMRD Requirement 7.1.5 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 7.1.5 states: ""The MOC shall maintain the capability for manual control of all automated functions."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1083,SMRD Requirement 7.1.4 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.4 states: ""The MOC shall support automated ground station pass execution for playback of recorded data."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1082,SMRD Requirement 7.1.3 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.3 states: ""The Glory mission shall be designed for one ground station contact per day, nominally, for spacecraft commanding and telemetry and science data collection."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1081,SMRD Requirement 7.1.1 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 7.1.1 states: ""The Glory Mission Operations Center (MOC) shall support the following functions: a. Mission scheduling b. Command load management c. Command and telemetry processing d. Subsystem performance evaluation e. Orbit prediction f. Maneuver planning g. Spacecraft and instrument housekeeping data storage. h. Real-time and contingency operations "" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1080,SMRD Requirement 5.1.24 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 5.1.24 states: ""In Safe Hold mode, the satellite shall be oriented to prevent sun exposure normal to the APS radiator aperture for any period longer than 30 minutes."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1079,SMRD Requirement 4.2.29 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 4.2.29 states: ""Forward and return links with TDRSS shall have positive RF link margins."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1078,SMRD Requirement 4.2.8 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory SMRD Requirements Verification Matrix S919-ER2342 8/26/05 SMRD Requirement 4.2.8 states: ""Glory science instruments shall be designed to meet all performance requirements at the end of three years."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1077,Different Roll Times,3,"5.1.6 states: ""The satellite shall be capable of achieving 40 degrees of roll around the X-axis in 20 minutes or less."" Glory Spacecraft Perofrmance Specification 6.4.11 states: ""The ACS shall be capable of achieving a maximum roll bias of +/- 40 degrees, and shall meet the mission pointing requirements at the end of a ten-minute maneuver."" There is a 10 minute difference in the requirements.",9/21/06
ProjectC - TIM - 1076,Different Launch Vehicles,4,"Artifact Referenced: Glory Project Science and Mission Requirements Document Revision B GSFC 421.7-6.0-04 April 18, 2005 SMRD Requirement 4.2.9 states: ""The satellite shall be launched on a Taurus 2110 Expendable Launch Vehicle (ELV)."" Glory Spacecraft Performance Specification 2.4.1 states: ""Taurus XL (3110) Expendable Launch Vehicle (ELV)."" Two different versions of the launch vehicle. SMRD requirement 5.11 states: ""The satellite shall be designed to meet the launch environment of the Taurus 2110 with no degradation to its operational capability or required performance."" SC Performance Spec Requirement 3.1.3 states: ""All RF Subsystem equipment shall be designed to meet the launch environment of the Taurus XL 3110."" Additional references to launch vehicle: Document S919-ER2342: (4.2.9, 5.1.1) Document S919-ER2341: (2.4.1, 2.4.3, 2.4.4, 2.4.5, 3.1.3, 4.1.3, 6.3.4, 7.5.4, 7.8.3, 8.2.4, 9.3.3, 10.4.1, 10.6.5, 11.2.5) S919-PF3200-B cdrl 019: (10.4.1) The launch vehicle was changed as noted in the CDR (Day 1: pg SO-12).",9/21/06
ProjectC - TIM - 1075,SMRD Requirement 3 and SC Performance Spec Requirement Section 1.1 contain Field of View Differences,3,"Artifact Referenced: Glory Project Science and Mission Requirements Document Revision B GSFC 421.7-6.0-04 April 18, 2005 SMRD Requirement 3. Mission Overview 4th para states: ""multi-angle polarimetric measurements with a 7 km circular geometric instaneous field of view (GIFOV)."" SC Performance Spec Requirement 1.1 Mission Overview para 4 states: ""5 km circular geometric instaneous field of view (GIFOV)."" There is a 2 km difference in the field of view.",9/21/06
ProjectC - TIM - 1074,Altitude and Inclination Difference,3,"Artifact Referenced: Glory Project Science and Mission Requirements Document Revision B GSFC 421.7-6.0-04 April 18, 2005 SMRD Requirement 4.2.1 states: ""The Glory satellite shall achieve a sun-synchronous, circular orbit inclined 98.7 degrees ±0.15 degrees (1ó) with a target altitude of 824 km ±30 km (3ó)."" The SC Performance Spec Requirement 2.2.2 states: ""States Equatorial altitude of 705 km and inclination of 98.2 degrees.""",9/21/06
ProjectC - TIM - 1073,TIM Mass Difference,3,"Artifact Referenced: Glory Project Science and Mission Requirements Document Revision B GSFC 421.7-6.0-04 April 18, 2005 SMRD Requirement 5.4.23 states: ""Tbe total TIM mass, including all subsystems, deployment subsystems, deployment mechanisms, mounting hardware, and internal cabling, shall not exceed 55 kg."" Glory TIM Requirements Traceability Matrix 5.1 states: ""TIM mass shall not exceed 57 kg."" Difference of 2 kg between the requirements.",9/21/06
ProjectC - TIM - 1072,SC Performance Spec Requirements have TBDs,3,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 The following SC Performance Spec requirements have TBD entries: 5.5.24, 5,5,26 6.4.6, 6.5.1 6.5.3, 12.7.2.5 12.9.3.2",9/21/06
ProjectC - TIM - 1071,SC Performance Spec Requirements have TBDs,3,Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 The following SC Performance Spec requirements have TBD entries. 6.4.13 6.5.3 12.7.2.5,9/21/06
ProjectC - TIM - 1070,SMRD Requirement 5.4.22 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory Project Science and Mission Requirements Document Revision B GSFC 421.7-6.0-04 April 18, 2005 SMRD Requirement 5.4.22 states: ""The total TIM data volume per orbit shall not exceed 18.4 Mbits. This volume is based on continuous TIC science data collection throughout an entire orbit."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1069,SMRD Requirement 5.4.16 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory Project Science and Mission Requirements Document Revision B GSFC 421.7-6.0-04 April 18, 2005 SMRD Requirement 5.4.16 states: ""The TIM shall implement a normal operations mode to collect and transfer science and calibration data to the spacecraft."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1068,SMRD Requirement 5.4.14 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory Project Science and Mission Requirements Document Revision B GSFC 421.7-6.0-04 April 18, 2005 SMRD Requirement 5.4.14 states: ""The TIM shall remain in safing mode, once initiated by the spacecraft, internal TIM logic, or ground command until commanded out by the spacecraft."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1067,SMRD Requirement 5.4.3 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory Project Science and Mission Requirements Document Revision B GSFC 421.7-6.0-04 April 18, 2005 SMRD Requirement 5.4.3 states: ""During normal operations, the TIM assembly shall be capable of operating continuously with data collected from the TIM instrument during all portions of orbit."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1066,TIM Requirement Traceability Matrix Requirement Numbers Repeat,4,"Artifact Referenced: Glory-TIM Requirements Traceability Matrix (RTM) Document No. GLO-T-0200 2/26/04 Requirement numbers repeat in Glory-TIM Requirements Traceability Matrix (RTM) Document No. GLO-T-0200 2/26/04. For example: requirement number 1.1 is repeated on pages 3,7,10, 12, 15, 24, 26, 27, 29, 30 and 33. Within the document, the requirement numbers between each section repeat (MU FSW, Mechanical, I&T), so that MU FSW section has a requirement numbered 1.1, Mechanical section has a requirement numbered 1.1, etc.. Section 1.1 is an example, however, it should be noted that other requirement numbers repeat as well.",9/21/06
ProjectC - TIM - 1065,SMRD Requirement 5.4.26 has no SC Performance Spec Requirement Child,4,"Artifact Referenced: Glory Project Science and Mission Requirements Document Revision B GSFC 421.7-6.0-04 April 18, 2005 SMRD Requirement 5.4.26 states: ""The TIM shall achieve reliability greater than 0.90 at three years."" Parent requirement has no SC Performance Spec child requirement.",9/21/06
ProjectC - TIM - 1064,SC Performance Spec Requirement 12.6.2.2 has no SMRD Parent,4,"12.6.2.2. states: ""The EPS shall maintain nominal power control for the spacecraft bus during the ascent phase."" This requirement has no SMRD parent.",9/21/06
ProjectC - TIM - 1063,SC Performance Spec Requirement 12.8.2.7 has no SMRD Parent,4,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 12.8.2.7 states: ""EPS shall recover energy balance by the end of the orbit following a glint maneuver orbit."" This requirement has no SMRD parent.",9/21/06
ProjectC - TIM - 1062,SC Performance Spec Requirement 12.8.2.6 has no SMRD Parent,4,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 12.8.2.6 states: ""EPS shall maintain energy balance for each normal operations orbit that has a zero degree roll bias."" This requirement has no SMRD parent.",9/21/06
ProjectC - TIM - 1061,SC Performance Spec Requirement 5.6.11 has no SMRD Parent,4,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 5.6.11 states: ""The FSW shall have the capability to truncate the cloud camera data from 16 bit words to a commandable length between 12 and 15 bits prior to compression.""",9/21/06
ProjectC - TIM - 1060,SC Performance Spec Requirement 5.7.10 has no SMRD Parent,4,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 5.7.10 states: ""The FSW shall provide for commanding and collecting housekeeping telemetry to/from the ACS."" This requirement has no SMRD parent.",9/21/06
ProjectC - TIM - 1059,SC Performance Spec Requirement 12.9.2.14 has no SMRD Parent and Contains TBD,3,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 12.9.2.14 states: ""The reaction wheel control frequency shall be TBD Hz."" This requirement has no SMRD parent and contains TBD.",9/21/06
ProjectC - TIM - 1058,SC Performance Spec Requirement 12.9.2.13 has no SMRD Parent and Contains TBD,3,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 12.9.2.13 states: ""The thruster control frequency shall be TBD Hz."" This requirement has no SMRD parent and contains TBD.",9/21/06
ProjectC - TIM - 1057,SC Performance Spec Requirement 12.9.2.12 has no SMRD Parent,4,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 12.9.2.12 states: ""The accumulated on-time for each thruster shall be determined and supplied for telemetry."" This requirement has no SMRD parent.",9/21/06
ProjectC - TIM - 1056,SC Performance Spec Requirement 12.9.2.11 has no SMRD Parent,4,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 12.9.2.11 states: ""Control actuation shall be provided by the Reaction Wheel Assemblies (RWAs) and Thrusters."" This requirement has no SMRD parent.",9/21/06
ProjectC - TIM - 1055,SC Performance Spec Requirement 12.9.2.10 has no SMRD Parent,4,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 12.9.2.10 states: ""Magnetic momentum control shall be inhibited."" This requirement has no SMRD parent.",9/21/06
ProjectC - TIM - 1054,SC Performance Spec Requirement 12.9.2.9 has no SMRD Parent,4,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 12.9.2.9 states: ""The Orbit Adjust mode shall use the attitude and body rate outputs of the Primary Attitude Determination Logic.""",9/21/06
ProjectC - TIM - 1053,SC Performance Spec Requirement 12.9.2.8 has no SMRD Parent,4,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 12.9.2.8 states: ""The selected thrusters shall be fired for the commanded jet-seconds."" This requirement has no SMRD parent.",9/21/06
ProjectC - TIM - 1052,SC Performance Spec Requirement 6.4.14 has no SMRD Parent,4,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 6.4.14 states: ""ACS recovery from any anomalous attitude in safehold shall take no longer than 30 minutes."" This requirement has no SMRD parent.",9/21/06
ProjectC - TIM - 1051,SC Performance Spec Requirement 12.7.2.14 has no SMRD Parent,4,"Artifact Referenced: Glory Spacecraft Performance Specification Requirements Verification Matrix S919-ER2341 8/26/05 SC Performance Spec Requirement 12.7.2.14 states: ""The CDH shall remain command receptive in Safehold Mode."" Recommend link to SMRD 5.1.25: ""The satellite shall remain command receptive in Safe Hold mode."" This requirement has no SMRD parent requirement.",9/21/06
ProjectC - TIM - 1050,SC Performance Spec Requirement 12.7.2.13 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.2.13 states: ""The RF subsystem shall remain command receptive in Safehold Mode."" This requirement has no SMRD parent.",9/21/06
ProjectC - TIM - 1049,SC Performance Spec Requirement 12.7.2.10 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.2.10 states: ""The CDH uplink hardware shall be command receptive in Safehold mode."" This requirement has no SMRD parent.",9/21/06
ProjectC - TIM - 1048,SC Performance Spec Requirement 12.7.2.9 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.2.9 states: ""The FSW shall be command receptive in Safehold mode."" This requirement has no SMRD parent.",9/21/06
ProjectC - TIM - 1047,SC Performance Spec Requirement 12.7.1.13 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.1.13 states: ""Entry into safehold shall cause the FSW to configure the RF and CDH subsystems to be continuosly command receptive."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1046,SC Performance Spec Requirement 12.7.2.12 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.2.12 states: ""In safehold, the ACS shall maintain an attitude such that the APS cryo-radiiator surface (XZ-plane to the +Y direction) is a minimum of 95 degrees from the sun."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1045,SC Performance Spec Requirement 6.4.15 has no SMRD Parent,4,"SC Performance Spec Requirement 6.4.15 states: ""In safehold, the ACS shall maintain an attitude per 6.4.13, such that the APS cryoradiiator surface (XZ-plane to the +Y direction) is a minimum of 95 degrees from the sun."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1044,SC Performance Spec Requirement 12.7.1.6 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.1.6 states: ""The ACS shall cause the satellite to enter Safehold mode if the sun vector comes within 92 degrees of the spacecraft +Y axis."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1043,SC Performance Spec Requirement 12.7.3.1 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.3.1 states: ""The satellite shall exit Safehold mode only when commanded from the ground."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1042,SC Performance Spec Requirement 12.9.3.4 has no SMRD Parent,4,"SC Performance Spec Requirement 12.9.3.4 states: ""The satellite shall enter Safehold mode if any of the failure conditions listed in 12.7.1 occur while in Orbit Adjust Mode."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1041,SC Performance Spec Requirement 12.9.3.3 has no SMRD Parent,4,"SC Performance Spec Requirement 12.9.3.3 states: ""The ACS shall cause the satellite to enter Safehold mode if the sun vector comes within 2 degrees of the spacecraft XZ plane from the -Y direction. This requirement shall have an enable/disable command capability."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1040,SC Performance Spec Requirement 12.8.3.1 has no SMRD Parent,4,"SC Performance Spec Requirement 12.8.3.1 states: ""The satellite shall enter Safehold mode if any of the failure conditions listed in 12.7.1 occur while in Normal Operations mode."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1039,SC Performance Spec Requirement 12.7.1.11 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.1.11 states: ""The FSW shall cause the satellite to enter Safehold modei n the event that the command scheduler does not contain at least one command."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1038,SC Performance Spec Requirement 12.7.1.10 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.1.10 states: ""The FSW shall cause the satellite to enter Safehold mode if the battery SOC is below 50."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1037,SC Performance Spec Requirement 12.7.1.9 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.1.9 states: ""The FSW shall cause the satellite to enter Safehold mode if the battery temperature exceeds 35°C."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1036,SC Performance Spec Requirement 12.7.1.8 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.1.8 states: ""The FSW shall cause the satellite to enter Safehold mode if the bus voltage falls below 24V."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1035,SC Performance Spec Requirement 12.7.1.5 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.1.5 states: ""Loss of Normal Operations attitude control in ACS algorithms shall cause the satellite to enter Safehold mode."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1034,SC Performance Spec Requirement 12.7.1.4 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.1.4 states: ""EDAC multiple bit errors in either the CDH or ADACS processor memory shall cause the satellite to enter Safehold mode."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1033,SC Performance Spec Requirement 12.7.1.3 has no SMRD Parent,4,"SC Performance Spec Requirement 12.7.1.3 states: ""Timeout of the CDH or ADACS processor watchdog timer (WDT) on-orbit shall cause the satellite to enter Safehold mode."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1032,SC Performance Spec Requirement 10.8.15 has no SMRD Parent,4,"SC Performance Spec Requirement 10.8.15 states: ""MCH shall place incorporate redundant deployment sensors for each solar array wing. The sensors shall indicate solar array deployment when actuated."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1031,SC Performance Spec Requirement 12.5.2.8 has no SMRD Parent,4,"SC Performance Spec Requirement 12.5.2.8 states: ""The FSW shall be able to process instrument SOH telemetry, and forward it to the umbilical telemetry interface for launch pad processing."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1030,SC Performance Spec Requirement 12.5.2.7 has no SMRD Parent,4,"SC Performance Spec Requirement 12.5.2.7 states: ""The EPS shall be able to be commanded to power each instrument whiile on the launch pad to monitor instrument SOH telemetry."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1029,SC Performance Spec Requirement 12.5.2.6 has no SMRD Parent,4,"SC Performance Spec Requirement 12.5.2.6 states: ""The ADACS processor and ADACS cards shall be able to be powered and SOH teleletry monitored while on the launch pad."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1028,SC Performance Spec Requirement 12.5 has no SMRD Parent,4,"SC Performance Spec Requirement 12.5 states: ""Blockhouse Mode (Pre-launch)The Blockhouse Mode consists of all satellite systems operations after launch vehicle mating. This phase is characterized by the spacecraft's reliance on the LV data and power interfaces. The satellite shall provide real-time pre-launch telemetry until launch."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1027,SC Performance Spec Requirement has no SMRD Parent,4,"SC Performance Spec Requirement 12.6.1.1.2 states: ""RF transmitters shall be inhibited in ascent mode."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1026,SC Performance Spec Requirement 12.6.1.1 has no SMRD Parent,4,"12.6.1.1 states: ""The EPS shall inhibit all satellite processor power during the ascent mode. This shall be triggered by detection of the LV umbilical seperation."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1025,SC Performance Spec Requirement 12.5.2.5 has no SMRD Parent,4,"SC Performance Spec Requirement 12.5.2.5 states: ""The EPS shall provide 2 power switches in series to inhibit each RF transmitter's use while mated to the launch vehicle.""",9/20/06
ProjectC - TIM - 1024,SC Performance Spec Requirement 12.3.2 has no SMRD Parent,4,"SC Performance Spec Requirement 12.3.2 states: The I&T GSE shall provide the capability to ""turn-off"" the satellite in a controlled manner such that all satellite equipment is in a known, safe condition prior to power removal."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1023,SC Performance Spec Requirement 12.3.1 has no SMRD Parent,4,"SC Performance Spec Requirement 12.3.1 states: ""The I&T GSE shall provide an emergency satellite Power-OFF switch which removes all external and internal power from the satellite power bus."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1022,SC Performance Spec Requirement 11.2.12 has no SMRD Parent,4,"SC Performance Spec Requirement 11.2.12 states: ""The harness shall provide external test connectors for each spacecraft processor (C&DH, ADACS, and PIP) and 1553 bus, with appropriate in-flight disable circuity."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1021,SC Performance Spec Requirement 11.2.11 has no SMRD Parent,4,"SC Performance Spec Requirement 11.2.11 states: ""All spacecraft test connector signals shall be terminated/protected for flight by test connector covers/plugs."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1020,SC Performance Spec Requirement 12.9.3.1 has no SMRD Parent,4,"SC Performance Spec Requirement 12.9.3.1 states: ""The ACS shall cause the satellite to exit Orbit Adjust mode if commanded to do so."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1019,SC Performance Spec Requirement 12.8.3.2 has no SMRD Parent,4,"SC Performance Spec Requirement12.8.3.2 states: ""The satellite shall exit Normal Operations mode when commanded from the ground."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1018,SC Performance Spec Requirement 12.8.1.2 has no SMRD Parent,4,"SC Performance Spec Requirement 12.8.1.2 states: ""ACS algorithms shall provide the capability to be manually comanded into Normal Operations."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1017,SC Performance Spec Requirement 12.6 has no SMRD Parent,4,"SC Performance Spec Requirement 12.6 states: ""Ascent Mode The Ascent Mode shall be initiated upon LV umbilical seperation (approximately T minus zero) and terminate at satellite seperation from the launch vehicle."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1016,SC Performance Spec Requirement 12.11 has no SMRD Parent,4,"SC Performance Spec Requirement 12.11 states: ""At a minumum, the Glory satellite shall be capable of supporting the following modes: Off, Ground Checkout, Pre-launch (Blockhouse), Ascent, Normal operations, Safe Hold, Orbit-adjust."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1015,SC Performance Spec Requirement 7.7.5 has no SMRD Parent,4,"SC Performance Spec Requirement 7.7.5 states: ""The HPS shall provide sufficient delta-V capability to adjust the orbit eccentricity post launch, and throughout mission life as-required."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1014,SC Performance Requirement 6.4.10 has no SMRD Parent,4,"SC Performance Requirement 6.4.10 states: ""The ACS shall maintain stable +Z lunar pointing for no less than 2 minutes."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1013,SC Performace Spec Requirement 6.4.8 has no SMRD Parent,4,"SC Performance Spec Requirement 6.4.8 states: ""The ACS shall be capable of performing a slew maneuver via stored or ground commands to point the APS boresight to nadir after a lunar calibration within 4 minutes."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1012,SC Performance Spec Requirement 6.4.7 has no SMRD Parent,4,"SC Performance Spec Requirement 6.4.7 states: ""The ACS shall be capable of performing a slew maneuver in less than 4 minutes, via stored or ground commands, to point the APS boresight at the moon while in eclipse."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1011,SC Performance Spec Requirement 3.6.6 has no SMRD Parent,4,"SC Performance Spec Requirement 3.6.6 states: ""The RF Subsystem design for TDRSS Forward and Return link budgets shall have positive RF link margins."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1010,SC Performance Spec Requirement 3.5.6 has no SMRD Parent,4,"SC Performance Spec Requirement 3.5.6 states: ""The RF subsystem shall not be required to close the X-band link during orbits that include a roll bias."" This requirement has no link to an SMRD requirement.",9/20/06
ProjectC - TIM - 1009,SC Performance Spec Requirement 3.5.5 has no SMRD Parent,4,"SC Performance Spec Requirement 3.5.5 states: ""The real-time, stored SOH, and science data shall all be available on the 40 Mbps X-band link."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1008,SC Performance Spec Requirement 3.5.2 has no SMRD Parent,4,"SC Performance Spec Requirement 3.5.2 states: ""The Glory X-band downlink shall have the characteristics as shown below. Table 3.5-1. X-Band Downlink Characteristics."" This requirement has no SMRD parent.",9/20/06
ProjectC - TIM - 1007,SC Performance Spec Requirement 4.2.15 has no SMRD Parent,4,"SC Performance Spec Requirement 4.2.15 states: ""C&DH shall support real-time SOH and stored SOH transmission on the 62.5 kbps S-band link."" This requirement has no SMRD parent.",
ProjectC - TIM - 1006,SC Performance Spec Requirement 3.4.8 has no SMRD Parent,4,"SC Performance Spec Requirement 3.4.8 states: ""The RF Subsystem S-band telemetry downlink (all rates) shall operate with less than 1.0 dB of degradation while simultaneously operating the S-band command uplink."" This requirement has no SMRD parent.",
ProjectC - TIM - 1005,SC Performance Spec Requirement 11.2.9 has no SMRD Parent Requirement,4,"SC Performance Spec Requirement 11.2.9 states: ""The satellite harness shall provide hardline command and teleletry interfaces from the Dual Card Cage to the launch vehicle interface."" This requirement has no SMRD parent.",
ProjectC - TIM - 1004,SC Performance Spec Requirement 4.1.6 is incorrectly traced to SMRD 5.2.27,5,"4.1.6 states: ""The CDH shall adopt the coordinate system as defined in Section 2.7.1"" and is linked to SMRD 5.2.27 which addresses critical or hazardous functions.",
ProjectC - TIM - 1003,SC Performace Spec Requirement 5.7.4 is incorrectly traced to SMRD 5.2.15,5,"5.7.4 states: ""The FSW shall be compatible with the command and telemetry format requirements as defined within the Glory Space to Ground ICD."" and is linked to SMRD 5.2.15 which addresses inertial attitude.",
ProjectC - TIM - 1002,SC Perfmance Spec Child Requirements have no SMRD Parents,4,"The following requirements do not trace up to the SMRD. 5.3.14, 5.3.15, 5.3.16, 5.3.17, 5.7.12, 5.7.13, 5.7.14, 5.7.15, 11.2.2, 11.2.10, 12.5.2.9, 12.5.3.1, 12.6.2.1, 12.6.3.1, 12.6.3.2, 12.7.1.12, 12.7.2.11, 12.6.2.3, 12.8.2.4, 12.8.2.10, 12.8.2.11, 12.8.2.12, 12.9.1.3, 12.9.2.15, 12.9.2.16, 12.9.2.17, 12.9.2.18, 12.9.3.5, 12.9.3.6, 13.2.18, 13.2.19, 13.2.20, 13.2.21",
ProjectC - TIM - 1001,SMRD Requirement 5.1.18 and SC Perfromace Spec 5.5.10 provide conflicting information regarding appendage deployment,3,"It is not clear if appendage deployment is conducted via ground command, autonomously, or a combination of both. Requirement SMRD 5.1.18 states: ""After separation from the launch vehicle, Glory shall autonomously acquire a safe attitude and deploy appendages necessary to maintain vehicle health and safety."" However, Glory SC Performance Spec. 5.5.10 states: ""FSW shall provide the capability to execute appendage deployment upon receiving a command from the ground (ref DN-ProjectC-EPS-004)"".",
ProjectD - TIM - 1182,Possible Inconsistenct in WheelControl RWA selection,3,"In wheel_control.cpp at lines 300-322, the value of locGoodWheelSum (number of ""good"" RWAs) is determined based on the contents of array WheelStatusBad. At lines 349-367, if locGoodWheelSum is 3 (i.e., one wheel is ""not good"") the ""wheels to be used"" (locTorqSelect) are determined based upon the contents of array UseWheel. WheelStatusBad (at this point) appears to reflect the contents of UseWheel (i.e., wheel selected and available) as well as any ""bad wheel data"" indicators received (when so enabled). Thus, if a wheel is selected, available, but has a ""bad data"" indication (and ""detection"" enabled), it will apparently be ""OK"" in UseWheel but ""not OK"" in WheelStatusBad. In such a case, the locGoodWheelSum==3 logic in lines 349-366 will execute, but apparently do nothing (i.e., the torque distribution matrix, etc., will remain at the setting for ""4 good wheels""). It would seem that a wheel with ""bad data"" should probably not received control commands, or, alternately, that the count of wheels to be used for control commanding be computed using the actual term used to differentiate between wheels to be used for control commanding and wheels not so used.",5/17/07
ProjectD - TIM - 1181,Inconsistent Response to Persistent Coarse-to-Fine Pointing Transition Error,3,"In attitude_error.cpp, within method Compute at lines 453-460, term MyGo2AcqSun appears to be set unconditionally if respond2CoarseAttFault is set. In attitude_error.cpp within method Compute at lines 756-761, term MyGo2AcqSun appears to be set when respond2CoarseAttFault is set only if term CoarseAttErrRespEnab (in the Tbl structure for class AttitudeError) is set (and when the vehicle is in ADCS_POINT state). Term respond2CoarseAttFault appears to be set true only in logic in Compute which executes prior to the logic which set MyGo2AcqSun (at line 290 of attitude_error.cpp). Term CoarseAttErrRespEnab in the Tbl structure appears to be used only at the point cited above. It appears that the intent is for CoarseAttErrRespEnab to allow the ground (etc.) to disable ""automatic"" reversion to ACQUIRE_SUN when an excessive amount of time is required to transition from coarse pointing to fine pointing due to persistent inability to meet the initial pointing accuracy limit. If so, the logic does not appear to operate as intended. The logic at lines 453-460 would appear to trigger this reversion regardless of the value of CoarseAttErrRespEnab, and the subsequent logic at lines 756-761 is meaningless (with respect to respond2CoarseAttFault). Even if this supposition is incorrect, it appears that CoarseAttErrRespEnab has essentially no function (the code effectively works the same no matter how it is set). Thus, if the code is correct, the term should presumably be removed or commented out.",5/16/07
ProjectD - TIM - 1180,Coding Error in EMC,2,"IV&V participated in an EMC Code Review at Contractor2 on January 31, 2007. During the review, IV&V noted that code was contained within an “if” statement and would only be executed during that logical branch, even though the code was intended to be executed in the more general case outside of the “if” statement. The error was discovered when comparing the code presented to the design documentation also provided.",4/27/07
ProjectD - TIM - 1179,Command Manager Function exposing low access member information (cmd_seq_extra.cpp - Line 41),4,"File: sfsw/CommandManager/src/cmd_seq_extra.cpp The function 'cmd_sequence_status_block* CommandSequence::getSeqStatBlkPtr()' located at Line 39 of 'cmd_seq_extra.cpp' is a PUBLIC function, whereas the address it is returning at Line 41 [return(&SeqStatBlk);] where SeqStatBlk is PRIVATE.",1/22/07
ProjectD - TIM - 1178,Task Manager contains two symbols with the same name (task_manager.cpp - Line 1521),4,"File: sfsw/TaskManager/src/task_manager.cpp locApid is defined at Line 1193 in 'int32 TaskManager::Process()', and at Line 1521 of the same function, it is defined again with a value of '0' and used only within the 'for' loop Lines 1521-1527. The first defined locApid is continously used throughout the function just 20 Lines down (Line 1541). A different symbol name should be used.",1/22/07
ProjectD - TIM - 1177,Command Manager Switch Case Missing Default (cmd_pcvt.cpp - Line 318),4,"File: sfsw/CommandManager/src/cmd_pcvt.cpp The switch case at Lines 278-318 which checks the Boot Type in order to call 'CmdPCVT::Initialize' does not contain a default, nor does it contain comments detailing the omission, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",1/22/07
ProjectD - TIM - 1176,Possible Unset Data in FFI Status Packet,3,"The output status packet for the FFI Manager (pktdef_ffim_out_status) appears to contain locations for dataSetTimestampSecStart and dataSetTimestampFractionStart, but there appears to be no provision to store any values into these variables. If the ground or some other user of FFI Manager status data expects to find meaningful values there, this would be a problem.",1/22/07
ProjectD - TIM - 1175,Initialization of myCadenceDetected in ffiManager,3,"In FFI manager, it appears that the value of myCadenceDetected is set or altered only in method isrPixelDataReady (to true upon receipt of a long cadence interrupt while ffi processing is active) and in method scienceDataHandler (to false during actual processing of FFI data). It would appear that it would be appropriate to initialize this term (presumably to false), either in the constructor or (perhaps preferably) the Initialize method, as it appears to be within the realm of possibility that its user (method scienceDataHandler) could be entered prior to receiving the first FFI “long” cadence interrupt, leaving it to use a value which has not been formally initialized.",1/22/07
ProjectD - TIM - 1174,"Missing default case in function TelemetryManager::ProcessCommand - file tlm.cpp, line 773",3,"This function has a large switch statement that lacks a default. The field being evaluated is a 16 bit unsigned integer as opposed to an enumeral, which means the compiler is unable to evaluate the range of the discrete variable being evaluated. In cases like this it is valuable to provide a default case to catch out-of-range values. The logic depends on each case being handled by the switch statement. The code also violates violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",1/22/07
ProjectD - TIM - 1173,Corrections to Short Cadence Collateral Binning,3,"In scManagerScience.cpp, at lines 942-946, in method processTargetTable, the pixel picked up for “binning” using pixelGet will be from column locCol. The value of locCol at this point appears to have been set at line 739 reflecting the column obtained for the “target center” from the target file. It appears that the intent of the logic between lines 924 and 1002 is to sum (“bin”) the pixel values across all “masked rows” for each column in which an aperture pixel for the target exists. It would appear that the existing logic will always give the “binned” value for the column of the “target center”, and that the intent would be satisfied by instead using the pixels in locColumn in the call to pixelGet. A similar comment applies to the pixelGet invocation at lines 1028-1023 of scManagerScience.cpp (for “smear rows”).",1/22/07
ProjectD - TIM - 1172,Improvements to FPADM Verify Logic,3,"There appear to be two additional checks that could be added to the verifyTargetTable method in lcManagerScience to protect against and/or identify table anomalies / corruptions: - if the “number of targets” value for a given module/output (extracted from the module/output header record into locNumTargets) was excessive, it appears to be possible for the “middle loop” in this method (and in method processTargetTable) to run off the end of the table (i.e., for pTargetTable to reach or exceed locEndAddress) and there does not appear to be any protection against this possible occurrence (note that pTargetTable is checked against locEndAddress in the outer loop, but not in the middle loop) - if the particular aperture referenced for a given target (extracted term locAperture in the middle loop) was never defined in the associated aperture file, its extracted pixel count (term locNumApPixels) should be zero (note that processTableApertureBgCmd and processTableApertureSciCmd in fpaDataManager both zero out their pointer tables before populating them). It would appear that no “legitimately used” aperture should contain zero pixels. Although use of a zero pixel aperture would not cause internal software anomalies such as running off the ends of tables, it would appear worthwhile to in some way report that this is occurring, as it would presumably indicate the presence of corrupt or inconsistent target / aperture files. Analogous comments would appear to apply to the short cadence logic.",1/22/07
ProjectD - TIM - 1171,Possible FPADM Inconsistencies Due to Phasing,3,"Long cadence science processing appears to be enabled by receipt of a Science Mode command which requests a transition from IDLE mode to LC or LC_SC mode. When this occurs, it appears that lcManager.cpp method scienceProcessingEnable will permit long cadence science data processing on the next subsequent long cadence termination but not before (sets processingEnabled true and myCadenceBoundaryDetected false), and initializes the terms used to determine the momentum-dump and fine-point indicators for the configId returned with the next long cadence science data (myFinePoint and myMomentumDump) to the last reported statuses from ADCS. Any drop out of fine point or initiation of momentum dump subsequent to receipt of the Science Mode command and prior to cadence end should be reflected in the indicators via method processStatusSystemCmd. It does not appear that the Science Mode command precipitates any hardware commands in FPA Data Manager, and it appears that all cadence interrupts will occur without direct effect from this command. Thus, it would appear possible (at least within the purview of FPA Data Manager) that a Science Mode command initiating long cadence processing could occur at any point during a long cadence (i.e., at any point between two long cadence interrupts), and that the initial long cadence whose science data is processed following such initiation of long cadence science processing will, in general, involve some photometer data gathered before long cadence science processing was in effect in lcManager (i.e., before receipt of the Science Mode command). If fine point had not been in effect and/or momentum dump had been in effect at the beginning of that initial long cadence, but fine point had been entered and momentum dump completed prior to receipt of the “enabling” Science Mode command, then the reported configId would apparently not contain flags indicating the “momentum dump” warning or the “out of fine point” warning, even though some of the data had been gathered when those “warning” conditions had been in effect. For long cadences after the initial following “science data processing enable”, the logic seems to be carefully designed so that a momentum dump or out of fine point status at any point during the long cadence results in the setting of the associated “warning” bits in the configId. Thus, the effective definition of these “warning” bits appears to differ on such an “initial” long cadence and subsequent long cadences. Analogous comments would appear to apply to the short cadence logic, and perhaps FFI manager as well. In addition, it would appear that short cadence processing would initiate at the same time as long cadence processing if the new science mode is LC_SC. If, as supposed above, this could occur at any time during the hardware long cadence, then any number of short cadences (up to, of course, the number of short cadences in a long cadence) could be processed by the short cadence manager before the processing of the first long cadence by the long cadence manager. Thus, the short cadence manager’s cadenceCount counter-term, at each long cadence termination point, would be (ai + (nl-1) * nsl), where nl is the number of long cadence completions since entering LC_SC science mode, nsl is the number of short cadences per long cadence, and ai (representing cadenceCount at the time of the first long cadence end since entering LC_SC) could be any number between 0 and nsl. The logic in the scienceDataHandler method of scManagerScience appears to clear mypPreviousDataSet whenever cadenceCount reaches an integer multiple of nsl, and to process a baseline whenever cadenceCount reaches an integer multiple of nsl * nb (where nb is the long cadence baseline interval). The intent here appears to phase the clearing of mypPreviousDataSet with the clearing of SDA/SFDA accumulators upon a long cadence and to phase the short cadence baseline with the long cadence baseline. However, it appears that this would only actually occur as intended if ai were either 0 or nl, neither of which appears to be guaranteed by looking at the logic strictly within the purview of FPA Data Manager. We are aware that the appropriate command sequences, which we do not have, might make it impossible for a momentum dump or out-of-fine-point condition to exist during the pre-moding part of such an “initial” long cadence, or for short cadence processing to initiate in the “middle” of a hardware long cadence; but based on what we have, it appears to be possible. It may also be the case that the ground always treats such an “initial” long cadence as suspect, making the dump/finepoint warning bits moot in such a case. However, barring some such relevant fact of which we are unaware, there appear to be inconsistencies here.",1/22/07
ProjectD - TIM - 1170,Possible Inaccurate Setting of SFDA Telemetry Item in FPADM,3,"In lines 1031-1032 of fpaDataManager.cpp, in method processDataCollectionSfda: mypCvt->telemStatusSfda.sdrcBStatus.lcLdeOosDetected = locSfdaStatus.sdrcAMemoryStatusRegister1.lcLdeOutOfSyncDetected; it appears that a status indicator obtained from the SFDA driver for SDRC A is being stored in the output packet for SFDA engineering data in a slot for SDRC B.",1/22/07
ProjectD - TIM - 1169,Mode Manager Data Checking on PositionValueSpeci Data in PKTID_MOM_IN_REPLACE_ESI message,3,"When a PKTID_MOM_IN_REPLACE_ESI message is received by processUpdates, the uint8 Position elements of the position_value_pair objects PositionValueSpeci are placed in the created EventStateIdentity object (in ArrayWithSize<Identity> myIdentity) without bounds/reasonableness checking within processUpdates. The values of these elements may subsequently be used to index the “array” within the myEventTruth ArrayWithSize element. Hard to locate anomalies could result if these values are sufficiently unreasonable to cause the protective provisions for the ArrayWithSize [] operator to be triggered due to an invalid “index”.",10/6/06
ProjectD - TIM - 1168,FSW86 Incorrect Code Trace Column,3,"ModeManager::Process (sets myEventTruth[INITIALIZATION_COMPLETE], supervises processing), ModeManager::updateAllEventTruthEvts (sets other relevant myEventTruth entries), and ModeManInitializer (defines conditions for “default transition”) all appear to be involved in fulfilling this requirement. In the DOORS flight software requirements, it would appear that these references should be cited in the Code Trace column for FSW86.",10/6/06
ProjectD - TIM - 1167,FSW82 Incorrect Code Trace Column,3,"The default Flight Segment Mode appears to be routed by ModeManager::setFirstTransition, invoked (normally) by ModeManager::ProcessUpdates. In the DOORS flight software requirements, it would appear that these references should be cited in the Code Trace column for FSW82.",10/6/06
ProjectD - TIM - 1166,FSW2111 Has Blank Code Trace Column,3,"In the DOORS flight software requirements, the Code Trace column appears to be blank for FSW2111.",10/6/06
ProjectD - TIM - 1165,Protection Against Potential ModeManager Attempt to Access a Zero-Size ArrayWithSize,3,"In ArrayWithSize.cpp, it would seem desirable to protect against attempting to access items in a zero-size array with the [] operator (it would apparently now attempt to return the [-1] element of an array based on a possibly null pointer). It might also be desirable to issue an event report if an attempt is made to resize an array to 0 or copy a zero-sized array.",10/6/06
ProjectD - TIM - 1164,FSW1487 Inconsistency Between CSC and Code Trace Columns,3,"In the DOORS flight software requirements, FSW 1487 has “Data Encoder Manager” as its entry in the “CSC” column, but all of the classes and methods listed for it in the “code trace” column appear to be FPA Data Manager elements.",10/6/06
ProjectD - TIM - 1163,DataEncoder Response to Failure to Obtain New Packet from Pool,3,"If a failure is returned in the attempt to obtain a new CCSDS packet from the packet pool using the get method of object_pool.h as invoked at line 488 of data_encoder.cpp in method pushPacketAndPrepareNext, the initial responses are to increment the engineering data error counter and to return a failure, which will be passed through the user call which invoked the logic back to the caller. This seems reasonable. However, in addition, the last valid science data packet, whose pointer was just sent to (presumably) the SSR, has all of its data cleared (see lines 537-549 of data_encoder.cpp). It is not clear why a failure to obtain a new CCSDS packet should cause the erasure of the (presumably perfectly valid) previous science data packet which has just been submitted to (presumably) the SSR for storage, but not yet utilized and/or returned to the object pool for reuse.",10/6/06
ProjectD - TIM - 1162,"Mechanism Manager Public Functions Exposing Protected Data (sam_hg_antenna.cpp - lines 963, 967, 971 & 975)",3,"sam_hg_antenna.cpp - Lines 963, 967, 971 & 975 are public functions exposing pointers to protected data of MyYGimbal, MyYPotentiometer, MyZGimbal & MyZPotentiometer.",10/6/06
ProjectD - TIM - 1161,Mechanism Manager Hiding Non-Virtual Member (sam_imp_impl.h - lines 127 & 141),3,"sam_imp_impl.h - Lines 127 and 141, Functions initRelations & cleanUpRelations are overwriting their base class (SAM_ImplBase) functions which are not virtual functions.",10/6/06
ProjectD - TIM - 1160,Inconsistent Use/Definition of DataEncoder Variable myCurrent32BitWord,3,"The logic in method pushPacketAndPrepareNext to determine the number of meaningful bytes (locSourceDataLength) in the data block associated with the CCSDS package about to be transmitted to (presumably) the SSR, at lines 367-395 of data_encoder.cpp, appears to assume that the input value of myCurrent16BitWord or myCurrent32BitWord (whichever is applicable) represents the C-index (zero based) of the first unused element in array mypPacket16BitData or array mypPacket32BitData (whichever is applicable), unless the 32-bit case applies and myBitPosition has been altered by method encode from its initial setting (32), in which case the input value of myCurrent32BitWord is assumed to be the C-index of the last used element in array mypPacket32BitData. Some examples: (16-bit case) if myCurrent16BitWord is 20, then myCurrent32BitWord is set to 10, and locSourceDataLength is set to 40 bytes, which covers the c-index values 0 through 19 in mypPacket16BitData (32-bit case with myBitPosition == 32) if myCurrent16BitWord is 15, then locSourceDataLength is set to 60 bytes, which covers the c-index values 0 through 14 in mypPacket32BitData (32-bit case with myBitPosition != 32) if myCurrent32BitWord is 15, then myCurrent32BitWord is incremented by 1 to 16, and locSourceDataLength is set to 64 bytes, which covers the c-index values 0 through 15 in mypPacket32BitData This logic appears to match well with the logic in method encode, and works for data loaded by put16 or put32 if the science data is output via an external call to pushPacketAndPrepareNext (e.g., by calling cadenceComplete). However, if the science data is output by put16 or put32 internally calling pushPacketAndPrepareNext due to filling of the science data buffer, the value of myCurrent16BitWord or myCurrent32BitWord (whichever is applicable) appears to represent at that point the C-index of the last used element in array mypPacket16BitData or array mypPacket32BitData (whichever is applicable), since the value of myCurrent16BitWord or myCurrent32BitWord is not incremented between the storage of the last data element and the calling of pushPacketAndPrepareNext. This appears to be inconsistent with the assumption made by pushPacketAndPrepareNext, and will apparently result in a value of locSourceDataLength which is 4 bytes too low from put32, and from put16 when the last C-index value is even.",10/6/06
ProjectD - TIM - 1159,Mechanism Manager Hiding Non-Virtual Member (sam_fb_impl.h - lines 158 & 184),3,"sam_fb_impl.h - Lines 158 and 184, Functions initRelations & cleanUpRelations are overwriting their base class (SAM_ImplBase) functions which are not virtual functions.",10/6/06
ProjectD - TIM - 1158,Mechanism Manager Possible Null Pointer (sam_fp_mon_agent.cpp - line 179),3,"sam_fp_mon_agent.cpp - Line 179, pointer *Impl has potential to evaluate to null due to the dynamic cast operation. Impl is used to assign on lines 180, 198 & 199",10/6/06
ProjectD - TIM - 1157,Memory Manager Switch with NO Case (filesync.cpp - line 234),4,"filesync.cpp - Line 234, there is no case statements for the switch case, only a default case. The switch case is unnecessary logic.",10/6/06
ProjectD - TIM - 1156,Memory Manager Switch Case Missing Default (log.cpp - line 1061),4,"log.cpp - The switch case at Lines 1053-1061 do not contain a default, nor do they include a comment, detailing the falling through. Also no fall through comment of the case statement, violating 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1155,Memory Manager Missing Condition if Case (log.cpp - line 452),3,"log.cpp - Line 452, ""if"" case is missing condition.",10/6/06
ProjectD - TIM - 1154,"Functions may throw exceptions within ~Messaging () (messaging.cpp Lines 296,302,303,304,305,308)",3,"File: messaging.cpp The destructor ~Messaging, defined at Line 281 of messaging.cpp, contains 6 function calls that may possibly throw exceptions. *********************** Code Excerpt: messaging.cpp /////////////////////////////////////////////////////////////////////////////// // // FUNCTION NAME: Messaging::~Messaging() ... ... // // NOTES: The destructor is not context safe. This should not be run while // tasking is active. On DI/OE, Messaging objects are only // destructed in unit tests, after tasking has ended. // /////////////////////////////////////////////////////////////////////////////// Messaging::~Messaging() /****LINE 281****/ { if (NULL != itsCommunicationPacket) { delete itsCommunicationPacket; } itsCommunicationPacket = NULL; // Decrement instance count, we use this to determine when we can // close gvutils_vio1Standard ourInstanceCount--; if (ourInstanceCount == 0) { // Get rid of our semaphore semDelete(ourBufferSemaphore); /****LINE 296****/ // We only redirect output if not REAL_GSE #ifndef REAL_GSE // We are the last Messaging class in the system. Time to restore // the I/O. ioGlobalStdSet(STD_IN,ourOldStdIn); /****LINE 302****/ ioGlobalStdSet(STD_OUT,ourOldStdOut); /****LINE 303****/ ioGlobalStdSet(STD_ERR,ourOldStdErr); /****LINE 304****/ logFdSet(ourOldStdOut); // Output logMsg to stdout. /****LINE 305****/ // Close the file descriptor close(gvutils_vio1Standard); /****LINE 308****/ gvutils_vio1Standard = 0; #endif // And set our one-time setup flag ourOneTimeSetupDone = FALSE; } }",10/6/06
ProjectD - TIM - 1153,Pointer member mypMessaging not freed by the destructor (table_manager.cpp Line 135),3,"File: table_manager.cpp Function: ~TableManager() The pointer member 'TableManager::mypMessaging', defined at Line 405 of table_manager.h, does not get freed nor zeroed by ~TableManager (Lines 135-143). Determine whether the pointer member should be freed or assign it to 0. ****************************** Code Excerpt: table_manager.cpp TableManager::~TableManager ( void ) /****LINE 135****/ { // Deallocate memory from the table if (mypStartAddress != NULL) { delete(mypStartAddress); mypStartAddress = NULL; } } ****************************** Code Excerpt: table_manager.h /** * Messaging Class to use for EVRs. This class does not have its own * messaging object. This class uses the messaging object of the * application that creates it. */ Messaging* mypMessaging; /****LINE 405****/",10/6/06
ProjectD - TIM - 1152,Command Manager Switch Case Missing Default (cmd_sequence.cpp - Line 336),4,"File: cmd_sequence.cpp The switch case at Lines 250-336 does not contain a default, nor does it contain comments detailing the omission, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1151,Command Manager Switch Case Missing Default (cmd_seq_eng_ex2.cpp - Line 978),4,"File: cmd_seq_eng_ex2.cpp The switch case at Lines 949-978 does not contain a default, nor does it contain comments detailing the omission, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1150,Command Manager Switch Case Missing Default (cmd_mgr_extra.cpp - Line 1416),4,"File: cmd_mgr_extra.cpp The switch case at Lines 1338-1416 does not contain a default, nor does it contain comments detailing the omission, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1149,Command Manager Switch Case Missing Default (cmd_mgr_extra.cpp - Line 1110),4,"File: cmd_mgr_extra.cpp The switch case at Lines 965-1110 does not contain a default, nor does it contain comments detailing the omission, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1148,Command Manager Switch Case Missing Default (cmd_immediate_command.cpp - Line 686),4,"File: cmd_immediate_command.cpp The switch case at Lines 582-686 does not contain a default, nor does it contain comments detailing the omission, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1147,Public function returning protected data (file_class.cpp Line 508),4,"File: file_class.cpp Function: getFname() The function getFname, defined at line 506 of file_class.cpp returns fName, a protected array. The function directly above, getFd, defined at line 484, is similar, only that it is made a const public function. Evaluate getFname and determine whether it should be made a const public function as well. *************************** Code Excerpt: file_class.h protected : ... int Fd; //## attribute Fd /****LINE 175****/ ... ... aspen_filename Fname; //## attribute Fname /****LINE 188****/ ***************************** Code Excerpt: file_class.cpp int File::getFd() const { /****LINE 484****/ //#[ operation getFd() return Fd; //#] } ... char* File::getFname() { /****LINE 506****/ //#[ operation getFname() return Fname; //#] }",10/6/06
ProjectD - TIM - 1146,Memory Manager - Array Deletion in Log Destructor (log.cpp - line 464),3,log.cpp - Line 464 myLogEntries is an array and should be deleted via delete [].,10/6/06
ProjectD - TIM - 1145,SUROM Inadvertent Commenting (strfn.h - line 10),3,"strfn.h - The function strupr() is commented out in the header file, while still being defined in strfn.c at Line 16 and being called twice (Line 294 and Line 485) of emcAsm.c. The other functions commented out (strrev and itoa) are not used elsewhere in the Build. The file does not contain any descriptor comments (name, purpose, author, etc.), bad coding practice, violating 13.2.2 (File Level Documentation) and 13.3 (Documentation Descriptions for Implementation Files) of the ProjectD FSW Coding Standard (ProjectD.FSW.DFM.087 7/22/02).",10/6/06
ProjectD - TIM - 1144,Thermal Manager Switch Case Missing Default (therm_cvt.cpp - lines 525 & 720),4,"therm_cvt.cpp - The switch case at Lines 502-525 and 702-720 do not contain a default, nor do they include a comment, detailing the falling through. Also no fall through comment of the case statement at Line 505 to the case statement at Line 506, violating 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1143,Fault Manager Switch Case Missing Default (FaultMonitorSet.cpp - line 1383),4,"FaultMonitorSet.cpp - The switch case at Lines 1307-1383 do not contain a default, nor do they include comments detailing the falling through of case statements to the next case statement, which violates 10.3 (Switch Statements) of the ProjectD FSW Coding Standard (ProjectD.DFM.FSW.087 7/22/02).",10/6/06
ProjectD - TIM - 1142,"Incorrect or ambiguous error-handling in routine CommunicationPacket::Send (communication_packet.cpp, line 665)",3,"The error-handling code beginning on line 665 of CommuncationPacket::Send (communication_packet.cpp), is apparently intended to protect against divide-by-zero (an erroneous case where the CCSDS header length and total packet length are the same - in other words a zero-length packet). The code actually checks for either zero or one, and reports either case as the same error ""SEND_DEFAULT_ERROR."" The code sets an error flag, but keeps processing as though there is no problem. While this helps maintain a single entry/exit point in the routine, and reduces the amount of nesting, to continue processing in the presence of an error seems counter-intuitive to the maintainer. The logic works by happenstance, as when it checks for a reminder (sic) of packet data, the modulus operation results in zero (because any-integer modulus zero or one results in zero) and so an erroneous Send is avoided. Relevant code snippet: (line 664...) // check for divide by zero if(((dest_pkt_size - CCSDS_HEADER_SIZE) - 1) > 0) { // Calculate the number of segment to send the entire data. MessageNum = src_data_size/(dest_pkt_size - CCSDS_HEADER_SIZE) - 1; } else { // don't send any messages, there was an error MessageNum = 0; ret_val = SEND_DEFAULT_ERROR; } /// to keep track of a reminder bool8 reminder_flag = false; // keep track of the data size previously send out uint32 prev_data_len = 0; CopyDataLength = 0; // Check if the last packet will be smaller (if a reminder exist) if( (src_data_size % (dest_pkt_size - CCSDS_HEADER_SIZE)) != 0 ) { // there is a reminder, add one more packet for the left over. MessageNum++; reminder_flag = true; } // repeat this for each segment for( int32 segm_no = 0; segm_no <= MessageNum; segm_no++ )",10/2/06
ProjectD - TIM - 1141,Missing CSC Trace for FSW216,3,The DOORs CSC field is blank for FSW216 “The FSW shall route the start and end address of data stored in CTB Engineering Data Storage memory in Engineering Data.” (the “Detailed Design Trace” is to NIM-TIM).,7/19/06
ProjectD - TIM - 1140,Missing CSC Trace for FSW2079,3,"The DOORs CSC and “Detailed Design Trace” fields are blank for FSW2079 “The FSW shall store fault log data in CTB EDS in a circular buffer fashion such that in the event of an overflow the newest fault information is kept and the oldest data is discarded.”. A similar comment applies to FSW2111, FSW2113, FSW2114, FSW2104, FSW2106, FSW2107, and FSW1845.",7/19/06
ProjectD - TIM - 1139,Questionable CSC Tracing for FSW1392,3,"The DOORs Detailed Design Trace” for FSW1392 “The FSW shall control the power enables to the LDE LVPS (LPS) on command. NOTE: This is controlled via the NIC.” implies the associated LDE power function is performed by the FPA Data Manager, while the traced DOORs CSC is Power. LDE power seems to be discussed in the NIM-FPA (see setLdeCcdPower and setLdeAdcPower methods) but not in the Power CSC Detailed Design.",7/19/06
ProjectD - TIM - 1138,Possible Omitted CSC Trace for FSW1355/1386,3,"The DOORs “Detailed Design Trace” for FSW1355 “The FSW shall collect health and status data from the LDE and make them available in Engineering Data.” and FSW1386 “The FSW shall be able to detect errors generated by the LDE in support of Fault Protection, as defined in the SP0039-903 (FPDD).” references the PEDM Design Document (apparently correctly), but Photom Eng Data Mgr does not appear to be listed as a CSC in DOORs for either. In both cases, FPA Data Manager is listed in both the trace (presumably correctly) and as a CSC.",7/19/06
ProjectD - TIM - 1137,Missing CSC Trace for FSW449,3,The entry for FSW449 “The FSW shall enable or disable sending commands to the Reaction Wheel control hardware on command.” in the “CSC” field is blank. It would appear that ADCS should be listed in the “CSC” field for this requirement.,6/22/06
ProjectD - TIM - 1136,Questionable CSC Trace for FSW1992,3,"FSW1992 “The FSW shall packetize all science data in CCSDS format prior to storage in the Solid State Recorder in accordance with the KP-116 (FS-GS ICD).” has a blank “Detail Design Trace”, but is traced in the “CSC” field to the FPA Data Manager. It appears from the design documentation (e.g., Figure 16 of ProjectD.DFM.FSW.068.doc and Section 1 of ProjectD.DFM.FSW.076.doc) that CCSDS packetization of photometric science data is done in the Data Encoder Manager, and the “CSC” field should therefore contain Data Encoder Manager.",6/22/06
ProjectD - TIM - 1135,Questionable CSC Trace for FSW1552/1553,3,"The entries for FSW1552 “The FSW shall collect operational heater current, voltage and status from the EDHC and make it available in the ancillary engineering data.” and FSW1553 “The FSW shall collect operational heater setpoint status from the EDHC and make it available in health and status engineering data.” in the “Detail Design Trace” field indicate that the actual reporting of the associated data is performed by the Photometer Engineering Data Manager. However, the only reference in the “CSC” field is to the NIM FPA. It would appear that “Photom Eng Data Manager” should also be listed in the “CSC” field for these requirements.",6/22/06
ProjectD - TIM - 1134,Questionable CSC Trace for FSW1898,3,"(Analogous comments apply to FSW1899, FSW1900, FSW1901, FSW1902, FSW1903, FSW1904, FSW2048, FSW2050, FSW2051, FSW1432, FSW1434, FSW1435, and FSW1988) The entry for FSW1898 “The FSW shall maintain two Target Aperture Definiton Tables. NOTE: Two tables are required. One is being used, while the other can be updated.” references (only) TargetFS and Memory Manager in its “Detail Design Trace” field, but references only FPA Data Manager in its “CSC” field. The “Detail Design Trace” appears to be correct, in that the FPA Data Manager Detailed Design does not appear to directly address the maintenance of multiple tables (nor does it appear to address the updating of the actual table; it does appear to address the processing of the selected one of the two tables into a format it finds useful).",6/12/06
ProjectD - TIM - 1133,Missing CSC Trace for FSW1548,3,"The entry for FSW1548 “The FSW shall turn power to the operational heaters on and off, on command.” in the “CSC” field is blank. However, the “Detail Design Trace” field traces (apparently properly) to a method in the NIM FPA detailed design. It would appear that NIM FPA should be listed in the “CSC” field for this requirement. Note there is no indication in the NIM FPA design document that it directly processes any commands, and its section 2.7.1 indicates that it does not receive commands directly. Assuming that this is the case, presumably some application processes such a command, so that application should apparently also be listed in the “CSC” field for this requirement.",6/12/06
ProjectD - TIM - 1132,Questionable CSC Trace for FSW2097,3,"Requirements FSW2097 “The FSW shall bin all black level pixels from each virtual smear row selected for binning, into a single black level measurement to obtain the virtual smear measurement for short cadence targets. NOTE: If eight rows are used to measure virtual smear, and eight columns are used to calculate black level for long cadences, then for short cadences, 64 pixels must be added together to obtain the short cadence black level for virtual smear. The same columns should be used as for calculating black level for long cadences.” and FSW2098 “The FSW shall bin all black level pixels from each masked smear row selected for binning, into a single black level measurement to obtain the masked smear measurement for short cadence targets. NOTE: If eight rows are used to measure masked smear, and eight columns are used to calculate black level for long cadences, then for short cadences, 64 pixels must be added together to obtain the short cadence black level for masked smear. The same columns should be used as for calculating black level for long cadences.” appear not to be traced to any CSC. It does not appear that they are “general” requirements not traceable to specific CSCs, and that they would be appropriately traced to FPA Data Manager.",6/12/06
ProjectD - TIM - 1131,Questionable CSC Trace for FSW2014,3,"The entry for FSW2014 “The FSW shall set the number of co-additions for the Full Field Image (FFI) accumulation period on command.” in the “CSC” field is “NIM FPA”. However, there is no indication in the NIM FPA design document that it directly processes any commands, and its section 2.7.1 indicates that it does not receive commands directly. Assuming that this is the case, presumably some application (presumably FPA Data Manager) processes such a command, that application should apparently also be listed in the “CSC” field for this requirement.",6/12/06
ProjectD - TIM - 1130,Questionable CSC Trace for FSW2093,3,"The entry for FSW2093 “The FSW shall set the number of short cadence periods in a long cadence accumulation period on command.” in the “CSC” field is “NIM FPA”. However, the command to perform this function is apparently processed by the FPA Data Manager, which then calls a method in NIM FPA (according to the “Detail Design Trace” field). It would appear that FPA Data Manager should also be listed in the “CSC” field for this requirement.",6/12/06
ProjectD - TIM - 1129,Questionable CSC Trace for FSW1443,3,"The entry for FSW1443 “The FSW shall set the number of co-additions for the short cadence accumulation period on command.” in the “CSC” field is “NIM FPA”. However, the command to perform this function is apparently processed by the FPA Data Manager, which then calls a method in NIM FPA (according to the “Detail Design Trace” field). It would appear that FPA Data Manager should also be listed in the “CSC” field for this requirement.",6/12/06
ProjectD - TIM - 1128,Questionable CSC Trace for FSW1441,3,"The entry for FSW1441 “The FSW shall set the integration period of the science CCDs on command.” in the “CSC” field is “NIM FPA”. However, the command to perform this function is apparently processed by the FPA Data Manager, which then calls a method in NIM FPA (according to the “Detail Design Trace” field). It would appear that FPA Data Manager should also be listed in the “CSC” field for this requirement.",6/12/06
ProjectD - TIM - 1127,"Returning private data via pointer - cmd_seq_extra.cpp, line 41",3,cmd_sequence_status_block* CommandSequence::getSeqStatBlkPtr() { //#[ operation getSeqStatBlkPtr() return(&SeqStatBlk); //#] } SeqStatBlk is private data returned via a pointer by a public function.,2/17/06
ProjectD - TIM - 1126,"Shallow copy in assignment operator - tlm_subscription.cpp, line 236",3,The assignment operator: void Subscription::operator=(pktdef_tlm_in_modify_subscription_list Mod) {... does not assign a value to Subscription::Message,2/16/06
ProjectD - TIM - 1125,"Shallow copy in assignment operator - tlm_subscription.cpp, line 271",3,The assignment operator: const Subscription & Subscription::operator=(const Subscription & Sub) {... does not assign values to the following member data: Message unSubscribe,2/16/06
ProjectD - TIM - 1124,"Assignment operator in Subscription class (tlm_subscription.cpp, line 171) does not check for assignment to this",5,The assignment operator does not check for assignment to self.,2/16/06
ProjectD - TIM - 1123,Downward Trace from KAV-3449,3,"The avionics requirement KAV-3449 ""The NIC shall monitor the ADCS at 10Hz or faster."" appears to have no downward trace. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1122,Downward Trace from KAV-3444,3,"The avionics requirement KAV-3444 ""The NIC shall monitor the flight processor with a watchdog timer."" appears to have no downward trace. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1121,Downward Trace from KAV-3268,3,"The avionics requirement KAV-3268 ""The Avionics shall select pixels of interest from the co-added CCD frame data for processing, upon command."" appears to be traced downward only to FSW1447, which specifies that LDE data collection start on command. This would not appear to cover much of the content of the requirement, e.g., “select pixels of interest”. It would appear that some additional downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1120,Downward Trace from KAV-2960,3,"The avionics requirement KAV-2960 ""The Avionics shall co-add a minimum of 400 CCD frames without rollover."" appears to have no downward trace. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1119,Downward Trace from KAV-3847,3,"The avionics requirement KAV-3847 ""The Avionics shall transmit real-time engineering data after the Flight Segment has entered the Safe Attitude Hold Mode."" appears to have no downward trace. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1118,Downward Trace from KAV-1567,3,"The avionics requirement KAV-1567 ""The Avionics shall transition from Avionics Off mode to Idle mode in a controlled, repeatable sequence during Flight Segment Bootup Mode."" appears to have no downward trace (except to KAV requirements, which do not appear to trace downward to hardware or software requirements). It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1117,Downward Trace from KAV-3199,3,"The avionics requirement KAV-3199 ""The Avionics shall have a pixel data interface with the LDE."" appears to have no downward trace (except to two KAV requirements, which themselves have no downward traces beyond KAV). It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1116,Downward Trace from KAV-3373,3,"The avionics requirement KAV-3373 ""The Avionics shall provide data buffering for two rate sensors."" appears to have no downward trace. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1115,Downward Trace from KAV-4055,3,"The avionics requirement KAV-4055 ""The resolution of the Photometer temperatures used for engineering data shall be less than 1° C."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/21/05
ProjectD - TIM - 1114,Requirement SC524 appears to be childless,3,"The spacecraft requirement SC524, ""Upon entering Emergency Mode, the spacecraft fault detection and response process shall autonomously configure the Flight Segment to receive and execute commands from the ground."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1113,Requirement SC523 appears to be childless,3,"The spacecraft requirement SC523, ""The Flight Segment shall be capable of entering a designated safe configuration via ground command."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1112,Requirement SC422 appears to be childless,3,"The spacecraft requirement SC422, ""Survival heater circuits shall remain on during undervoltage occurrences"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1111,Requirement SC2467 appears to be childless,3,"The spacecraft requirement SC2467, ""The Flight Segment shall provide onboard autonomous operations of:- command verification - command execution - momentum management - thermal control - onboard memory management."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1110,Requirement SC2465 appears to be childless,3,"The spacecraft requirement SC2465, ""No single fault shall cause the Spccecraft to prevent the activation of its attitude control system following launch vehicle separation."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. Updated on Sept 28, 2005 with links to Ref1021.",10/6/05
ProjectD - TIM - 1109,Requirement SC2455 appears to be childless,3,"The spacecraft requirement SC2455, ""The Spacecraft software shall tolerate multiple indications of a single fault."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. Updated Sept 28 with links to Ref 1016 and Ref1023",10/6/05
ProjectD - TIM - 1108,Requirement SC2454 appears to be childless,3,"The spacecraft requirement SC2454, ""The Spacecraft shall respond only when a failed test meets prescribed persistence criteria."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. Updated Sept 28, 2005 with links to Ref1023, Ref1021 and Ref1016.",10/6/05
ProjectD - TIM - 1107,Requirement SC2453 appears to be childless,3,"The spacecraft requirement SC2453, ""When a mission critical event requires initiation or termination via autonomous event detection, physically or functionally redundant event detectors shall be used."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1106,Requirement SC2452 appears to be childless,3,"The spacecraft requirement SC2452, ""When an autonomously detected error causes a severe response (e.g. downlink loss, large use of expendables), physically or functionally redundant error detectors shall be used."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1105,Requirement SC2451 appears to be childless,3,"The spacecraft requirement SC2451, ""Monitors used by Flight Segment fault protection shall be available for downlinking in engineering telemetry."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1104,Requirement SC2450 appears to be childless,3,"The spacecraft requirement SC2450, ""The Spacecraft shall perform limit checks on sensed or computed data that is to be subsequently checked for limit violations."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. Spec updated Sept 28, 2005 with links to REf1016, Ref1021, Ref1023 and Ref1031.",10/6/05
ProjectD - TIM - 1103,Requirement SC2448 appears to be childless,3,"The spacecraft requirement SC2448, ""The Spacecraft shall monitor engineering data points for limit violations."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. Spec updated Sept. 28 with links to Ref1023, Ref1031, Ref1016 and Ref1021.",10/6/05
ProjectD - TIM - 1102,Requirement SC2446 appears to be childless,3,"The spacecraft requirement SC2446, ""Flight Segment fault protection shall be designed to assure safe and verifiable testing of the entire Flight Segment, including the Flight Segment Fault Protection."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1101,Requirement SC2445 appears to be childless,3,"The spacecraft requirement SC2445, ""Inadvertent activation of a fault protection response during flight operations shall not have any lasting adverse effects on the Flight Segment."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. This requirement was changed from shall to should.",10/6/05
ProjectD - TIM - 1100,Requirement SC2443 appears to be childless,3,"The spacecraft requirement SC2443, ""Flight Segment fault protection shall ensure the Flight Segment can survive pointing faults."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. Requirement was deleted from spec prior to Sept 2005.",10/6/05
ProjectD - TIM - 1099,Requirement SC2442 appears to be childless,3,"The spacecraft requirement SC2442, ""Flight Segment fault protection should conserve non-renewable resources (e.g., hydrazine, EEPROM writes, ON/OFF cycles, battery cycles, etc.,) during autonomous fault responses."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1098,Requirement SC2426 appears to be childless,3,"The spacecraft requirement SC2426, ""Spacecraft fault protection shall detect the loss of fine pointing lock and operate in coarse pointing."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1097,Requirement SC2421 appears to be childless,3,"The spacecraft requirement SC2421, ""Safe Mode shall provide the capability for both autonomous and ground initiated momentum unloading."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1096,Requirement SC2420 appears to be childless,3,"The spacecraft requirement SC2420, ""The Spacecraft shall provide the capability to establish and maintain communications with the ground during Safe Mode."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications. The spec was updated on Sept 28 with links to Ref1021 and Ref1023",10/6/05
ProjectD - TIM - 1095,Requirement SC2419 appears to be childless,3,"The spacecraft requirement SC2419, ""The Spacecraft shall be capable of autonomously maintaining Safe Mode."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1094,Requirement SC2417 appears to be childless,3,"The spacecraft requirement SC2417, ""Once the Spacecraft enters Safe Attitude Hold Mode, the Spacecraft shall remain in this mode until commanded."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1093,Requirement SC2415 appears to be childless,3,"The spacecraft requirement SC2415, ""Once the Spacecraft enters Safe Attitude Hold Mode, the Spacecraft shall remain in this mode until ground commanded or until faults result in the need to transition to Safe Mode or Emergency Mode."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1092,Requirement SC2250 appears to be childless,3,"The spacecraft requirement SC2250, ""The Photometer shall send a record of all faults and actions taken to the Spacecraft."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics and Photometer implications.",10/6/05
ProjectD - TIM - 1091,Requirement SC2179 appears to be childless,3,"The spacecraft requirement SC2719, ""ADCS shall be designed to change from Point-Fine to Point-Coarse, perform a 90 degree roll maneuver, and change from Point-Coarse to Point-Fine within 30 minutes."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1090,Requirement SC2172 appears to be childless,3,"The spacecraft requirement SC2172, ""The Spacecraft shall be placed in Safe Attitude Hold if a scheduled roll maneuver is not initiated at the expected time."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1089,Requirement SC2165 appears childless,3,"The spacecraft requirement SC2165, ""The Spacecraft shall process and transmit science data during the Commissioning Phase on command"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1088,Requirement SC2136 appears to be childless,3,"The spacecraft requirement SC2136, ""The Spacecraft shall have Fault Protection during Commanded Spacecraft Initialization Mode as documented in Contractor2 SP0039-903, Fault Protection Design Document"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1087,Requirement SC2076 appears to be childless,3,"The spacecraft requirement SC2076, ""The Spacecraft shall have Fault Protection during Commanded Photometer Initialization Mode as documented in Contractor2 SP0039-903, Fault Protection Design Document"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1086,Requirement SC2075 appears to be childless,3,"The spacecraft requirement SC2075, ""The Spacecraft shall have Fault Protection during Autonomous Spacecraft Initialization as documented in Contractor2 SP0039-903, Fault Protection Design Document"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1085,Requirement SC2074 appears to be childless,3,"The spacecraft requirement SC2074, ""The Spacecraft shall be capable of autonomously transmitting real-time engineering data after the Flight Segment has entered the Safe Mode"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1084,Requirement SC184 appears to be childless,3,"The spacecraft requirement SC184, ""The Spacecraft shall shed power to the Non-Essential Bus and Payload Bus during safe mode"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1083,Requirement SC1475 appears to be childless,3,"The spacecraft requirement SC1475, ""The status of enable/disable parameters and other pertinent parameters shall be telemetered."", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",10/6/05
ProjectD - TIM - 1082,Requirement SC1474 appears to be redundant,3,"The spacecraft requirement SC1459, ""Fault detection enable/disable, trigger, and persistence values should be selected to ensure safety but not “hair triggered” to cause inadvertent F/P entry/ execution."" appears to be redundant with SC1460.",10/6/05
ProjectD - TIM - 1081,Downward Trace from SC2453,3,"The spacecraft requirement SC2453 ""When a mission critical event requires initiation or termination via autonomous event detection, physically or functionally redundant event detectors shall be used."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1080,Downward Trace from SC2452,3,"The spacecraft requirement SC2452 ""When an autonomously detected error causes a severe response (e.g. downlink loss, large use of expendables), physically or functionally redundant error detectors shall be used."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1079,Downward Trace from SC2641,3,"The spacecraft requirement SC2641 ""The Spacecraft shall prevent frozen thruster firings."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1078,Downward Trace from SC431,3,"The spacecraft requirement SC431 ""No single failure in the command and telemetry data bus electrical interface circuit on either the Photometer side of the interface or the Spacecraft data bus side of the interface shall cause the Photometer to lose the capability to communicate with either the primary or redundant data buses. (TBD)"" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1077,Downward Trace from SC2064,3,"The spacecraft requirement SC2064 ""Hardware and software state and status that affect photometer performance shall be acquired. (TBD)"" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1076,Downward Trace from KAV-3204,3,"The avionics requirement KAV-3204 ""When a pixel co-add value reaches its rollover value, the Avionics shall truncate the overflow value, store the remainder, then continue co-adding from that result."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or some software spec would be appropriate.",10/3/05
ProjectD - TIM - 1075,Downward Trace from SC208,3,"The spacecraft requirement SC208 ""The Attitude Control Subsystem shall be sized to perform momentum dumps no less than every 6 (TBR) days."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1074,Downward Trace from SC2112,3,"The spacecraft requirement SC2112 ""The Spacecraft shall be capable of transmitting to the ground Alternate Playback photometric data upon failure of the HGA boom articulation."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1073,Downward Trace from SC2111,3,"The spacecraft requirement SC2111 ""The Spacecraft shall be capable of transmitting to the ground Alternate Playback photometric data upon failure of the HGA gimbal."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1072,Downward Trace from SC145,3,"The spacecraft requirement SC145 ""The Spacecraft shall be designed to communicate with the DSMS without impacting the gathering or precision of Photometric data."" does not appear to be traced downward. It would appear that some downward trace(s) to hardware specs and/or the KAV spec would be appropriate.",10/3/05
ProjectD - TIM - 1071,KAV-3270 Statement May Need Improvement.,3,"For avionics requirement KAV-3270 “The Avionics shall bin overclocked pixels into 1100 one-pixel targets, per channel, as part of the long cadence masked smear data.”, the upward trace is to SC2293 “The Spacecraft shall process smear level plus dark current on each column per channel as part of the long cadence collateral data.” and the downward trace is to FSW2003 “The FSW shall bin masked pixels into 1100 one-pixel targets, per channel, as part of the long cadence masked smear data.”; should the KAV requirement reference “masked” pixels rather than “overclocked” pixels?",9/30/05
ProjectD - TIM - 1070,More Complete Downward Trace from KAV-2128,3,"The avionics requirement KAV-2128 “The Avionics shall utilize the LDE short cadence timing signal to signal to FSW that short cadence data is ready for processing."" appears only to be traced downward to two KAV requirements which require the SDA/SFDA to generate associated interrupts. It would appear that this KAV requirement also implies a software response.",9/30/05
ProjectD - TIM - 1069,More Complete Downward Trace from KAV-3855,3,"The avionics requirement KAV-3855 “While maneuvering into the safe state attitude, the Avionics shall maintain Sun avoidance constraints at all times.”, apparently has a single existing downward trace (FSW377). This FSW requirement appears to be about computing a modeled sun vector, while the KAV requirement seems to be mainly about a particular use of modeled sun vector, which is not addressed in the FSW trace.",9/30/05
ProjectD - TIM - 1068,More Complete Downward Trace from KAV-3853,3,"The avionics requirement KAV-3853 “The Avionics shall be capable of autonomously maintaining Standby Mode.” appears to have a single existing downward trace (FSW1757), which is about changing the mode (it requires that the Flight Segment mode be changed upon command - but does not say “only on command”). The KAV requirement seems to be about not changing the mode. Thus, it appears the only existing FSW trace does not entirely cover the KAV requirement. A similar comment would seem to apply to KAV-3858 “Once the Spacecraft enters Safe Mode, the Avionics shall remain in Standby mode until commanded.”, also traced (only) to FSW1757.",9/30/05
ProjectD - TIM - 1067,More Complete Downward Trace from KAV-3836,3,"The avionics requirement KAV-3836 “The Avionics shall collect, process, and store engineering data after the Avionics are booted up.” apparently has a single downward trace (FSW86), which seems only to require that the “default” mode be entered following boot-up. Presumably some other downward trace should cover the requirement to collect, process, and store engineering data in “default” mode.",9/30/05
ProjectD - TIM - 1066,More Complete Downward Trace from KAV-3857,3,"For avionics requirement KAV-3857 “The Avionics shall support the capability for both autonomous and ground initiated momentum dumping in all modes which have ADCS sensing and control available.”, the two existing FSW traces mandate the determination of current and desired momentum states, but do not appear to actually trigger/implement any momentum dumping. Perhaps a trace to FSW1806 would at least partially solve this apparent omission.",9/30/05
ProjectD - TIM - 1065,More Complete Downward Trace from KAV-4002,3,"The avionics requirement KAV-4002 “The Avionics shall provide thruster on/off commanding status and commanded thruster fire duration, per firing, monitoring for 8 thrusters.”, appears to currently have only a single FSW trace, FSW465 “The FSW shall enable or disable commanding of the Thrusters on command. NOTE: A software command can be sent to enable or disable the commanding of the thrusters.”. This does not appear to address thruster monitoring, which seems to be the main subject of the KAV requirement. Possibly FSW464 and/or FSW1329 would be appropriate additional traces.",9/30/05
ProjectD - TIM - 1064,Downward Trace from KAV-2900,3,"The avionics requirement KAV-2900 “The Avionics shall timestamp all science and collateral data with VTC.” does not appear to be traced downward to FSW. It would appear that traces to FSW1458 and FSW1459, and possibly additional traces to cover collateral data, would be appropriate.",9/30/05
ProjectD - TIM - 1063,More Complete Downward Trace from KAV-3242,3,"The avionics requirement KAV-3242 “The Avionics shall store a FGS target aperture table, a ""small aperture"" target definition table, and a ""large aperture"" target definition table.” has two existing downward traces to FSW, both of which appear to be concerned with apertures. It would appear that the apparent lack of traces to target definition tables could be rectified by also tracing FSW2077 and FSW503.",9/30/05
ProjectD - TIM - 1062,More Complete Downward Trace from KAV-3127,3,"The avionics requirement KAV-3127 “Binning for collateral data shall be performed after data has been digitized.” has five existing downward traces, none of which cite long cadence masked smear. It would appear that this apparent omission could be rectified by a downward trace to FSW2003 “The FSW shall bin masked pixels into 1100 one-pixel targets, per channel, as part of the long cadence masked smear data.”.",9/30/05
ProjectD - TIM - 1061,Downward Trace from KAV-2274,3,"The avionics requirement KAV-2274 “The Avionics shall protect against a single lost data element causing the loss of multiple data elements which violate the contiguous data stream requirement.” does not appear to be traced downward. It would appear that a trace to some FSW requirement, perhaps FSW1492, would be appropriate.",9/30/05
ProjectD - TIM - 1060,More Complete Downward Trace from KAV-3171,3,"The avionics requirement KAV-3171 “The target identification data shall survive a loss of power.” has existing downward traces which appear to be only concerned with long cadence, short cadence, background, and utility target definition tables . It would appear that some additional requirement trace (or expansion of FSW requirement) is needed to implement the requirement for FGS target definition data, perhaps to FSW1409.",9/29/05
ProjectD - TIM - 1059,More Complete Downward Trace from KAV-3170,3,"The avionics requirement KAV-3170 “The target identification data shall be updatable.” has existing downward traces which appear to be only concerned with long cadence, short cadence, background, and utility target definition tables, and the CCD Channel Pixel Offset Table. It would appear that some additional requirement trace (or expansion of FSW requirement) is needed to implement the requirement for FGS target definition data, perhaps to FSW500 and/or FSW503.",9/29/05
ProjectD - TIM - 1058,More Complete Downward Trace from KAV-3075,3,"The avionics requirement KAV-3075 “The Avionics shall store and utilize target identification data.” has existing downward traces which appear to be only concerned with long cadence, short cadence, background, and utility target definition tables . It would appear that some additional requirement trace (or expansion of FSW requirement) is needed to implement the requirement for FGS target definition data, perhaps to FSW503.",9/29/05
ProjectD - TIM - 1057,More Complete Downward Trace from KAV-3168,3,"The avionics requirement KAV-3168 “Data required to process focal plane data shall be stored such that loss of power does not erase it.” has existing downward traces which appear to be only concerned with science and background aperture data. It would appear that some additional requirement trace (or expansion of FSW requirement) is needed to implement the requirement for FGS aperture data, perhaps to FSW1409.",9/29/05
ProjectD - TIM - 1056,More Complete Downward Trace from KAV-2553,3,"The avionics requirement KAV-2553 “The target aperture data shall be formatted and stored such that it can be updated.” has existing downward traces which appear to be only concerned with science and background aperture data. It would appear that some additional requirement trace (or expansion of FSW requirement) is needed to implement the requirement for FGS aperture data, perhaps to FSW2068 and/or FSW500.",9/29/05
ProjectD - TIM - 1055,More Complete Downward Trace from KAV-3232,3,The avionics requirement KAV-3232 “The Avionics shall tag science and collateral data for unique identification by the ground segment.” has existing downward traces which appear to be only concerned science data. It would appear that some additional requirement trace (or expansion of FSW requirement) is needed to implement the portion of the requirement referencing collateral data.,9/29/05
ProjectD - TIM - 1054,More Complete Downward Trace from KAV-4360,3,"The Avionics requirement KAV-4360 “The Avionics shall process & store short cadence data in at least 60 equally spaced data samples per hour.” is apparently currently traced downward only to FSW1465 ""The FSW shall process all science data within the shortest supported integration period as defined in the 569800 (FS ICD). NOTE: Supported CCD integration intervals range from 2.5 +/-0.25 seconds to 8.0 +/-0.25 seconds."". It would appear that FSW1475 “The FSW shall be capable of supporting a minimum short cadence memory accumulation of 49 (TBR) seconds.” should also be traced.",9/29/05
ProjectD - TIM - 1053,More Complete Downward Trace from KAV-4338,3,"The Avionics requirement KAV-4338 “The Avionics shall process & store long cadence target data in at least 4 equally spaced data samples per hour.” is currently traced downward only to FSW1465 ""The FSW shall process all science data within the shortest supported integration period as defined in the 569800 (FS ICD) NOTE: Supported CCD integration intervals range from 2.5 +/-0.25 seconds to 8.0 +/-0.25 seconds."". It would appear that FSW1469 “The FSW shall be capable of supporting a minimum long cadence memory accumulation of 795 (TBR) seconds.” should also be traced.",9/29/05
ProjectD - TIM - 1052,Possible Inconsistency Between KAV-2966 and its Downward Trace,3,"The avionics requirement KAV-2966 “The Avionics shall configure the LDE short cadence time periods. Note: Each cadence accumulation period shall be made up of integration periods of between 2.5 and 8.0 +/- 0.2 seconds each, per ProjectD.DFM.SYS.031.” appears to have a tighter tolerance on integration periods than its downward traced requirement FSW1465 “The FSW shall process all science data within the shortest supported integration period as defined in the 569800 (FS ICD). NOTE: Supported CCD integration intervals range from 2.5 +/-0.25 seconds to 8.0 +/-0.25 seconds.”. Generally, one would expect that tolerances being traced downward would be the same or tighter.",9/29/05
ProjectD - TIM - 1051,Downward Trace from KAV-3534,3,"The avionics requirement KAV-3534 “The Avionics shall be capable of selecting from multiple software images.” does not appear to be traced downward. It would appear that a trace to some FSW requirement(s), perhaps FSW1978, FSW1967, and/or FSW918, and/or to some other avionics component, would be appropriate.",9/29/05
ProjectD - TIM - 1050,Downward Trace from SC2243,3,"The spacecraft requirement SC2243 “FSW shall collect and store engineering data for later downlink. NOTE: stored eng data:” does not appear to be traced downward. It would appear that a trace to some KAV requirement, perhaps KAV-3836 “The Avionics shall collect, process, and store engineering data after the Avionics are booted up”, would be appropriate.",9/29/05
ProjectD - TIM - 1049,Downward Trace from SC2237,3,"The spacecraft requirement SC2237 “FSW shall collect and store engineering data for use in determining health and status of the Flight Segment.” does not appear to be traced downward. It would appear that a trace to some KAV requirement, perhaps KAV-3836 “The Avionics shall collect, process, and store engineering data after the Avionics are booted up”, would be appropriate.",9/29/05
ProjectD - TIM - 1048,More Complete Downward Trace from SC1454,3,"The spacecraft requirement SC1454 “The spacecraft software shall be designed, tested, and documented in accordance with the ProjectD Software Development Plan. Note: MIL-STD-498 provides guidance for the development and tailoring of the processes described in the Software Development Plan.”, is currently traced downward to KAV-2510 “Software testing shall be conducted in accordance with the Software Development Plan. Note: MIL-STD-498 provides guidance for the development and tailoring of the processes described in a Software Development Plan.” This trace appears to cover the “testing” content of the SC requirement, but not the “design” and “documentation” content.",9/27/05
ProjectD - TIM - 1047,More Complete Downward Trace from SC2464,3,"The spacecraft requirement SC2464 “No single fault shall cause the Spacecraft to activate its attitude control system before launch vehicle separation.” is currently traced downward (only) to KAV-1754 ”The Avionics design shall prevent the introduction of mission critical failures.”. This KAV requirement seems much more generic than the SC requirement (e.g., no mention of prematurely activating attitude control, etc.), making it difficult to verify that all the content of the SC requirement has been satisfied at the lower level.",9/27/05
ProjectD - TIM - 1046,More Complete Downward Trace from SC2457,3,"The spacecraft requirement SC2457 “Flight Segment fault protection shall allow ground operators to enable any previously disabled individual test or response.” is currently traced downward (only) to KAV-4193 “The Avionics shall be capable of enabling and disabling fault protection on command.”. This KAV requirement seems much more generic than the SC requirement (e.g., no mention of individual tests/responses, etc.), making it difficult to verify that all the content of the SC requirement has been satisfied at the lower level.",9/27/05
ProjectD - TIM - 1045,More Complete Downward Trace from SC2469,3,"The spacecraft requirement SC2469 “Flight Segment fault protection shall allow ground operators to disable any previously enabled individual test or response in such a way that it cannot be autonomously re-enabled.” is currently traced downward (only) to KAV-4193 “The Avionics shall be capable of enabling and disabling fault protection on command.”. This KAV requirement seems much more generic than the SC requirement (e.g., no mention of individual tests/responses, autonomous re-enabling, etc.), making it difficult to verify that all the content of the SC requirement has been satisfied at the lower level.",9/27/05
ProjectD - TIM - 1044,Downward Trace from SC451,3,"The spacecraft requirement SC451 “The Spacecraft shall deliver data to the Photometer with formats and content as specified in the Flight Segment ICD.” appears to have a single downward trace to the KAV spec, but that trace downward appears to lead to a “will” statement (KAV-1639).",9/27/05
ProjectD - TIM - 1043,More Complete Downward Trace from SC255,3,"The spacecraft requirement SC255 “The Spacecraft shall be capable of receiving upload of data tables. Note: This data format and content are defined in the Command and Telemetry Handbook.” appears to have 3 ""shall"" traces, and 1 ""will"" trace downward to KAV. The “shall” traces appear only to discuss the FGS tables, and the “generic” processing of uplink CFDP formatted packets; perhaps also tracing KAV-1304 “The Avionics shall be capable of data table updates. Note: Data table formats are found in the Command & Telemetry Handbook”, would be appropriate to more completely cover the SC requirement.",9/27/05
ProjectD - TIM - 1042,More Complete Downward Trace from SC2648,3,The spacecraft requirement SC2648 “The Spacecraft shall provide a unique identifier so that CCD integration setting is known.” has an existing downward trace which does not appear to carry downward the specific requirement for a unique identifier. Perhaps some requirement such as KAV-4052 could also be traced to cover that portion of the SC requirement.,9/27/05
ProjectD - TIM - 1041,More Complete Downward Trace from SC2647,3,The spacecraft requirement SC2647 “The Spacecraft shall provide a unique identifier so that focus position of each positioner is known.” has an existing downward trace which does not appear to carry downward the specific requirement for a unique identifier. Perhaps some requirement such as KAV-4052 could also be traced to cover that portion of the SC requirement.,9/27/05
ProjectD - TIM - 1040,More Complete Downward Trace from SC234,3,"The spacecraft requirement SC234 “The Spacecraft shall provide a unique identifier so that photometer thermal stabilizaiton, is known.” has an existing downward trace which does not appear to carry downward the specific requirement for a unique identifier. Perhaps some requirement such as KAV-4052 could also be traced to cover that portion of the SC requirement.",9/27/05
ProjectD - TIM - 1039,Downward Trace from SC2057,3,"The spacecraft requirement SC2057 ”During the Flight Segment Decommissioning Mode, the spacecraft shall be placed in a safe configuration on command.” does not appear to be traced downward. It would appear that a trace to some KAV requirement, perhaps KAV-4322 “The Avionics shall support the mode transitions shown in ""ProjectD Modes Description Document"", Contractor2 #TBD.”, would be appropriate.",9/23/05
ProjectD - TIM - 1038,Downward Trace from SC2652,3,The spacecraft requirement SC2652 “The Spacecraft shall pitch about the +Y-axis at 0.05 +/-0.01 (TBR) degrees per second during Safe Mode.” does not appear to be traced downward. It would appear that some KAV requirement trace is needed to implement the portion of the requirement calling for autonomous rate generation with respect to the Y axis.,9/23/05
ProjectD - TIM - 1037,Downward Trace from SC182,3,The spacecraft requirement SC182 “The Spacecraft shall orient the Flight Segment such that it is in a commandable state with the Sun vector within 10 degrees of the +Y-axis while in Safe Mode.” does not appear to be traced downward. It would appear that some KAV requirement trace is needed to implement the portion of the requirement calling for autonomous orientation with respect to the Y axis.,9/23/05
ProjectD - TIM - 1036,More Complete Downward Trace from SC2262,3,"The spacecraft requirement SC2262 ”The location of any photometric aperture within the active field of view shall be specified on command.” is apparently currently traced downward only to KAV-2279, which appears to be silent on the matter of specifying or updating the apertures. Perhaps an additional trace to something like KAV-3170 would be appropriate.",9/23/05
ProjectD - TIM - 1035,Downward Trace from SC2437,3,The spacecraft requirement SC2437 “The Spacecraft shall be capable of autonomously entering Safe Mode after detecting a UV2 power fault condition. Note: UV2 (Undervoltage 2) is defined as a bus undervoltage condition below UV1 per parameters set by ground commanded configuration files.” does not appear to be traced downward. A trace to a KAV requirement (such as KAV-3851) would appear to be appropriate.,9/23/05
ProjectD - TIM - 1034,Downward Trace from SC2417,3,"The spacecraft requirement SC2417 “Once the Spacecraft enters Safe Attitude Hold Mode, the Spacecraft shall remain in this mode until ground commanded or until faults result in the need to transition to Safe Mode or Emergency Mode.” does not appear to be traced downward. A trace to a KAV requirement would appear appropriate (the parallel requirement for Safe mode, SC2422, appears to have an analogue in KAV-3858).",9/23/05
ProjectD - TIM - 1033,More Complete Downward Trace from SC2439,3,The spacecraft requirement SC2439 “The spacecraft shall orient the Flight Segment such that it is in a commandable state with the Sun vector within 10 degrees of the +Y-axis and the +X-axis within 10 degrees of Ecliptic North while in Safe Attitude Hold.” has existing downward traces which appear to be only concerned with enabling and disabling of downlink coding and randomization upon command. It would appear that some KAV requirement trace is needed to implement the portion of the requirement calling for autonomous orientation with respect to the Y and X axes.,9/23/05
ProjectD - TIM - 1032,Clarification of SC160,3,The spacecraft requirement SC160 “The Spacecraft shall be capable of pointing the HGA and perform momentum dumps within the same single Memory Accumulation Period of the Photometer.” could be made more precise by clarifying whether “Memory Accumulation Period” means a short or long cadence period (the KAV trace would imply long cadence).,9/23/05
ProjectD - TIM - 1031,Downward Trace from SC2429,3,"The spacecraft requirement SC2429 ""The Spacecraft shall support verification of subsystem functionality and performance characterization.” does not appear to be traced downward. Possible downward traces could be to KAV-3836 “The Avionics shall collect, process, and store engineering data after the Avionics are booted up”, and KAV-3516 “The Avionics shall perform diagnostic tests and self-tests upon command. Note: These tests will be in the form of returned engineering data for assessment on the ground.”.",9/23/05
ProjectD - TIM - 1030,Downward Trace from SC2134,3,The spacecraft requirement SC2134 “The Spacecraft shall remain in Safe Mode until commanded.” does not appear to be traced downward. A possible trace could be to KAV-3853 “The Avionics shall be capable of autonomously maintaining Standby Mode.”,9/23/05
ProjectD - TIM - 1029,Downward Trace from SC2074,3,The spacecraft requirement SC2074 “The Spacecraft shall be capable of autonomously transmitting real-time engineering data after the Flight Segment has entered the Safe Mode.” does not appear to be traced downward. It would appear that KAV-3859 “The Avionics shall be capable of autonomously transmitting real-time engineering data after the Flight Segment has entered Safe Mode (TBR).” would be a reasonable trace.,9/23/05
ProjectD - TIM - 1028,Downward Trace from SC105,3,"The spacecraft requirement SC105 “The Spacecraft shall be capable of autonomously entering Safe Mode at the completion of Autonomous Initialization.” does not appear to be traced downward. It would appear that a trace to some KAV requirement, perhaps KAV-4322 “The Avionics shall support the mode transitions shown in ""ProjectD Modes Description Document"", Contractor2 #TBD.”, would be appropriate.",9/23/05
ProjectD - TIM - 1027,Downward Trace from SC132,3,"The spacecraft requirement SC132 “The Spacecraft shall support calibration of the Fine Guidance Sensors during the Commissioning Phase on command.”, does not appear to be traced downward. Assuming that a FGS FFI is the appropriate data needed for the calibration, a trace to something like KAV-3625 “The Avionics shall acquire an FGS Full Field Image (FFI) upon command. Note: It is not required to acquire a science FFI concurrently with an FGS FFI.” would appear to be appropriate.",9/23/05
ProjectD - TIM - 1026,Downward Trace from SC2132 and SC2148,3,"The spacecraft requirements SC2132 “The Spacecraft shall perform roll maneuvers during the Commissioning Phase on command. Note: Check-out of the roll maneuver may be accomplished at using a roll maneuver less than the 90 degrees.” and SC2148 “The Spacecraft shall be capable of reversing any performed roll maneuver during the commissioning phase.” do not appear to be traced downward. It would appear that some downward trace would be appropriate, possibly to KAV-3501 “The Avionics shall perform closed loop attitude control.”",9/23/05
ProjectD - TIM - 1025,Downward Trace from SC2127,3,"The spacecraft requirement SC2127 “The Spacecraft shall perform a health check during the terminal countdown prior to disconnection of external power on command.” does not appear to be traced downward. It would appear that KAV-3516 “The Avionics shall perform diagnostic tests and self-tests upon command. Note: These tests will be in the form of returned engineering data for assessment on the ground.” and KAV-4177 “The Avionics shall be capable of performing health and status checks pre and post launch.” should be traced. However, these KAV requirements specify capabilities; the SC requirement requires that the health check actually occur. It would appear that either it (and presumably FS-896) should be rewritten to also specify capabilities, or a KAV requirement should be added to actually “autonomously” perform the health check.",9/23/05
ProjectD - TIM - 1024,More Complete Downward Trace from SC2413,3,"The spacecraft requirement SC2413 “The Spacecraft shall be capable of performing a health check during pre-launch phase on command.”, is currently traced downward only to a KAV requirement which does not appear to cite ""pre-launch phase""; this could be rectified by also tracing KAV-4177 “The Avionics shall be capable of performing health and status checks pre and post launch.”.",9/23/05
ProjectD - TIM - 1023,More Complete Downward Trace from SC2149,3,"The spacecraft requirement SC2149 “The Spacecraft shall have the capability to point the photometer axis to any coordinate provided the new coordinates do not violate flight rules. Note: Requirements from the Celestial Field of View do not apply to other FOVs.” is currently traced downward to (only) three KAV requirements. None of these current traces appear to reference the “do not violate flight rules” proviso in the SC requirement. Assuming that this implies that the SC will protect against “violating flight rules”, presumably some KAV requirement should implement this. If this is not the intent of the SC requirement, consider restating or supplementing the requirement with a note to avoid this possible misunderstanding.",9/23/05
ProjectD - TIM - 1022,EMC requirements in SCA Specification 2215090 missing links,3,"The traceability analysis for the Emergency Mode Controller, EMC, can not be performed without the parent or child requirements in the SCA Avionics Box Board Specification 2215090.",8/5/05
ProjectD - TIM - 1021,Incomplete downward trace from SC2443,3,"The spacecraft requirement SC2443 "" Flight Segment fault protection shall ensure the Flight Segment can survive pointing faults."" does not have appear to have any requirements that trace down to any avionics or flight software requirements.",6/3/05
ProjectD - TIM - 1020,Incomplete downward trace from SC2632,3,"The spacecraft requirement SC2632 “The Spacecraft shall be designed to be in Fine Point while acquiring either a science or FGS FFI. Note: FFIs and FGS FFIs do not need to be acquired simultaneously. In addition, during any FFI, nominal science data taking is suspended.” is traced downward (only) to KAV-3181 ”The Avionics shall acquire a science Full Field Image (FFI) upon command. Note: It is not required to acquire a science FFI concurrently with an FGS FFI.”. One of the main points of SC2632 appears to be that the design should assume that fine pointing processing will continue during FFI acquisition. This does not appear to be reflected in the trace to avionics. While many of the provisions for fine pointing during FFI acquisition would appear to apply outside the “avionics”, some of them appear to apply within the avionics (e.g., provision to perform FGS sensor processing as well as FFI processing in the flight computer). If so, it would appear that the requirement would have avionics implications. Note also that the traced avionics requirement makes no mention of a FGS FFI, while the SC requirement does. It appears that this requirement should be traced to an avionics requirement (or requirements) that fully implements this requirement with respect to avionics, and/or one or more avionics requirements should be added that fully implement this requirement with respect to avionics, and/or the spacecraft requirement should be restated to eliminate any unwanted avionics implications. Any new or significantly revised avionics requirement should trace further as appropriate to flight software.",5/31/05
ProjectD - TIM - 1019,Incomplete downward trace from KAV-3189.,3,"The avionics requirement KAV-3189 “The Avionics shall process the FGS FFI from all four FGS CCDs within the same FGS cadence, upon command (TBR). Note: Fine pointing is not required during FGS FFI data acquisition and processing.” is traced downward (only) to FSW519 ”The FSW shall request full frame FGS images on command. NOTE: The FSW uses only the selected pixels of each full frame image during Fine Guidance pointing operations. The Full Frame image is needed for image calibration during maintenance operations.”. One of the main points of KAV-3189 appears to be that the processing of all parts of the FGS FFI must occur within the same FGS cadence. This does not appear to be reflected in the trace to FSW. While much of the “FGS FFI processing” would appear to take place outside the “flight software”, some of it appears to take place within the flight software. If so, it would appear that the requirement would have flight software implications. It appears that this requirement should be traced to a flight software requirement (or requirements) that fully implements this requirement with respect to flight software, and/or one or more flight software requirements should be added that fully implement this requirement with respect to flight software, and/or the avionics requirement should be restated to eliminate any unwanted flight software implications.",5/31/05
ProjectD - TIM - 1018,Closest SC version of KAV-3029 and FS-145 is a “will” statement.,3,"The avionics requirement KAV-3029 “The Avionics shall be capable of acquiring engineering data that is considered ancillary data at least once every 15 minutes. Note: Ancillary data acquisition is not required unless science data collection is occurring.” appears to be a flow-down of flight segment requirement FS-145 “The rate of ancillary data acquisition shall be at least every 15 minutes. Note: ancillary data acquisition is not required unless science data collection is occurring.”. There is an analogous spacecraft-level statement SC242 “The rate of engineering data acquisition will be at least every 15 minutes. Note: Ancillary data acquisition is not required unless science data collection is occurring.”, which is a downward trace from FS-145, but which is not a requirement (and is not traced to KAV-3029). FS-145 and KAV-3029 requirements are linked by SC2071 “The phase of the engineering data cadence shall remain constant to within 90 seconds (TBR).”, which appears to only address a portion, at best, of FS-145 and KAV-3029. FS-145 (down) and KAV-3029 (up) have no other traces. It appears that SC242 should be converted to a requirement, and/or the contents of SC242 should be supplemented, and/or a new SC requirement should be added for full linkage.",5/31/05
ProjectD - TIM - 1017,KAV-4336 is not traced to analogous requirement FS-292.,3,"The avionics requirement KAV-4336 “The Avionics shall support collection of data for star field densities of up to 13768 long cadence targets per channel (1.37 square°). Note: This requirement is for any single channel only.” appears to logically follow from flight segment requirement FS-292 “The Flight Segment shall support star field densities up to 10,000 targets per square degree within the active FOV. Note: The maximum number of targets based on this requirement does not need to exceed the target requirement in FS-106 and FS-111 combined.”. However, there does not appear to be a direct trace link between the two requirements. FS-292 traces down to no SC requirement. KAV-3126 traces up to no SC requirement. It appears that a trace-link should be provided between FS-292 and KAV-4336, adding a corresponding SC requirement if appropriate.",5/31/05
ProjectD - TIM - 1016,KAV-3126 is not traced to analogous requirement FS-136.,3,"The avionics requirement KAV-3126 “The Avionics shall acquire and process collateral data associated with photometric data on each CCD data channel.” appears to logically follow from flight segment requirement FS-136 “The Flight Segment shall acquire collateral data associated with the photometric data on each CCD data Channel.”. However, there does not appear to be a direct trace link between the two requirements. FS-136 traces down to SC2308 “The Spacecraft shall support storing data from photometric targets and collateral data greater than or equal than 57 Gi bits in a 13.5 day period during the first year of operational life.”, SC2296 “Binning for collateral data shall be performed after data has been digitized.”, and SC2309 “The Spacecraft shall support storing data from photometric targets and collateral data greater than or equal than 43 Gi bits in a 13.5 day period after the first year of operational life.”, none of which trace down to KAV-3126. KAV-3126 traces up to SC2257 “The Spacecraft shall sum consecutive CCD integration intervals for every pixel of interest during each memory accumulation period.”, which does not trace up to FS-136. It appears that a trace-link should be provided between FS-136 and KAV-3126, adding a corresponding SC requirement if appropriate.",5/31/05
ProjectD - TIM - 1015,Non-requirement statement FS-1001 traces both ways to requirements.,3,"The statement FS-1001 “At least four mv=12 or brighter targets per CCD will be considered fiducial targets used for ""quick-look"" data analysis by the Ground Segment.” (note “will”, not “shall”) is traced upward to MRD280 “At least four mv=12 or brighter targets per CCD shall be considered fiducial targets.” (note “shall”) and downward to SC2410 “The Spacecraft shall have the capability to process at least 10 utility targets per channel, at an average aperture size of 85 pixels during the life of the mission.” (note “shall”). FS-1001 also is traced upward to requirement MRD1257 and downward to SC2475. No additional links to FS requirements appear to exist for any of these MRD or SC requirements. It appears that “will” should be changed to “shall” in FS-1001, traceability should be provided between noted MRD and SC requirements using other requirements, and/or or one or more flight segment requirements should be added that provide traceability between these MRD and SC requirements.",5/31/05
ProjectD - TIM - 1014,Requirement SC1012 is childless,3,"The spacecraft requirement SC1012, ""The ADCS algorithms shall comply with the fault detection/correction requirements defined in the ProjectD Fault Protection Description Document (TBD)"", does not appear to be traced to any ProjectD avionics requirement. It appears that this requirement has ProjectD Avionics implications.",5/26/05
ProjectD - TIM - 1013,Requirement KAV-3787 is childless,3,"The avionics requirement KAV-3787 “Software controlling hazardous systems or operations (e.g., propulsion systems, electro-explosive devices, electromechanical release devices, etc.) shall comply with EWR 127-1 and be assessed for hazard severity and probability in accordance with AFM 91-201 and using MIL-STD-882C as a guide.” does not appear to be traced to any flight software requirement. It appears that this requirement has flight software implications. It appears that KAV-3787 should be traced to a flight software requirement (or requirements) that fully implements this requirement, and/or add one or more flight software requirements that fully implement this requirement.",5/23/05
ProjectD - TIM - 1012,Requirement SC1992 is childless,3,"The spacecraft requirement SC1992 “The spacecraft shall initiate the roll maneuver only at the end of a Memory Accumulation Period of the Photometer.” does not appear to be traced to any avionics requirement. It appears that this requirement has avionics implications. It appears that SC1992 should be traced to an avionics requirement (or requirements) that fully implements this requirement, and/or add one or more avionics requirements that fully implement this requirement. Trace further to flight software as appropriate.",5/23/05
ProjectD - TIM - 1011,Requirement SC218 is childless,3,"The spacecraft requirement SC218 “Following loss of pointing to the center of the Celestial Field of View Location, the Flight Segment shall be capable of repointing to within 0.12 arc second, (3 sigma) per axis of the attitude used prior to loss of lock, excluding roll maneuvers.” does not appear to be traced to any avionics requirement. While this requirement clearly constrains hardware, it appears that this requirement has avionics implications. It appears that SC218 should be traced to an avionics requirement (or requirements) that fully implements this requirement with respect to avionics, and/or add one or more avionics requirements that fully implement this requirement with respect to avionics. Trace further to flight software as appropriate.",5/23/05
ProjectD - TIM - 1010,Requirement KAV-2129 is childless,3,"The avionics requirement KAV-2129 “The Long Cadence target star data cadence shall be an integer multiple of the duration of the Short Cadence target cadence.” does not appear to be traced to any flight software requirement. It appears that this requirement has flight software implications. It appears that KAV-2129 should be traced to a flight software requirement (or requirements) that fully implements this requirement, and/or add one or more flight software requirements that fully implement this requirement.",5/23/05
ProjectD - TIM - 1009,Requirements SC2473 and SC2474 are childless,3,"The spacecraft requirements SC2473 “The Spacecraft shall be capable of receiving an updated collateral background pixel location set.” and SC2474 “The Spacecraft shall be capable of implementing an updated collateral background pixel location set.” do not appear to be traced to any avionics requirements. It appears that these requirements have avionics implications. It appears that SC2473 and SC2474 should be traced to an avionics requirement (or requirements) that fully implements these requirements with respect to avionics, and/or add one or more avionics requirements that fully implement these requirements with respect to avionics. Trace further to flight software as appropriate. Note: KAV-3804 appears to be related.",5/23/05
ProjectD - TIM - 1008,Requirement KAV-3076 is childless,3,"The avionics requirement KAV-3076 “The target identification data shall utilize a combination of CCD channel, pixel location, and target aperture to uniquely identify each target star.” does not appear to be traced to any flight software requirement. While this appears to primarily levy requirements upon the content and nature of target identification data, it appears that this requirement also has flight software implications in terms of the interpretation and utilization of the data. It appears that KAV-3076 should be traced to a flight software requirement (or requirements) that fully implements this requirement, and/or add one or more flight software requirements that fully implement this requirement.",5/23/05
ProjectD - TIM - 1007,Requirement KAV-4226 is childless with respect to flight software.,3,"The avionics requirement “KAV-4226 The Avionics shall utilize the LDE FGS FFI cadence timing signal to signal to FSW that an FGS FFI data is ready for processing.” does not appear to be traced to any flight software requirement. While this requirement clearly constrains hardware, it appears that this requirement also has flight software implications (i.e., the flight software presumably must utilize the signal to determine that an FGS FFI data is ready for processing). It appears that KAV-4226 should be traced to a flight software requirement (or requirements) that fully implements this requirement with respect to flight software, and/or add one or more flight software requirements that fully implement this requirement with respect to flight software.",5/23/05
ProjectD - TIM - 1006,Requirement KAV-4339 is childless,3,"The avionics requirement KAV-4339 “The Avionics shall be capable of acquiring an FGS FFI from each FGS CCD.” does not appear to be traced to any flight software requirement. While this requirement clearly constrains hardware, it appears that this requirement also has flight software implications. It appears that KAV-4339 should be traced to a flight software requirement (or requirements) that fully implements KAV-4339 with respect to flight software, and/or one or more flight software requirements should be added in order to fully implement KAV-4339 with respect to flight software. Note that FSW519 appears to be related, but may not fully implement the KAV requirement.",5/20/05
ProjectD - TIM - 1005,Requirement SC159 is childless.,3,"The spacecraft requirement SC159 “The Spacecraft shall be capable of performing a +90 degree roll maneuver about the X-axis (approximately every 90 days) with an accuracy of +/- 12 arcseconds about the X-axis and +/- 2 arcseconds about the Y and Z axes from the attitude used prior to the roll maneuver.” does not appear to be traced to any avionics requirement. While this requirement clearly constrains hardware, it appears that this requirement has avionics implications. It appears that SC159 should be traced to an avionics requirement (or requirements) that fully implements the SC requirement, or add one or more avionics requirements that fully implement the SC requirement. Trace further to flight software as appropriate.",4/4/05
ProjectD - TIM - 1004,Requirement SC2426 is childless.,3,"The spacecraft requirement SC2426 “Spacecraft fault protection shall detect the loss of fine pointing lock and operate in coarse pointing.” does not appear to be traced to any avionics requirement. It appears that this requirement has avionics implications. It appears that SC2426 should be traced to an avionics requirement (or requirements) that fully implements the SC requirement, or add one or more avionics requirements that fully implement the SC requirement. Trace further to flight software as appropriate (FSW366 may be related).",4/4/05
ProjectD - TIM - 1003,Requirements KAV-4327 and KAV-4199 are childless with respect to flight software.,3,"The avionics requirements KAV-4327 “The Avionics shall utilize the LDE long cadence timing signal to signal to FSW that long cadence data is ready for processing.” and KAV-4199 “The Avionics shall utilize the LDE FFI cadence timing signal to signal to FSW that FFI data is ready for processing.” do not appear to be traced to any flight software requirements. While these requirements clearly constrain hardware, it appears that these requirements also have flight software implications (e.g., receiving and properly responding to the signal). It appears that they should be traced to a flight software requirement (or requirements) that fully implements these avionics requirements, or one or more flight software requirements should be added in order to fully implement these avionics requirements with respect to flight software.",4/4/05
ProjectD - TIM - 1002,"Requirements KAV-4439, KAV-1284, and KAV-4029 are childless.",3,"The avionics requirements KAV-4439 “The Avionics shall tag data as suspect when data parity errors are detected on the LDE science data link, the cPCI data bus, or the internal SDA or SFDA data busses.”, KAV-1284 “The Avionics shall tag science data as suspect when the Photometer reports a pixel error or TBD.”, and KAV-4029 “The Avionics shall tag science data as suspect when the Avionics detects a pixel error or TBD.” do not appear to be traced to any flight software requirements. It appears that these requirements have flight software implications. It appears that they should be traced to a flight software requirement (or requirements) that fully implements these avionics requirements, or one or more flight software requirements should be added in order to fully implement these avionics requirements with respect to flight software.",4/4/05
ProjectD - TIM - 1001,Requirement SC2612 is childless.,3,"The spacecraft requirement SC2612 “The Spacecraft shall be capable of pointing the Flight Segment per SC216 while acquiring science FFI data. Note: During any FFI, nominal science data taking is suspended.” does not appear to be traced to any avionics requirement. It appears that this requirement has avionics implications. It appears that SC2612 should be traced to an avionics requirement (or requirements) that fully implements SC2612 with respect to avionics, or it should be merged with requirement SC216 in order to utilize its traces. The avionics requirement(s) should trace further to flight software as appropriate.",4/4/05
ProjectE - TIM - 1886,"If-Condition always evaluates to FALSE, File command_reload.c, Line 94, Inst4 Analysis 1",3,"Issue: If-Condition always evaluates to FALSE File: command_reload.c, Line 94 If-Condition in function command_reload() of file command_reload.c always evaluates to FALSE. Developer has likely initialized the local variable ""reload"" incorrectly. File: command_reload.c 55 void command_reload(pend_rec *cmd) 56 { 57 byte *dest; 58 byte *src; 59 ushort size; 60 gbool reload = gFALSE; 61 62 /* read the table from the appropriate eeprom */ 63 if (cmd->data[0] == PARAMS) 64 { 65 dest = (byte *) Params; 66 size = sizeof(Params); 67 if (cmd->data[1] == 0) 68 { 69 src = (byte *) EEPROM_A_PARAMS; 70 } 71 else if (cmd->data[1] == 1) 72 { 73 src = (byte *) EEPROM_B_PARAMS; 74 } 75 } 76 else if (cmd->data[0] == ANALOG) 77 { 78 dest = (byte *) Analog_Table; 79 size = sizeof(Analog_Table); 80 if (cmd->data[1] == 0) 81 { 82 src = (byte *) EEPROM_A_ANALOG; 83 } 84 else if (cmd->data[1] == 1) 85 { 86 src = (byte *) EEPROM_B_ANALOG; 87 } 88 } 89 else 90 { 91 reload = gFALSE: 92 } 93 94 if (reload) 95 { 96 Function->mem_cpy_func(dest, src, size); 97 } 98 } /* command_reload */",4/24/07
ProjectE - TIM - 1885,"Array out-of-bounds error in file pack_led.c, on lines 91, 99 and 191, Inst4 Analysis 1",2,"Issue: Array out-of-bounds error in file File: pack_led.c, on lines 91, 99 and 191 There is an array out-of-bounds error in file pack_led.c, on lines 91, 99 and 191. The array Trans.Packet_Counter[] is accessed at element 9 (i.e. LED1_PRIORITY) whereas the array size is defined as 6 (PACKET_COUNTER_SIZE). File pack_led.c, Lines 91, 99, 191 90 Function->msg_add_func(MSG_DATA_NOT_SENT, 91 Trans.Packet_Counter[LED1_PRIORITY], MSG_LED, 92 0, 0); 93 STI; 94 ret = MSG_DATA_NOT_SENT; 95 } 96 97 if (ret == 0) 98 { 99 Trans.Packet_Counter[LED1_PRIORITY]++; 100 ... 186 187 /* get the begin end times for this packet, set up begin time for next */ 188 led_buf->hdr.start_time = led_buf->end_time; 189 led_buf->end_time = GET_SYSTIME(); 190 led_buf->type = type; 191 led_buf->hdr.packet_count = Trans.Packet_Counter[LED1_PRIORITY]; telem.h #define ERROR_PRIORITY 0 #define ENG_PRIORITY 1 #define MSG_PRIORITY 2 #define DSC1_PRIORITY 3 #define DSC2_PRIORITY 4 #define EGA1_PRIORITY 5 #define EGA2_PRIORITY 6 #define EGA_HOP1_PRIORITY 7 #define EGA_HOP2_PRIORITY 8 #define LED1_PRIORITY 9 #define LED2_PRIORITY 10 #define DUMP1_PRIORITY 11 #define DUMP2_PRIORITY 12 #define HEART_PRIORITY 21 #define VML1_PRIORITY 22 #define VML2_PRIORITY 23 #define PACKET_COUNTER_SIZE 6 typedef struct { ... byte Packet_Counter[PACKET_COUNTER_SIZE]; } transmit_globals;",4/24/07
ProjectE - TIM - 1884,"Array out-of-bounds error in file pack_ega_hop.c, lines 86, 94 and 104, Inst4 Analysis 1",2,"Issue: Array out-of-bounds error in file pack_ega_hop.c, on lines 86, 94 and 104 File: pack_ega_hop.c, lines 86, 94 and 104 There is an array out-of-bounds error in file pack_ega_hop.c, on lines 86, 94 and 104. the array Trans.Packet_Counter[] is accessed at element 7 (i.e. EGA_HOP1_PRIORITY) whereas the array size is defined as 6 (PACKET_COUNTER_SIZE). File pac_ega_hop.c, lines 86, 94, 104 82 else 83 { 84 CLI; 85 Function->msg_add_func(MSG_DATA_NOT_SENT, 86 Trans.Packet_Counter[EGA_HOP1_PRIORITY], 87 MSG_EGA_HOP, 0, 0); 88 STI; 89 ret = MSG_DATA_NOT_SENT; 90 } 91 92 if (ret == 0) 93 { 94 Trans.Packet_Counter[EGA_HOP1_PRIORITY]++; 95 96 /* get the begin end times for this packet, set up begin time for next */ 97 ega->hdr.start_time = EGA.Hop.Start_time; 98 EGA.Hop.Start_time = GET_SYSTIME(); 99 ega->end_time = EGA.Hop.Start_time; 100 ega->ega_time = EGA.Hop.Ega_time; 101 ega->count = EGA.Hop.Count; 102 ega->scan_type = EGA.Hop.Type; 103 ega->set_number = EGA.Hop.Set_Number; 104 ega->hdr.packet_count = Trans.Packet_Counter[EGA_HOP1_PRIORITY]; 105 106 size = sizeof(ega_hop_rec) * EGA.Hop.Count; 107 108 if (size > 0) 109 { 110 Function->mem_cpy_func(ega->recs, EGA.Hop.Ega, size); telem.h #define ERROR_PRIORITY 0 #define ENG_PRIORITY 1 #define MSG_PRIORITY 2 #define DSC1_PRIORITY 3 #define DSC2_PRIORITY 4 #define EGA1_PRIORITY 5 #define EGA2_PRIORITY 6 #define EGA_HOP1_PRIORITY 7 #define EGA_HOP2_PRIORITY 8 #define LED1_PRIORITY 9 #define LED2_PRIORITY 10 #define DUMP1_PRIORITY 11 #define DUMP2_PRIORITY 12 #define HEART_PRIORITY 21 #define VML1_PRIORITY 22 #define VML2_PRIORITY 23 #define PACKET_COUNTER_SIZE 6 typedef struct { ... byte Packet_Counter[PACKET_COUNTER_SIZE]; } transmit_globals;",4/24/07
ProjectE - TIM - 1883,"Array out-of-bounds error in file command_memdump.c, function command_memory_dump, on lines 141, 158 and 160, Inst4 Analysis 1",2,"Issue: Array out-of-bounds error in file command_memdump.c, function command_memory_dump, on lines 141, 158 and 160 File: command_memdump.c, lines 141, 158 and 160 There is an array out-of-bounds error in file command_memdump.c, function command_memory_dump, on lines 141, 158 and 160. the array Trans.Packet_Counter[] is accessed at element 11 (i.e. DUMP1_PRIORITY) whereas the array size is defined as 6 (PACKET_COUNTER_SIZE). File command_memdump.c byte command_memory_dump(ushort id, dump_type *ad_len, dump_types type, byte seq_num) { ... 139 Function->msg_add_func(MSG_DATA_NOT_SENT, 140 Trans.Packet_Counter[DUMP1_PRIORITY], 141 MSG_DUMP, 0, 0); 142 STI; 143 ret = MSG_DATA_NOT_SENT; 144 } 145 146 if (!ret) 147 { 148 size = ad_len->length + DUMP_STD_LENGTH; 149 if (type == SEQUENCE_DUMP) 150 { 151 size++; 152 } 153 if (size & 0x01) 154 { 155 size++; 156 } 157 158 Trans.Packet_Counter[DUMP1_PRIORITY]++; 159 dump->hdr.start_time = GET_SYSTIME(); 160 dump->hdr.packet_count = Trans.Packet_Counter[DUMP1_PRIORITY]; 161 dump->hdr.length = size; telem.h #define ERROR_PRIORITY 0 #define ENG_PRIORITY 1 #define MSG_PRIORITY 2 #define DSC1_PRIORITY 3 #define DSC2_PRIORITY 4 #define EGA1_PRIORITY 5 #define EGA2_PRIORITY 6 #define EGA_HOP1_PRIORITY 7 #define EGA_HOP2_PRIORITY 8 #define LED1_PRIORITY 9 #define LED2_PRIORITY 10 #define DUMP1_PRIORITY 11 #define DUMP2_PRIORITY 12 #define HEART_PRIORITY 21 #define VML1_PRIORITY 22 #define VML2_PRIORITY 23 #define PACKET_COUNTER_SIZE 6 typedef struct { ... byte Packet_Counter[PACKET_COUNTER_SIZE]; } transmit_globals;",4/24/07
ProjectE - TIM - 1882,"Assignment of 32 bit register value to 8 bit variable. File led_reading.c, Line 83, Inst4 Analysis 1",3,"Issue: 32 bit register value assigned to an 8 bit variable. File: led_reading.c, Line 83 In File led_reading.c on line 83, the 32 bit data register value storing the system time accessed with the macro GET_SYSTIME(), is assigned to ""Store.recs[Store.write_ptr].r_time"", where r_time is an 8 bit variable in the structure. File led_reading.c, Line 83 58 void led_reading(byte which, short value) 59 { 60 int i; 61 ... 76 /* no need to interrupt protect, called from the ADC interrupt */ 77 Function->engin_add_func(which, value, GET_SYSTIME()); 78 } 79 else if (Led.fast_rate) 80 { 81 Store.recs[Store.write_ptr].reading = which; 82 Store.recs[Store.write_ptr].r_value = value; 83 Store.recs[Store.write_ptr].r_time = GET_SYSTIME(); led.h ----------- typedef struct { byte reading; byte r_time; ushort r_value; } led_rec; tega2007.h ----------- #ifdef FSW #define GET_SYSTIME() (~Dma_Regs->systime) #else #define GET_SYSTIME() (Dma_Regs->systime) #endif dmaregs.h ----------- typedef struct { ushort manifold_pres; ushort shield_err; ushort oven_err; ushort oven_shield_misc; ushort adc_data; ushort unused0[3]; ulong systime; <==== ivv note: systime ushort unused1[2]; ushort oven_timer; ushort shld_timer; ushort t_timer; ushort unused2; ushort timer0; ... ushort timer7; } dma_reg_struct;",4/24/07
ProjectE - TIM - 1881,"Condition always evaluates TRUE, File ega_start.c, Line 68, Inst4 Analysis 1",3,"Issue: Condition always evaluates TRUE File: File ega_start.c, Line 68 On line 68 of file ega_start.c (function ega_start), a condition will alway be true because the sum of ""start_up1.count1"" and ""start_up1.count2"" both of type byte (8 bits) can not exceed 510. The sum is compared to MAX_EGA_STARTUP which is equal to 1000. ega_start.c 50 void ega_start(byte *temp_buf, ushort *size, gbool *send_msg, 51 gbool *send_crc_msg) 52 { 53 ushort size_read; 54 dump_type dump; 55 ulong ega_time; 56 ushort crc; 57 ushort count; 58 ega_startup1 start_up1; 59 60 EGA.Err_Cnt = 0; 61 if (Function->read_ega_data_buf_func(sizeof(ega_startup1), &temp_buf[*size], 62 &size_read, gTRUE)) 63 { 64 Function->mem_cpy_func(&start_up1, &temp_buf[*size], 65 sizeof(ega_startup1)); 66 *size += sizeof(ega_startup1); 67 68 if (start_up1.count1 + start_up1.count2 < MAX_EGA_STARTUP) 69 { 70 count = (start_up1.count1 + start_up1.count2) * 4; 71 if (Function->read_ega_data_buf_func(count + 2 + sizeof(ega_startup2), 72 &temp_buf[*size], 73 &size_read, gTRUE)) 74 { 75 *size += count + sizeof(ega_startup2); 76 77 crc = *((ushort *) &temp_buf[*size]); 78 if (crc != Function->ega_crc_func(*size, temp_buf)) 79 { 80 *send_crc_msg = gTRUE; 81 *size += sizeof(ushort); 82 } 83 else 84 { 85 dump.address = (ulong) (temp_buf + 1); 86 dump.length = count + sizeof(ega_startup1) + 87 sizeof(ega_startup2); 88 Function->command_memory_dump_func(0, &dump, 89 EGA_STARTUP_DUMP, 0); 90 } 91 } 92 else 93 { 94 *send_msg = gTRUE; 95 *size += size_read; 96 } ega.h #define MAX_EGA_STARTUP 1000 #define EGA_READ_SIZE 1000 #define EGA_READ_BUF_SIZE 50 #define EGA_FIRST_READ_SIZE 1 #define EGA_MEM_LD_EXT_SIZE 10 #define EGA_STD_CMD_SIZE 6",4/24/07
ProjectE - TIM - 1880,"Reuse of symbol name as function and variable. File eeprom_en_dis.c, Line 73, 88, Inst4 Analysis 1",5,"Issue: Reuse of symbol name as function and variable File: File eeprom_en_dis.c, Line 73, 88 Reuse of symbol name as function and variable. Symbol eeprom_ready is defined as a function in tega2007.h and as a local variable in function eeprom_en_dis() of file eeprom_en_dis.c. The header file tega2007.h is referenced in the file eeprom_en_dis.c 2nd instance of issue: The same type of issue exists with the symbol send_data in file pack_dsc.c (function pack_dsc()). Symbol send_data is both local variable and function where function is of type byte and local is type ushort. 3rd instance of issue: The same type of issue exists with the symbol send_data in file pack_msg.c (function pack_messages()). Symbol send_data is both local variable and function where function is of type byte and local is type ushort. File eeprom_en_dis.c, Line 73, 88 59 ushort eeprom_ready; 60 61 if (side == EEPROM_SIDEA) 62 { 63 if (Params[EEPROM_SIDEA_WRITE] != EEPROM_PROTECTA) 64 { 65 CLI; 66 Function->msg_add_func(MSG_EEPROM_NOT_ENABLED, id, side, 0, 0); 67 STI; 68 ret = MSG_EEPROM_NOT_ENABLED; 69 } 70 else 71 { 72 eep_base = EEPROM0_START; 73 eeprom_ready = EPR_0_READY; 74 } 75 } 76 else 77 { 78 if (Params[EEPROM_SIDEB_WRITE] != EEPROM_PROTECTB) 79 { 80 CLI; 81 Function->msg_add_func(MSG_EEPROM_NOT_ENABLED, id, side, 0, 0); 82 STI; 83 ret = MSG_EEPROM_NOT_ENABLED; 84 } 85 else 86 { 87 eep_base = EEPROM1_START; 88 eeprom_ready = EPR_1_READY; 89 } 90 }",4/24/07
ProjectE - TIM - 1879,"Use of incorrect telemetry ID, nav2.c, line 167, build 6.21",3,"Issue: Use of incorrect telemetry ID File: nav2.c, line 167 As a result of a design document to code trace, a discrepancy in a telemetry reset function was found. The macro AV2_MRD_INIT_VEL_MCI_TLM_ID was repeated twice as shown in the code snippet. The likely intent of the developer was to execute tlm_store once for each telemetry ID – for MCI & MRD. File nav2.c 106 void nav2_Reset(void) 107 { ... 162 tlm_store_double(NAV2_MRD_INIT_TIME_TLM_ID, 0.0); 163 tlm_store_array_double(NAV2_MRD_INIT_POS_MCI_TLM_ID, 164 nav2Mci.position); 165 tlm_store_array_double(NAV2_MRD_INIT_VEL_MCI_TLM_ID, 166 nav2Mci.velocity); 167 tlm_store_array_double(NAV2_MRD_INIT_VEL_MCI_TLM_ID, 168 nav2Mrd.velocity);",4/20/07
ProjectE - TIM - 1878,"Function returns improper error value, Payload FSW tests return value improperly, File eps.c, Function eps_comp_pwr_callback(), Payload Files Inst8_fsw.c, Inst6_fsw.c, Build 6.1",3,"Issue: Function returns improper error value, Payload FSW tests return value improperly File: File eps.c, Function eps_comp_pwr_callback(), Payload Files Inst8_fsw.c, Inst6_fsw.c The function eps_comp_pwr_callback() of eps.c returns EPS_ERROR_COMP_ID (equal to 6) in contradiction to documentation. Inline documentation (line 200 of eps.c) states that the function should return EPS_ERROR (equal to -1) when in error. All calls to the function in the primary FSW that checks the return value uses the condition (x != EPS_OK) or (x != 0) to trap errors. Calls to eps_comp_pwr_callback()in the Payload FSW file Inst8.mod/Inst8_fsw.c (line 224) and Inst6.mod/Inst6_fsw.c (line 240) are checking the return value with the condition ""if (EPS_ERROR == eps_rc)"". The payload engineer is aware of the proper return value but should have chosen to use the condition (eps_rc != EPS_OK) - the proper means to trap the errors. File: eps.c ** Return: ** EPS_OK on success 200 ** otherwise EPS_ERROR -----***********************************************************/ /*+++++ Begin Prototype +++++*/ 203 eps_error_t eps_comp_pwr_callback(eps_comp_id_t id, void (*f) (eps_comp_id_t, double, double *)) /*----- End Prototype -----*/ { eps_error_t retval; retval = EPS_OK; /*+++++ * do loop to control error flow, only executed once -----*/ do { /*+++++ * If component ID is not in range * return EPS_ERROR_COMP_ID * generate an EVR * break -----*/ if (UNDEFINED_EPS_COMP_ID_TYPE <= id) { retval = EPS_ERROR_COMP_ID; EVR_REPORT_EVENT_1(EVR_WARNING, EVR_ID_EPS_COMP_ID_02, EVR_LOC(__LINE__), ""Invalid comp id %i encountered"", id); break; } /*+++++ * update eps_comp[] element with ptr to f() -----*/ eps_comp[id].f = f; retval = EPS_OK; } while (FALSE); return retval; }",3/23/07
ProjectE - TIM - 1877,"Function returns improper error value, Payload FSW tests return value improperly, File eps.c, Function eps_comp_msg_q() and Payload Files Inst8_fsw.c, Inst6_fsw.c, Build 6.1",3,"Issue: Function returns improper error value, Payload FSW tests return value improperly File: File eps.c, Function eps_comp_msg_q(), Payload Files Inst8_fsw.c, Inst6_fsw.c The function eps_comp_msg_q() in file eps.c, returns EPS_ERROR_COMP_ID in contradiction to documentation. Inline documentation states (line 267 of eps.c), that the function eps_comp_msg_q() should return EPS_ERROR when in error. All calls to the function in the primary FSW that checks the return value uses the condition (x != EPS_OK) or (x != 0) to trap errors. Calls to eps_comp_msg_q() in the Payload FSW file Inst8.mod/Inst8_fsw.c (line 239) and Inst6.mod/Inst6_fsw.c (line 255) check the return value with the condition ""if (EPS_ERROR == eps_rc)"". The payload engineer is aware of the proper return value but should have chosen to use the condition (eps_rc != EPS_OK) - the proper means to trap the errors. File: eps.c ** Return: ** eps_error_t ** EPS_OK 267 ** otherwise, EPS_ERROR -----**********************************************************/ /*+++++ Begin Prototype +++++*/ 270 eps_error_t eps_comp_msg_q(eps_comp_id_t id, taskId_t task_id, objectId_t object_id, instanceId_t instance_id, int priority) /*----- End Prototype -----*/ { eps_error_t retval; retval = EPS_OK; /*+++++ * do loop to control error flow, only executed once -----*/ do { /*+++++ * If component ID is not in range * return EPS_ERROR_COMP_ID * report error and abort * break -----*/ if (UNDEFINED_EPS_COMP_ID_TYPE <= id) { retval = EPS_ERROR_COMP_ID; ... ... return retval; }",3/23/07
ProjectE - TIM - 1876,"Incorrect calculation of schedule data, improper range checking, File eps_schedule.c, Line 171, eps_task.c, Line 155, Build 6.1",3,"Issue: Incorrect calculation of schedule data File: File eps_schedule.c, Line 171, eps_task.c, Line 155 The statement on line 171 of file eps_schedule.c is not returning the actual number of entries in eps_schedule_entry[]. It is meant to calculate the number of entries in the array eps_schedule_entry[] but is actually returning a fixed value stored to eps_schedule.count which assigns the value to the local variable l_retval, the return value for the function. This return value is checked by a conditional on line 155 of file eps_task.c with the result that the condition is never true. File eps_schedule.c 165 /*+++++ 166 * Count the number of entries in the eps_schedule_entry[] 167 * Populate the eps_schedule.count member. 168 * NOTE: The LAST element in the eps_schedule_entry[] has not been included 169 * in this count by subtracting 1 from the total count. 170 -----*/ 171 eps_schedule.count = (sizeof(eps_schedule_entry) / sizeof(schEntry_t)) - 1; 172 173 l_retval = eps_schedule.count; 174 175 /*+++++ 176 * Point the eps_schedule.entry member to the first element in the eps_schedule_entry[]. 177 -----*/ 178 eps_schedule.entry = (schEntry_p) & eps_schedule_entry[0]; 179 180 /*+++++ 181 * Set the current subcycle to 0. 182 -----*/ 183 eps_schedule.subcycle = CYCLE_00; 184 185 return l_retval; 186 187 } File eps_task.c 152 /*+++++ 153 * init the eps schedule table 154 -----*/ 155 if (-1 == eps_schedule_init()) 156 { 157 status = EPS_ERROR_INIT_EPS_SCHEDULE; 158 EVR_REPORT_EVENT_0(EVR_WARNING, 159 EVR_ID_EPS_SCHEDULE_CREATE, 160 EVR_LOC(__LINE__), 161 ""Failed to init EPS schedule""); 162 } /* end if faile to init eps schedule */",3/23/07
ProjectE - TIM - 1875,"Potential exception error by memcpy(), File vm_operand.c, Function vm_operand_copy_deep(), Line 193, Build 6.1",3,"Issue: Potential exception error by memcpy() File: vm_operand.c, vm_operand_copy_deep(), Line 193 If opd.kind is equal to COMMAND_KIND when the function vm_operand_copy_deep() on lines 4083 and 7160 of file vm_engine.c is called, then a memcpy() in the function vm_operand_copy_deep() will write to the NULL address and generate an exception. The two calls to the function vm_operand_copy_deep() make the call with the fourth call parameter (dest_command_ptr) as NULL. This NULL is transferred to ""dest_ptr->storage.command_ptr"" on line 192 of vm_operand.c (function vm_operand_copy_deep). Call to memcpy() on line 193 would generate an exception by trying to copy to NULL address. The value of opd.kind is not checked prior to the call to vm_operand_copy_deep on line 4083 and 7160 of vm_engine.c and therefore could potentially be equal to COMMAND_KIND which leads to the problem. \ For the call to vm_operand_copy_deep() on line 4083, the structure ""opd"" is previously assigned values through a chain of function calls leading to line 1043 and ultimately to line 1960 (handle_vm_spawn) in vm.c. For the call on line 7160, the structure ""opd"" is populated by calls to sscanf() in the function parse_value() of file vm_parm.c. There is no error checking and particularly none for the value opd.kind and this leaves open the chance that vm_operand_copy_deep() could generate an exception error. File vm.c 1043 cmd_vm_spawn_ptr = ((struct vm_cmd_vm_spawn_type *)(msg_ptr->parm_data)); ... 1959 case MSG_ID_VM_SPAWN: 1960 handle_vm_spawn(&msg); File vm_engine.c 4083 vm_operand_copy_deep(&opd, &subinstructions[OPD_1_OFFSET].opd, string_ptr, NULL); 7160 vm_operand_copy_deep(&opd, &vm_spawn_engine_ptr->instructions[num_instructions].opd, string_ptr, NULL); File vm_parm.c, Function parse_value() 300 if (sscanf(str, VM_SCANF_HEX_FORMAT_LOWER, &uint_value) == 1) vm_operand_set_uint(opd_ptr, CONSTANT_ACCESS, uint_value); File vm_operand.c, Function vm_operand_copy_deep() 188 case COMMAND_KIND: 189 dest_ptr->kind = source_ptr->kind; 190 dest_ptr->access_mode = source_ptr->access_mode; 191 dest_ptr->storage.command_ptr = dest_command_ptr; 192 size = cmd_size(source_ptr->storage.command_ptr); 193 memcpy(dest_ptr->storage.command_ptr, source_ptr->storage.command_ptr, (unsigned int)size); 194 break;",3/23/07
ProjectE - TIM - 1874,"Potential access of NULL address, File vm_engine.c, Line 562, 563, Build 6.1",4,"Issue: Potential access of NULL address File: vm_engine.c, Line 562, 563 The pointer ""entry_ptr"" of type vm_symbol_table_entry_type could receive a NULL pointer from the function vm_symbol_table_look_up_entry(). Values in the structure at entry_ptr would be accessed and assigned to variables function_engine_index and function_instruction_index and lead to an exception error if entry_ptr is NULL. There is no error checking to prevent this problem. File: vm_engine.c static boolean allow_function_to_run(struct vm_engine_type *invoking_engine_ptr, char *function_name_to_check) { ... 560 entry_ptr = vm_symbol_table_look_up_entry(&vm_function_symbol_table, 561 function_name_to_check); 562 function_engine_index = entry_ptr->group; 563 function_instruction_index = entry_ptr->offset; ================================================================================ File: vm_symbol_table.c struct vm_symbol_table_entry_type *vm_symbol_table_look_up_entry( struct vm_symbol_table_type *table_ptr, const char *name) { struct vm_symbol_table_entry_type *entries; int i; int size; unsigned int key; size = table_ptr->size; entries = table_ptr->entries; key = calculate_key(name); for (i = 0; i < size; i++) { if (entries[i].num_references > 0 && entries[i].key == key && vm_utils_string_equal_caseless(VM_NUM_SYMBOL_CHARS, entries[i].name, name)) return &(entries[i]); } return NULL; }",3/23/07
ProjectE - TIM - 1873,"Global Variable declared external but without definition, File ra_col_pub.h, Line 332",5,"Issue: Global Variable declared external but without definition File ra_col_pub.h, Line 332 A global variable is declared external in ra_col_pub.h but never defined. Three of the four external globals of which it is a part are defined in ra_col.c beginning on line 175. File ra_col.c 173 /* global variables */ 175 int ra_num_link_checks = 0; int ra_num_obj_checks = 0; int ra_num_pose_checks = 0; /* static global variables */ File ra_col_pub.h 324 /********************************************************************** * * global variables * **********************************************************************/ extern int ra_num_link_checks; extern int ra_num_obj_checks; extern int ra_num_pose_checks; 332 extern int ra_num_map_checks;",2/27/07
ProjectE - TIM - 1872,"Access of a Null Pointer in data assignment, File ra_queues.c, Line 728, 1340, Build 6.01",3,"Issue: Access of a Null Pointer in data assignment File ra_queues.c, Line 728, 1340 On line 728 of file ra_queues.c, function ra_power_utilization(), there is potential for accessing a NULL pointer in a data assignement statement. The same problem exists on line 1340 in the function ra_switch_power(). Routine ra_read_parameters returns the pointer to ""pwr_cnst"" and this routine can return a value of zero (line 958 of ra_parameters.c) without any subsequnent condition checking for NULL. 722 void ra_power_utilization(eps_comp_id_t _unused_arg_0_, double _unused_arg_1_, double *power) { const struct power_states_params *const pwr_cnst = 726 ra_read_parameters(Inst9_POWER_STATES); 728 *power = pwr_cnst->power[ra_power_state]; } 1316 BOOL ra_switch_power(int state) { .... /* Get pointer to parameters */ 1323 ctrl_ptr = ra_read_parameters(Inst9_CTRL_PARAMS); ... if(status == Inst9_Q_EPS_ON) { 1340 fsw_taskDelayAtLeast(ctrl_ptr->power_on_time_delay); }",2/27/07
ProjectE - TIM - 1871,"Access of a Null Pointer by memcpy(), File ra_parameters.c, Line 1118, Build 6.01",3,"Issue: Access of a Null Pointer by memcpy() File ra_parameters.c, Line 1118 On line 1118 of file ra_parameters.c, function ra_set_one_param(), there is potential for accessing a NULL pointer as a source in a call to memcpy(). Routine ra_read_parameters returns the pointer to ""buf"" and this routine can return a value of zero (line 958) without any subsequnent condition checking for NULL. ** Purpose: Read the specified parameter structure const void *ra_read_parameters(enum ra_pm_type type) { ... /*if not found, return error*/ 958 if (!ra_parameters[i].size) return 0; /*else return pointer to data*/ else return data + offset; } 1106 int ra_set_one_param(ra_set_one_param_arg *arg) { float new_data[Inst9_MAX_PARAMETERS]; const void *buf; int i; if (arg->offset >= Inst9_MAX_PARAMETERS) return Inst9_E_COMMAND; 1115 buf = ra_read_parameters(arg->type); for (i = 0; ra_parameters[i].type != arg->type && ra_parameters[i].size; i++); 1118 memcpy(new_data,buf,ra_parameters[i].size);",2/27/07
ProjectE - TIM - 1870,"vm_instruction_get_operand() could return with NULL and generate an exception, File vm_parser.c, Line 1358, 5378, Build 6.01",4,"Issue: vm_instruction_get_operand() could return with NULL and generate an exception File vm_parser.c, Line 1358, 5378 In the function add_logical_opd_1() on line 1358, the structure pointer could have received a NULL pointer from the previous statement (line 1357) - a call to vm_instruction_get_operand() and with the call to vm_operand_set_logical(), there would be an attempt to assign data to a NULL pointer structure (line 531, file vm_operand.c [see below]). The same scenario exists on line 5378 where vm_instruction_get_operand() could have returned a NULL pointer and an attempt is made to reference a NULL pointer structure and assign a value. File vm_parser.c 1351 static void add_logical_opd_1(int instruction_index, boolean value) { struct vm_instruction_type *instruction_ptr; struct vm_operand_type *opd_ptr; instruction_ptr = &dest_engine_ptr->instructions[instruction_index]; 1357 opd_ptr = vm_instruction_get_operand(instruction_ptr, OPD_1_OFFSET); 1358 vm_operand_set_logical(opd_ptr, CONSTANT_ACCESS, (int)value); } ... 5359 static boolean replace_label_strings_with_offsets(...) 5360 { ... 5377 opd_ptr = vm_instruction_get_operand(&engine_ptr->instructions[i], OPD_2_OFFSET); 5378 name = opd_ptr->storage.string_ptr; ======================================================== File vm_operand.c, line 528 528 void vm_operand_set_logical(struct vm_operand_type *opd_ptr, enum vm_operand_access_mode_type access, int value) { 531 opd_ptr->access_mode = access; opd_ptr->kind = LOGICAL_KIND; opd_ptr->storage.logical_value = value; } ======================================================== File vm_instruction.c struct vm_operand_type *vm_instruction_get_operand( struct vm_instruction_type *instruction_ptr, int opd_offset) { int num; struct vm_instruction_type *subinstruction_ptrs[VM_INSTRUCTION_MAX_SUBINSTRUCTIONS]; num = vm_instruction_subinstructions(instruction_ptr, subinstruction_ptrs); 142 if (opd_offset >= num) return NULL; else return &subinstruction_ptrs[opd_offset]->opd; }",2/27/07
ProjectE - TIM - 1869,"Function increment_data_index() could return NULL and generate an exception, File vm_engine.c, line 1770, Build 6.01",4,"Issue: Function increment_data_index() could return with NULL and generate an exception File vm_engine.c, line 1770 In the function vm_engine() on line 1770, the structure pointer ""opd_ptr"" is referenced without testing for NULL. During the previous iteration of the for-loop, opd_ptr is assigned a pointer from the call to increment_data_index() and if the pointer is NULL (potential exists at line 1391, then an exception would be generated by reference to the structure pointer on line 1770. File vm_engine.c, line 1770 static struct vm_operand_type *pop(struct vm_engine_type *engine_ptr, int num) { int i; struct vm_operand_type *opd_ptr; opd_ptr = &engine_ptr->data_stack[engine_ptr->data_index]; for (i = 1; i <= num; i++) { 1770 if (opd_ptr->kind == STRING_KIND) vm_stack_remove(&engine_ptr->string_stack); else if (opd_ptr->kind == COMMAND_KIND) vm_stack_remove(&engine_ptr->command_stack); 1776 opd_ptr = increment_data_index(engine_ptr, -1); } return opd_ptr; } vm_engine.c - 1384 static struct vm_operand_type *increment_data_index(struct vm_engine_type *engine_ptr, int num) { int new_value; new_value = engine_ptr->data_index + num; 1391 if (new_value < LAST_REGISTER_OFFSET || new_value >= engine_ptr->max_data_index) 1392 return NULL; .... }",2/27/07
ProjectE - TIM - 1868,"Function create_entry() could return NULL and generate exception, File telemetry_parser.c, Line 960, Build 6.01",3,"Issue: create_entry() may return with NULL and generate exception File telemetry_parser.c, Line 960 In the function load_array() for loading data arrays from files, a call to the function create_entry(), on line 959, can return a value of NULL as assignment to the structure pointer ""info"". On the next line (960), if info received NULL, it is referenced and would generate an exception error. Two conditions in create_entry() that indicate the system is out of heap would return NULL. EVR_REPORT_EVENT() is called within create_entry() in each case with a status value of EVR_WARNING. The function create_entry() is only called within code of telemetry _parser.c and in other instances, the return status is checked for NULL. File telemetry_parser.c, line 960 static boolean load_array(symbol_parse_type parse_kind, ... 955 info = tlm_look_up_hashed_entry(apid_index,tlm_id_parsed); if (info == NULL) { 959 info = create_entry(parse_kind); 960 info->tlm_id = tlm_id_parsed; created_new_entry = TRUE; } else created_new_entry = FALSE; File telemetry_parser.c, Line 531, (definition of function create_entry()) static struct tlm_info_type *create_entry(symbol_parse_type parse_kind)(){ ... }",2/27/07
ProjectE - TIM - 1867,"fastPartGetPartId may return as NULL and generate exception, File: heap.c, Line 1395, 1518, Build 6.01",3,"Issue: fastPartGetPartId may return as NULL and generate exception File: heap.c, Line 1395, 1518 In the function heap_is_block(), the function fastPartGetPartId() can return NULL as the assignment to structure partId (the partition ID). If ""partId"" is NULL, then at line 1405, the structure partId would be referenced and generate an exception error. The issue also exists beginning on line 1518 in function heap_addr_range_status(). There is range checking after the call to fastPartGetPartId(). However, this fast partition routine can return NULL pointer and the condition checking in the routine that calls fastPartGetPartId() - heap_is_block(), will not necessarily trap and respond to partId equalling NULL. The condition ""if (sysPhysMemTop() < (char *) partId)"" checks for partID exceeding the upper range of memory but there is no check for NULL. File heap.c int heap_is_block(heap_t heap, void *block) { status = heap_is_heap(heap); if (status == HEAP_STATUS_OK) { /* ** Get the partition pointer. If this is a fast heap, ** then the partition cannot be accessed directly. Use ** the fastPartLib accessor in this case. */ if (heap->fast == TRUE) { 1395 partId = fastPartGetPartId((FAST_PART_ID) heap->partition); } else { partId = heap->partition; } if (sysPhysMemTop() < (char *) partId) { status = HEAP_STATUS_PART_ABOVE_SYS_MEM_TOP; } else if (block < heap->base_addr) { status = HEAP_STATUS_BLK_BEFORE_BASE; } else { endOfHeap = (char *) heap->base_addr + 1405 (partId->totalWords * 2); if ((void *) endOfHeap <= block) { status = HEAP_STATUS_BLK_AFTER_HEAP; File fastPartLib.c, Line 930 930 PART_ID fastPartGetPartId ( FAST_PART_ID fastPartId /* Get partId from this FAST_PART */ ) { /* The usual memPartLib error checking on the partId we were passed. */ if ((fastPartId == NULL) || (fastPartVerifyMemPartId(fastPartId->partId) == ERROR)) { errnoSet(S_fastPartLib_INVALID_FAST_PART); return NULL; } return fastPartId->partId; }",2/27/07
ProjectE - TIM - 1866,"Array accessed out of bounds, File eps2.mod/eps_pdc_sw.c, Line 1829, Build 6.01",3,"Issue: Array accessed out of bounds File: eps2.mod/eps_pdc_sw.c, Line 1829, 1868 On line 1812 in file eps_pdc_sw.c, the if-conditional compares the array size to the size of the array using the logical operator "">="". Consequently, the array can be accessed out of bounds by 1. The array would be accessed out of bounds on line 1829 and 1868. File: eps_pdc_sw.c 131 static FP_Enables_t eps_pdc_sw_fp_enable_word[NUM_EPS_PDC_SW_FP_ENABLE_WORDS]; ... ** Description: ** Sets the fault protection enable/disable status for the specified PDC ** switch ... 1797 void eps_pdc_sw_set_fp_enable(eps_pdc_sw_id_t id, bool_t enable) /*----- End Prototype -----*/ { ... 1808 /*+++++ * If the fault protection enable word index is in range. -----*/ if ((0 <= fp_enable_word_idx) && 1812 (NUM_EPS_PDC_SW_FP_ENABLE_WORDS >= fp_enable_word_idx)) { FPU_Enable_Set(command, mask, 1829 eps_pdc_sw_fp_enable_word[fp_enable_word_idx]); ... /*+++++ * Push the new enable word in telemetry. -----*/ if (0 == fp_enable_word_idx) { tlm_store_uint(FP_PDC_ENABLE_STATUS_WORD_1_TLM_ID, eps_pdc_sw_fp_enable_word[fp_enable_word_idx]); } else { tlm_store_uint(FP_PDC_ENABLE_STATUS_WORD_2_TLM_ID, 1868 eps_pdc_sw_fp_enable_word[fp_enable_word_idx]); }",2/23/07
ProjectE - TIM - 1865,"Switch variable is compared to binary logic values, File eps_emic_relay.c, Line 2358, Build 6.01",5,"Issue: Switch variable is compared to binary logic values File eps2.mod/eps_emic_relay.c, Line 2358, 2362 A switch variable is being compared to binary logic (True/False) from an OR comparison of two enumerators. Two case statements of the switch compare binary logic values to an integer variable with values ranging from 0 to 2. This code was first flagged by NASA IV&V as part of the Genesis FSW code analysis (GENESIS TIM-1107, May 2001, Issue Status=OPEN). Corrective actions were taken and implemented in MRO FSW (ref. MRO IV&V Archives) and are shown below as reference. ProjectE File eps_emic_relay.c, line 2358, 2362 2356 switch (comp_state) { 2357 2358 case (EPS_COMP_POS_1 || EPS_COMP_OFF): 2359 pos = EPS_EMIC_RELAY_POS_1; 2360 break; 2361 2362 case (EPS_COMP_POS_2 || EPS_COMP_ON): 2363 pos = EPS_EMIC_RELAY_POS_2; 2364 break; ======================================================================== MRO FSW, eps_relay.c, line 1861 static eps_relay_pos_t eps_relay_get_pos_from_comp(const eps_comp_state_t comp_state) /*----- End Prototype -----*/ { eps_relay_pos_t pos; /*+++++ Get the relay state from the component state. NOTE: This logic assumes the enumeration : EPS_COMP_OFF = 0 EPS_COMP_ON = 1 EPS_COMP_POS_1 = 0 EPS_COMP_POS_2 = 1 EPS_COMP_POS_3 = 2 -----*/ switch (comp_state) { case EPS_COMP_POS_1: /* EPS_COMP_POS_1 == EPS_COMP_OFF */ pos = EPS_RELAY_POS_1; break; case EPS_COMP_POS_2: /* EPS_COMP_POS_2 == EPS_COMP_ON */ pos = EPS_RELAY_POS_2; break; case EPS_COMP_POS_3: pos = EPS_RELAY_POS_3; break; default: pos = UNDEFINED_EPS_RELAY_POS_TYPE; break; } return pos; }",2/23/07
ProjectE - TIM - 1864,"Unparenthesized formula for data writing to heap, File ra.mod/ra_monitor.c, Line 786, Build 6.01",4,"Issue: Unparenthesized formula for data writing to heap File ra.mod/ra_monitor.c, Line 786 The formula functioning as the input parameter to the macro Inst9_ROUND is unparenthesized. Without design details, engineering notes or inline comments, IV&V cannot determine how the formula is supposed to be evaluated. The formula will be evaluated simply from left to right without parentheses and the intended evaluation is not clear. File ra_monitor.c int ra_monitor_sensors(struct arm_science_1 **current_heap, ... 784 if(fabs(tau_ptr->temp.m[i]) > FLT_EPSILON) { 786 ra_science_1.trotor[i] = Inst9_ROUND(1/tau_ptr->temp.m[i]* temp_ptr->trotor[i] + tau_ptr->temp.b[i]);",2/23/07
ProjectE - TIM - 1863,"Possible use of unassigned variables, File evr.mod/evr.c, Lines 658, 659, 826, 842, Build 6.01",4,"Issue: Possible assignment and storage of unassigned variables. File: evr.mod/evr.c, Line 658, 659, 826, 842 If the if-condition is false at line 595 [ if( !intContect()) ]in file evr.c, then ""rtcValue"" will be without an assigned value on line 658 of file evr.c where it is an input parameter to a copy function. The variable ""timestamp"" could also remain uninitialized and this would impact the statements on line 826 and 842 - calls to the function add_to_ring(). If intContect() on line 574 shows the FSW is not in interrupt context, this does not guarantee that it remains in that state on line 595; the state could have changed in the time that transpired between execution of statements. Both if-conditions on line 574 and 595 could be false. If interrupt context switches, then the if-condition on line 595 is FALSE and the problem arises (rtcValue without value). File evr.c void evr_report_event (evrLevel_t severity, uint32_t ID, int num_args, ...) { ... rtcValue_t rtcValue; /* rtc value */ /* Call the spacecraft time services to get the current time. */ ... 573 /* If in the interrupt context, increment counter and return */ 574 if( intContext() ) { EvrIntContextCntr++; return; } ... 595 if( !intContext() ) clock_rtc_sc_time (&rtcValue, &timestamp); ... /* First the RTC value */ 658 copy32_to_bigendian(&packet_body[rtc_index],rtcValue.upper); copy32_to_bigendian(&packet_body[rtc_index+4],rtcValue.lower); if (severity == EVR_FATAL) { /* Add to low DRAM ring buffer */ 826 add_to_ring (evr_fatal_header_ptr (), evr_fatal_ring_ptr (), EVR_FATAL_RING_SIZE, timestamp,",2/23/07
ProjectE - TIM - 1862,"Redefinition of a VxWorks pre-processor symbol, File chkdsk.mod/dosFsChkLib.c, Line 245, Build 6.01",3,"Issue: Redefinition of a VxWorks pre-processor #define symbol CHK_ONLY File: chkdsk.mod/dosFsChkLib.c, Line 245 VxWorks defines the preprocessor symbol ""CHK_ONLY"". The symbol is redefined on line 245 of phx_fsw.ar\chkdsk.mod\dosFsChkLib.c. This preprocessor symbol is defined in the VxWorks header dosFsLib.h which is referenced by the file dosFsChkLib.c. VxWorks sets the value to 1 and it is redefined (without use of #undef) to a value of zero. File dosFsChkLib.c #include <dosFsLib.h> ... /* check-disk-error repair levels */ 245 #define CHK_ONLY 0 /* only to check disk ( not to restore ) */ 246 #define CHK_WR 1 /* min repair lever for writing repairs */ 247 #define CHK_KILL_BAD 2 /* repair level to kill all bad files and */",2/23/07
ProjectE - TIM - 1861,"Mismatched types in a switch, File eps2.mod/eps_cmd_handler.c, Line 570, 640, Build 6.01",3,"Issue: Mismatched types with different values are comparedin a switch File: eps2.mod/eps_cmd_handler.c, Line 570, 640 Two switches comparing mismatched types reside at line 570 and 640 of file eps_cmd_handler.c. Parameter ccu_pm_id is of type (eps_ccu_id_t), an enumerator with values (0,1). The parameter is being compared to four cases of a different type, (ccu_id_t) {typedef uint8_t} with values of (0,1,2,3). File eps_cmd_handler.c 556 eps_ccu_id_t ccu_pm_id; 557 eps_comp_state_t state; 558 eps_comp_id_t l_comp_id; ... /*+++++ * Get corresponding component ID for specified CCU ID -----*/ 570 switch (ccu_pm_id) { 572 case ccu_id_value_CCU_1A: ... 577 case ccu_id_value_CCU_1B: ... 582 case ccu_id_value_CCU_2A: ... 587 case ccu_id_value_CCU_2B: {review also the switch at line 640}",2/23/07
ProjectE - TIM - 1860,"Comparison of different enumerator types, File eps_ccu.c, Line 4313, Build 6.01",4,"Issue: Comparison of different enumerator types File eps_ccu.c, Line 4313 On line 4313, a comparison is made in an if-conditional between the parameter ""state"" of type (eps_ccu_pm_state_t) and an enumerator of type (eps_ccu_pm_cmd_t). The conditional is comparing an enumerator representing STATE to one representing COMMAND. The code functions as intended because the enumerations have the same values in their respective enumerators. File eps_ccu.c /*+++++ * set the condition of all enabled power modules back to good. -----*/ for (l_pm_id = 0; l_pm_id < NUM_EPS_CCU_PM_ID; l_pm_id++) { 4313 if (l_ccu->pm[l_pm_id].state == EPS_CCU_PM_CMD_ENABLE) { eps_ccu_pm_set_cond(ccu_id, l_pm_id, Good);",2/23/07
ProjectE - TIM - 1859,"Incorrectly implemented formula, File eps2.mod/eps_ccu.c, Line 368, 431, Build 6.01",4,"Issue: Incorrectly implemented formula related to enabling power module state for CCU and PM File eps2.mod/eps_ccu.c, Line 368, 431 In file eps_ccu.c, line 368 and 431, the formula representing the fourth parameter in the call statement to fsw_cmd_send() (defined as type uint8_t, fsw_utils.c) is an offset into a buffer and may be incorrectly formulated. It may simply be missing parentheses. Without more developer notes, inline documentation or design documentation, we cannot determine the exact design intended. File: eps_ccu.c, line 368, 431 352 /*+++++ 353 * Loop through all the available CCUs 354 -----*/ 355 for (l_ccu_id = 0; l_ccu_id < NUM_EPS_CCU_ID; l_ccu_id++) { 357 /*+++++ 358 * Loop through all the available power modules for current CCU. 359 -----*/ 360 for (l_pm_id = 0; l_pm_id < NUM_EPS_CCU_PM_ID; l_pm_id++) { 362 /*+++++ 363 * command default enable/disable power module state for current CCU and PM 364 -----*/ 365 fsw_cmd_send (CMD_SOURCE_FSW_BUS_INDEX, 366 CMD_OP_CCU_MOD_EN_DIS, 367 eps_ccu_pm_default_state[l_ccu_id][l_pm_id], 368 (NUM_EPS_CCU_ID * l_ccu_id + l_pm_id), 0, 0); 370 } 372 } ... 428 fsw_cmd_send (CMD_SOURCE_FSW_BUS_INDEX, 429 CMD_OP_CCU_MOD_EN_DIS, 430 fltrec_nighttime_msg.eps_ccu_data.state[l_ccu_id][l_pm_id], 431 (NUM_EPS_CCU_ID * l_ccu_id + l_pm_id), 0, 0);",2/23/07
ProjectE - TIM - 1858,"Potential for divide by zero, File edl_nav.c, Line 933, Build 6.01",2,"Issue: Potential for divide by zero in determination of residuals from altitude or velocity measurements File edl_nav.c, Line 933 The condition on line 907 does not prevent a divide by zero in the equation on line 933. The equation is an accumulator in a summation determining the variance of a measurement being processed through a kalman filter (EDL-2). No documentation exists to explain the range of values that ""nn"" could receive, and review of the code does not reveal the range except that ""nn"" will remain between 0 and EDL_NAV_RING_SIZE (value is 20) in the ring buffer. File edl_nav.c 883 STATIC bool_t edl_nav_cdr_reviewIsOk( edlNavMeasEnum meas, edlNavCovEnum type, vector_t bV) /*----- End Prototype -----*/ { /*+++++++++++++++++++++++++++++++++++++++++++++++++++ ** Determine number in buffer: nn = next - first. ** If number isn't positive, add RING_SIZE for wrap-around. **--------------------------------------------------*/ 906 nn = edl_nav_res[meas].next - edl_nav_res[meas].first; 907 if(nn <= 0) nn += EDL_NAV_RING_SIZE; ... 932 edl_nav_res[meas].resid = bR/nn; 933 sR = (sR - bR*edl_nav_res[meas].resid)/(nn-1);",2/23/07
ProjectE - TIM - 1857,"Out of Bounds Error, File fpc.mod/floating_point.c, Line 149, 274, Build 6.01",2,"Issue: Out of Bounds Error, Scalar fpcsr is accessed as an array File: fpc.mod/floating_point.c, Line 149, 274 The statement in file floating_point.c, function fp_exc_init() on line 149, will access a scalar double variable ""fpcsr"" as an array and out of bounds. ""fpcsr"" is a double scalar variable in the typedef structure fpContext defined in VxWorks header fppPpcLib.h. In the header floating_point.h, the macro TASK_FPSCR (for CPU defined as RSC) is accessing element [1] (2nd element) of ""fpcsr"", as if it is an array variable. The macro is also applied on line 274 in floating_point.c. The relevant code fragments are listed below. ( This assumes the flight ready code uses the #define pre-processor definition of ""RSC"") File floating_point.c 106 static int fp_exc_init(WIND_TCB *tcb) { ... 148 #if (CPU!=SIMSPARCSOLARIS) 149 TASK_FPSCR(tcb) &= ~(FPSCR_VE | FPSCR_OE | FPSCR_UE | FPSCR_ZE | FPSCR_XE); #else TASK_FPSCR(tcb) = 0x0d0000a0U; /* no underflow exceptions */ #endif ---------------------------------------------- floating_point.h #if (CPU==PPC603) #define TASK_FPSCR(tcb) ((tcb)->pFpContext->fpcsr) #elif (CPU==RSC) #define TASK_FPSCR(tcb) (((int *) (&((tcb)->pFpContext->fpcsr)))[1]) #elif (CPU==SIMSPARCSOLARIS) #define TASK_FPSCR(tcb) ((tcb)->pFpContext->fsr) #endif --------------------------------------------------- VxWorks header fppPpcLib.h typedef struct fpContext /* FP_CONTEXT */ { #if ( CPU == RSC ) double fpx[FP_NUM_DREGS]; /* 32 doubles : 0 */ double fpcsr; /* control/statu : 256 */ /* TOTAL : 264 */ #else double fpr[FP_NUM_DREGS]; /* 32 doubles : 256 bytes */ int fpcsr; /* control/status : 4 bytes */ int pad; /* pad to 8 byte boundary */ #endif /* ( CPU == RSC ) */ } FP_CONTEXT; /* TOTAL : 260 bytes */",2/23/07
ProjectE - TIM - 1856,Variable use results in underflow in Inst8 Build 5.4 FSW (Inst8_paci.c),3,"The local variable, rc (short), is assigned an ERROR (-1) value. After the -1 assignment, rc is used as a function parameter in a call to the function, ac_StateLogEntry. The function, ac_StateLogEntry, expects its last parameter to be and unsigned short value. If this -1 assignment were to occur, the most likely scenario is the value will be rolled over to maximum unsigned short value. It is not clear if this is the desired implementation. File: Inst8_paci.c Function: Inst8_PACIDiscrete Lines: 722, 734 722 rc = ERROR; ... 734 ac_StateLogEntry(Inst8_STATE_FAULT,MAGI_STATE_LOG_NO_COMMAND,rc);",1/5/07
ProjectE - TIM - 1855,Missing type-cast in Inst6 Build 5.4 FSW (Inst6_image.c) may cause loss of data.,3,"The struct field, Inst6_CCD.pwr[].state (short), can be assigned a value of -1. However, all of its usages in assignment are to unsigned short values. It is not clear if these values are reset prior to being assigned to unsigned short values. If this -1 assignment were to occur to unsigned short values, the most likely scenario is the value will be rolled over to maximum unsigned short value. It is not clear if this is the desired implementation. Code segments listed below: File: Inst6_image.c Functions: Inst6_CCDGetPowerState, Inst6_CCDPowerSet Lines: 258, 450, 451, 258 power = Inst6_CCD.pwr[ccd_sel].state; ... 450 CCD_prev[Inst6_CCD_LEFT] = Inst6_CCD.pwr[Inst6_CCD_LEFT].state; 451 CCD_prev[Inst6_CCD_RIGHT] = Inst6_CCD.pwr[Inst6_CCD_RIGHT].state; ... ASSIGNMENT TO -1 514 Inst6_CCD.pwr[Inst6_CCD_LEFT].state = Inst6_CCD_PWR_FAULT; /* PFR 4653 */ 515 Inst6_CCD.pwr[Inst6_CCD_RIGHT].state = Inst6_CCD_PWR_FAULT; /* PFR 4653 */ 518 Inst6_CCD.pwr[ccd_sel].state = Inst6_CCD_PWR_FAULT; /* PFR 4653 */",1/5/07
ProjectE - TIM - 1854,Variable assignment results in underflow in Inst6 Build 5.4 FSW (Inst6_fsw.c),3,"The local variable, rc (unsigned short), can be assigned an ERROR (-1) value. This assignment is obtained via returns from the function, Inst6_PACIDiscrete. If this -1 assignment were to occur, the most likely scenario is the value will be rolled over to maximum unsigned short value. It is not clear if this is the desired implementation. Code segment listed below: File: Inst6_fsw.c Function: Inst6_Reset Lines: 310 310 rc = Inst6_PACIDiscrete (Inst6_PACI_DSC_RST, Inst6_PACI_DISC_CLR);",1/5/07
ProjectE - TIM - 1853,Uninitialized variable in Inst6 Build 5.4 FSW (Inst6_image.c),3,"The variable, ae_trial_cnt, is used to count the number of AE attempts. However, the variable is used on line 3114 without ever being set to any value. Code segment listed below: File: Inst6_image.c Line 230, 3114 230 static uint16_t ae_trial_cnt; /* count of AE attempts so far */ ... 3107 EVR_REPORT_EVENT_4 (EVR_WARNING, 3108 Inst6_AE_ACQ_FAIL_ERR_EVR_ID, 3109 EVR_LOC(__LINE__), 3110 """"Inst6: AE Re-acquisition failed-ccd: %d,left code:%d,right code:%d AE trial: %d"""", 3111 (int) ccd_sel, 3112 (int) img_acq_err[Inst6_CCD_LEFT], 3113 (int) img_acq_err[Inst6_CCD_RIGHT], 3114 (int) ae_trial_cnt);",1/3/07
ProjectE - TIM - 1852,Uninitialized variables in Inst6 Build 5.4 FSW (Inst6_move.c),3,"The variable, act_dir, is used uninitialized in function Inst6_ElMove (Inst6_move.c) on line 1408. This uninitialized use will happen if the conditional statement on line 1360 does not evaluate to true as act_dir is initialized on line 1361. Code segments listed below. Function: Inst6_ElMove File: Inst6_move.c Lines: 1408 1360 if (new_pos != Inst6_move[Inst6_ACT_EL].curr_position) { 1361 Inst6_CalcRangeDir (... &act_steps, &act_dir); 1377 } ... 1408 Inst6_move[Inst6_ACT_EL].curr_dir = act_dir;",1/3/07
ProjectE - TIM - 1851,Uninitialized variable in Inst7 Build 5.4 FSW (Inst7.c),3,"The variable, mardiAnalog, is used unitialized in Build 5.4 FSW. Inst7 analog devices are closed, though they are currently not opened because of pre-processor directive. Code segments listed below. File: Inst7.c Function: open_devices 1129 #if (0) 1130 if (!problems) { 1131 mardiAnalog[0] = open(PACI_Inst7_ANALOG_DEV, O_RDWR, NULL); 1132 if (mardiAnalog[0] == ERROR) { 1133 problems++; 1134 EVR_REPORT_EVENT_0(EVR_WARNING, EVR_ID_Inst7_OPEN_THM, 1135 EVR_LOC(__LINE__), """"can't open analog device""""); 1136 } 1137 } 1138 #endif ... 1161 for(i = 0; i < 1; i++) { 1162 close(mardiAnalog[i]);",1/3/07
ProjectE - TIM - 1850,Uninitialized variable in Inst9 Build 5.4 FSW (ra_monitor.c),3,"The local struct fields, state.pot.q and state.enc.q, are used uninitialized in function ra_compute_state (ra_monitor.c) on line 1527. This will happen when the conditional statements on line 1517 and 1522 do not evaluate to true. Code segment listed below. Function: ra_compute_state File: ra_monitor.c Lines: 1517-1527 1517 if (fabs(joint_ptr->gear_ratio[i]) > FLT_EPSILON) 1518 state.enc.q[i] = joint_ptr->rad_per_enc[i]* 1519 ((double)his_ptr->pt[his_ptr->index].arm.jnt[i].enc / 1520 joint_ptr->gear_ratio[i] - joint_ptr->enc_offset[i]); 1521 /* PFR 4420: Need to account for reversed actuator-angle phasing */ 1522 if (fabs(joint_ptr->pot.m[i]) > FLT_EPSILON) 1523 state.pot.q[i] = (his_ptr->pt[his_ptr->index].arm.jnt[i].pot - 1524 joint_ptr->pot.b[i]) / joint_ptr->pot.m[i]; 1525 1526 state.mix.q[i] = (his_ptr->pt[his_ptr->index].use_pots[i]) ? 1527 state.pot.q[i] : state.enc.q[i];",1/3/07
ProjectE - TIM - 1849,Lost of fraction portion in Inst6 Build 5.4 FSW ( Inst6_move.c),3,When two integers are divided and assigned to a floating point variable the fraction portion is lost. This happens in function Inst6_Move on line 1146. IV&V cannot determine if this is the intended implementation. Code segments listed below: File: Inst6_move.c Function: Inst6_Move Lines: 1146 1145 /* return wait time in fractional seconds */ 1146 wait_time = ((act_steps * act_rate)/500); /* twice the amount */,1/3/07
ProjectE - TIM - 1848,Lost of fraction portion in Inst8 Build 5.4 FSW (Inst8_image.c),3,"When two integers are divided and assigned to a floating point variable the fraction portion is lost. This happens in function Inst8_CCDAutoExpose on lines 1436 and 1463. IV&V cannot determine if this is the intended implementation. Code segments listed below: File: Inst8_image.c Function: Inst8_CCDAutoExpose Lines: 1436, 1463 1436 PvTavg = PvTS / (PvTH - PvTL); 1463 PvIavg = PvIS / (PvIH - PvIL); The use of division within the ceil function parameter list 1423 should also be evaluated 1423 PvCM = ceil(PvWavg/PvTot);",1/3/07
ProjectE - TIM - 1847,Negative array subscript in Inst9 Build 5.4 FSW (ra_col.c),3,"The variable, max, is used as a subscript in the function ra_expand_objects. max can hold a value of negative one on line 2954. This will happen when the conditional statment on line 2950 evaluates to true during the first iteration of the 'for' loop that starts on 2948. Code segment is listed below. File: ra_col.c Function: ra_expand_objects Lines: 2948-2957 2948 for (i = 0; i < Inst9_COL_NUM_OBJS; i++, file_obj++) { 2949 2950 if (file_obj->obj_id == Inst9_COL_NO_OBJ) break; 2951 2952 } 2953 2954 max = i-1; 2955 2956 obj = &objs.obj[max]; 2957 file_obj = &objs.parm[max];",1/3/07
ProjectE - TIM - 1846,Unused local variable in Inst7 Build 5.4 FSW (Inst7.c),4,"The variable, nblocks, is used to store the computed number of blocks. However, the variable is never used. Code segment listed below: Function: take_image File: Inst7.c Line 1328 1328 nblocks = BLOCKS(size, block);",1/3/07
ProjectE - TIM - 1845,Unreachable code in Inst6 Build 5.4 FSW (Inst6_image.c),3,The conditional statements on lines 1600 and 1621 will never execute because the values for which they are compared against are already positive (not in error). Code segment and line numbers are provided below. File: Inst6_image.c Function: Inst6_CCDProcImage 1520 rc4 = MAGI_OK; /* PFR 4652 */ 1521 rc5 = MAGI_OK; /* PFR 4652 */ ... 1599 rc3 = Inst6_CCDSubframe(ccd_sel); /* PFR 4652 */ 1600 if (MAGI_OK != rc4) { /* PFR 4652 */ ... 1620 rc4 = Inst6_CCDDecimate(ccd_sel); /* PFR 4652 */ 1621 if (MAGI_OK != rc5) { /* PFR 4652 */,12/27/06
ProjectE - TIM - 1844,Unreachable code in Inst8 Build 5.4 FSW (Inst8_cmd.c),3,"The conditional statement on line 981 in the function, Inst8_ProcMulti, will never evaluate to True because the entry for this path of logic is opposite of what is listed on line 970 (Line 981 falls inside Line 970). Code segment and line numbers are provided below. File: Inst8_cmd.c Line: 981 970 if (!Inst8_system_abort) { ... 981 if (Inst8_system_abort) { /* FS9229 PFR5411 */",12/27/06
ProjectE - TIM - 1843,Unreachable code in Inst6a Build 5.4 FSW (magi_image.c),3,"The conditional statement on line 1258 in the function, img_Decimate, will never evaluate to True because the variable is initialized to a default value that is never changed prior to this point in execution. Code segment and line numbers are provided below. File: magi_image.c 1142 ydec = 2; ... 1257 /* Generate histogram for 1x4 CCD binned images */ /* FS8688 PFR4656 */ 1258 if (1 == ydec) {",12/27/06
ProjectE - TIM - 1842,Multiple declared functions with different parameter lists in Inst6/Inst6b Build 5.4 FSW,3,"The function, Inst6_CCDAERepeatImage, is declared twice but features different parameter lists in each declaration. Inst8_image.h, line 27 uint16_t Inst6_CCDAERepeatImage(void); /* FS8450 PFR4536 */ Inst6_image.h, line 45 uint16_t Inst6_CCDAERepeatImage(uint16_t ccd_sel); /* SPR FS8455 PFR 4537 */",12/27/06
ProjectE - TIM - 1841,Unreachable code in Inst6 Build 5.4 FSW (Inst6_cmd.c),3,The following Inst6 current state checks for a Ready Inst6 operational state will never evaluate to true becuase the entry for this path of logic already restricts the Inst6 current state to Defer or Preheat. IV&V cannot determine if the intent of the PFRs are clearly implemented. Code segments and line numbers are listed below. File: Inst6_cmd.c Function: Inst6_ProcDeferred 903 if (((Inst6_STATE_DEFER == Inst6_curr_state) || /* FS8717 PFR4717 */ 904 (Inst6_STATE_PREHEAT == Inst6_curr_state)) && /* FS8717 PFR4717 */ 905 Inst6_MULTI_DONE == Inst6_cmd.multi_step) { 917 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 944 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 968 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 995 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 1020 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 1046 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 1073 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 1098 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */ 1127 if (Inst6_STATE_READY == Inst6_curr_state) { /* PFR 4662 */,12/27/06
ProjectE - TIM - 1840,Requirement FSW4868 is not verified by test script fpvt-eps.bs-01-34,4,"Test Case fpvt-eps.bs-01-34 tests requirement FSW4868 which states: ""a) If this is the first error for this bus, PCPM shall record overcurrent in error for this bus in the Fault History Table (see Fault Recorder)."" There is not enought information in the script to determine where this requirement is being verified. There is a global variable (QLC_BusOvCur) that is tested , but no evidence that the FHT is being analyzed, or what the parameter name is in the FHT.",12/8/06
ProjectE - TIM - 1839,Requirement FSW4847 is not verified by test script fpvt-eps.bs-01-34,3,"Test Case fpvt-eps.bs-01-34 tests requirement FSW4847 which states: ""a) PCPM shall record the current state (on, off) of this load."" The current state is verified for 2 loads(Inst4 and DesV1), but not all loads (RcsCb, DesRL).",12/8/06
ProjectE - TIM - 1838,Requirement FSW4452 is not verified by test script fpvt-gnc.imu-01-22,3,"Test Case fpvt-gnc.imu-01-22 tests requirement FSW4452 which states: ""4) AKPM shall wait a parameterized number of seconds."" Test script just verifies a power cycle, does not test ""waiting a parameterized number of seconds""",12/8/06
ProjectE - TIM - 1837,Requirement FSW4845 is not verified by test script fpvt-eps.bs-01-34,3,"Test Case fpvt-eps.bs-01-34 tests requirement FSW4845 which states: ""c) If the load was previously powered on and it is on the exclusion list, PCPM shall mark it failed."" Test script tests Inst4 and DesV1 loads for their status, but it is not clear that these loads were on the exclusion list. The content of the exclusion list is not provided in the test script.",12/8/06
ProjectE - TIM - 1836,Requirement FSW4849 is not verified by test script fpvt-eps.bs-01-34,4,"Test Case fpvt-eps.bs-01-34 tests requirement FSW4849 which states: ""1) PCPM shall record the start of the DLS on this bus in the Fault History Table (see Fault Recorder) and QuickLook bits."" The test script does not provided enough information to determine where this requirement is being verified. Also, it is not clear what the FHT parameter name is.",12/8/06
ProjectE - TIM - 1835,Requirement FSW4839 is not verified by test script fpvt-eps.bs-01-34,4,"Test Case fpvt-eps.bs-01-34 tests requirement FSW4839 which states: ""4. PCPM shall record the end of the DLS on this bus in the Fault History Table (see Fault Recorder)."" There is not enough information in this script to determine where this requirement is being verified.",12/8/06
ProjectE - TIM - 1833,Requirement FSW4449 is not verified by test script fpvt-gnc.imu-01-22,3,"Test Case fpvt-gnc.imu-01-22 tests requirement FSW4449 which states: ""7) AKPM shall reinitialize the IMU software object."" Test script prints: log ""Verification Method: No command history available to verify this."" followed by: ""Verify that another 0XA200: 0X3 IMU CLFP Detection in Fault Data pointer check is generated."" There is not enough information in the script to determine if this requirement is verified.",12/8/06
ProjectE - TIM - 1832,Requirement FSW4846 is not verified by Test Script fpvt-eps.bs-01-34,3,"Test Case fpvt-eps.bs-01-34 tests requirement FSW4846 which states: ""b) PCPM shall power off the load."" The script verifies that the load has been shed for 2 of the 4 devices on the bus when a Diagnostic Load Shed has been requested. The script should verify that all 4 loads have been shed.",12/8/06
ProjectE - TIM - 1831,Requirement FSW3614 is not vertified by test case fpvt-gnc.imu-01-22,3,"Test Case fpvt-gnc.imu-01-22 tests requirement FSW3614 which states: ""Upon request, SPM shall set the sequence global variable for each instrument indicating that it has been ""safed"", and initiate the execution of a mission phase specific block in order to safe all science instruments upon initiation of Heartbeat Termination and record that all instruments have been safed in the Fault History Table."" The requirement states that the SPM shall set the sequence global variable for each instrument indicating that it has been safed. The wording implies that there is a global variable for each instrument. The script only verifies the FHT entry 0XA002: 0X1 HBG Milestone Science safed parameter. It is not clear how the script verifies that all instruments are safed.",12/7/06
ProjectE - TIM - 1830,Too few initializers for thermostat failed array in the Build 5.3 FSW,3,"File: DBPM.c The below code is missing 3 values in its initialization. The array is of size 18, but is only initialized to 15 values. Lines: 233-248 static bool_t thermostat_failed[THERM_NUM_ENABLE_OBJECTS] = { FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE};",12/7/06
ProjectE - TIM - 1829,Unused functions in the Build 5.3 FSW,4,The following functions are unused in the the Build 5.3 FSW. There is no indication of the status of these functions for the ProjectE FSW. clockLib.c Line 2135: void clock_difftime Line 2260: double clock_sc_time_double_resolution Line 1918: void clock_sc_time_resolution Line 2093: void clock_sc_timespec_resolution Line 1777: void clock_set_sc_time Line 2218: void clock_set_sc_time_double Line 2051: void clock_set_sc_timespec Line 2108: void clock_sumtime Line 2643: void clockConditionInit cmd.c Line 511: void cmd_delete_hist_buf Line 546: void cmd_delete_restrict_sem fsw_trace.c Line 124: void cs_trace_enable Line 113: void fsw_trace_disable(void) Line 112: void fsw_trace_enable Line 115: void hpp_trace_enable Line 135: void int12_trace_enable Line 129: void int9_trace_enable LIne 118: void intX_trace_enable Line 121: void meeb_trace_enable exceptionDef.c Line 191: void dumpExceptionData eps_ccu.c Line 2259: FP_Condition_t eps_ccu_pm_get_cond FPU_Commander.c Line 227: void FPUcmd_send_command_file msg.c Line 442: int msg_delete_queues Line 1169: int msg_dump_trace Line 1152: int msg_q_dump_max_depth Line 1484: int msg_reset_queue_hi_h20_data msg_timer.c Line 328: int msg_delete_timer rom_Ref_Mode.c Line 532: bool_t rom_Slew_Complete exceptionDef.c Line 987: STATUS set_chokeRecursion Line 992: STATUS set_CRITICAL_EPISOD sun_sensor.c Line 1023: void ssaGetCondition Line 1044: void ssaSetCondition,12/7/06
ProjectE - TIM - 1828,Build 5.0 Tips Table value differs from design,4,"Design document: D-32445_Inst5_FSW_Design_Doc_RevA Binary Inst5 Tip Table file: Inst5_tip.tbl The table initializes tip state as ""DEAD"". The design document indicates the tip state should be initialized as ""NOT TESTED""",12/6/06
ProjectE - TIM - 1827,Build 5.0 Tips Table structure differs from design,3,"Design document: D-32445_Inst5_FSW_Design_Doc_RevA Binary Inst5 Tips Table file: Inst5_tip.tbl Table structure for Tips Table entries does not match design. Section 10.4.7 page 90 of design document provides only a table entry description, a complete listing table values are missing. (x offset should be unique for each tip, running from 0 to 225)",12/6/06
ProjectE - TIM - 1826,Build 5.0 Coupon Table structure differs from design,3,"Design document: D-32445_Inst5_FSW_Design_Doc_RevA Binary Coupon Table file: Inst5_coupon.tbl Table structure for Coupon Table entries does not match design. Section 10.4.6 page 89 of design document shows that for each substrate, table entries consist of a Rotation Offset followed by a Substrate Height. Implementation of the coupon table appears to have Rotation Offset followed by Coupon Number. Since all Substrate Height values are zero, it is possible they have been intentionally omitted. In that case the design document should be corrected to show Coupon Number in the entries description. Header matches design and has correct values.",12/6/06
ProjectE - TIM - 1825,Improper use of bitwise 'and' in Build 5.3 FSW,4,File: iocNodeCmic.c Function: iocCmicAddrRegWrite Line: 1372 Code segment: while ((AddressWriteDone==0) & (AddressTriesRemaining>0)) The code checks that writing is not finished and valid tries remain. A logical 'and' should have been used.,11/29/06
ProjectE - TIM - 1824,Improper use of bitwise 'or' in Build 5.3 FSW,4,"Build 5.3 File: ms1553bInterface.c Function: ms1553bRtCmdValidation Line: 532 The code checks that the number of commands is valid, between 0 and a maximum value, a logical 'or' should have been used. Code segment: else if ( (numOfCmds == 0) | (numOfCmds > MS1553B_MAX_NUM_CMDS) )",11/29/06
ProjectE - TIM - 1823,Mis-matched parameters in memory copy function in Build 5.3 FSW,3,"Build 5.3 File: vm_opcode_functions.c Function: command_coerce_unknown Line: 2716 Code segment: memcpy(opcode_ptr, &opcode, sizeof(opcode)); Function memcpy - uint16_t copied to uint8_t: Copy destination: opcode_ptr is type uint8_t Copy source: opcode is type vm_cmd_opcode_type which is type uint16_t",11/29/06
ProjectE - TIM - 1822,Mis-matched parameters in memory copy function in Build 5.3 FSW,3,"Build 5.3 File: astr.c Function: astrInitParams Line: 470 Code segment: memcpy(&tm_chk_expctd_val[6], &astr_cfg.Align[astr_active].EE_checksum, 4); Function memcpy - uint32_t copied to uint16_t: Copy destination, tm_chk_expctd_val is type uint16_t Copy source, EE_checksum is type uint32_t",11/29/06
ProjectE - TIM - 1821,Function parameter not used in Build 5.3 FSW,3,"There is an unused function parameter (seconds) in the function rtos_thread_suspend_self. In the previous build (5.1) of this file the parameter was a delay time, specified in seconds. It was used in implementing the vxWorks taskDelay routine (ensure specified delay time elapses). The overall functionality of rtos_thread_suspend_self has changed in Build 5.3 but rtos_thread_suspend_self continues to be called with the delay time parameter. File: rtos.c Function: rtos_thread_suspend_self Parameter: seconds Line: 469",11/16/06
ProjectE - TIM - 1820,Possibly missing a configuration file in Build 5.3 FSW,3,"The configuration file, thm_thermo_def.cfg, is multiply defined in config_file.h. Since IV&V does not have exposure into the Build 5.3 config files, we cannot determine if this is a simple 'copy and paste' error that can be deleted or the FSW is actually missing a configuration file. File: config_file.h Lines: 280, 281 Code Segment: 280 #define THM_THERMOSTAT_DEF_CFG THM_CFG_BASE ""thm_thermo_def.cfg"" 281 #define THM_THERMOSTAT_DEF_CFG THM_CFG_BASE ""thm_thermo_def.cfg""",11/16/06
ProjectE - TIM - 1819,Inconsistent byte definition within Inst5 HW/SW ICD,4,"In Section 4.3 (Command Buffer Layout) of the Inst5 HW/SW ICD, Byte 4 is listed as CMD_LED_0 and Byte 5 is listed as CMD_LED_1. This is not consistent with Section 6.9.1 Fields Referenced. In this section, CMD_LED_0 is listed ast Byte 3 and CMD_LED_1 is listed as Byte 4. Inst5 HW/SW ICD (April 21, 2006) 1. Section 4.3 Command Buffer Layout 2. 6.9.1 Fields Referenced",11/2/06
ProjectE - TIM - 1818,Inconsistent FPGA command modes,3,"Mode 14 of the Inst5 FPGA command modes is not consistent between implementation (mcCme.h) and the Inst5 Hardware-Software Interface Control Document (April 21, 2006). Implementation shows Mode 14 as being MC_FPGA_MODE_POWER which implements power functionality. The ICD shows this as CMODE_MISC which implements setting “TTL level I/0s and set clock count for Wet Chem conductivity read-outs” It is not clear if the functionality listed in the ICD has been replaced with the current Mode Power implementation. Build 5.1 Code: 1. mcCme.h (line 186) 2. FPGA mode: MC_FPGA_MODE_POWER Inst5 HW/SW ICD (April 21, 2006) 1. Section 4.2 Command Modes 2. Table 1: Command Mode Values. 3. Mode 14: CMODE_MISC 4. Also refer to Section 6.13 Mode 14 - Miscellaneous Operations (CMODE_MISC) for expaneded usage",11/2/06
ProjectE - TIM - 1817,Missing Lander (TEFSW) command in Inst4 Flight Software Command Dictionary,4,"The TEFSW Command, CMD_OP_Inst4_SET_LEETAG, is found in the command definition database (cmd_def_db.h), but not in Section 3.1 of the Inst4 Flight Software Command Dictionary. Document: Inst4 Flight Software Command Dictionary Version 2.2 Build 5.1 Code: cmd_def_db.h (line 795)",11/2/06
ProjectE - TIM - 1816,Implementation of Inst5 Temperature Control does not match Inst5 design section 6.3.7,3,"Function: mcWchem_TempControl_exe File: mcWchem.c Design Document: D-32445_Inst5_FSW_Design_Doc_RevA.doc Several elements of Design Document Section 6.3.7 are not evident in the source code. From the first flow chart of Section 6.3.7 (p. 49 of design doc.): If 'Null fields in command' = True, Stop the specified heater, then test for all heaters off. Code to test for 'All heaters off?' is not evident. If 'Temp control already active?' = True, Extend timer duration if necessary. Code to extend timer duration is not evident. If 'Temp control already active?' = False, set up timer, set phase to ""setup"", ... Code to set phase to ""setup"" is not evident. Note: It may be that the appropriate tests and settings occur in the functions for each device employing heaters (drawers, etc.) and not in the mcWchem_TempControl_exe function. In that case, this issue would be of lesser severity and would only note implementation differing from design.",10/18/06
ProjectE - TIM - 1815,Inst5 implementation of sensor read for MC_TIMER_PHASE_READ_CHRONOCV and MC_TIMER_PHASE_READ_CHRONOAS in section 6.3.6 differ from Inst5 design,3,"Function: mcWchem_ServiceReadTimer File: mcWchem.c Design Document: D-32445_Inst5_FSW_Design_Doc_RevA.doc ***** MC_TIMER_PHASE_READ_CHRONOCV: Design document shows that if the phase is MC_TIMER_PHASE_READ_CHRONOCV, then a test should be performed to see if Read ISEs is needed. If Read ISEs are not needed, then set phase to read PT. The implementation instead tests to see if Read CCV is needed. If Read CCV is not needed, then set phase to read CAS. Code segment: 1882 case MC_TIMER_PHASE_READ_CHRONOCV: 1883 if (!wchemReadCCv) 1884 td->phase = MC_TIMER_PHASE_READ_CHRONOAS; ***** MC_TIMER_PHASE_READ_CHRONOAS: Design document shows that if the phase is MC_TIMER_PHASE_READ_CHRONOAS, then a test should be performed to see if Read ISEs is needed. If Read ISEs are not needed, then set phase to read PT. The implementation instead tests to see if Read CAS is needed. If Read CAS is not needed, then set phase to read ISES2. Code segment: 1898 case MC_TIMER_PHASE_READ_CHRONOAS: 1899 if (!wchemReadCAs) 1900 td->phase = MC_TIMER_PHASE_READ_ISES_2;",10/16/06
ProjectE - TIM - 1814,"Inst5 implementation of device phase ""setup"" and ""off"" tests in section 6.3.5 differs from Inst5 design",3,"Function: mcWchem_ServiceStirTimer File: mcWchem.c Line number: 3107 Design Document ""ProjectE Project Inst5 Flight Software Design Document Rev A"" D-32445_Inst5_FSW_Design_Doc_RevA.doc Document Section: 6.3.5 Design shows that if Phase = ""setup"" then Power On Stirrer. If Phase = ""Off"", check for stir suppression and Power On Stirrer only if stir suppression is False. That is, only the ""off"" case should check for stir suppression. As implemented, tests for ""setup"" and ""off"" share the same case block, and both check for stir suppression. If phase = ""setup"" and stir suppression = True, some setup steps may be erroneously omitted.",10/12/06
ProjectE - TIM - 1813,Inst5 implementation of device enable test Section 6.3 differs from Inst5 design,3,"Function: mcCmd_VerifyEnable File: mcCmd.c Design Document ""ProjectE Project Inst5 Flight Software Design Document Rev A"" D-32445_Inst5_FSW_Design_Doc_RevA.doc Several design elements from section 6.3 of the design document call function mcCmd_VerifyEnable to test for device enable. In each case, if the test fails, the design indicates that a message should be issued and the function exited. However, the function implementation tests for device enable, issues a message upon enable failure, but then continues executing segments of function code. example code implementation: if (mcCmd_VerifyEnable(MC_DEVICE_WCHEM,&status) == ERROR) EVR_REPORT_EVENT_0(EVR_WARNING, MC_WCHEM_ENABLE_STIR_EVR_ID, EVR_LOC(__LINE__), ""Wet-chem disabled; WCHEM_STIR failed""); File: mcWchem.c Functions calling mcCmd_VerifyEnable without exit after message: mcWchem_DrawerClose_chk, line 331, design section 6.3.2 mcWchem_DrawerOpen_chk, line 631, design section 6.3.1 mcWchem_TempControl_chk, line 1001 design section 6.3.7 mcWchem_Read_chk, line 1582, design section 6.3.6 mcWchem_ReleaseReagent_chk, line 2420 design section 6.3.4 mcWchem_ReleaseH2o_chk, line 2697 design section 6.3.3 mcWchem_Stir_chk, line 2893 design section 6.3.5",10/5/06
ProjectE - TIM - 1812,Missing global variable definition in the Build 5.1 FSW (Inst9),4,The following extern global variable is missing its definition in the Build 5.1 FSW. extern Global: PacsimTaskId File: ra_command.c Line: 575,9/21/06
ProjectE - TIM - 1811,Unused global variable in the Build 5.1 FSW (Inst6),4,The following global variable is unused in the the Build 5.1 FSW. There is no indication of the status of this variable for the ProjectE FSW. Variable: Inst6_overtime_evr_gate File: Inst6_preheat.c Line: 61,9/21/06
ProjectE - TIM - 1810,Macros have multiple definitions in Build 5.1 FSW (Inst6),4,The following have a definition that occurs in two separate places of the code: Inst6_PACI_DEF_TIMOUT File: Inst6_types.h Lines: 400 and 430,9/21/06
ProjectE - TIM - 1809,Unused global variable in the Build 5.1 FSW (Inst6),3,"Global variable 'Inst6_inst_if_disc_err_cnt' is declared at line 77 in Inst6_globals.h and defined at line 128 in Inst6_globals.c. However the variable is not used. Because of potential interaction with HLFP system indicated by usage of the variable, this issue is assigned severity level 3 rather than 4.",9/21/06
ProjectE - TIM - 1808,Duplicate function declaration in Build 5.1 FSW (I/O),3,"The function, cio_isr_task, is declared twice in the following files: 1. cio_isr.h, Line 44 2. cio_task.h, Line 39",9/21/06
ProjectE - TIM - 1807,Variable value never used after assignment,4,"The following variables are assigned a value and then are never used: l_ccu File: eps_ccu.c Line: 891 Function: eps_ccu_calc_volt_temp_soc() IV&V Note: Initialized as a pointer, then never used l_ccu File: eps_ccu.c Line: 3637 Function: eps_ccu_cell_open() IV&V Note: Initialized as a pointer, then never used",9/14/06
ProjectE - TIM - 1806,Macros have multiple definitions,4,The following have a definition that occurs in two seperate places of the code: SAM_LV_SEP_DEF_CFG File: config_file.h Lines: 266 and 409 SAM_LM_DEF_CFG File: config_file.h Lines: 265 and 410 SAM_CFG_BASE File: config_file.h Lines: 263 and 405 SAM_CS_SEP_DEF_CFG File: config_file.h Lines: 267 and 408 LANDED_INIT_BLOCK File: hlfp_fpe_cfg.h Line: 83 File: hlfp_sme_cfg.h Line: 173 SANITY_PERSISTENCE File: sam_cfg_file.h Line: 119 File: sam_lsad_cfg.h Line: 93,9/14/06
ProjectE - TIM - 1805,Return value of function not used,4,"Some of the functions below never use their return value, while others demonstrate inconsistant usage. The Flexe-Lint messages generated are all either: 144 - Error, non-existant return value for a function, or 534 - Warning, ignoring return value of a function. Function: assign File: vm_opcode.c Line: 1462 Warning Message 534 Function: eps_discrete_sw_cmd File: eps_discrete_sw.c Line: 962 Warning Message 534 Function: vm_engine_process_spawn File: vm_engine.c Line: 5205 Warning Message 534 Function: spawn File: vm.c Line: 1048 Warning Message 534 Function: load File: vm.c Line: 894 Error Message 144 Function: preserve_and_reload_buffer File: vm_parser.c Line: 5434 Warning Message 534 Function: vm_opcode_assign File: vm_expr.c Line: 234 Warning Message 534 Function: gerReadCfgFile File: ger_Guided_Entry_Ref.c Line: 106 Warning Message 534 Function: fsw_readCfgFile File: SME.c Line: 203 Warning Message 534 Function: msg_init_queues File: msg.c Line: 203 Warning Message 534 Function: clockCMICRead File: clockLib.c Line: 2795 Warning Message 534 Function: ioctl File: ac_propulsion.c Line: 1575 Warning Message 534 Function: ioctl File: cmic_drv.c Line: 490 Warning Message 534 Function: ioctl File: pty.c Line: 432, 453, 462, 463, 470, 471, 474, 475, 476 Warning Message 534 Function: ioctl File: FLTREC.c Line: 1368, 1371, 1671, 1674 Warning Message 534 Function: ioctl File: upl_codeblock.c Line: 156, 200 Warning Message 534 Function: cio_read_atom File: teleUHF.c Line: 3072 Error Message 144",9/8/06
ProjectE - TIM - 1804,Return value of function not used,3,"Function: eps_sensor_data_read_eu File: eps_ccu.c Line: 3591 Warning Msg 534 The function, eps_ccu_cbu_malfunction, calls eps_ccu_cbu_get_bypass_data, which calls eps_sensor_data_read_eu. However eps_sensor_data_read_eu has the possibility of returning early on invalid id. That could lead to a misinterpreation of the number of battery cells being bypassed in function eps_ccu_cbu_malfunction. The other functions that call eps_sensor_data_read_eu use the return value of the function.",9/8/06
ProjectE - TIM - 1803,Return value of function not used,3,Function: vm_external_data_read File: vm_operand.c Line: 358 Warning Msg 534 The function is defined in vm_external_data.c. Lines 280 and 283 of vm_external_data.c (see excerpt) allow early returns without generating and EVR.,9/8/06
ProjectE - TIM - 1802,Unused global variable,3,"Global variable 'FPE_uhf_antenna' is declared at line 162 and not used. Because of potential interaction with HLFP system indicated by usage of the variable, this issue is assigned severity level 3 rather than 4. File: phx_fsw.ar\hlfp.mod\FPE.c Line 162 Msg 552 - Warning",9/7/06
ProjectE - TIM - 1801,Unused local variable,4,Local variable 'comm_duration' is declared at line 124 of function 'SME_Do_CommAtt' and not used. File: phx_fsw.ar\hlfp.mod\SME_CommAtt_md.c Line 124-812 Msg 550 - Warning,9/7/06
ProjectE - TIM - 1800,Switch statement has no default case,3,Switch statement has no default case. File: phx_fsw.ar\telecom.mod\teleUHF.c Line 1822 Msg 744 - Info,9/7/06
ProjectE - TIM - 1799,Switch statement has no default case,3,Switch statement has no default case. File: phx_fsw.ar\eps2.mod\eps_Initiator.c Msg 744 - Info The file contains two instances of switch statements with no default case: Function 'eps_Initiator_Load' Switch statement Begins line 158 Ends line 180 Function 'eps_Initiator_SmartLoad' Switch statement Begins line 647 Ends line 669,9/7/06
ProjectE - TIM - 1798,Uninitialized variable,4,"Too few initializers for aggregate 'ls_last_time'. One of two values is initialized. File: phx_fsw.ar\eps2.mod\eps_ccu.c Line: 1026 Msg 785 - Info Code: static double ls_last_time[NUM_EPS_CCU_ID] = {0.0}; NUM_EPS_CCU_ID=2, so one more value should have been initialized.",9/7/06
ProjectE - TIM - 1797,Unused global variable in the Build 5.1 FSW (I/O),4,The following global variable is unused in the the Build 5.1 FSW. There is no indication of the status of this variable for the ProjectE FSW. iocNodeCmic.c Line: 153 Variable: iocNodeCmicBoundsNoMem,9/7/06
ProjectE - TIM - 1796,Unused functions in the Build 5.1 FSW,4,The following functions are unused in the the Build 5.1 FSW. There is no indication of the status of these functions for the ProjectE FSW. ac_act_suite.c Line: 211 Function: ac_asGetStatus eps_pdc_sw.c Line: 2236 Function: eps_pdc_sw_get_alt_pwr FPE.c Line: 3064 Function: FPE_safing_requestor_other_than_landed_wakeup fsw_trace.c Line: 141 Function: int11_trace_enable sam_Cruise_Sep_Monitor.c Line: 612 Function: samCSM_State sam_Sensor.c Line: 488 Function: samSensor_getReadErrCounterId,9/7/06
ProjectE - TIM - 1795,Unused functions in the Build 4 FSW (Inst6/Inst6b),4,The following functions are unused in the the Build 4 FSW. There is no indication of the status of these functions for the ProjectE FSW. ice_JpegSetACTable 1. File: ice_tbl.c 2. Line: 1174 ice_JpegSetDCTable 1. File: ice_tbl.c 2. Line: 1122 ice_JpegSetQTable 1. File: ice_tbl.c 2. Line: 1225 ice_LUTSetTable 1. File: ice_tbl.c 2. Line: 1264 img_Init 1. File: magi_image.c 2. Line: 215 Inst8_CCDFreeImgSlot 1. File: Inst8_image.c 2. Line: 190 Inst8_CmdFpEnable 1. File: Inst8_fsw.c 2. Line: 683 Inst8_CmdGetBadCount 1. File: Inst8_cmd.c 2. Line: 149 Inst8_CmdGetCmdCount 1. File: Inst8_cmd.c 2. Line: 131 Inst8_CmdGetFPCond 1. File: Inst8_fsw.c 2. Line: 700 Inst8_CmdGetRejCount 1. File: Inst8_cmd.c 2. Line: 167 Inst8_GetHeaterState 1. File: Inst8_preheat.c 2. Line: 197 Inst8_GetPrevPhase 1. File: Inst8_move.c 2. Line: 542 Inst8_StowMove 1. File: Inst8_move.c 2. Line: 1075 Inst6_CmdCCD 1. File: Inst6_inst_cmds.c 2. Line: 326 Inst6_CmdFILL 1. File: Inst6_inst_cmds.c 2. Line: 569 Inst6_CmdGetFPCond 1. File: Inst6_fsw.c 2. Line: 761 Inst6_GetCurrDirection 1. File: Inst6_move.c 2. Line: 753 Inst6_GetHeaterMaxTime 1. File: Inst6_preheat.c 2. Line: 274 Inst6_GetHeaterTargetTemp 1. File: Inst6_preheat.c 2. Line: 412 Inst6_ReadAllADC 1. File: Inst6_status.c 2. Line: 626 Inst6_SetLastADC 1. File: Inst6_move.c 2. Line: 1067 Inst6_SetPrevPosition 1. File: Inst6_move.c 2. Line: 879,7/23/06
ProjectE - TIM - 1794,Unused functions in the Build 4 FSW (Inst9),4,The following functions are unused in the the Build 4 FSW. There is no indication of the status of these functions for the ProjectE FSW. ra_CmdGetFpCond 1. File: ra_fp.c 2. Line: 112 ra_col_get_link_poses 1. File: ra_col.c 2. Line: 3107 ra_col_get_obj 1. File: ra_col.c 2. Line: 3042 ra_col_get_objs 1. File: ra_col.c 2. Line: 3125 ra_compute_object_poses 1. File: ra_col.c 2. Line: 2871 ra_write_mgr_q 1. File: ra_queues.c 2. Line: 1152,7/23/06
ProjectE - TIM - 1793,Unused functions in the Build 4 FSW (Inst10),4,The following functions are unused in the the Build 4 FSW. There is no indication of the status of these functions for the ProjectE FSW. metdmGetFpConditionLidar 1. File: metdm.c 2. Line: 357 metdmGetFpConditionPt 1. File: metdm.c 2. Line: 362 metdmPutF32 1. File: metdm.c 2. Line: 324 metdmPutU32 1. File: metdm.c 2. Line: 317,7/23/06
ProjectE - TIM - 1792,Unused functions in the Build 4 FSW (Inst4),4,The following functions are unused in the the Build 4 FSW. There is no indication of the status of these functions for the ProjectE FSW. Inst4_fp.c 1. Function: Inst4_Condition1_Get (line 103) 2. Function: Inst4_Condition1_Set (line 159) 3. Function: Inst4_Condition2_Get (line 191) 4. Function: Inst4_Condition2_Set (line 224),7/23/06
ProjectE - TIM - 1791,Unused functions in the Build 4 FSW,4,The following functions are unused in the the Build 4 FSW. There is no indication of the status of these functions for the ProjectE FSW. Downlink_Alloc 1. File: DownlinkExt.c 2. Line: 313 Downlink_AllowedPackets 1. File: DownlinkExt.c 2. Line: 293 Downlink_Free 1. File: DownlinkExt.c 2. Line: 345 FLTREC_Retrieve_Obits 1. File: FLTREC.c 2. Line: 744 FPUcmd_send_immed_command232 1. File: FPU_Commander.c 2. Line: 227 HLFPcmd_Commander_Done 1. File: FPU_Commander.c 2. Line: 381 ac_propGetCumulativeOnTime 1. File: ac_propulsion.c 2. Line: 1617 ac_propGetPrevPulseWidths 1. File: ac_propulsion.c 2. Line: 1509 ac_propGetThrustingFlag 1. File: ac_propulsion.c 2. Line: 1643 ac_propSetMinorFrameOffset 1. File: ac_propulsion.c 2. Line: 893 ac_propSetRtcValuePtr 1. File: ac_propulsion.c 2. Line: 1590 adGc_FswInit 1. File: ad_GyroComp.c 2. Line: 82 adGc_LandedNav_Data_Corrupted 1. File: ad_GyroComp.c 2. Line: 451 ad_ImuGetAccelCondition 1. File: ad_imu.c 2. Line: 1762 ad_ImuSetAccelCondition 1. File: ad_imu.c 2. Line: 1806 ad_ImuSetGyroCondition 1. File: ad_imu.c 2. Line: 1784 ad_MrdQuatGet 1. File: ad_state.c 2. Line: 723 ad_MrdRateGet 1. File: ad_state.c 2. Line: 771 ad_StellarRateGet 1. File: ad_state.c 2. Line: 819 ad_StellarResidualError 1. File: ad_stellar.c 2. Line: 451 ad_TransToAllStellarIsEnabled 1. File: ad_state.c 2. Line: 1121 ahrCalGetBiasCondition 1. File: calib.c 2. Line: 349 ahrCalGetScaleCondition 1. File: calib.c 2. Line: 345 ahrCalSetBiasCondition 1. File: calib.c 2. Line: 357 ahrCalSetScaleCondition 1. File: calib.c 2. Line: 353 asr_Calc_Total_Time 1. File: asr_Abs_Slew_Ref.c 2. Line: 421 asr_FswInit 1. File: asr_Abs_Slew_Ref.c 2. Line: 89 cio_ddt_initialize 1. File: cio_ddt.c 2. Line: 204 cio_error_count 1. File: cio.c 2. Line: 1325 cio_function 1. File: cio.c 2. Line: 1363 cio_last_error 1. File: cio.c 2. Line: 1549 cio_lock 1. File: cio.c 2. Line: 1592 cio_reset_error 1. File: cio.c 2. Line: 2002 cio_set_alert_callback 1. File: cio.c 2. Line: 2048 cio_set_alert_interrupt_callback 1. File: cio.c 2. Line: 2093 cio_unlock 1. File: cio.c 2. Line: 2137 cio_write_atom 1. File: cio.c 2. Line: 2192 cio_write_n_bytes 1. File: cio.c 2. Line: 2297 cmic_getErrorCount 1. File: cmic_drv.c 2. Line: 558 crc16_reset 1. File: crc.c 2. Line: 145 eep_getErrorCount 1. File: eep_drv.c 2. Line: 480 eps_emic_relay_get_relay_from_comp 1. File: eps_emic_relay.c 2. Line: 2190 eps_pdc_sw_get_comp_id 1. File: eps_pdc_sw.c 2. Line: 2287 eps_pdc_sw_get_ctrl_rpc_sw 1. File: eps_pdc_sw.c 2. Line: 1436 eps_pdc_sw_get_pdcshed_enable 1. File: eps_pdc_sw.c 2. Line: 1489 eps_pdc_sw_set_pdcshed_enable 1. File: eps_pdc_sw.c 2. Line: 1545 eps_sensor_data_get_cond 1. File: eps_sensor_data.c 2. Line: 1067 eps_sensor_data_push_raw 1. File: eps_sensor_data.c 2. Line: 695 evrDisableID 1. File: evr.c 2. Line: 2758 evrEnableID 1. File: evr.c 2. Line: 2732 evrShowDisabled 1. File: evr.c 2. Line: 2784 evr_get_dead_tlm 1. File: evr.c 2. Line: 1946 exc_Context 1. File: exceptionDef.c 2. Line: 345 flash_read_error_count_access 1. File: flash_dev.c 2. Line: 1041 flash_read_error_count_clear 1. File: flash_dev.c 2. Line: 1045 flash_write_error_count_access 1. File: flash_dev.c 2. Line: 1049 flash_write_error_count_clear 1. File: flash_dev.c 2. Line: 1053 fpc_dsi_filter_load 1. File: exceptionDef.c 2. Line: 926 fpc_dsi_print_filters 1. File: exceptionDef.c 2. Line: 954 fsw_cmd_send_2_long_parms 1. File: fsw_utils.c 2. Line: 546 heap_get_anchor_size 1. File: heap.c 2. Line: 1996 heap_get_anchors 1. File: heap.c 2. Line: 1214 heap_get_num_of_anchors 1. File: heap.c 2. Line: 2037 heap_join 1. File: heap.c 2. Line: 1891 heap_memcpy 1. File: heap.c 2. Line: 1844 heap_realloc 1. File: heap.c 2. Line: 1679 heap_set_reconstruct 1. File: heap.c 2. Line: 1266 heap_show 1. File: heap.c 2. Line: 1757 hpp_count 1. File: hpp.c 2. Line: 125 hpp_major_frame_rate 1. File: hpp.c 2. Line: 122 hpp_minor_frame_period 1. File: hpp.c 2. Line: 123 hpp_period 1. File: hpp.c 2. Line: 124 hpp_tick_rate 1. File: hpp.c 2. Line: 124 idle_reset_event_reports 1. File: idle.c 2. Line: 190 iocCmicWriteEnable 1. File: iocNodeCmic.c 2. Line: 1438 iocGetErrorCount 1. File: iocNodeAnalog.c 2. Line: 68 iocResetErrorCount 1. File: iocNodeAnalog.c 2. Line: 104 ms1553bCommInFault 1. File: ms1553bInterface.c 2. Line: 797 ms1553bCyclicCmd 1. File: ms1553bInterface.c 2. Line: 289 ms1553bCyclicCmdRemove 1. File: ms1553bInterface.c 2. Line: 397 ms1553bGetRtCondition 1. File: ms1553bInterface.c 2. Line: 715 ms1553bSetRtCondition 1. File: ms1553bInterface.c 2. Line: 758 ms1553bSetSummitCondition 1. File: ms1553bInterface.c 2. Line: 674 nav2_Get_Quat_MRD_to_Descent 1. File: nav2_pub.c 2. Line: 236 nav2_Get_Trans_MRD_to_Descent 1. File: nav2_pub.c 2. Line: 267 paciBoardReset 1. File: paciDrv.c 2. Line: 2776 paciGetErrorCount 1. File: paciDrv.c 2. Line: 548 paciReadParallel 1. File: paciDrv.c 2. Line: 1447 paciReadSASI 1. File: paciDrv.c 2. Line: 1348 paciResetErrorCount 1. File: paciDrv.c 2. Line: 578 paciSimDiscreteIo 1. File: paciDrv.c 2. Line: 1985 paciWriteAnalog 1. File: paciDrv.c 2. Line: 1796 paciWriteSASI 1. File: paciDrv.c 2. Line: 2155 ro_FFwdTrqSet 1. File: ro_Ref_Orientation.c 2. Line: 126 ro_QuatGet 1. File: ro_Ref_Orientation.c 2. Line: 84 ro_QuatSet 1. File: ro_Ref_Orientation.c 2. Line: 71 ro_RateGet 1. File: ro_Ref_Orientation.c 2. Line: 111 ro_RateSet 1. File: ro_Ref_Orientation.c 2. Line: 98 rom_Actuator_Get 1. File: rom_ref_Mode.c 2. Line: 516 rsr_Set_RSR_Parms 1. File: rsr_Rel_Slew_Ref.c 2. Line: 328 rv_Get_Inertial_Vec_Dist2 1. File: rv_Ref_Vector.c 2. Line: 60 saq_Set_Cmd_Info 1. File: saq_Sun_Acq_Ref.c 2. Line: 456 saq_Set_Nom_Rate 1. File: saq_Sun_Acq_Ref.c 2. Line: 478 saq_Set_Rotation_Info 1. File: saq_Sun_Acq_Ref.c 2. Line: 434 sch_read_entry 1. File: sch.c 2. Line: 260 sch_write_entry 1. File: sch.c 2. Line: 234 ssaAlignMatrixGet 1. File: sun_sensor.c 2. Line: 1002 teleSDST_Get_Backup_SDST 1. File: teleSDST.c 2. Line: 605 teleSDST_Get_Tlm_Data_Word 1. File: teleSDST.c 2. Line: 643 teleSDST_PassThru_Cmd 1. File: teleSDST.c 2. Line: 769 thmAccess_Get_Heater_Condition 1. File: thmAccess.c 2. Line: 55 thmAccess_Get_Sensor_Condition 1. File: thmAccess.c 2. Line: 205 thmAccess_Set_Heater_Condition 1. File: thmAccess.c 2. Line: 133 thmAccess_Set_Thermostat_Condition 1. File: thmAccess.c 2. Line: 362 thmAccess_Thermostat_Recovery 1. File: thmAccess.c 2. Line: 417 tlmTrackCounter_getTlmId 1. File: tlmTrackCounter.c 2. Line: 150 tlmTrackCounter_setCurrent 1. File: tlmTrackCounter.c 2. Line: 309 tlm_file_open_write 1. File: telemetry_file.c 2. Line: 91 tlm_file_write 1. File: telemetry_file.c 2. Line: 151 tlm_store_array_int 1. File: telemetry.c 2. Line: 2358 uldlHCRInit 1. File: uldlDrv.c 2. Line: 101 uldlPollTask 1. File: uldlDrv.c 2. Line: 1513 upl_session_get_total_valid_frames 1. File: upl_session.c 2. Line: 93 vm_engine_is_loaded 1. File: vm_engine.c 2. Line: 5741 vm_engine_number_set_abort_evaluation_callback 1. File: vm_engine.c 2. Line: 6167 vm_engine_number_start_count 1. File: vm_engine.c 2. Line: 6334 vm_engine_store_state 1. File: vm_engine.c 2. Line: 7193 vm_gv_read_command 1. File: vm_globals.c 2. Line: 516 vm_gv_read_double 1. File: vm_globals.c 2. Line: 574 vm_gv_read_logical 1. File: vm_globals.c 2. Line: 675 vm_gv_read_string 1. File: vm_globals.c 2. Line: 726 vm_gv_read_time 1. File: vm_globals.c 2. Line: 780 vm_gv_write_command 1. File: vm_globals.c 2. Line: 884 vm_gv_write_logical 1. File: vm_globals.c 2. Line: 1058 vm_load 1. File: vm.c 2. Line: 1853 vm_stack_copy 1. File: vm_stack.c 2. Line: 157 vm_symbol_table_look_up_name_from_offset 1. File: vm_symbol_table.c 2. Line: 427 vm_symbol_table_look_up_offset 1. File: vm_symbol_table.c 2. Line: 467 vm_symbol_table_set_tlm_id 1. File: vm_symbol_table.c 2. Line: 610 vtr_Set_BF_Vec 1. File: vtr_Vector_Track_Ref.c 2. Line: 587,7/23/06
ProjectE - TIM - 1790,Unused function parameters in Build 4 FSW,4,"The following function parameters are unused in the the Build 4 FSW. There is no indication of the status of these parameters for the ProjectE FSW. eps_power() 1. File: Inst7.c 2. Line: 787 3. Parameter: cam eps_power_callback() 1. File: Inst7.c 2. Line: 804 3. Parameters: id,volts get_analog() 1. File: Inst7.c 2. Line: 953 3. Parameter: cam Inst7_hpp() 1. File: Inst7.c 2. Line: 1228 3. Parameter: arg",7/23/06
ProjectE - TIM - 1789,Unused function parameters in Build 4 FSW,4,"The following function parameters are unused in the the Build 4 FSW. There is no indication of the status of these parameters for the ProjectE FSW. deltavTcmProcess() 1. File: in_deltav_tcm.c 2. Line: 279 3. Parameter: intID enable_disable_scrub() 1. File: idle.c 2. Line: 306 3. Parameter: pCmdLength evr_CallerAddressHistory() 1. File: evr.c 2. Line: 2499 3. Parameter: buf1 evr_init_test() 1. File: evr.c 2. Line: 103 3. Parameter: arg0 fsw_trace_cio_vme_irq_interrupt() 1. File: fsw_trace.c 2. Line: 362 3. Parameters: vector,interrupt_storage_index,interrupt_status_reg rom_Stop() 1. File: rom_Ref_Mode.c 2. Line: 231 3. Parameter: pMsg rom_Start() 1. File: rom_Ref_Mode.c 2. Line: 210 3. Parameter: pMsg rsr_Compute_Reference() 1. File: rsr_Rel_Slew_Ref.c 2. Line: 291 3. Parameter: ref_id ssaRead() 1. File: sun_sensor.c 2. Line: 344 3. Parameter: instId ssaStart() 1. File: sun_sensor.c 2. Line: 255 3. Parameter: pMsg ssaStop() 1. File: sun_sensor.c 2. Line: 288 3. Parameter: pMsg tlm_read_array_uint() 1. File: telemetry_read.c 2. Line: 71 3. Parameters: tlm_id,size,values tlm_read_double() 1. File: telemetry_read.c 2. Line: 57 3. Parameters: tlm_id,value_ptr tlm_read_int() 1. File: telemetry_read.c 2. Line: 43 3. Parameters: tlm_id,value_ptr tlm_read_string() 1. File: telemetry_read.c 2. Line: 64 3. Parameters: tlm_id,size,str tlm_read_uint() 1. File: telemetry_read.c 2. Line: 50 3. Parameters: tlm_id,value_ptr tlm_register_callback_double() 1. File: telemetry_read.c 2. Line: 77 3. Parameters: tlm_id,gv_index tlm_register_callback_int() 1. File: telemetry_read.c 2. Line: 80 3. Parameters: tlm_id,gv_index tlm_register_callback_string() 1. File: telemetry_read.c 2. Line: 86 3. Parameters: tlm_id,gv_index tlm_register_callback_uint() 1. File: telemetry_read.c 2. Line: 83 3. Parameters: tlm_id,gv_index tlm_remove_callback() 1. File: telemetry_read.c 2. Line: 89 3. Parameters: tlm_id,gv_index uldlOpen() 1. File: uldlDrv.c 2. Line: 416 3. Parameters: remainder,mode",7/23/06
ProjectE - TIM - 1788,Return value of function not used,3,File fsw_init.c Return value of function 'transmit_init_tlm(int)' is not used Neither of the two calls below use the return value. The return value 'status' is set by a call to function 'Downlink_CreateAndBufferDataM' which returns an int that's set by error checking in the function and returned to 'transmit_init_tlm(int)' to set 'status'. Function References for 'transmit_init_tlm(int)': Call start_application fsw_init.c(429) Define fsw_init.c fsw_init.c(914) Call fsw_init fsw_init.c(1057) Declare fsw_init.h fsw_init.h(489),7/22/06
ProjectE - TIM - 1787,Unsigned integer tested for negative value,4,"File lzo1x_c.c Function LZO_PUBLIC(int) The variable 'in_len' is defined as an unsigned integer, but is tested for a negative value at line 428.",7/22/06
ProjectE - TIM - 1786,Duplicate function declaration,3,"The following functions are declared twice: File 1: ra_math.c File 2: ra_math.h Functions: ra_magnitude_vector(struct _Vector) File 1 line 82, File 2 line 69 ra_matrix_assign(double, double, etc..., double) File 1 line 86, File 2 line 71 ra_matrix_matrixdotmatrix(struct _Matrix, struct _Matrix) File 1 line 88, File 2 line 75 ra_vector_assign(double, double, double) File 1 line 90 File 2 line 77 ra_vector_matrixdotvector(struct _Matrix, struct _Vector) File 1 line 92, File 2 line 79 ra_vector_vectorcrossvector(struct _Vector, struct _Vector) File 1 line 94, File 2 line 81 ra_vector_vectorminusvector(struct _Vector, struct _Vector) File 1 line 96, File 2 line 83 'ra_vector_vectorplusvector(struct _Vector, struct _Vector) File 1 line 98, File 2 line 85 File 1: ra_monitor.c File 2: ra_monitor.h Functions: ra_accommodate_flag(void) File 1 line 405, File 2 line 136 ra_clear_accommodate_flag(void) File 1 line 406, File 2 line 137 ra_zero_pid_pos_data(void) File 1 line 407, File 2 line 139",7/22/06
ProjectE - TIM - 1785,Duplicate function declaration,4,"Function: Inst8_SaveGlobals(void) is declared twice, in file Inst8_fsw.c line 64 and file Inst8.mod/Inst8_fsw.h line 23.",7/22/06
ProjectE - TIM - 1784,Switch statement missing default case,3,"File ra_command.c Function 'ra_actuator', line 600 switch (q_msg), line 667, is missing default case at line 818.",7/22/06
ProjectE - TIM - 1783,Switch statement missing default case,4,"File Inst6_cmd.c Function: 'Inst6_ProcMulti()' switch (cmd_id), line 646 is missing default case at, line 743",7/22/06
ProjectE - TIM - 1782,Loss of sign on assignment of int to unsigned int,3,"File: Inst7.c line Function: Inst7_main() line 1554 if((len = msg_receive(TASK_ID_Inst7, MSG_Q_BLOCK, &msg, sizeof(msg), &prio)) == ERROR), line 1588 len is size_t, which is unsigned int. However, the function msg_receive may return -1 if it encounters an error, an invalid value which could be interpreted as a maximum value unsigned int. Also, note comment by developer: at line 1594: /* what to do here? We used to do a taskSuspend, but LMA didn't like that. */",7/22/06
ProjectE - TIM - 1781,Case statement has no break,4,"File Inst6_image.c Function 'Inst6_CCDSetExposure()' case Inst6_CCD_BOTH at line 1613 is missing a break statement. It's the last case statement and is followed by the default break so no damage is done, but it probably should be changed to include a break for clarity, and to prevent errors if future case statements are added.",7/22/06
ProjectE - TIM - 1780,Return value of function not used,3,"File ra_manager.c Function 'ra_shut_mgr()' returns the integer Inst9_Q_SHUT_DONE. A comment in the function suggests the return could be used, but the call to the function (line 786) does not use the return value. Code segment containing the function begins at line 1308: int ra_shut_mgr(ra_shutdown_arg* _unused_arg_0_) { /* last 2 arguments are 0 since Inst9_SHUTDOWN has no arguments */ ra_write_act_q(Inst9_SHUTDOWN,0,0); ra_read_mgr_q(TRUE); /* Always turn off power regardless of status returned by actuator task */ ra_switch_power(0); /*always return shutdown done so that current task command stops immediately*/ return Inst9_Q_SHUT_DONE; }",7/22/06
ProjectE - TIM - 1779,Too few initializers for a table,3,"File Inst7.c The below code sets the first element of each row of a 3x64 matrix to -1. No issue if that was the inteded result. If the intention was to set values for the entire row the code does not achieve the desired result. code segment lines 323-327: static char slot_sched[N_IMAGE_TYPES][SCHED_SIZE] = { { -1 }, { -1 }, { -1 }, };",7/22/06
ProjectE - TIM - 1778,Too few initializers for a table,3,"File ice_tbl.c too few initializers: ice_jpeg_awQuantTable[ICE_JPEG_NUM_QUANT_TBLS][ICE_JPEG_DCTSIZE2D], lines 151-155 (32 of 64 zero values initialized) ice_jpeg_abyDCVal[ICE_JPEG_NUM_HUFF_TBLS][ICE_JPEG_NUM_ACDC_ENTRIES] lines 175-177 (48 of 51 values initlaiized, 1 value missing from each of the 3 rows, last row is zeros) ice_jpeg_abyACVal[ICE_JPEG_NUM_HUFF_TBLS][ICE_JPEG_NUM_ACVAL_ENTRIES] lines 197-217 (162 of 256 values initialized) ice_jpeg_abyACVal[ICE_JPEG_NUM_HUFF_TBLS][ICE_JPEG_NUM_ACVAL_ENTRIES] lines 220-242 (177 of 256 values initialized) ice_jpeg_abyACVal[ICE_JPEG_NUM_HUFF_TBLS][ICE_JPEG_NUM_ACVAL_ENTRIES] lines 245-267 (177 of 256 zeroes initialized) ice_lut_Table[ICE_LUT3_NUM_TBLS][ICE_LUT3_NUM_ENTRIES] lines 691-1099 (4080 of 4096 zero values initialized - 1 row of 10 zeroes left out)",7/22/06
ProjectE - TIM - 1777,Missing default case in the the Build 4 FSW,3,A default case for the switch statement located in the teleUHF_Get_Status function is missing. 1. File: teleUHF.c 2. Lines: 1707-1832,7/21/06
ProjectE - TIM - 1776,Error/fault values returned by functions not checked in Build 4 FSW,3,"The following functions can return a type of error/fault value, but functions that call them typically fail to perform any checks on those return values. eps_discrete_sw.c 1. Function: eps_discrete_sw_cmd (line 639) 2. Function: eps_discrete_sw_set_fp_cond (line 1128) eps_emic_relay.c 1. Function: eps_emic_relay_cmd (line 622) 2. Function: eps_emic_relay_set_fp_cond (line 1471) eps_emic_sw.c 1. Function: eps_emic_sw_cmd (line 1070) 2. Function: eps_emic_sw_set_fp_cond (line 1976) 3. Function: eps_emic_enable_sw_get_child_sw (line 3039) eps_pdc_sw.c 1. Function: eps_pdc_sw_cmd (line 737) 2. Function: eps_pdc_sw_set_fp_cond (line 1301)",7/21/06
ProjectE - TIM - 1775,Variable (size) assignment results in underflow in Build 4 FSW,3,"In the file vm_globals.c, the local variable ""size"" is defined as a unsigned int. On line 540 in function ""vm_gv_read_command"", the local variable can be assigned a value of -1. This occurrence will happen if the call to the function, cmd_size (line 541), returns the value ERROR (-1) for an invalid opcode. The local variable is further used in calls to the min function (line 541) and memcpy function (line 543). If this -1 assignment were to occur, the most likely scenario is the value will be rolled over to maximum unsigned integer value. It is not clear if this is the desired implementation. The code segments are listed below: 540 size = cmd_size(opd_ptr->storage.command_ptr); 541 size = min(size, max); 543 memcpy(result_ptr, opd_ptr->storage.command_ptr, size);",7/21/06
ProjectE - TIM - 1774,"Unreachable code in file Inst6_move.c, function 'Inst6_CalcAZMove' line 310",2,"File Inst6_move.c at line 308: if ((cmd_pos >= Inst6_AZ_FULLCCW) && (cmd_pos <= Inst6_AZ_FULLCCW - Inst6_AZ_DEAD_ZONE)) The statement evaluates to (cmd_pos >= -616) && (cmd_pos <= -634), excluding everything (an unintended result) rather than excluding the dead zone (the intended result).",7/19/06
ProjectE - TIM - 1773,Uninitialized variable 'time_of_day' in file PCPM.c,3,"'time_of_day' is used uninitialized in function PCPM_Check_Low_SOC, line 2828 of PCPM.c. Comment at line 2819 says /* TODO time_of_day = RBR_Seconds_Since_Midnight(); */ The function RBR_Seconds_Since_Midnight() exists, and is declared in RBR_md.h, not defined.",7/19/06
ProjectE - TIM - 1772,Uninitialized variable 'my_max_sep' in file ra_col_primitives.c,3,"'my_max_sep' is used uninitialized by function ra_collision_BB2(ap, b, B, T, eps, max_sep ? &my_max_sep : 0) at line 956 of file ra_col_primitives.c",7/19/06
ProjectE - TIM - 1771,Redundantly defined macro SYS_STATUS in files ra_expansions.c and ra_recovery.c,4,Repeated Macro definition: #define SYS_STATUS (history->pt[history->index]) appears in ra_expansions.c ra_expansions.c(385) and ra_recovery.c(390),7/19/06
ProjectE - TIM - 1770,Uninitialized variables 'act_dir' and 'act_steps' in file Inst6_move.c,3,Variables 'act_dir' and 'act_steps' are uninitialized in function 'Inst6_ElMove' lines 1398 and 1399. The variables remain uninitialized if the test at line 1360 'if (new_pos != Inst6_move[Inst6_ACT_EL].curr_position)' evaluates as FALSE.,7/19/06
ProjectE - TIM - 1769,Redundant testing for NULL value in file ra_col.c,4,"Macro Inst9_IS_SET at line 4025 tests for obj->parent = NULL. If obj->parent is not NULL, the program calls function 'get_obj' at line 4027 to set the value of 'parent'. The function 'get_obj' also tests obj->parent for NULL. This second test of obj->parent is redundant.",7/18/06
ProjectE - TIM - 1768,Multiple declarations for same function in Build 4 FSW (ra.mod),4,"The function, ra_CmdGetFpCond, is declared twice. 1. ra_fp.h, line 103 2. ra_messages.h, line 364 The function, ra_clear_accommodate_flag, is declared twice. 1. ra_monitor.h, line 137 2. ra_monitor.c, line 406 The function, ra_accommodate_flag, is declared twice. 1. ra_monitor.h, line 136 2. ra_monitor.c, line 405 The function, ra_manager, is declared twice. 1. ra_manager.h, line 122 2. ra_messages.c, line 359 The function, ra_vector_vectorplusvector, is declared twice. 1. ra_math.h, line 85 2. ra_math.c, line 98",7/5/06
ProjectE - TIM - 1767,Multiple declarations for same function (eps_cmd_ccu_soc_method) in Build 4 FSW,4,"The function, eps_cmd_ccu_soc_method, is declared twice in eps_cmd_handler.h, first in line 70, then in line 72.",7/5/06
ProjectE - TIM - 1766,Uninitialized variable (value) in Build 4 FSW (mcCmd.c),3,"The variable, value, can be used before being set in the function mcCmd_IncrementGv. If the call to function, vm_gv_read_uint, on line 1738 returns a value of ERROR, then the variable will not be set prior to be used on 1739. 1. File: mcCmd.c 2. Lines: 1738 and 1739 3. Function: mcCmd_IncrementGv 4. Code Segment: 1736 unsigned int value; 1738 (void)vm_gv_read_uint(gv_index, &value); 1739 value++;",7/5/06
ProjectE - TIM - 1765,"Unnecessary if-conditional, eps_rpc_sw.c, line 1019",5,"Unnecessary if-conditional embedded within a case statement of a switch. Variable ""cond"" is the switch variable. The condtion ""cond == Failed"" is inside the case ""Failed"", therefore redundant. phx_fsw.ar\eps2.mod\eps_rpc_sw.c, line 1019 switch (cond) { ... case Failed: FPU_Condit_ToFailed(&eps_rpc_sw[id].cond); /*+++++ * If the switch is being marked failed * mark all the associated downstream PDC switches Failed -----*/ if (cond == Failed) {",5/16/06
ProjectE - TIM - 1764,"Redundantly Defined Macros, Files scSim.mod\FlightSimTime.c, SimCardCMIC.c",5,"1) Redundant macro 'ITIMER_VIRTUAL' at phx_fsw.ar\scSim.mod\FlightSimTime.c, line 84 is defined identically at line 144, file /usr/include/sys/time.h. The macro is defined in the system header file. The definitions are the same."" 2) Redundantly declared symbol 'sysPhysMemTop(void)' in phx_fsw.ar\scSim.mod\SimCardCMIC.c, line 135 is previously declared at line 135, file phx_fsw.prj/include/sysLib.h The function declaration exists also in header sysLib.h and is redundantly declared in this file."" 3) Redundant macro 'SIG_BLOCK' in phx_fsw.ar\scSim.mod\SimFlight.c, line 294 is defined identically at line 109, file vxworks/private/signal.h SIG_UNBLOCK AND SET_SETMASK also have redundant declarations.",5/16/06
ProjectE - TIM - 1763,"Preprocessor removal of code, file sam_Touchdown_Monitor.c, line 346",4,"The function samTDM_Execute(), responsible for shutting down thrusters when touchdown is recognized, presently includes a #ifdef statement- ""#ifdef NOTDEF"" that removes from the compiled code the setting of the read_status[] values. Code is apparently under construction. This TIM will function as a watch point for this mission critical code. phx_fsw.ar\sam.mod\sam_Touchdown_Monitor.c, line 346 void samTDM_Execute(int unused) { int read_status[3]; ... #ifdef NOTDEF read_status[0] = read(SAMdPACI_fd, (char *)&TD_INDICATOR_LIST[0],1); if (read_status[0] == ERROR) SAMoTDM_paci_read_errors[0]++; ... int samTDM_Get_Vote(void) { ... #ifdef NOTDEF read(SAMdPACI_fd, (char *)&TD_INDICATOR_LIST[0],1); read(SAMoTDM_ioc_fd,(char *)&TD_INDICATOR_LIST[1],1); read(SAMdPACI_fd, (char *)&TD_INDICATOR_LIST[2],1); #endif",5/16/06
ProjectE - TIM - 1762,"Bit Shift executes on no upper byte, file SME_CommAtt_md.c, line 161",4,"As an input parameter to the call of FPUcmd_send_immed_command(), FPUcmd_MSByte(CMD_OBJ_AHRAD_KFILTER), where CMD_OBJ_AHRAD_KFILTER is defined as 36, has no upper byte. Therefore, the application of ""FPUcmd_MSByte(a) (((a) & 0xFF00) >> 8)"" is superfluous. Condition may be acceptable for this particular function call but should be reviewed and validated by the developer. SME_CommAtt_md.c, line 161 /*+++++ ** Start the Kalman Filter **-----*/ FPUcmd_send_immed_command(CMD_OP_FSW_OBJ_START, CMD_LEN_FSW_OBJ_START, 161 FPUcmd_MSByte(CMD_OBJ_AHRAD_KFILTER), FPUcmd_LSByte(CMD_OBJ_AHRAD_KFILTER), 0, 0); msg_obj_defs_db.h #define CMD_OBJ_AHRAD_KFILTER (36) FPU_Commander.h #define FPUcmd_MSByte(a) (((a) & 0xFF00) >> 8) #define FPUcmd_LSByte(a) ((a) & 0x00FF)",5/16/06
ProjectE - TIM - 1761,Unconventional commenting out code removes initialization of variable,4,"Unconventional marker (placeholder) as part of a comment has removed initialization of variable strs_cond in AKPM_Check_STRS_Condition(). This represents one of several comments used for commenting out code (see list of files with ""/*DSH"" below). TIM will be used as a watch and closed when all instances of the comment are resolved. phx_fsw.ar\hlfp.mod\AKPM.c, line 2651 static void AKPM_Check_STRS_Condition ( void ) /*----- End Prototype -----*/ { FP_Condition_t strs_cond; ... /*DSH strs_cond = scamGet_FP_Condition(); */ if ((strs_cond == Failed) || (AKPM_STRS_IndicFail_Resp_In_Progress && (strs_cond != Good))) { Files with ""/*DSH"" phx_fsw.ar\hlfp.mod\AKPM.c phx_fsw.ar\hlfp.mod\CPM_md.c phx_fsw.ar\hlfp.mod\DBPM.c phx_fsw.ar\hlfp.mod\DBPM_md.c phx_fsw.ar\hlfp.mod\DLLE.c phx_fsw.ar\hlfp.mod\PCPM.c phx_fsw.ar\hlfp.mod\RBR.c phx_fsw.ar\hlfp.mod\RBR_md.c phx_fsw.ar\hlfp.mod\SME.c phx_fsw.ar\hlfp.mod\SME_CommAtt_md.c phx_fsw.ar\hlfp.mod\SME_InitConfig_md.c phx_fsw.ar\hlfp.mod\SME_RateDamp_md.c phx_fsw.ar\hlfp.mod\SME_SunAcquisit_md.c phx_fsw.ar\hlfp.mod\SPM.c phx_fsw.ar\hlfp.mod\SQPM.c phx_fsw.ar\sam.mod\sam_Touchdown_Monitor.c",5/16/06
ProjectE - TIM - 1760,"Allocated Memory never freed (likely intentional), file eep_drv.c",4,"pEepDev in function eep_devCreate of file eep_drv.c is allocated memory but it is never freed. This may be as intended with only a reboot freeing and memory and a restart leading to a new device creation. BLK_DEV *eep_devCreate ( char *eepAddr, /* start address of EEPROM block device */ int bytesPerBlk, /* number of bytes per block */ int nBlocks, /* number of blocks on this device */ int blkOffset /* blocks skipped at start of device */ ) { register BLK_DEV*returnValue; /* return value */ EEP_DEV *pEepDev; /* ptr to created EEP_DEV struct */ ... /* Allocate a EEP_DEV structure for device. */ pEepDev = (EEP_DEV *)malloc(sizeof(EEP_DEV));",5/16/06
ProjectE - TIM - 1759,"Redundantly Defined Macros, File cmd.c, cmd.h",4,"1) Redundant macro 'CMD_INIT_QUIET' in phx_fsw.ar\cmd.mod\cmd.c, line 68 is defined identically at line 242, file phx_fsw.ar/include/cmd.h Macro is defined exactly with same value. -------------------------------------------- 2) Redundant macro 'CMD_INIT_VERBOSE' in phx_fsw.ar\cmd.mod\cmd.c, line 69 is defined identically at line 243, file phx_fsw.ar/include/cmd.h Macro is defined exactly with same value.",5/16/06
ProjectE - TIM - 1758,Possible Array-Out-Of-Bounds in Build 3.1 FSW,2,"The array index of 'vm_time_events' may be outside the bounds in vm_time.c. Array 'vm_time_events' of size 18 defined on line 43 in the aforementioned file may use index value of 18 in function insert_event. This potential error occurs on line 292. If the variable, vm_time_top_event_index, holds a value of 17, then the conditional statement will be evaluated on line 289 and will result in an array out of bounds (by 1) on line 292. A code segment is listed below. if (vm_time_top_event_index < VM_MAX_NUM_EVENTS) { for (i = vm_time_top_event_index; i >= position; i--) copy_event(&(vm_time_events[i]),&(vm_time_events[i+1]));",5/16/06
ProjectE - TIM - 1757,Possible Array-Out-Of-Bounds in Build 3.1 FSW,2,"The array index of 'pdc_sw_cmd' may be outside the bounds in eps_pdc_sw.c. Array 'pdc_sw_cmd' of size 2 defined in function, eps_pdc_sw_cmd_hw, may use index value 2 in the aforementioned function. This potential error occurs on lines 399 and 401. The index variable is also the loop counter for the loop that starts on line 392. This loop runs for two iterations and the counter starts at 0. However, the index variable used on lines 399 and 401 is index plus 1. This would cause the index value to be 2 on the final iteration of the loop if the conditional if statement on line 392 is executed. A code segment is listed below: for (par_id = 0; par_id < MAX_NUM_PAR_SW; par_id++) { /*+++++ * If this switch has a parallel switch * set the discretes appropriately. -----*/ if (eps_pdc_sw[id].par_sw[par_id] != UNDEFINED_EPS_PDC_SW_ID_TYPE) { par_sw_id = eps_pdc_sw[id].par_sw[par_id]; eps_pdc_sw[par_sw_id].desired_state = eps_pdc_sw[id].desired_state; pdc_sw_cmd[par_id + 1].id = eps_pdc_sw[par_sw_id].cmd_id; pdc_sw_cmd[par_id + 1].value = pdc_sw_cmd[0].value; num_to_write++; }",5/16/06
ProjectE - TIM - 1756,"Variable, cntr, is missing a datatype.",3,"The variable, cntr found in nav2.c within function nav2_GroundRelative (line 724) is missing a datatype. A code segment is below. void nav2_GroundRelative(void) { double velMagnitude; /* Magnitude of the groune */ static cntr=0;",5/16/06
ProjectE - TIM - 1755,Uninitialized variable (strs_cond) in Build 3.1 FSW (AKPM.c),3,"The variable, strs_cond, defined in function AKPM_Check_STRS_Condition on line 2616 is used before being set in this function. The variable is used on line 2650-2651. The variable was originally set on line 2647, but that line is now commented-out. 1. File: AKPM.c 2. Function: AKPM_Check_STRS_Condition 3. Lines: 2616, 2650-2651 4. Code Segment: /*DSH strs_cond = scamGet_FP_Condition(); */ if ((strs_cond == Failed) || (AKPM_STRS_IndicFail_Resp_In_Progress && (strs_cond != Good))) {",5/16/06
ProjectE - TIM - 1754,Uninitialized variables in Build 3.1 FSW (iocNodeCmic.c),3,"The variables, seconds_lsw_0 and seconds_lsw_1, can be used before being set in the function iocNodeCmicIoctlClockS. If the conditional statement on line 531 is not executed, then seconds_lsw_0 will not be set. If the conditional statement on line 564 is not executed, then seconds_lsw_1 will not be set. Both variables are compared against each other for entry into the conditional statement on line 577. 1. File: iocNodeCmic.c 2. Lines: 577, 564 and 561 3. Function: iocNodeCmicIoctlClockS 4. Code Segment: if ( seconds_lsw_0 != seconds_lsw_1 ) {",5/16/06
ProjectE - TIM - 1753,Missing type-casts in eps2.mod diretory may cause loss of data in Build 3.1 FSW.,3,The following type-casts are missing and may cause a loss of data. Unsigned short value assigned an unsigned long value. 1. File: eps_sensor_data.c 2. Function: eps_sensor_data_read_raw 3. Variable: l_sensor->raw 4. Line: 360 Unsigned short value assigned an unsigned long value. 1. File: eps_sensor_data.c 2. Function: eps_sensor_data_read_raw 3. Variable: l_sensor->raw 4. Line: 388 Unsigned short value assigned an unsigned long value. 1. File: eps_sensor_data.c 2. Function: eps_sensor_data_read_raw 3. Variable: l_sensor->raw 4. Line: 401,5/16/06
ProjectE - TIM - 1752,Missing type-casts in cmd.mod diretory may cause loss of data in Build 3.1 FSW.,3,The following type-casts are missing and may cause a loss of data. Unsigned char value assigned an int value. 1. File: cmd.c 2. Function: cmd_send 3. Variable: cmdMsg.hdr.from.taskId 4. Line: 1349 Unsigned char value assigned an int value. 1. File: cmd.c 2. Function: cmd_send 3. Variable: CmdHistory.entry[].source 4. Line: 1423 Unsigned char value assigned an int value. 1. File: cmd.c 2. Function: cmd_send 3. Variable: CmdHistory.entry[].status 4. Line: 1424,5/16/06
ProjectE - TIM - 1751,Missing type-casts in cio.mod diretory may cause loss of data in Build 3.1 FSW.,3,The following type-casts are missing and may cause a loss of data. Unsigned short value assigned an unsigned long value. 1. File: cio.c 2. Function: read_n_bytes_transfer 3. Variable: dest_ptr 4. Line: 862 Unsigned short value assigned an unsigned long value. 1. File: cio_basic.c 2. Function: cio_basic_write_atomic 3. Variable: d16 4. Line: 587 Unsigned short value assigned an unsigned long value. 1. File: cio_operation.c 2. Function: evaluate_read 3. Variable: id 4. Line: 320 Unsigned short value assigned an unsigned long value. 1. File: cio_operation.c 2. Function: evaluate_write 3. Variable: id 4. Line: 414 Unsigned char value assigned an int value. 1. File: cio_parser.c 2. Function: parse_error_masks 3. Variable: channel_ptr->num_error_masks 4. Line: 1008 Char value assigned an long value. 1. File: cio_parser.c 2. Function: parse_operation 3. Variable: opcode 4. Line: 1647 Char value assigned an long value. 1. File: cio_parser.c 2. Function: parse_operation 3. Variable: reg 4. Line: 1662 Char value assigned an long value. 1. File: cio_parser.c 2. Function: parse_operation 3. Variable: data_kind 4. Line: 1677 Unasigned Char value assigned an unasigned long value. 1. File: cio_parser.c 2. Function: parse_operation 3. Variable: reg_symbol 4. Line: 1681 Unsigned short value assigned an unsigned long value. 1. File: cio_special.c 2. Function: read_telecom_analog 3. Variable: value_ptr 4. Line: 478 Int value assigned a double value. 1. File: cio_utils.c 2. Function: cio_task_delay 3. Variable: remaining_ticks 4. Line: 266,5/16/06
ProjectE - TIM - 1750,Missing type-cast in astr.mod directory may cause loss of data in Build 3.1 FSW.,3,"The following type-casts are missing and may cause a loss of data. Unsigned short value assigned an unsigned long value. 1. File: astr.c 2. Function: astrHandler 3. Variable: newCmd.u16[1] 867 newCmd.u16[1] = ((struct cmd_ST_DOWNLOAD *)cmdParms)->st_num_words; unA32.word32 = ((struct cmd_ST_DOWNLOAD *)cmdParms)->st_addr_0; newCmd.u16[3] = unA32.word16[0]; newCmd.u16[4] = unA32.word16[1]; newCmd.u16[2] = 0; if( (0 < newCmd.u16[1]) && (newCmd.u16[1] <= WORDS_PER_TC_DOWNLOAD) && astrAddrIsOK(unA32.word32,(uint32_t)newCmd.u16[1],PART_UNKNOWN) ) { newCmd.u16[0] = ASTR_TC_DOWNLOAD; } else ret = ERROR; break;",5/16/06
ProjectE - TIM - 1749,Module scope global variables not static (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): a. Software will define data variables that have module scope as static where possible to minimize the use of global symbols. Data should have scope relative only to its execution environment. File: Inst6_image.c 1. Variables: Inst6_histogram, Inst6_CCD, Inst6a_proc_msg 2. Lines: 145, 160, 166",5/16/06
ProjectE - TIM - 1748,Use of 'goto' statement (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.3 General Code Conventions): b. Software functions will not use ""goto"" constructs. File: ra_expansions.c 1. Function: ra_calibrate File: ra_recover.c 1. Functions: recover_acquire_sample, recover_chop, ra_recover_ace_reset, ra_recover_paci, ra_recover_power_30v",5/16/06
ProjectE - TIM - 1747,Use of float as datatype (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.5.1 Flight Software Data Declaration and Data Storage): d. Flight software will use ""double"" as the preferred floating-point type, where ""float"" should only be used when explicitly required. The RAD6000/RAD750 performs floating point operations with native type ""double"", and demotion to float requires additional operations. File: metdm.c 1. Function: metdmPutF32 2. Line: 324",5/16/06
ProjectE - TIM - 1746,Use of float as datatype (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.5.1 Flight Software Data Declaration and Data Storage): d. Flight software will use ""double"" as the preferred floating-point type, where ""float"" should only be used when explicitly required. The RAD6000/RAD750 performs floating point operations with native type ""double"", and demotion to float requires additional operations. File: ra_expansions.c 1. Function: ra_dig_trench 2. Line: 381, 399, 402-404 File: ra_expansions.c 1. Function: ra_move_ready 2. Line: 1271 File: ra_external.c 1. Function: ra_get_tlm_data_hdr 2. Line: 160, 180 File: ra_fault.c 1. Function: ra_check_deflection 2. Line: 1588 File: ra_kinematic.c 1. Function: ra_check_deflection 2. Line: 1193 File: ra_manager.c 1. Function: ra_mj_arg, ra_mj_time_arg, ra_mc_arg, ra_send_motion 2. Line: 582, 608, 633, 911, 969, 1027 File: ra_monitor.c 1. Function: ra_monitor_sensors 2. Line: 457 File: ra_parameters.c 1. Function: ra_set_one_param 2. Line: 218, 378, 919",5/16/06
ProjectE - TIM - 1745,No function headers (Contractor3 Software Coding Convention Violation),4,The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention: Software functions within files will contain a standard function header that includes function name and a description of the function. The following function header uses the “design tool” format. File: vm_opcode_functions.c 1. Functions: all functions in the file are missing a header.,5/16/06
ProjectE - TIM - 1744,No function headers (Contractor3 Software Coding Convention Violation),4,The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.2 Function Header): a. Software functions within files will contain a standard function header that includes function name and a description of the function. The following function header uses the “design tool” format. File: metdm.c 1. Functions: all functions in the file are missing a header.,5/16/06
ProjectE - TIM - 1743,Comma separated data declaration lists (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): c. Software data declarations will contain only one data declaration per line (e.g. comma separated data declaration lists are not compliant). File: ra_col.c 1. Lines: 375-376 2. Variables: *l1, *l2, *obj1, *obj2 3. Function: check_link_collisions File: ra_col.c 1. Lines: 1265 2. Variables: ct, st, cq, sq 3. Function: compute_link_poses File: ra_col.c 1. Lines: 1522 2. Variables: i, j 3. Function: copy_frame File: ra_col.c 1. Lines: 4325 2. Variables: qq41,qq42,qq43,qq44,qq12,qq13,qq23,qq11,qq22,qq33,sc 3. Function: udq2t_ File: ra_col.c 1. Lines: 2023-2024 2. Variables: *obj, *parent, i, level 3. Function: ra_bld_hier File: ra_col.c 1. Lines: 2341, 2343 2. Variables: i, j, *l1, *l2 3. Function: ra_check_collisions File: ra_col.c 1. Lines: 2631 2. Variables: i, j 3. Function: ra_compress_objects File: ra_col.c 1. Lines: 2897, 2899 2. Variables: i, prev_write, this_write, status, status2 3. Function: ra_expand_objects File: ra_col.c 1. Lines: 3847-3848 2. Variables: *obj, *parent, *child, i, j, child_id 3. Function: ra_verify_hier File: ra_fault.c 1. Lines: 1325 2. Variables: i, current, num_motors_on, num_heaters_on 3. Function: ra_power_30v File: ra_fault.c 1. Lines: 1120 2. Variables: delta_pos, delta_ori 3. Function: ra_joint_runaway File: ra_math.c 1. Line: 126 2. Variables: i,j,k 3. Function: ra_matrix_matrixdotmatrix File: ra_paci_com.c 1. Line: 416 2. Variables: joint, i 3. Function: receive_status File: ra_kinematic.c (throughout entire file) 1. Functions: ra_compute_arm_cfg, ra_compute_fwd_kin, ra_compute_inv_kin, ra_gen_joint_seq, ra_gen_cart_traj, ra_gen_joint_traj, ra_lander_to_robot, ra_robot_to_lander, ra_tool_to_world, ra_rot_tool_to_lander, ra_rot_to_quat File: ra_monitor.c (throughout entire file) 1. Functions: ra_compute_volt, ra_monitor_sensors, ra_compute_delta_via, ra_compute_energy, ra_compute_torque, ra_reached_via",5/16/06
ProjectE - TIM - 1742,Comma separated data declaration lists (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): c. Software data declarations will contain only one data declaration per line (e.g. comma separated data declaration lists are not compliant). File: Inst7.c 1. Line: 414 2. Variables: i, j, off, size 3. Function: directory_init",5/16/06
ProjectE - TIM - 1741,Comma separated data declaration lists (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): c. Software data declarations will contain only one data declaration per line (e.g. comma separated data declaration lists are not compliant). File: Inst6a_image.c 1. Lines: 1280-1281 2. Variables: crc, polynom, i, j 3. Function: Inst6a_GenCRC",5/16/06
ProjectE - TIM - 1740,"Use of strcat(), strcmp(), or strcpy() (Contractor3 Software Coding Convention Violation)",3,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.3 General Code Conventions): l. Software will always use explicit length string library functions when performing string manipulations, such as strncat(), strncmp(), and strncpy(), rather than strcat(), strcmp(), and strcpy(). File: Inst8_image.c 1. strcpy, lines 1294-1297 in function Inst8_SetPixTables",5/16/06
ProjectE - TIM - 1739,"Use of strcat(), strcmp(), or strcpy() (Contractor3 Software Coding Convention Violation)",4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.3 General Code Conventions): l. Software will always use explicit length string library functions when performing string manipulations, such as strncat(), strncmp(), and strncpy(), rather than strcat(), strcmp(), and strcpy(). File: cmd.c 1. strcmp, line 284 in function cmd_init 2. strcpy, line 664 in function cmd_load_restricted File: file_system.c 1. strcmp, line 771 in function file_sysBlkDevInfoMatch File: vm.c 1. strcmp, line 1280 in function look_up_function_vm_index File: vm_opcode_functions.c 1. strcmp, lines 2537, 2539, 3188, 3424, 3673, 3877, 4081, 4285 in functions: logical_coerce_string, equal_string_string, not_equal_string_string, less_string_string, less_or_equal_string_string, greater_string_string, greater_or_equal_string_string 2. strcpy, lines 2658, 2660 in function string_coerce_logical",5/16/06
ProjectE - TIM - 1738,Variable initialized on the same line it is declared (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): d. Software data declarations of “automatic (stack) data” within functions will not contain data initialization on the same line as the data declaration (e.g. ""int x=1;"" is not compliant). This applies to automatic data (declarations within functions), and does not apply to data with module scope. File: Inst7.c 1. Variable: off 2. Function: directory_init 3. 414",5/16/06
ProjectE - TIM - 1737,Variable initialized on the same line it is declared (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): d. Software data declarations of “automatic (stack) data” within functions will not contain data initialization on the same line as the data declaration (e.g. ""int x=1;"" is not compliant). This applies to automatic data (declarations within functions), and does not apply to data with module scope. File: ra_col.c 1. Variable: flags 2. Function: ra_verify_hier 3. Line: 3849 File: ra_fault.c 1. Variables: delta_pos, delta_ori 2. Function: ra_joint_runaway 3. Line: 1120 File: ra_fault.c 1. Variables: current, num_motors_on, num_heaters_on 2. Function: ra_power_30v 3. Line: 1325 File: ra_fault.c 1. Variables: mask 2. Function: ra_fault_check_enabled 3. Line: 578 File: ra_fault.c 1. Variables: mask 2. Function: ra_set_fault_check_mask 3. Line: 724 File: ra_fault.c 1. Variables: mask 2. Function: ra_set_fault_status 3. Line: 779 File: ra_monitor.c 1. Variable: scale_factor 2. Function: ra_compute_volt 3. Line: 372 File: ra_monitor.c 1. Variables: motors_off, htrs_off, enable 2. Function: ra_monitor_sensors 3. Line: 453-454, 456 File: ra_monitor.c 1. Variables: last_via, motors_off 2. Function: ra_reached_via 3. Line: 1137 File: ra_monitor.c 1. Variables: out_of_range 2. Function: ra_temp_out 3. Line: 1224",5/16/06
ProjectE - TIM - 1736,Variable initialized on the same line it is declared (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): d. Software data declarations of “automatic (stack) data” within functions will not contain data initialization on the same line as the data declaration (e.g. ""int x=1;"" is not compliant). This applies to automatic data (declarations within functions), and does not apply to data with module scope. File: clockLib.c 1. Variable: one_second 2. Function: process_cmic_clock_sample 3. Line: 1250 File: cmd.c 1. Variable: returnCode 2. Function: cmd_load_restricted 3. Line: 647 File: fastPartSalv.c 1. Variable: status 2. Function: fastPartSalvageInitialize 3. Line: 278 File: msg.c 1. Variable: returnCode 2. Function: msg_init_queues 3. Line: 243 File: sam_Touchdown_Monitor.c 1. variable: i 2. Function: samTDM_Event_Enable 3. Line: 245",5/16/06
ProjectE - TIM - 1735,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: Inst6_paci.c 1. variables: Inst6_serial_fd, Inst6_disc_fd, Inst6_sem_fault_gate, Inst6_read_fault_evr_gate, Inst6_write_fault_evr_gate, Inst6_disc_cmd_evr_gate, Inst6_disc_fault_gate, Inst6_disc_chan_evr_gate, Inst6_cmd_pwr_evr_gate, Inst6_cmd_fd_evr_gate, Inst6_paci_retry_evr_gate 2. Lines: 49-50, 54, 56-57, 59-61, 63-64, 66 File: Inst6_image.c 1. variable: CCD_params_set 2. Line: 142",5/16/06
ProjectE - TIM - 1734,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: Inst6a_cmd.c 1. Variable: Inst6a_cmd_reject_gate 2. Line: 63 File: Inst6a_globals.c 1. Variables: Inst6a_curr_time, Inst6a_init_time, Inst6a_main_time_delta, Inst6a_slots_ok, Inst6a_mem_size, Inst6a_telem_attempts, Inst6a_crc_table_set, Inst6a_images_processed, Inst6a_images_requested, Inst6a_last_dl_time, Inst6a_last_img_id, Inst6a_last_error, icsCpdu 2. Lines: 28-30, 32-33, 35, 37, 39-40, 42-43, 45, 47 File: Inst6a_slots.c 1. Variables: Inst6a_lg_slot_cnt, Inst6a_sm_slot_cnt, Inst6a_image_slot_status, Inst6a_max_slots, Inst6a_slot_memory 2. Lines: 58-59, 61, 64-65",5/16/06
ProjectE - TIM - 1733,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: mcCmd.c 1. Variables: cmdCurrAllocatedMsgObjects, cmdPeakAllocatedMsgObjects, rdpowerDataBuf, rdpowerCurrSampleNum 2. Lines: 107-108, 110, 112 File: mcCme.c 1. Variables: cmeScratch, cmeSerialFd, cmeDiscreteFd, cmeCurrentMotor, cmeEnabledComponents, cmeCurrentPowerBits, cmeCurrentComm 2 Lines: 121, 123-124, 131, 138-139, 141 File: mcMain.c 1. Variables: mcHwCmdsFlushed, mcHwFlushQueue, mcTelemCmdsFlushed, mcTelemFlushQueue, mcMain_CmdsDequeued, mcMain_CmdsStarted, mcMain_CmdsCompleted, mcMain_CmdsRejected, mcMain_SafePending, mcmainInitOk, mcmainTablesRead,mcmainCurrentOp, mcmainCurrentHwCmdNum, mcmainCurrentTelemCmdNum, mcmainCurrentTelemCmdOp, mcmainBadHwMessageCtr, mcmainBadNannyMessageCtr, mcmainBadTelemMessageCtr 2. Lines: 97-98, 100-101, 110-113, 115, 119-120, 122, 124-125, 127-128, 130-133 File: mcTecp.c 1. Variables: tecpReadMask, tecpDataBuf, tecpCurrSampleNum 2. Lines: 88-89, 91 File: mcTelem.c 1. Variables: telemTotalPacketCount, telemDataProductCount, telemScratch 2. Lines: 75-76, 78 File: mcWchem.c 1. Variables: wchemDrawerLsMask, wchemDrawerHoldTime, wchemDrawerRetries, wchemHeaterSet, wchemHeatersOn, wchemReadIses, wchemReadCond, wchemReadDox, wchemReadCv, wchemReadCCv, wchemReadAs, wchemReadCAs, wchemReadPt, wchemReadInterval, wchemCurrentReagentActuation, wchemStirStirSet, wchemStirDutyTime, wchemStirRestTime, wchemStirOn, wchemStirSuppress 2. Lines: 115-117, 121, 125, 129-137, 141, 145-149",5/16/06
ProjectE - TIM - 1732,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: ra_command.c 1. Variable: heap_size 2. Line: 528 File: ra_kinematic.c 1. Variable: recursion_depth 2. Line: 199 File: ra_manager.c 1. Variable: Inst9_cpdu 2. Line: 564",5/16/06
ProjectE - TIM - 1731,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: Inst8_move.c 1. Variable: Inst8_phase_evr_gate 2. Line: 112 File: Inst8_paci.c 1. Variables: Inst8_serial_fd, Inst8_disc_fd, Inst8_sem_fault_gate, Inst8_read_fault_evr_gate, Inst8_write_fault_evr_gate, Inst8_disc_cmd_evr_gate, Inst8_disc_fault_gate, Inst8_disc_chan_evr_gate, Inst8_cmd_pwr_evr_gate, Inst8_cmd_fd_evr_gate, Inst8_paci_retry_evr_gate 2. Lines: 49-50, 54, 56-57. 59-61, 63-64, 66 File: Inst8_status.c 1. Variable: curr_log_entry 2. Line: 78",5/16/06
ProjectE - TIM - 1730,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: Inst4_power.c 1. Variables: Inst4_iPowerState, Inst4_iPwrNoteCount 2. Lines: 69-70 File: Inst4_support.c 1. Variables: Inst4_fdDiscrete, Inst4_fdSerial, Inst4_iReset2Ready_sec, Inst4_iSyncUpdateFirst_sec, Inst4_iSyncUpdateInterval_sec, Inst4_iHBCheckFirst_sec, Inst4_iHBCheckInterval_sec, Inst4_iFilePartSend_sec, Inst4_iBootSelActive_sec, Inst4_maxPaciRetry, Inst4_dWriteDelayOffsetSec, Inst4_iInitOk_bits, Inst4_iInitRetry_sec, Inst4_iApidSelect, Inst4_iBootSelect, Inst4_dwBadCmdMessages, Inst4_dwBadTlmMessages 2. Lines: 86-87, 98-108, 114-115, 136-137 File: Inst4_heart.c 1. Variables: Inst4_iCurrNumHeartbeats, Inst4_iMissedHeartbeats, Inst4_dwInternalTime_ms, Inst4_bHeartJustBeat, Inst4_bHeartBeatReset 2. Lines: 63-65, 67-68 File: Inst4_discrete.c 1. Variables: Inst4_iResetCounter, Inst4_iSyncCounter, Inst4_iSyncErrCntr 2. Lines: 92-94 File: Inst4_command.c 1. Variable: Inst4_fdFileToLoad 2. Line: 60",5/16/06
ProjectE - TIM - 1729,Global variables do not have an explicit initial value (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.1 Data Declarations): k. All global and static variables that are not arrays or structures will be declared with an explicit initial value. For example, the following is not acceptable: static int myFlag; /* this is not allowed */ But, the following is acceptable: static int myFlag = 0; /* Explicit initial value */ File: ACPM.c 1. variable: ACPM_ACS_Mode 2. Line: 84 File: AKPM.c 1. Variable: AKPM_Dual_State_Entry_Time 2. Line: 159 File: clockLib.c 1. Variables: configFd, cmicClockFd, clockSynchCpdu, clockUpdateIntervalCount 2. Lines: 87, 88, 93, 100 File: SME_CommAtt_md.c 1. Variables: temp_seconds, firstSun, firstEarth, doubleTime, wakeupTime, time_uint 2. Lines: 55, 57-58, 61-63 File: vm_engine.c 1. Variables: gv_base_num_strings, vm_engine_issue_tags, vm_engine_runtime_errors_report_threshold, vm_engine_send_current_file_loaded, vm_engine_suppress_commands 2. Lines: 80, 88, 90, 92, 94 File: vm_expr.c 1. Variable: vm_expr_allow_compound_exprs 2. Line: 32 File: vm_external_data.c 1. Variable: top_index 2. Line: 31 File: vm_external_data_mission.c 1. variable: lock_takes 2. Line: 34 File: vm_opcode.c 1. Variable: vm_opcode_use_tan_check 2. Line: 44 File: vm_time.c 1. Variables: vm_time_top_event_index, vm_time_top_overdue_event_index, vm_time_limit_clock_change_in_block, vm_emergency_shutdown, vm_time_clock_jump_evr_threshold, vm_time_suppress_screen 2. Lines: 41-42, 45-46, 48-49 File: vm_utils.c 1. Variables: vm_utils_access_timeout, vm_utils_access_num_timeouts 2. Lines: 41-42 File: rtsimif.c 1. Variables: paciDiscFd, paciSerialFd, rtSimIfCpdu 2. Lines: 86-87, 91 File: SME_InitConfig_md.c 1. Variables: command_size, err, looper, SME_offpoint_slot, SME_time 2. Lines: 61-62, 65-67",5/16/06
ProjectE - TIM - 1728,Function exceeds 300 lines (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.3 File Format): c. Software functions will be less than 300 source lines of code. For the purposes of this convention a source line of code is a count of newline characters, so it includes such things as blank lines and comments. Function: ra_actuator 1. File: ra_command.c 2. Line #: 503-897",5/16/06
ProjectE - TIM - 1727,Function exceeds 300 lines (Contractor3 Software Coding Convention Violation),4,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.3 File Format): c. Software functions will be less than 300 source lines of code. For the purposes of this convention a source line of code is a count of newline characters, so it includes such things as blank lines and comments. Function: check_control_errors 1. File: ACPM.c 2. Line #: 710-1098 Function: clock_init 1. File: clockLib.c 2. Line #: 203-1019 Function: msg_send 1. File: msg.c 2. Line #: 503-897 Function: SME_Do_InitConfig 1. File: SME_InitConfig_md.c 2. Line #: 97-543 Function: SME_Do_SunAcquisit 1. File: SME_SunAcquisit_md.c 2. Line #: 77-843 Function: SME_Do_CommAtt 1. File: SME_CommAtt_md.c 2. Line #: 92-979",5/16/06
ProjectE - TIM - 1726,Unused command message prototype in Build 3.1 FSW (cmd.c),4,"The command message prototype defined in cmd.c on line 81 is not used in the Build 3.1 FSW. There is no indication of its status for the the ProjectE FSW. Code Segment: typedef void (*cmdMsgMethod_t)(size_t size, int msgPrio, const cmdMsg_p msg);",5/16/06
ProjectE - TIM - 1725,Unnecessary type-cast in hlfp.mod diretory in Build 3.1 FSW.,4,"The variable, fpu_tlm_id, is of type unsigned short and is being casted as an unsigned long when being set to telemerty_id (unsigned short). Unnecessary type-cast. 1. File: FPU_Count.c 2. Function: FPU_Counter_Initialize_L 3. Variable: counter->telemetry_id 4. Line: 107",5/16/06
ProjectE - TIM - 1724,Unused macros in Build 3.1 FSW,4,The following macrosare unused in the the Build 3.1 FSW. There is no indication of the status of these variables for the ProjectE FSW. Macro: CIO_MAX_CHANNEL 1. file: cio.c 2. line: 67 Macro: TASK_ID_MISC 1. file: cmd.c 2. line: 65 Macro: CMD_INIT_QUIET 1. file: cmd.c 2. line: 68 Macro: CMD_INIT_VERBOSE 1. file: cmd.c 2. line: 69 Macro: CMD_IS_NOT_RESTRICTED 1. file: cmd.c 2. line: 197 Macro: CMD_IS_RESTRICTED 1. file: cmd.c 2. line: 198 Macro: CCU_CYCLIC_RATE 1. file: eps_ccu.c 2. line: 54 Macro: UNDEFINED_EPS_PM_ENABLE_CMD_ID 1. file: eps_ccu.c 2. line: 55 Macro: UNDEFINED_EPS_PM_DISABLE_CMD_ID 1. file: eps_ccu.c 2. line: 56 Macro: UNDEFINED_EPS_PM_VT_CURVE_CMD_ID 1. file: eps_ccu.c 2. line: 57 Macro: MIN_NUM_ENABLED_CCU_PM 1. file: eps_ccu.c 2. line: 58 Macro: CCU_MGR_10_SEC_RATE 1. file: eps_ccu.c 2. line: 60 Macro: SECONDS_TO_10HZ_CYCLES 1. file: eps_ccu.c 2. line: 76 Macro: WORD_1 1. file: eps_emic_sw.c 2. line: 59 Macro: UNDEFINED_EPS_RPC_CIO_ID 1. file: eps_rpc_sw.c 2. line: 54 Macro: EVR_RTIS_UNTIL_RESET 1. file: evr.c 2. line: 470 Macro: EVR_MSGQ_TIMEOUT 1. file: evr.c 2. line: 2220 Macro: FPE_NUM_SEP_INDICATORS 1. file: FPE.c 2. line: 597 Macro: FPE_AAC_SEP_VOTE 1. file: FPE.c 2. line: 604 Macro: FPE_NUM_LAUNCH_INDICATORS 1. file: FPE.c 2. line: 607 Macro: FPE_DISCRETE_NO_LAUNCH 1. file: FPE.c 2. line: 608 Macro: FPE_DISCRETE_LAUNCH 1. file: FPE.c 2. line: 609 Macro: FPE_NUM_Inst6_READS 1. file: FPE.c 2. line: 589 Macro: FPE_SC_NUM 1. file: FPE.c 2. line: 593 Macro: FPE_NUM_AV_SIDE_INDICATORS 1. file: FPE.c 2. line: 595 Macro: EPS_SENSOR_DATA_ID_EMIC_CURRENT 1. file: PCPM.c 2. line: 89 Macro: CURRENT_COMMAND_BLOCK_ADDR 1. file: iocNode1553.c 2. line: 64 Macro: MINOR_FRAME_TIMER_ADDR 1. file: iocNode1553.c 2. line: 69 Macro: BC_CMD_BLK_INIT_COUNT_ADDR 1. file: iocNode1553.c 2. line: 71 Macro: CTRL_REG_DEFAULT_INIT_VALUE 1. file: iocNode1553.c 2. line: 87 Macro: NUM_OF_CMD_WORDS 1. file: iocNodeDualSlave.c 2. line: 50 Macro: SLAVE_IO_READ_MASK_REG_ADDR 1. file: iocNodeDualSlave.c 2. line: 92 Macro: NUM_OF_CMD_WORDS 1. file: iocNodeMaster.c 2. line: 89 Macro: IOC_SLAVE_ENABLE_ANALOG_COLLECTION 1. file: iocNodeMaster.c 2. line: 104 Macro: IOC_SLAVE_DISABLE_ANALOG_COLLECTION 1. file: iocNodeMaster.c 2. line: 105 Macro: IOC_SLAVE_DISABLE_1553_INTERRUPTS 1. file: iocNodeMaster.c 2. line: 109 Macro: MS1553B_INIT_BIT_DELAY 1. file: ms1553bTask.c 2. line: 79 Macro: ERROR_IN_TIMER 1. file: telemetry.c 2. line: 69 Macro: DEFAULT_UPDATE_MULTIPLIER 1. file: telemetry.c 2. line: 76 Macro: VM_SECONDS_PER_SUBTICK 1. file: vm.c 2. line: 52,5/16/06
ProjectE - TIM - 1723,Unused functions in the Build 3.1 FSW,4,The following functions are unused in the the Build 3.1 FSW. There is no indication of the status of these functions for the ProjectE FSW. Function: cio_raw_read_n_bytes 1. file: cio_raw.c 2. line: 300 Function: cio_raw_write_n_bytes 1. file: cio_raw.c 2. line: 380 Function: removePty 1. file: removePty.c 2. line: 41 Function: heap_mgr_task 1. file: heap_mgr_task.c 2. line: 76 Function: FPE_get_cmd_safing 1. file: FPE.c 2. line: 2601 Function: FPE_get_cmd_deadend 1. file: FPE.c 2. line: 2659 Function: SPM_execute 1. file: SPM.c 2. line: 837 Function: SQPM_command 1. file: SQPM.c 2. line: 172 Function: SQPM_execute 1. file: SQPM.c 2. line: 347 Function: fsw_util_mq_dump_all_to_file 1. file: fsw_msg_q_utils.c 2. line: 71 Function: vm_cmd_method_vm_abort_mode 1. file: vm_cmd_method.c 2. line: 100 Function: vm_cmd_method_vm_gv_rename 1. file: vm_cmd_method.c 2. line: 120 Function: vm_cmd_method_vm_gv_save 1. file: vm_cmd_method.c 2. line: 140 Function: vm_cmd_method_vm_gv_set_dbl 1. file: vm_cmd_method.c 2. line: 160 Function: vm_cmd_method_vm_gv_set_int 1. file: vm_cmd_method.c 2. line: 180 Function: vm_cmd_method_vm_gv_set_str 1. file: vm_cmd_method.c 2. line: 200 Function: vm_cmd_method_vm_gv_set_time 1. file: vm_cmd_method.c 2. line: 220 Function: vm_cmd_method_vm_gv_set_uint 1. file: vm_cmd_method.c 2. line: 240 Function: vm_cmd_method_vm_halt 1. file: vm_cmd_method.c 2. line: 260 Function: vm_cmd_method_vm_halt_name 1. file: vm_cmd_method.c 2. line: 280 Function: vm_cmd_method_vm_load 1. file: vm_cmd_method.c 2. line: 300 Function: vm_cmd_method_vm_load_spawn 1. file: vm_cmd_method.c 2. line: 320 Function: vm_cmd_method_vm_pause 1. file: vm_cmd_method.c 2. line: 340 Function: vm_cmd_method_vm_protect 1. file: vm_cmd_method.c 2. line: 360 Function: vm_cmd_method_vm_reserve 1. file: vm_cmd_method.c 2. line: 380 Function: vm_cmd_method_vm_resume 1. file: vm_cmd_method.c 2. line: 400 Function: vm_cmd_method_vm_spawn 1. file: vm_cmd_method.c 2. line: 420 Function: vm_cmd_method_vm_start 1. file: vm_cmd_method.c 2. line: 440 Function: vm_cmd_method_vm_unload 1. file: vm_cmd_method.c 2. line: 460 Function: vm_cmd_method_vm_unload_file 1. file: vm_cmd_method.c 2. line: 480 Function: vm_cmd_method_vm_unprotect 1. file: vm_cmd_method.c 2. line: 500 Function: vm_cmd_method_vm_unreserve 1. file: vm_cmd_method.c 2. line: 520,5/16/06
ProjectE - TIM - 1722,Unused function parameters in Build 3.1 FSW,4,The following function parameters are unused in the the Build 3.1 FSW. There is no indication of the status of these parameters for the ProjectE FSW. Parameter: busVoltage 1. function: ac_propPrsXdcrPwr 2. file: ac_propulsion.c 3. line #: 582 Parameter: pMsg 1. function: ac_smfStart 2. file: ac_small_frcs.c 3. line #: 163 Parameter: pMsg 1. function: ac_smfStop 2. file: ac_small_frcs.c 3. line #: 198 Parameter: pMsg 1. function: adGc_Start 2. file: ad_GyroComp.c 3. line #: 190 Parameter: pMsg 1. function: adGc_Stop 2. file: ad_GyroComp.c 3. line #: 241 Parameter: pMsg 1. function: adImuStart 2. file: ad_imu.c 3. line #: 400 Parameter: pMsg 1. function: adImuStop 2. file: ad_imu.c 3. line #: 431 Parameter: id 1. function: ad_imu_power 2. file: ad_imu.c 3. line #: 1831 Parameter: volts 1. function: ad_imu_power 2. file: ad_imu.c 3. line #: 1832 Parameter: pMsg 1. function: adInitGc_Start 2. file: ad_Init_GyroComp.c 3. line #: 166 Parameter: pMsg 1. function: adInitGc_Stop 2. file: ad_Init_GyroComp.c 3. line #: 251 Parameter: pMsg 1. function: adStateStart 2. file: ad_state.c 3. line #: 1114 Parameter: pMsg 1. function: adStateStop 2. file: ad_state.c 3. line #: 1144 Parameter: pMsg 1. function: ad_StellarStart 2. file: ad_stellar.c 3. line #: 166 Parameter: pMsg 1. function: ad_StellarStop 2. file: ad_stellar.c 3. line #: 204 Parameter: pMsg 1. function: ahrStart 2. file: ahr_task.c 3. line #: 209 Parameter: pMsg 1. function: ahrStop 2. file: ahr_task.c 3. line #: 226 Parameter: iId 1. function: ahr_tlmPush 2. file: ahr_task.c 3. line #: 303 Parameter: pMsg 1. function: ahrCalStart 2. file: calib.c 3. line #: 114 Parameter: pMsg 1. function: ahrCalStop 2. file: calib.c 3. line #: 140 Parameter: iId 1. function: ahrCalUpdate 2. file: calib.c 3. line #: 208 Parameter: local_registers 1. function: read_telecom_analog 2. file: cio_special.c 3. line #: 470 Parameter: pEepDev 1. function: eep_statusChk 2. file: eep_drv.c 3. line #: 568 Parameter: arg0 1. function: evr_init_test 2. file: evr.c 3. line #: 103 Parameter: actual_pos 1. function: CPM_Failed_RF_Switch_Notification 2. file: CPD_md.c 3. line #: 401 Parameter: commanded_pos 1. function: CPM_Failed_RF_Switch_Notification 2. file: CPD_md.c 3. line #: 402 Parameter: emic_latch_shed 1. function: PCPM_Request_Full_Spacecraft_Shed 2. file: PCPM.c 3. line #: 2255 Parameter: pCmdLength 1. function: set_limits 2. file: idle.c 3. line #: 235 Parameter: pCmdLength 1. function: enable_scrub 2. file: idle.c 3. line #: 306 Parameter: msg 1. function: nav2Start 2. file: nav2_sys.c 3. line #: 118 Parameter: msg 1. function: nav2Stop 2. file: nav2_sys.c 3. line #: 159 Parameter: ref_id 1. function: asr_Compute_Reference 2. file: asr_Abs_Slew_Ref.c 3. line #: 348,5/16/06
ProjectE - TIM - 1721,Unused global variables in Build 3.1 FSW,4,The following global variables are unused in the the Build 3.1 FSW. There is no indication of the status of these variables for the ProjectE FSW. Variable: tuCpduTlm 1. file: cpdu.c 2. line#: 141 Variable: eps_rpc_sw_status_discrete_io_device_id 1. file: eps_rpc_sw.c 2. line#: 70 Variable: eps_rpc_sw_cmd_discrete_io_device_id 1. file: eps_rpc_sw.c 2. line#: 71 Variable: FLTREC_acyclic_nighttime_data 1. file: FLTREC_md.c 2. line#: 84 Variable: FPE_sep_dtci_evr_gate 1. file: FPE.c 2. line#: 168 Variable: FPE_sep_gif_evr_gate 1. file: FPE.c 2. line#: 169 Variable: FPE_sep_aac_evr_gate 1. file: FPE.c 2. line#: 170 Variable: FPE_sep_declared_evr_gate 1. file: FPE.c 2. line#: 173 Variable: FPE_sep_declared_sme_cmd_gate 1. file: FPE.c 2. line#: 174 Variable: FPE_sep_tlm_push_cycle_count 1. file: FPE.c 2. line#: 176 Variable: FPE_sep_max_tlm_push_cycles 1. file: FPE.c 2. line#: 183 Variable: FPE_sep_filter_cycle_count 1. file: FPE.c 2. line#: 185 Variable: FPE_sep_num_filter_cycles 1. file: FPE.c 2. line#: 191 Variable: FPE_lau_state 1. file: FPE.c 2. line#: 194 Variable: FPE_lau_dtci_evr_gate 1. file: FPE.c 2. line#: 197 Variable: FPE_lau_gif_evr_gate 1. file: FPE.c 2. line#: 198 Variable: our_command 1. file: SME_InitConfig_md.c 2. line#: 60 Variable: command_size 1. file: SME_InitConfig_md.c 2. line#: 61 Variable: err 1. file: SME_InitConfig_md.c 2. line#: 62 Variable: iocNodeAnalogFunct 1. file: iocNodeAnalog.c 2. line#: 53 Variable: time_tag_value 1. file: vml_storage.c 2. line#: 39,5/16/06
ProjectE - TIM - 1720,Unused local variables in Build 3.1 FSW,4,The following local variables are unused in the the Build 3.1 FSW. There is no indication of the status of these variables for the ProjectE FSW. Variable: astrMeas 1. function: ad_StellarCyclic 2. file: ad_stellar.c 3. line #: 247 Variable: old_HBT_reason 1. function: RBR_Early_Logic 2. file: RBR.c 3. line #: 161,5/16/06
ProjectE - TIM - 1719,Function is missing void in argument list (Contractor3 Software Coding Convention Violation),5,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.4.2 Function Declarations): e. Software functions that do not contain function arguments will be explicitly declared with a ""void"" argument list. File: ra_parameters.c Function: ra_save_parameters Line: 816",5/16/06
ProjectE - TIM - 1718,No function headers (Contractor3 Software Coding Convention Violation),5,The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.2 Function Header): a. Software functions within files will contain a standard function header that includes function name and a description of the function. The following function header uses the “design tool” format. File: ra_expansions.c 1. Function: ra_move_guarded 2. Line: 1208,5/16/06
ProjectE - TIM - 1717,Code filename is longer than 20 characters (Contractor3 Software Coding Convention Violation),5,The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.3 Naming Conventions): f. Software source code filenames (for compiled C code) will be no more than 20 characters in length. sam_Backshell_Sep_Monitor.c sam_Cruise_Sep_Monitor.c sam_Heatshield_Sep_Monitor.c sam_Touchdown_Monitor.c SME_AttKnowlReinit_md.c SME_PostDampConfig_md.c vm_external_data_mission.c vm_if_external_data_mission.c,5/16/06
ProjectE - TIM - 1716,Copyright notice missing from file header (Contractor3 Software Coding Convention Violation),5,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.1.1 Copyright Notice): a. All source text files will contain a copyright notice. This includes source code files, header files, makefiles, script files, data files, README files, etc. The header content will be compliant with corporate guidelines, see ""Control and Protection of Company Information"", AS 05.01, Revision 4, 04-30-97 (http://policy.global.lmco.com/p3/astronautics/pp/as/as0501.html). The type of copyright notice is dependent on the funding source used during development, such as technical information developed by Contractor3 under investment, contract effort, or derived from external products under investment or contract efforts. Files Inst6_ccd.c Inst6_cfg_data.c Inst6_cmd.c Inst6_fsw.c Inst6_globals.c Inst6_image.c Inst6_inst_cmds.c Inst6_main.c Inst6_move.c Inst6_paci.c Inst6_preheat.c Inst6_status.c Inst6_tlm.c",5/16/06
ProjectE - TIM - 1715,Copyright notice missing from file header (Contractor3 Software Coding Convention Violation),5,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.1.1 Copyright Notice): a. All source text files will contain a copyright notice. This includes source code files, header files, makefiles, script files, data files, README files, etc. The header content will be compliant with corporate guidelines, see ""Control and Protection of Company Information"", AS 05.01, Revision 4, 04-30-97 (http://policy.global.lmco.com/p3/astronautics/pp/as/as0501.html). The type of copyright notice is dependent on the funding source used during development, such as technical information developed by Contractor3 under investment, contract effort, or derived from external products under investment or contract efforts. Files ra_cfg.c ra_col.c ra_col_primitives.c ra_command.c ra_compress.c ra_deflection.c ra_expansions.c ra_external.c ra_fault.c ra_fp.c ra_kinematic.c ra_manager.c ra_math.c ra_monitor.c ra_paci_com.c ra_parameters.c ra_queues.c ra_recovery.c ra_state.c",5/16/06
ProjectE - TIM - 1714,Copyright notice missing from file header (Contractor3 Software Coding Convention Violation),5,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.1.1 Copyright Notice): a. All source text files will contain a copyright notice. This includes source code files, header files, makefiles, script files, data files, README files, etc. The header content will be compliant with corporate guidelines, see ""Control and Protection of Company Information"", AS 05.01, Revision 4, 04-30-97 (http://policy.global.lmco.com/p3/astronautics/pp/as/as0501.html). The type of copyright notice is dependent on the funding source used during development, such as technical information developed by Contractor3 under investment, contract effort, or derived from external products under investment or contract efforts. Files Inst8_cfg_data.c Inst8_cmd.c Inst8_fsw.c Inst8_globals.c Inst8_image.c Inst8_inst_cmds.c Inst8_main.c Inst8_move.c Inst8_paci.c Inst8_preheat.c Inst8_status.c Inst8_tlm.c",5/16/06
ProjectE - TIM - 1713,Copyright notice missing from file header (Contractor3 Software Coding Convention Violation),5,"The following appears to be in violation of the Contractor3 Software Coding Conventions (Rev. J) for newly developed code for the ProjectE Mission. The convention and applicable code areas are listed below. Convention (3.2.1.1 Copyright Notice): a. All source text files will contain a copyright notice. This includes source code files, header files, makefiles, script files, data files, README files, etc. The header content will be compliant with corporate guidelines, see ""Control and Protection of Company Information"", AS 05.01, Revision 4, 04-30-97 (http://policy.global.lmco.com/p3/astronautics/pp/as/as0501.html). The type of copyright notice is dependent on the funding source used during development, such as technical information developed by Contractor3 under investment, contract effort, or derived from external products under investment or contract efforts. Files ice_lut_main.c Inst6a_cfg_data.c Inst6a_cmd.c Inst6a_fsw.c Inst6a_globals.c Inst6a_image.c Inst6a_main.c Inst6a_slots.c Inst6a_status.c Inst6a_tlm.c magi_image.c",5/16/06
ProjectE - TIM - 1712,Missing type-cast in Build 3.1 FSW (no data loss),4,"The following type-casts are missing. However, the current implementation does not cause a loss of data. Unsigned short value assigned an int value. 1. File: ACPM.c 2. Function: ACPM_Set_IdleTimeout 3. Variable: ACPM_IdleMode_Persistence 4. Line: 247 Unsigned short value assigned an int value. 1. File: ACPM.c 2. Function: ACPM_Set_DampTimeout 3. Variable: ACPM_DampMode_Persistence 4. Line: 292 Unsigned char value assigned an int value. 1. File: ACPM.c 2. Function: ACPM_Execute 3. Variable: ACPM_ACS_Mode 4. Line: 638 Unsigned char value assigned an int value. 1. File: AKPM.c 2. Function: AKPM_Check_Gyro_Condition 3. Variable: msg.hdr.to.instanceId 4. Line: 891 Unsigned short value assigned an int value. 1. File: DBPM.c 2. Function: DBPM_Telemeter_Side_Swap_Values 3. Variable: bytesRead 4. Line: 1233 Unsigned short value assigned an unsigned int value. 1. File: DBPM.c 2. Function: DBPM_Check_Processor_Speed 3. Variable: current_speed 4. Line: 1282 Unsigned short value assigned an unsigned int value. 1. File: DBPM.c 2. Function: DBPM_Check_Processor_Speed 3. Variable: last_cmded_speed 4. Line: 1288 Unsigned short value assigned an int value. 1. File: FLTREC.c 2. Function: FLTREC_Record_FHT_Entry 3. Variable: FLTREC_dram_table.record[][] 4. Line: 396 Unsigned short value assigned an int value. 1. File: FLTREC.c 2. Function: FLTREC_Record_FHT_Entry 3. Variable: FLTREC_dram_table.record[][] 4. Line: 397 Unsigned short value assigned an int value. 1. File: FLTREC.c 2. Function: FLTREC_Reset_Boot_Counts 3. Variable: FLTREC_boot_counts.last_side_booted 4. Line: 968 Unsigned short value assigned an unsigned long value. 1. File: FLTREC.c 2. Function: FLTREC_Store_Cyclic_Nighttime_Data 3. Variable: crc 4. Line: 1222 Unsigned short value assigned an unsigned long value. 1. File: FLTREC.c 2. Function: FLTREC_Retrieve_Cyclic_Nighttime_Data 3. Variable: crc 4. Line: 1276 Unsigned short value assigned an unsigned long value. 1. File: FLTREC.c 2. Function: FLTREC_Store_Acyclic_Nighttime_Data 3. Variable: crc 4. Line: 1416 Unsigned short value assigned an unsigned long value. 1. File: FLTREC.c 2. Function: FLTREC_Retrieve_Acyclic_Nighttime_Data 3. Variable: crc 4. Line: 1470 Unsigned short value assigned an int value. 1. File: FPE.c 2. Function: FPE_reboot_recovery 3. Variable: FPE_boot_counts.last_side_booted 4. Line: 1038 Unsigned char value assigned an unsigned short value. 1. File: FPE.c 2. Function: FPE_startup 3. Variable: mission_phase 4. Line: 1197 Unsigned short value assigned an int value. 1. File: FPE.c 2. Function: FPE_reset_boot_counts 3. Variable: FPE_boot_counts.last_side_booted 4. Line: 2488 Unsigned short value assigned an unsigned long value. 1. File: MPD.c 2. Function: MPD_Set_Mission_Phase 3. Variable: Phase_Bits_FPGA 4. Line: 602 Unsigned short value assigned an unsigned long value. 1. File: MPD.c 2. Function: MPD_Derive_Mission_Phase 3. Variable: Phase_Bits_FPGA 4. Line: 768 Unsigned short value assigned an int value. 1. File: RBR.c 2. Function: RBR_Early_Logic 3. Variable: boot_counts.last_side_booted 4. Line: 216 Long value assigned a double value. 1. File: SME_CommAtt_md.c 2. Function: SME_Do_CommAtt 3. Variable: temp_seconds 4. Line: 527 5. Doubles to Integers Unsigned long value assigned a double value. 1. File: SME_CommAtt_md.c 2. Function: SME_Do_CommAtt 3. Variable: time_uint 4. Line: 817 Unsigned long value assigned a double value. 1. File: SME_CommAtt_md.c 2. Function: SME_Do_CommAtt 3. Variable: time_uint 4. Line: 853 Unsigned long value assigned a double value. 1. File: SME_CommAtt_md.c 2. Function: SME_Do_CommAtt 3. Variable: time_uint 4. Line: 916 Unsigned char value assigned an unsigned short value. 1. File: SPM.c 2. Function: SPM_safe_instrument 3. Variable: phase 4. Line: 1490 Unsigned short value assigned an unsigned long value. 1. File: iocNode1553.c 2. Function: iocNode1553IoctlCmdLoad 3. Variable: tmp_arg 4. Line: 516 Unsigned short value assigned an unsigned long value. 1. File: iocNodeCmic.c 2. Function: iocNodeCmicRead 3. Variable: idx 4. Line: 249 Unsigned short value assigned an unsigned long value. 1. File: iocNodeCmic.c 2. Function: iocNodeCmicWrite 3. Variable: idx 4. Line: 324 Unsigned short value assigned an unsigned long value. 1. File: iocNodeDualSlave.c 2. Function: iocNodeDualSlaveRead 3. Variable: idx 4. Line: 430 Unsigned short value assigned an unsigned long value. 1. File: iocNodeDualSlave.c 2. Function: iocNodeDualSlaveWrite 3. Variable: idx 4. Line: 526 Unsigned short value assigned an unsigned long value. 1. File: iocNodeEmic.c 2. Function: iocNodeEmicRead 3. Variable: idx 4. Line: 306 Unsigned short value assigned an unsigned long value. 1. File: iocNodeEmic.c 2. Function: iocNodeEmicWrite 3. Variable: idx 4. Line: 413 Unsigned short value assigned an unsigned long value. 1. File: iocNodePdc.c 2. Function: iocNodePdcRead 3. Variable: idx 4. Line: 553 Unsigned short value assigned an unsigned long value. 1. File: iocNodePdc.c 2. Function: iocNodePdcWrite 3. Variable: idx 4. Line: 662 Unsigned short value assigned an unsigned long value. 1. File: iocNodeProp.c 2. Function: iocNodePropRead 3. Variable: idx 4. Line: 280 Unsigned short value assigned an unsigned long value. 1. File: iocNodeProp.c 2. Function: iocNodePropWrite 3. Variable: idx 4. Line: 348 Unsigned short value assigned an unsigned long value. 1. File: iocNodeProp.c 2. Function: iocNodePropWrite 3. Variable: tmp_arg 4. Line: 351 Unsigned short value assigned an unsigned long value. 1. File: iocNodePyro.c 2. Function: iocNodePyroRead 3. Variable: idx 4. Line: 518 Unsigned short value assigned an unsigned long value. 1. File: iocNodePyro.c 2. Function: iocNodePyroWrite 3. Variable: idx 4. Line: 589 Unsigned short value assigned anunsigned long value. 1. File: iocNodePyro.c 2. Function: iocNodePyroWrite 3. Variable: tmp_arg 4. Line: 594 Unsigned char value assigned an int value. 1. File: msg_objects.c 2. Function: msgMethodSysFpEna 3. Variable: fpEnabMsg.header.from.taskId 4. Line: 128 Unsigned char value assigned an int value. 1. File: msg_objects.c 2. Function: msgMethodSysInit 3. Variable: initMsg.header.from.taskId 4. Line: 202 Unsigned char value assigned an int value. 1. File: msg_objects.c 2. Function: msgMethodSysSave 3. Variable: saveMsg.header.from.taskId 4. Line: 276 Unsigned char value assigned an int value. 1. File: msg_objects.c 2. Function: msgMethodSysStart 3. Variable: startMsg.header.from.taskId 4. Line: 344 Unsigned char value assigned an int value. 1. File: msg_objects.c 2. Function: msgMethodSysStop 3. Variable: stopMsg.header.from.taskId 4. Line: 406 Unsigned char value assigned an unsigned long value. 1. File: evr.c 2. Function: evr_report_event 3. Variable: packet_body[] 4. Line: 755 Unsigned short value assigned an int value. 1. File: PacketBuffer.c 2. Function: PacketBuffer_SaveSequenceNumbers 3. Variable: packetSeqSlot.apid 4. Line: 1779 Short value assigned an int value. 1. File: PacketBuffer.c 2. Function: PacketBuffer_InsertIfValid 3. Variable: packetBuffer[].lastCreated 4. Line: 2161 Short value assigned an int value. 1. File: PacketBuffer.c 2. Function: PacketBuffer_LoadSequenceNumbers 3. Variable: packetBuffer[].lastCreated 4. Line: 2231 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Initialize 3. Variable: pryorTable->end[] 4. Line: 110 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Initialize 3. Variable: pryorTable->start[] 4. Line: 112 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Initialize 3. Variable: pryorTable->end[] 4. Line: 115 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Activate 3. Variable: newPryorTable->end[] 4. Line: 459 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Activate 3. Variable: newPryorTable->start[] 4. Line: 461 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Activate 3. Variable: newPryorTable->level[] 4. Line: 497 Unsigned char value assigned an unsigned short value. 1. File: Pryor.c 2. Function: Pryor_Activate 3. Variable: newPryorTable->end[] 4. Line: 526 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: cmic_ramset 3. Variable: fm_echo.success_flag 4. Line: 108 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: file_append 3. Variable: fm_echo.success_flag 4. Line: 478 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: file_copy 3. Variable: fm_echo.success_flag 4. Line: 580 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: file_copy_all 3. Variable: fm_echo.success_flag 4. Line: 702 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: file_copy_to_EEPROM 3. Variable: fm_echo.success_flag 4. Line: 828 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: file_delete 3. Variable: fm_echo.success_flag 4. Line: 870 Unsigned char value assigned an int value. 1. File: file_cmds.c 2. Function: file_dir_create 3. Variable: fm_echo.success_flag 4. Line: 911 Unsigned char value assigned an unsigned long value. 1. File: file_cmds.c 2. Function: file_dir_delete 3. Variable: fm_echo.success_flag 4. Line: 952 Unsigned char value assigned an int value. 1. File: file_memory_access.c 2. Function: memory_load 3. Variable: fm_echo.success_flag 4. Line: 566 Unsigned short value assigned a short value. 1. File: flash_dev.c 2. Function: load_page_buffer 3. Variable: value 4. Line: 499 Unsigned short value assigned a short value. 1. File: flash_dev.c 2. Function: send_page_buffer 3. Variable: value 4. Line: 583 Unsigned short value assigned a long value. 1. File: flash_dev.c 2. Function: flash_cmp_blk 3. Variable: i 4. Line: 641 Unsigned short value assigned an unsigned long value. 1. File: FM_task.c 2. Function: FM_storePacket 3. Variable: allocEntry.allocData.bytes 4. Line: 693 Unsigned short value assigned an unsigned long value. 1. File: FM_task.c 2. Function: FM_storePacket 3. Variable: allocEntry.allocData.startBlock 4. Line: 694 Unsigned short value assigned an unsigned long value. 1. File: FM_task.c 2. Function: FM_storePacket 3. Variable: allocEntry.allocData.endBlock 4. Line: 695 Unsigned char value assigned an unsigned short value. 1. File: FM_task.c 2. Function: FM_storePacket 3. Variable: saveOneMsg.ackList 4. Line: 726 Unsigned short value assigned an int value. 1. File: cio.c 2. Function: handle_cio_trace_tlm 3. Variable: cio_channels[][].trace_tlm_id 4. Line: 762",5/12/06
ProjectE - TIM - 1710,"msg.mod/msg.c, line 251, constatnt value boolean and unnecessary use of EVR_FATAL",3,"The following if-elseif conditional was flagged by the code analyzer utility because of a constant value boolean. The macro NUM_ELEMENTS() returns the number of elements in the array structure which is constant and makes the boolean logic a constant (always FALSE). If the data area of the operating system was corrupted- just the value for TASK_ID_NUM_ENTRIES, then the if-elseif conditional would suddently be always TRUE, an EVR_FATAL would be reported and potentially, the flight computer could fall into a series of repeating reset/reboots until the OS is reloaded into memory. Other corruption would lead to reboots but not necessarily a repeating loop. msg.mod/msg.c, line 251 STATIC int msg_init_queues(void) { /* Local variables. */ register int i; /* Boring loop index. */ register int logicalTaskId; /* Logical task Id. */ struct mq_attr mqAttr; /* Message queue attributes. */ int returnCode = OK; /* Return value. */ /* Verify data structure consistency. Ideally, this would not be a runtime * check, but rather a preprocessor or compiler check. However, this check * ultimately requires use of sizeof(), which doesn't exist until compile * time. These checks are necessary, as TASK_ID_NUM_ENTRIES are defined * separately from MsgQCreateParms[] and MsgQData[]. */ 251 if (NUM_ELEMENTS(MsgQCreateParms) != TASK_ID_NUM_ENTRIES) { EVR_REPORT_EVENT_2 ( EVR_FATAL, EVR_ID_MSG_Q_PARMS_VERIFY, EVR_LOC(__LINE__), ""consistency check of message queue parms failed, "" ""was %d should be %d"", NUM_ELEMENTS(MsgQCreateParms), TASK_ID_NUM_ENTRIES); returnCode = ERROR; return(returnCode); } else if (NUM_ELEMENTS(MsgQData) != TASK_ID_NUM_ENTRIES) { EVR_REPORT_EVENT_2 ( EVR_FATAL, EVR_ID_MSG_Q_DATA_VERIFY, EVR_LOC(__LINE__), ""consistency check of message queue data failed, "" ""was %d should be %d"", NUM_ELEMENTS(MsgQData), TASK_ID_NUM_ENTRIES); returnCode = ERROR; return(returnCode); } phx_fsw.prj/fsw_task.h /********************************************************************** ** Mission-specific task ID definition macros: **********************************************************************/ #define START_TASK_ID_LIST \ typedef enum _fswTaskId { #define END_TASK_ID_LIST \ TASK_ID_NUM_ENTRIES \ } fswTaskId_t, *fswTaskId_p, **fswTaskId_h;",5/12/06
ProjectE - TIM - 1709,"hlfp.mod/SME_InitConfig_md.c, line 669, if-condition excludes a set of lines of code",3,"An if-conditional is always false (SME_InitConfig_md.c, line 669) and a set of statements is excluded from the code execution. There is no documentation in the file, for the function or inline comments that state the rationale for excluding the code. ""TODO"" placemarkers appear related but are not a safe means to manage the code. hlfp.mod/SME_InitConfig_md.c, line 669 659 else 660 { 661 662 /*+++++ 663 ** If Heartbeat Termination is allowed for Safe Mode Deadend. 664 **-----*/ 665 666 /*TODO FPE interface 667 if (HBG_Can_Term(HBG_Term_Reason_SME_Deadend)) 668 */ 669 if (FALSE) 670 { 671 672 /* No thrusters seem to work on this avionics string; swap */ 673 SME_acs_set = acsSet_none; 674 675 /*+++++ 676 ** Record Att Ctrl. Deadend in FHT and request HB Term 677 **-----*/ 678 679 FLTREC_Record_FHT_Entry(SME_EntID_Milestone, SME_MS_AttCtlDeadend); 680 681 /*TODO FPE interface 682 HBG_Request_Term(HBG_Term_Reason_SME_Deadend); 683 */ 684 685 }",5/12/06
ProjectE - TIM - 1708,"CPM_md.c, line 411, enumerator type mis-match",3,"There is a type mismatch with the switch expression on line 411 of file CPM_md.c. The case values are presently set within the C source file CPM_md.c (see below) and the switch variable ""sw_id"" is a declared enumerator eps_emic_relay_id_t in header EPS_msg.h (at bottom). Note that the Function comment statement includes a TBD tied to ""switch id""; however, no date is included and it is not clear whether this is from heritage or from present ProjectE development. CPM_md.c, line 411 /*DSH*/ #define INST_ID_TELE_SSPA_1 0 #define INST_ID_TELE_SSPA_2 0 #define EPS_EMIC_RELAY_ID_UHF_COAX_SW_6 0 #define EPS_EMIC_RELAY_ID_UHF_COAX_SW_5 1 #define EPS_EMIC_RELAY_ID_WVGD_SW_4 2 ... /* Function: CPM_Failed_RF_Switch_Notification ... ** Arguments: switch id (defined in EPS TBD), ** actual position (the position the switch is ""stuck"" in) ** commanded or desired position ... */ void CPM_Failed_RF_Switch_Notification ( eps_emic_relay_id_t sw_id, eps_emic_relay_pos_t actual_pos, eps_emic_relay_pos_t commanded_pos ) ... ... /*+++++ ** Switch on the passed-in switch id **-----*/ 411 switch (sw_id) { /*+++++ ** Case: UHF_COAX_SW_3 **-----*/ case (EPS_EMIC_RELAY_ID_UHF_COAX_SW_6): { /*+++++ ** TBD **-----*/ } --------------------------------------- EPS_msg.h typedef enum { EPS_EMIC_RELAY_ID_U_COAX_SW_6, EPS_EMIC_RELAY_ID_X_COAX_SW_5, EPS_EMIC_RELAY_ID_U_COAX_SW_7, EPS_EMIC_RELAY_ID_WVGD_SW_4, UNDEFINED_EPS_EMIC_RELAY_ID_TYPE } eps_emic_relay_id_t;",5/12/06
ProjectE - TIM - 1707,"File heap.c, line 549, ambiguous assignment of pre-processor data.",3,"It is not clear whether the case ""case HEAP_END_OF_HEAPS"" on line 549 of heap.c, where ""#define HEAP_END_OF_HEAPS 0x4ea99ae4"" in heap_cfg.h, can ever be TRUE or whether the hex value 0x4ea99ae4 represents the end of the heap in memory. heap.c, line 549 /* ** Check the rest of the heap file for errors */ if (!useDefaultCfg){ done = 0; while (!done && (useDefaultCfg == FALSE)) { heapType = get_allocation(heapCfgFile, &allocBuffer); switch (heapType){ case HEAP_VARIABLE_SYSTEM: case HEAP_FIXED_SYSTEM: case HEAP_VARIABLE_EXTENT: break; case HEAP_VARIABLE_EXTENT_FAST: free(allocBuffer.heapVarAttr.varExtHeapFast.subListTbl); break; 549 case HEAP_END_OF_HEAPS: done = -1; break; default: useDefaultCfg = TRUE; break; } } if (lseek(heapCfgFile,0,SEEK_SET) != 0){ useDefaultCfg = TRUE; } } return heapCfgFile; --------------------------------------------------- heap_cfg.h #define HEAP_END_OF_HEAPS 0x4ea99ae4",5/12/06
ProjectE - TIM - 1704,"File eps_schedule.c, line 46, string array assignments are not NULL terminated",3,"Each of the strings stored in the array strucuture as the second element will use all eight chars of tag_t (see header fsw_types.h, below) and leave no character for a terminating NULL. Review of the usage of the array and its elements shows use of strncpy() and faulty use of the string array is not apparent. Lack of documentation of the array usage and its use throughout the FSW (31 calls to the routine createCPDU()) raises the risk of mis-use. eps_schedule.c, line 46 eps_cpdu_t eps_schedule_cpdu[NUM_EPS_CPDU] = { {EPS_SWITCH_VERIFY_CPDU, ""SW_VERIF"", 0.1, 10.0, 0}, {EPS_SWITCH_CMD_HW_CPDU, ""SW_CMDHW"", 0.1, 10.0, 0}, {EPS_SWITCH_VALIDATE_CPDU, ""SW_VALID"", 0.1, 10.0, 0}, {EPS_CHARGE_CONTROL_CPDU, ""EPS_CC"", 0.1, 10.0, 0}, {EPS_ANALOG_READ_CPDU, ""EPS_A_RD"", 0.1, 10.0, 0} }; fsw_types.h /* Context switch, task utiliztion, cyclical period duration and utilization */ typedef char tag_t[8];",5/12/06
ProjectE - TIM - 1703,"File eps_initiator.c, global epsPyroBadWriteCntr, uninitialized and leading to faulty engineering telemetry",2,"Global variable epsPyroBadWriteCntr (file eps_initiator.c) is not explicitly initialized and functions as a counter and is accessed and its data passed to telemetry through execution of function tlm_store_uint(BUS_BAD_WRITE_CNTR_PIU_TLM_ID, epsPyroBadWriteCntr) in numerous statements in the file eps_initiator.c. uint32_t epsPyroBadWriteCntr;",5/12/06
ProjectE - TIM - 1702,"File eps_emic_sw.c, line 2374, out-of-bounds array access",4,"Due to the use of the "">="" comparison in the conditional on line 2374, the array eps_emic_sw_fp_enable_word[fp_enable_word_idx] on line 2393 can be accessed 1 index beyond array boundaries. File eps_emic_sw.c, line 2374 /* Define the number of fp enable word(s) for the EMIC switches MSP01 has one EMIC card, one fp enable word is needed. Genesis has two EMIC cards, two fp enable words are needed. */ #ifdef EPS_GENESIS #define NUM_EPS_EMIC_SW_FP_ENABLE_WORDS 2 #else #define NUM_EPS_EMIC_SW_FP_ENABLE_WORDS 1 #endif ... ... static FP_Enables_t eps_emic_sw_fp_enable_word[NUM_EPS_EMIC_SW_FP_ENABLE_WORDS]; ... ... void eps_emic_sw_set_fp_enable(eps_emic_sw_id_t id, bool_t enable) /*----- End Prototype -----*/ { uint32_t command; uint32_t mask; int fp_enable_word_idx; /*+++++ * Get fault protection enable word for switch -----*/ fp_enable_word_idx = eps_emic_sw[id].fp_enable_word; /*+++++ * If the specified fault protection enable word is valid -----*/ if ((0 <= fp_enable_word_idx) && 2374 (NUM_EPS_EMIC_SW_FP_ENABLE_WORDS >= fp_enable_word_idx)) { /*+++++ * If the specified fault protection enable state is FALSE -----*/ if (FALSE == enable) { /*+++++ * set command word to ENABLE_NONE -----*/ command = ENABLE_NONE; } /*+++++ * Set fault protection enable word for EMIC switches -----*/ FPU_Enable_Set(command, mask, 2393 eps_emic_sw_fp_enable_word[fp_enable_word_idx]);",5/12/06
ProjectE - TIM - 1701,"eps_ccu.c, line 3633, mismatched enumerators, concern with use of #ifdef EPS_GENESIS",3,"The statement on line 3633 of eps_ccu.c is a comparison of mismatched enumerator types. While they are mismatched, review of all applications of the enumrators verifies that they are being handled and used consistently; but not documented. This review raises a concern with the use of ""#ifdef EPS_GENESIS"" (also #ifndef) embedded throughout the code. IV&V recommends that the developer review the use of the pre-processor statement. Possibly incorrectly excluding or including code. enumerator value EPS_ERROR_SENSOR_FAILED is defined in typedef ""eps_error_t"" of header file eps.h Function FP_Condition_t() is of enumerator typedef eps_sensor_data_id_t defined in the header file EPS_msg.h File eps_ccu.c, line 3633 /*+++++ * for all successive battery voltage tap sensors -----*/ for ( l_sensor = 1; l_sensor < NUM_EPS_CCU_BAT_CELL_ID; l_sensor++ ) { /*+++++ * If the read of the current battery tap voltage is successful * If the sensor for the previous battery tap voltage is not FAILED * augment total voltage with the difference between current and previous readings * increment the number of good sensors * set previous battery cell voltage to current battery cell voltage -----*/ 3633 if (eps_sensor_data_read_eu(l_batt->voltage_sensor_id[l_sensor], &l_voltage) != EPS_ERROR_SENSOR_FAILED) { if (eps_sensor_data_get_cond(l_batt->voltage_sensor_id[l_sensor-1]) != EPS_ERROR_SENSOR_FAILED) { l_total_voltage += l_voltage - l_prev_voltage; l_number_of_sensors++; } l_prev_voltage = l_voltage; } }",5/12/06
ProjectE - TIM - 1700,"eps_ccu.c, line 3396, Enumerator type mismatch",4,"There is a type mismatch between ""l_ccu->pm[l_pm_id].state"" and EPS_CCU_PM_CMD_ENABLE on line 3396 of eps_ccu.c. The structure element ""state"" is of type eps_ccu_pm_state_t and the enuerator value is of type eps_ccu_pm_cmd_t (state vs. cmd). The code executes as intended although only because the enumerator value of cmd-enable and state-enable are the same enumerator value (1) in their respective typedefs. eps_ccu.c, line 336 for (l_pm_id = 0; l_pm_id < NUM_EPS_CCU_PM_ID; l_pm_id++) { 3396 if (l_ccu->pm[l_pm_id].state == EPS_CCU_PM_CMD_ENABLE) { eps_ccu_pm_set_cond(ccu_id, l_pm_id, Good); } } eps_ccu.h /* define cmd values for CCU PM */ typedef enum { EPS_CCU_PM_CMD_DISABLE, EPS_CCU_PM_CMD_ENABLE, NUM_EPS_CCU_PM_CMD } eps_ccu_pm_cmd_t; /* define state values for CCU PM */ typedef enum { EPS_CCU_PM_STATE_DISABLE, EPS_CCU_PM_STATE_ENABLE, NUM_EPS_CCU_PM_STATE } eps_ccu_pm_state_t;",5/12/06
ProjectE - TIM - 1699,"eps_ccu.c, function eps_ccu_calc_amp_hour_soc(), line 690, array address compared instead of its data value.",2,"An if-conditional is always FALSE due to the referencing of the ""ls_first_time"" array address rather than the first data value of the array. The array is defined local static, is initialized, used in the conditional with corresponding inline documentation and leads to further faulty assignments. eps_ccu.c, function eps_ccu_calc_amp_hour_soc(), line 690 670 static bool_t ls_first_time[NUM_EPS_CCU_ID] = {FALSE}; 671 ... 684 685 /*+++++ 686 * If this is the first time through this function 687 * set the last time to the current time and 688 * set the ""first time through"" flag to true. 689 -----*/ 690 if (ls_first_time == FALSE) { 691 692 ls_last_time[ccu_id] = l_current_time; 693 ls_first_time[ccu_id] = TRUE; 694 695 } 696 l_delta_time = l_current_time - ls_last_time[ccu_id];",5/12/06
ProjectE - TIM - 1698,"File cio_operation.c, line 248, uninitialized variable, boolean at left of && in if-condition is faulty",3,"The local variable ""cont"" (file cio.mod/cio_operation.c) is used as a status variable and is not initialized. As a consequence, the boolean to the left of the && in the if-conditional on line 248 can be ambiguous/faulty. cio.mod/cio_operation.c, line 248 static boolean evaluate_expression( { cio_data_type temp; boolean cont; ... switch (opcode) { case CIO_OPCODE_NOOP: cont = TRUE; break; ... case CIO_OPCODE_RETURN: if (*source_ptr == 0) result = FALSE; else result = TRUE; *instruction_index_ptr = CIO_NO_INSTRUCTION_INDEX; return result; break; ... } 248 if (cont && *instruction_index_ptr < instruction_index_max_limit) (*instruction_index_ptr)++; else *instruction_index_ptr = CIO_NO_INSTRUCTION_INDEX; return TRUE; }",5/12/06
ProjectE - TIM - 1697,"Inst6_GetDeviceTemp, line 712, return value (temperature) not assigned a value.",3,"Variable 'temp' (meaning temperature) (line 676) is not initialized. The variable ""mode"" is never given the value Inst6_TEMP_LAST, therefore the if-condition is always false, the else is executed (and its switch statement) and consequently, variable temp (the function return value) is left unassigned. None of the functions that call Inst6_GetDeviceTemp() check the function's return value (i.e. ""temp""). f1_sci_obj.mod\Inst6.mod\Inst6_preheat.c, line 712 int16_t Inst6_GetDeviceTemp(uint16_t htr_select, uint16_t mode) { 676 int16_t temp; if (Inst6_TEMP_LAST == mode) { /* get last ADC value from a move and use that */ temp = Inst6_heaters[htr_select].cur_temp; } else { /* assume that we're in Inst6_TEMP_NOW mode--get fresh reading */ switch (htr_select) { case Inst6_HTR_AZ: ... } } 712 return temp; The function Inst6_GetDeviceTemp while passing value Inst6_TEMP_NOW. The function does not have a switch case (above) for this value (except for default case [do nothing]). Inst6_GetDeviceTemp(i, Inst6_TEMP_NOW);",5/12/06
ProjectE - TIM - 1696,"File Inst6_image.c, return value of Inst6_CCDProcHotPix() not assigned, not tested.",3,"The function Inst6_CCDProcHotPix()(Inst6_image.c) does no receive and check the return status from the call to img_FixPixels(). The return value from img_FixPixels() should determine the value returned by Inst6_CCDProcHotPix(). Consequently, return status of Inst6_CCDProcHotPix() is always true. uint16_t Inst6_CCDProcHotPix(uint16_t ccd_sel) { uint16_t rc; rc = MAGI_OK; if (MAGI_OK == rc) { if (Inst6_CCD.img[ccd_sel].hotpix) { /* load the left hot pixel table */ img_LoadTable(Inst6_CCD.img[ccd_sel].hotpix_tbl,IMG_TBL_HP,IMG_TBL_Inst6); /* call the pixel correction utility */ img_FixPixels (Inst6_CCD.exp[ccd_sel].caller_id, Inst6_CCD.exp[ccd_sel].slot_id, Inst6a_BLOCK, IMG_TBL_HP, IMG_TBL_Inst6, Inst6_CCD.img_width, Inst6_CCD.img_height, IMG_DO_HISTOGRAM, &Inst6_histogram[0]); } } return rc; }",5/12/06
ProjectE - TIM - 1695,"Inst6_image.c, line 440, potential out-of-bounds assignment of an array",3,"If Inst6 is commanded such that the variable ccd_sel (i.e. CCD selected) is equal to Inst6_CCD_BOTH, then in switch ""switch(ccd_sel)"" and ""case Inst6_CCD_BOTH"" in functions Inst6_CCDShutterExpose() and Inst6_Expose(), the function Inst6_CCDPowerSet() is called and within this function, the processor will write out of bounds of the array Inst6_CCD.pwr[ccd_sel].state. The out-of-bounds error will occur on line 440 in file Inst6_image.c The following code excerpts show the location where the error will occur and the conditions and definitions that lead to it. f1_sci_obj.mod\Inst6.mod\Inst6_image.c, line 440 160 Inst6_CCDParams_t Inst6_CCD; /**< Current CCD control parameters */ ... 394 uint16_t Inst6_CCDPowerSet(uint16_t ccd_sel, uint16_t power_state) 395 { ... 438 else { 439 /* record power set failure for selected camera */ 440 Inst6_CCD.pwr[ccd_sel].state = Inst6_CCD_PWR_FAULT; The following code excerpts identify calls to Inst6_CCDPowerSet for which ccd_sel could have the value Inst6_CCD_BOTH and consequently lead to an overflow of the array by 1. Inst6_image.c ----------------------------------- and in function Inst6_Expose(), the same statement construction exists uint16_t Inst6_CCDShutterExpose(uint16_t ccd_sel) { uint16_t rc; /* check to see if we need to power-up the camera(s) */ switch (ccd_sel) { /* FALLTHROUGH IS INTENTIONAL */ case Inst6_CCD_LEFT: case Inst6_CCD_RIGHT: if (Inst6_CCD_OFF == Inst6_CCD.pwr[ccd_sel].state) { Inst6_CCDPowerSet(ccd_sel, Inst6_CCD_ON); /* send a reset to the CCD's */ Inst6_CCDReset(ccd_sel); } break; case Inst6_CCD_BOTH: if (Inst6_CCD_OFF == Inst6_CCD.pwr_state) { Inst6_CCDPowerSet(ccd_sel, Inst6_CCD_ON); /* send a reset to the CCD's */ Inst6_CCDReset(ccd_sel); } break; ... also in function Inst6_Expose(), the following call to the function Inst6_CCDPowerSet could send the value Inst6_CCD_BOTH. /* see if we need to power-down the CCD's */ if ((TRUE == Inst6_CCD.pwr[Inst6_CCD_LEFT].autopwr) || (TRUE == Inst6_CCD.pwr[Inst6_CCD_RIGHT].autopwr)) { /* send power-down command */ Inst6_CCDPowerSet(ccd_sel, Inst6_CCD_OFF); } Inst6_types.h ----------------------------------- enum { Inst6_CCD_LEFT = 0, Inst6_CCD_RIGHT, Inst6_CCD_BOTH, Inst6_CCD_DEVICES = Inst6_CCD_BOTH } Inst6_ccd_sel_t; typedef struct { uint16_t source; /* Current img src: Left, Right or Both */ int16_t pwr_state; /* Current overall CCD power state */ time_t pwr_ontime; /* Time CCD's were enabled */ /* CCD Power control parameters */ Inst6_ccd_pwr_t pwr[Inst6_CCD_DEVICES]; /* Power states of both CCD's */ /* CCD Exposure control parameters */ Inst6_ccd_exp_t exp[Inst6_CCD_DEVICES]; /* Exposure parameters for each CCD */ ... } Inst6_CCDParams_t;",5/12/06
ProjectE - TIM - 1694,"Inst6_image.c, uninitialized return status value",3,"Local variable ""power"" is unintialized and can return with a random value. The return value depends on variable ccd_sel which presently appears to be receiving only values of Inst6_CCD_LEFT and Inst6_CCD_RIGHT; however, a third value exists Inst6_CCD_BOTH and the default case would permit an ambiguous/corrupt value for ccd_sel and return a false function status. f1_sci_obj.mod\Inst6.mod\Inst6_image.c, line 209 uint16_t Inst6_CCDGetPowerState(uint16_t ccd_sel) { uint16_t power; switch (ccd_sel) { case Inst6_CCD_LEFT: case Inst6_CCD_RIGHT: power = Inst6_CCD.pwr[ccd_sel].state; break; default: break; } 209 return power; }",5/12/06
ProjectE - TIM - 1693,"Inst8_paci.c, uninitialized structure, ambiguous return value",3,"The parameter disc.value is not initialized and can potentially reach line 747 or 763 with an ambiguous value and assign the value to the return variable ""rc"". The return value (rc) of the function Inst8_PACIDiscrete is evaluated in the calling routines. f1_sci_obj.mod\Inst8.mod\Inst8_paci.c, Function Inst8_PACIDiscrete(), line 747, 763 665 int16_t Inst8_PACIDiscrete(uint16_t disc_line, uint16_t function) 666 { 667 int nDiscretes; 668 int16_t rc; 669 discrete_t disc; ... ... 738 else { 739 /* No error */ 740 /* Resets the persistence count for this interface. Not the total count! */ 741 FPU_Counter_NoError(&Inst8_inst_if_cmd_err_cnt); 742 /* If responses are enabled make the condition Good again */ 743 if (0!=(Inst8_Cfg.fp_enable & Inst8_INST_IF_CMD_RESP)) { 744 FPU_Condit_ToGood(&Inst8_system_fp_cond); 745 } 746 Inst8_disc_fault_gate = FALSE; /* reset the EVR gate */ 747 rc = (int16_t) disc.value; 748 } 749 } 750 else if (ERROR == nDiscretes) { 751 if (!Inst8_disc_fault_gate) { 752 EVR_REPORT_EVENT_2(EVR_WARNING, 753 Inst8_PACI_DISC_FAIL_EVR_ID, 754 EVR_LOC(__LINE__), 755 ""Inst8: Discrete I/O error, function: %d discrete: %d"", 756 (int)function, 757 (int)disc_line); 758 rc = ERROR; 759 } 760 } 761 else { 762 Inst8_disc_fault_gate = FALSE; /* reset the EVR gate */ 763 rc = (int16_t) disc.value;",5/12/06
ProjectE - TIM - 1692,"Inst8_paci_com.c, bit shift is unparenthesized, intention is not clear",4,"On line 336 of ra_paci_com.c of module ra.mod, the bit shift argument is unparentesized. It is not clear whether the left bit shift should be ""4"" or (4*(3-joint)). joint ranges from 0 to a value of 3, and ""*"" takes precedence over ""<<"" and most likely the intention is the latter. if (command->cmd_type == Inst9_CMD_WRITE_DATA) { buf[0] = 0xE800; buf[1] = 0; for (joint = 0; joint < Inst9_DOF; joint++) { 335 buf[1] += ((command->cmd.write[joint].type & 0x0007) << 336 4 * (3 - joint)); if (command->cmd.write[joint].type == Inst9_VOLT) { buf[joint + 2] = command->cmd.write[joint].data.mtr_volt << 3; } else if (command->cmd.write[joint].type == Inst9_OC_COUNT) { buf[joint + 2] = command->cmd.write[joint].data.oc_count.start + (command->cmd.write[joint].data.oc_count.nonstart << 8); } else { buf[joint + 2] = command->cmd.write[joint].data.dn; } } } ------------ ra_common.h: #define Inst9_DOF 4",5/12/06
ProjectE - TIM - 1691,"Inst7_main_init(), counter variable (problems) not counting all errors",3,"In the function Inst7_main_init(), an error is not counted by local variable ""problems"" because a check of the return value from heap_get_hdr() is not checked. heap_get_hdr and heap_alloc checks the status of heap. It appears that problems should count an error by including a check of heap_get_hdr(). This would also explain the intention of using operator ""+="" in the statement that follows on line 1173. f1_sci_obj.mod\Inst7.mod\Inst7.c, line 1168 static int Inst7_main_init(void) { int problems = 0; /* Default, no problems */ /* Get the memory heap */ 1168 if (!problems) { heap = heap_get_hdr(HEAP_Inst7); } /* Open devices */ 1173 problems += open_devices(); /* Establish EPS power callback and msg queue */ if(eps_comp_pwr_callback(EPS_COMP_ID_Inst7, eps_power_callback) != EPS_OK) problems += 1; if(eps_comp_msg_q(EPS_COMP_ID_Inst7, TASK_ID_Inst7, OBJ_ID_NO_OBJECTS, INST_ID_NO_INSTANCES, EPS_MSG_PRIORITY) != EPS_OK) problems += 1; return(problems); }",5/12/06
ProjectE - TIM - 1690,"ice_tbl.c, Global ice_wNoSegV, potential erroneous use of global variable",3,"Potential erroneous use of one global variable in place of another in file ice_tbl.c of Inst6a.mod. Two globals are defined- ice_wNoSegV and ice_wNoSegH. They are treated the same way but when applied, ice_wNoSegH appears to have been placed in an equation (line 935) where ice_wNoSegV should be. There is no inline documentation to backup usage. /* Globals */ /*! number of segments in height of image */ uint16_t ice_wNoSegV; /*! number of segments in width of image */ uint16_t ice_wNoSegH; ERROR_CODE ice_CalcSegments(uint16_t num, uint16_t pkt_size, iceCommand_t *psICEComp) { ... if (num >= wNumSegs) { /* end of loop check (pkt_count overrun)*/ wError = ICE_ERR_SEG_NUM; } else { /* do segments after the first */ psICEComp->wSegmentRow = (uint16_t)(num / ice_wNoSegH) * wSegH; /* seg(num) row position */ 935 psICEComp->wSegmentCol = (uint16_t)(num % ice_wNoSegH) * wSegW; /* seg(num) column position */ }",5/12/06
ProjectE - TIM - 1689,Inst9 Level 5 Requirement 56 Is Not Met in Inst9 SDD,3,"RAFSW does not always “shutdown power to the Inst9 and RAE if the RAFSW is in a fault state and the Inst9 is powered.” Inst9 Level 5 Requirement 56 states “The RAFSW shall shutdown power to the Inst9 and RAE if the RAFSW is in a fault state and the Inst9 is powered.” Section 3.4 Fault and Event Protection (under Software Architecture) states “It is possible for a fault expansion to be interrupted by another fault/event and cause the execution of another fault expansion. The number of interruptions is limited in three ways: 1. If the total recursion depth exceeds a hard-coded limit (to prevent stack overflow), power is shut down to the arm and no further action is permitted; 2. The number of interruptions by each type of fault/event is limited (e.g., while executing ra_dig_trench, only n motion-impeded events are permitted); 3. If interrupted while moving the arm to a safe place after the limit is reached, power is shut down to the arm and no further action is permitted.”",4/27/06
ProjectE - TIM - 1688,Inst9 SDD Contradicts Inst9 Level 5 Requirement 55,3,"Inst9 Level 5 Requirement 55 states “The RAFSW shall reject subsequent move/heat commands (or any command that communicates with the RAE) if the RAFSW is in a fault state.” Section 2.2 Command Sequencing states the “RAFSW will create a sequence of actuator commands to be executed in the event of a fault or event.” Section 2.4 Fault and Event Protection (under Requirements) states “Depending on the fault/event detected, the RAFSW will attempt to recover from the condition.” Section 3.1 Behavior Model states “If an event/fault occurs during the execution of a command, the system will attempt to recover from the event/fault, if appropriate, by moving to the generating recovery expansion. Failing recovery, a safing expansion will be executed and power removed from the arm.” Section 3.4 Fault and Event Protection (under Software Architecture) states “If a fault/event is detected, any arm motion will be stopped and the fault/event reported to the Inst9 Manager task. Receipt of a fault/event message by the Inst9_Manager task will interrupt the current task expansion and cause the execution of a fault expansion.” In Table 7. Robotic Arm Fault Protection, the action described of the “premature motion termination” or “stalled” fault for the “all motion cmds” Task is “return continue” for the Fault Expansion.",4/27/06
ProjectE - TIM - 1685,Inst9 Level 5 Requirement 45 does not trace to the Inst9 SDD,3,Inst9 SDD does not show or describe “pausing Inst9 operations when a joint temperature exceeds a specified threshold and resuming when the motor cools down below a specified threshold.” Inst9 Level 5 Requirement 45 states “The RAFSW shall protect the Inst9 from motor over-heating by monitoring the joint temperatures and pausing Inst9 operations when a joint temperature exceeds a specified threshold and resuming when the motor cools down below a specified threshold.”,4/27/06
ProjectE - TIM - 1683,Inst9 Level 5 Requirement 29 does not trace to the Inst9 SDD,3,"No hard-coded limits, consistent with Inst9 Level 5 Requirement 29, are specified or identified in Inst9 SDD. Inst9 Level 5 Requirement 29 states “The RAFSW shall implement hard-coded lower limits on path generation parameters under which the parameters cannot be set.”",4/27/06
ProjectE - TIM - 1682,Inst9 Level 5 Requirement 28 does not trace to the Inst9 SDD,3,Inst9 Level 5 Requirement 28 states “The RAFSW shall implement PID control of the Inst9 joints.”,4/27/06
ProjectE - TIM - 1681,Inst9 Level 5 Requirement 23 does not trace to the Inst9 SDD,3,"Inst9 Level 5 Requirement 23 states “The RAFSW shall derive and implement the inverse kinematics of the Inst9 using closed-form solutions based on Denavit-Hartenberg conventions. “ Appendix D. Data Structures of Inst9 SDD has change comments/notes regarding forward/inverse kinematics, but has no record of descriptions consistent with the requirement 23.",4/27/06
ProjectE - TIM - 1680,Inst9 Level 5 Requirement 22 does not trace to the Inst9 SDD,3,"Inst9 Level 5 Requirement 22 is not addressed by the Inst9 SDD. Requirement 22 states “The RAFSW shall derive and implement the forward kinematics of the Inst9 using homogeneous coordinates and homogeneous transformations from the Inst9 base frame to the tool frame based on Denavit-Hartenberg conventions.” Appendix D. Data Structures of Inst9 SDD has change comments/notes regarding forward/inverse kinematics, but has no record of descriptions consistent with the requirement 22.",4/27/06
ProjectE - TIM - 1679,Inst9 Level 5 Requirement 20 does not trace to the Inst9 SDD,3,Inst9 Level 5 Requirement 20 is not addressed in the Inst9 SDD. Requirement 20 states “The RAFSW shall support the capability of positioning the end-effector tools with a repeatability of 1.5 cm in the surface workspace and 0.5 cm in the deck workspace.”,4/27/06
ProjectE - TIM - 1678,Inst9 Level 5 Requirement 19 does not trace to the Inst9 SDD,3,Inst9 Level 5 Requirement 19 is not addressed in the Inst9 SDD. Requirement 19 states “The RAFSW shall support the capability to position the end-effector tools to an absolute accuracy of 3 cm in free space within the dexterous workspace of the Inst9.”,4/27/06
ProjectE - TIM - 1677,Inst9 Level 5 Requirement 15 does not trace to the Inst9 SDD,3,Inst9 Level 5 Requirement 15 is not addressed in the Inst9 SDD. Requirement 15 states “The RAFSW shall support the ability to retain position knowledge across planned power cycles.”,4/27/06
ProjectE - TIM - 1675,Inst9 Level 5 Requirement 13 does not trace to the Inst9 SDD,3,The command overrun state is not explicitly or specifically addressed in Inst9 SDD. Inst9 Level 5 Requirement 13 states “The RAFSW shall abort both commands if a command is issued while another command is executing unless the second command is a stop or shutdown command. This is defined as a command overrun state. If this occurs the RAE will be shutdown if it is powered.” Section 2.3 Motion Control of RD SDD states “Collision-free command sequences will be verified on the ground prior to uploading to the Lander.”,4/27/06
ProjectE - TIM - 1674,Inst9 Level 5 Requirement 9 does not trace to the Inst9 SDD,3,No design descriptions in the Inst9 SDD specify verifying “the size of the message received from the low-speed PACI serial interface.” Inst9 Level 5 Requirement 9 states “The RAFSW shall verify the size of the message received from the low-speed PACI serial interface.”,4/27/06
ProjectE - TIM - 1673,Inst9 Level 5 Requirement 7 is not fully traceable in Inst9 SDD,3,"Inst9 Level 5 Requirement 7 specifies “The RAFSW shall produce EVRs in response to the following anomalous conditions: a) Errors in opening, reading and writing Inst9 files (status, history, parameter) b) EPS power-errors c) Initialization errors d) Unrecognized messages e) Command queue overrun.” No EVR handling for the “b) EPS power-errors,” “d) Unrecognized messages,” or “e) Command queue overrun” is included in the Inst9 SDD. Also, it is not clear if the RAFSW handles/processes “EPS power-errors” in accordance with Section 3.2.1.4 Fault Protection (FP) of Artifact 11) Inst9/Inst8 S/C ICD. Section 3.2.1.4 Fault Protection (FP) of Artifact 11) Inst9/Inst8 S/C ICD states “The Inst9 will receive no warning before losing power if either the spacecraft power bus or any of Inst9 load switches fails open or the spacecraft health is in jeopardy. Inst9 electronics shall be designed such that Spacecraft faults, which produce unplanned, unexpected interruptions in Inst9 power, will produce no damage to Inst9 components.”",4/27/06
ProjectE - TIM - 1672,Inst9 SDD Robotic Arm Fault Protection Table Contains Redundant “Power Off” Steps,3,"Inst9 SDD Table 7 Robotic Arm Fault Protection for Fault “file I/O” of Task ra_initialize specifies “power off” in both “Fault Expansion” and “After n Interruptions” steps. It is not clear what effects, if any, the second “power off” will have, especially in the fault recovery and status.",4/27/06
ProjectE - TIM - 1671,Inst9 SDD Figure 2. ProjectE Inst9 Level 0 Data Flow (Context) Diagram is Incorrect.,4,"In Section 3.2 Data and Control Flow, it is stated for RAFSW that “Successful completion of the task or fault information is communicated to external entities by setting the Inst9 global sequence or fault variables and sending engineering data to channelized telemetry.” Figure 2 ProjectE Inst9 Level 0 Data Flow (Context) Diagram, however, shows no external entity of Inst9 global sequence variable.",4/27/06
ProjectE - TIM - 1670,Inst9 SDD Figure 1. ProjectE Robotic Arm State Transition Diagram is Incomplete/Unclear.,4,"Inst9 SDD Figure 1 ProjectE Robotic Arm State Transition Diagram denotes “TaskSpawn (Inst9_Manger), InvokeInitializeManager” for the Initializing state, but Inst9_Actuator task initializing is missing or not reflected in the Diagram. Inst9 SDD Section 4.0 Program Structure states that “All tasks are spawned by the Lander software.”",4/27/06
ProjectE - TIM - 1669,Inst9 SDD on Non-Move is Unclear,4,"Inst9 Actuator Task, on receipt of a non-move command, in Inst9 SDD Section 4.2 Actuator Task, is to “Set data in history and/or send command to the PACI.” This is inconsistent with the data flow of Figure 4 Control Arm Data Flow Diagram. Figure 4 Control Arm Data Flow Diagram does not reflect the “Set data in history” for the non-move command.",4/27/06
ProjectE - TIM - 1668,Inst9 SDD on Shutdown is Unclear,4,"Inst9 Actuator Task (Section 4.2 Actuator Task), on receipt of a shutdown command, does not “write arm status to file.” This is inconsistent with other specifications of the Inst9 SDD. Figure 4 Control Arm Data Flow Diagram does not properly reflect the Shutdown flow, either. In addition, “Send shutdown command to Inst9_Actuator” in the Process of Section 4.2 Actuator Task is a documentation error. • Section 3.1 Behavioral Model states “If a shutdown command is received from the VM, the shutdown process will be initiated which stops the arm and writes arm status to the RAM file system for storage in Nonvolatile Memory.” • The Process of Section 4.1 Manager Task specifies “On receipt of a shutdown command Send shutdown command to Inst9_Actuator Request power off from EPS.” • The Process of Section 4.2 Actuator Task specifies “On receipt of a shutdown command Stop arm Send shutdown command to Inst9_Actuator.” • In Table 3. ProjectE Robotic Arm Non-move Commands, the Description of Ra_shutdown is to “Stop current command. Write arm status to file.”",4/27/06
ProjectE - TIM - 1667,Inst9 Actuator Task Loop Time Is Unclear,4,"The Process of (Section 4.2 of Inst9 SDD) Actuator Task, under Initialize, specifies “Set loop time to nominal.” No description of “nominal” is provided in the rest of the Inst9 SDD.",4/27/06
ProjectE - TIM - 1666,Inst9 SDD Actuator Task is Unclear,4,The Process of Section 4.2 Actuator Task specifies the following: “Read actuator queue On receipt of a task done message Write data to arm status file…” This is inconsistent with the data flow of Figure 4 Control Arm Data Flow Diagram. The arm status file writing is shown triggered from process “Monitor Sensors.”,4/27/06
ProjectE - TIM - 1665,Inst9 SDD is not Clear about Inst9_ManagerQueue,4,"Inst9 _ManagerQueue is depicted in Figure 3 ProjectE Inst9 Level 1 Data Flow Diagram as part of RAFSW and not as an external entity. This is consistent with Figure 2 ProjectE Inst9 Level 0 Data Flow Diagram. Inst9 SDD Figure 4 Control Arm Data Flow Diagram deviates from Figures 2 and 3. The Inst9_ManagerQueue is not displayed in Figure 4, thus implied or denoted as an external entity to RAFSW.",4/27/06
ProjectE - TIM - 1664,Inst9 SDD Section 3.5 Model-based Collision Checking is Missing or Empty,3,"No contents or descriptions, other than Section header/name, are given for this Section.",4/27/06
ProjectE - TIM - 1663,Inst9 SDD Section 2.1.3 is Inconsistent in Stating Three Non-Channelized Telemetry Items.,4,"Inst9 SDD Section 2.1.3 Telemetry states, for RAFSW, “Three items will be sent via non-channelized telemetry.” This section, however, lists the following five items. 1. Science data which consists of detailed arm state information which can be used for engineering analysis of arm performance and scientific analysis of soil properties. The frequency of data collection is specified by the operator. 2. Arm status which contains the current arm state data. 3. Arm history (the last 300 arm status data points) in the event of a fault. 4. The parameter file which contains the current parameter data. 5. The collision avoidance data base.",4/27/06
ProjectE - TIM - 1662,Inconsistent/extra Pyro 2 Discrete Output (FSW Build 3),3,The file iocPyroDiscrete.h provides the definitions for the Pyro 2 Discrete Outputs (lines 129-162). The #define Inst9_BB_OPEN_S (line 157) is not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). It is not clear if the code needs to be updated or the ICD needs to be updated. ICD Section 1. 5.4.8 Pyro Discrete Outputs TABLE 1. 5.4.7-2 Pyro 2 Discrete Outputs,4/3/06
ProjectE - TIM - 1661,Inconsistent/extra Pyro 1 Discrete Output (FSW Build 3),3,The file iocPyroDiscrete.h provides the definitions for the Pyro 1 Discrete Outputs (lines 71-86). The #define Inst9_BB_OPEN_P (line 63) is not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). It is not clear if the code needs to be updated or the ICD needs to be updated. ICD Section 1. 5.4.8 Pyro Discrete Outputs TABLE 1. 5.4.8-1 Pyro 1 Discrete Outputs,4/3/06
ProjectE - TIM - 1660,Inconsistent/extra Power Distribution Card Discrete Outputs (FSW Build 3),3,The file iocPdcDiscrete.h provides the definitions for the Power Distribution Card Discrete Outputs (lines 54-119). There are three #defines not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). It is not clear if the code needs to be updated or the ICD needs to be updated. The #defines are listed below: IMPLEMENTATION 1. #define PIA_PLATE_HTRS_SEC (line 83) 2. #define SDST_HTRS (line 87) 3. #define SSPA_HTRS (line 101) ICD Section 1. 5.4.6 Power Distribution Card Discrete Outputs TABLE 1. 5.4.6-1 Power Distribution Card Discrete Outputs,4/3/06
ProjectE - TIM - 1659,Missing/Inconsistent Dual Slave Discrete Outputs (FSW Build 3),3,The file iocDualSlaveDiscrete.h provides the definitions for the Dual Slave Node Discrete Outputs (lines 57-92). There are six definitions found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005) but not found in the implementation. It is not clear if the code needs to be updated or the ICD needs to be updated. ICD Section 1. 5.4.4 Dual Slave Node Discrete Outputs TABLE 1. 5.4.4-1 MFB Dual Slave Node Discrete Outputs DEFINITIONS: Missing in Implementation 1. CCU2A Disable 2. CCU1B Enable 3. CCU2A Enable 4. CCU1A Disable 5. CCU2B Enable 6. CCU1B Disable,4/3/06
ProjectE - TIM - 1658,Inconsistent/extra PACI 2 Discrete Outputs (FSW Build 3),3,The file paciAllDiscreteMap.h provides the definitions for the PACI 2 Discrete Outputs (lines 124-139). There are two #defines not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). It is not clear if the code needs to be updated or the ICD needs to be updated. These #defines are listed below: IMPLEMENTATION 1. #define CCU2B_ENABLE (line 124) 2. #define CCU1A_DISABLE (line 125) ICD Section 1. 5.4.1 PACI Discrete Outputs TABLE 1. 5.4.1-2 PACI 2 Discrete Outputs,4/3/06
ProjectE - TIM - 1657,Missing/Inconsistent PACI 1 Discrete Outputs (FSW Build 3),3,The file paciAllDiscreteMap.h provides the definitions for the PACI 1 Discrete Outputs (lines 104-119). The definitions are not consistent with those found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). It is not clear if the code needs to be updated or the ICD needs to be updated. ICD Section 1. 5.4.1 PACI Discrete Outputs TABLE 1. 5.4.1-1 PACI 1 Discrete Outputs The following outputs are found in the implementation and not the ICD: 1. SIM_TIME_SYNC (line 114) 2. CCU1B_ENABLE (line 117 3. CCU2A_DISABLE (line 118) The following outputs is found in the ICD and not the implementation: 1. Inst10_PT_PWR_Toggle,4/3/06
ProjectE - TIM - 1656,Inconsistent/extra Pyro 2 Discrete Input (FSW Build 3),3,"The file iocPyroDiscrete.h provides the definitions for the Pyro 2 Discrete Inputs (lines 166-198). The #define Inst9_BB_OPEN_S_STATUS (line 193) is not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). It is not clear if the code needs to be updated or the ICD needs to be updated. ICD Section 1. 5.3.7 Pyro Discrete Inputs TABLE 1. 5.3.7-2 Pyro 2 Discrete Inputs, Drive Indicates",4/3/06
ProjectE - TIM - 1655,Inconsistent/extra Pyro 1 Discrete Inputs (FSW Build 3),3,"The file iocPyroDiscrete.h provides the definitions for the Pyro 1 Discrete Inputs (lines 90-122). There are two #defines not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). These #defines are listed below and it is not clear if the code needs to be updated or the ICD needs to be updated: IMPLEMENTATION 1. #define Inst9_BB_OPEN_P_STATUS (line 100) 2. #define BS_LANDER_SEP_2S_1S_STATUS (line 112) ICD Section 1. 5.3.7 Pyro Discrete Inputs TABLE 1. 5.3.7-1 Pyro 1 Discrete Inputs, Drive Indicates (PIM #1)",4/3/06
ProjectE - TIM - 1654,Inconsistent/extra Power Distribution Card Discrete Input (FSW Build 3),3,The file iocPdcDiscrete.h provides the definitions for the Power Distribution Card Discrete Inputs (lines 135-180). The #define SSPA_HTRS_STATUS (line 166) is not found in the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). ICD Section 1. 5.3.5 Power Distribution Discrete Inputs Table 1. 5.3.5-1 Power Distribution Discrete Inputs It is not clear if the code needs to be updated or the ICD needs to be updated. IV&V does note that the 45 discrete inputs found in the aforementioned table do map to the #defines listed on lines 135-180.,4/3/06
ProjectE - TIM - 1653,Missing/Inconsistent Dual Slave Analog Input (FSW Build 3),3,"The file cio_special.c implements a variable, virtual_ioc_analog_ids, that is initialized to 80 I/O Analog Ids (line 62). One Id is not consistent with the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). The tables for the I/O Analog Inputs are found in the following sections of the ICD: 1. 5.1.2 Master I/O Slave Node Analog Inputs 2. 5.1.3 Dual Slave Node Analog Inputs The table names and numbers are listed below: 1. Table 5.1.2-1 Master I/O Slave Node Analog Inputs 2. Table 5.1.3-1 Dual Slave Node Analog Inputs The following Id is found in Table 5.1.3-1 (Dual Slave Node Analog Inputs) and not in the implementation. It is not clear if the code needs to be updated or the ICD needs to be updated. 1. PDDU_DC_DC_CONVERTER_TEMP",4/3/06
ProjectE - TIM - 1652,Missing/Inconsistent PACI Analog Inputs (FSW Build 3),3,"The file cio_special.c, implements a variable, virtual_paci_analog_ids, that is initialized to 99 PACI Analog Ids (line 147). These Ids are not consistent with the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). The table for the PACI Analog Inputs is found in the following section of the ICD: 5.1.1 PACI Analog Inputs. The table names and numbers are listed below: 1. Table 5.1.1-1 PACI 1 Analog Inputs 2. Table 5.1.1-2 PACI 2 Analog Inputs The following Ids are found in the implementation and not the ICD: 1. SUN_SENSORS_CIO_ID, 2. STAR_TRACKER_A_TEMP_1_CIO_ID, 3. STAR_TRACKER_B_TEMP_2_CIO_ID, 4. RADAR_MUX_2_TEMP_2_CIO_ID, 5. RADAR_MUX_1_TEMP_2_CIO_ID, 6. STAR_TRACKER_A_TEMP_2_CIO_ID, 7. STAR_TRACKER_B_TEMP_1_CIO_ID The following Ids are found in the ICD and not the implementation: 1. STAR_TRACKER_BRACKET_TEMP_1 2. STAR_TRACKER_BRACKET_TEMP_2 3. CDH_DC_DC_CONVERTER_TEMP 4. LVA_Temp_1 5. LVA_Temp_2 It is not clear if the code needs to be updated or the ICD needs to be updated. It is also not clear if the ordering of the Ids in the array need to be consistent with the ICD.",4/3/06
ProjectE - TIM - 1651,Inconsistent Dual Slave Discrete Address Mapping (FSW Build 3),3,"In file, iocNodeDualSlave.c, the Dual Slave Node MFB Discrete Address Map is defined starting on line 61 and ending on line 75. The definition of this address mapping is not consistent with the ProjectE Hardware/Software Interface Control Document (PHX-99-0179 with a date of 7/5/2005). The inconsistencies are in the table that is presented in Section: 4.4.1 Dual Slave Discretes and is titled, Table 4.4.1-1 Dual Slave Node MFB Discrete Address Map. The specific address mapping that appears to be missing from the code is listed below: 11 (local address) Clear discrete outputs16[lsb] - 31[msb] 13 (local address) Clear discrete outputs32[lsb] - 47[msb] 30 (local address) Set discrete outputs 0[lsb] - 15[msb] 31 (local address) Set discrete outputs 16[lsb] - 31[msb] 33 (local address) Set discrete outputs 32[lsb] - 47[msb] It is not clear if the code needs to be updated or the ICD needs to be updated.",4/3/06
ProjectE - TIM - 1650,Global variable uninitialized in Build 3 FSW,4,"The global variable, 'prop_bad_read_count', declared at line 31 in propTask.c is used and never set in this file. It is not clear if the desired implementation is to allow the compiler to set the initial value. The variable is used (incremented) on line 396.",3/25/06
ProjectE - TIM - 1649,Extern global struct declared twice in Build 3 FSW,4,Structure is declared twice in the file: eps_emic_relay.c Line 78 extern eps_emic_sw_t eps_emic_sw[]; Line 213 extern eps_emic_sw_t eps_emic_sw[];,3/25/06
ProjectE - TIM - 1648,Incorrect function return in Build 3 FSW,3,"The function iocGetErrorCount in file iocNodeAnalog.c has a return type of unsigned long. On line 80, the function returns ERROR and ERROR is defined as -1. The code segment is listed below. 1. Lines 68 - 81 uint32_t iocGetErrorCount (iocError_t errorId) /*---------- End Prototype -----------*/ { errno = 0; /*++++++++++ ** if invalid error ID code ** return error **----------*/ if ( (unsigned int)errorId >= IOC_NUM_ERROR_COUNTS ) { errno = EIOC_ANALOG_INVAL2; return (ERROR); }",3/25/06
ProjectE - TIM - 1647,Variable (l_id) assignment results in underflow in Build 3 FSW,4,"In the file thmThermostat.c, the variable, l_id, is defined on line 1140 as an unsigned char (thrm_fsw_obj_id_t). On line 1146 in the function thmThermostat_Select_Set_Point, this variable is set to ERROR and ERROR is defined as -1. The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segment is listed below. 1. Lines 1140 - 1146 thrm_fsw_obj_id_t l_id; uint8_t *l_cmdParms; bool_t l_cmd_inst_was_valid; l_cmdParms = ((thmMsgUnion_p)setMsg)->cmdMsg.cmdParms; l_cmd_inst_was_valid = FALSE; l_id = ERROR;",3/25/06
ProjectE - TIM - 1646,Variable (fm_echo.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file file_memory_access.c, the variable, fm_echo.success_flag, is defined as an unsigned char. On line 566 in function memory_load, the variable can be assigned a value of -1. This occurrence will happen when the conditional statements on lines 445, 524, or 541 evaluate to true. The execution of either of these conditional statements allows status to be set to ERROR and ERROR is defined as -1. The variable, status, can then be assigned to fm_echo.success_flag on line 566. The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Starting at Line 445 if (sourceFileFd == ERROR) { ... status = ERROR; } 2. Starting at Line 524 default: { ... status = ERROR; 3. Starting at Line 541 if (blkSize == ERROR) { ... status = ERROR; } 4. Line 566 fm_echo.success_flag = status;",3/25/06
ProjectE - TIM - 1645,Variable (fm_echo.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file file_cmds.c, the variable, fm_echo.success_flag, is defined as an unsigned char. On line 828 in function file_copy_to_EEPROM, the variable can be assigned a value of -1. This occurrence will happen when the conditional statements on lines 744, 759 or 802 evaluate to true. The execution of either of these conditional statements allows returnStatus to be set to ERROR and ERROR is defined as -1. The variable, returnStatus, can then be assigned to fm_echo.success_flag on line 828 The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Starting at Line 744 if (sourceFileFd == ERROR) { ... returnStatus = ERROR; } 2. Starting at Line 759 if ((eepStartAddress & FOUR_BYTE_ALIGNED) != 0) { ... returnStatus = ERROR; } 3. Starting at Line 802 if (blkSize == ERROR) { ... returnStatus = ERROR; } 4. Line 828 fm_echo.success_flag = returnStatus;",3/25/06
ProjectE - TIM - 1644,Variable (fm_echo.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file file_cmds.c, the variable, fm_echo.success_flag, is defined as an unsigned char. On line 702 in function file_copy_all, the variable can be assigned a value of -1. This occurrence will happen when the conditional statements on lines 674 or 685 evaluate to true. The execution of either of these conditional statements allows returnStatus to be set to ERROR and ERROR is defined as -1. The variable, returnStatus, can then be assigned to fm_echo.success_flag on line 702 The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Starting at Line 674 else { ... returnStatus = ERROR; 2. Starting at Line 685 else { ... returnStatus = ERROR; } 3. Line 702 fm_echo.success_flag = returnStatus;",3/25/06
ProjectE - TIM - 1643,Variable (fm_echo.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file file_cmds.c, the variable, fm_echo.success_flag, is defined as an unsigned char. On line 580 in function file_copy, the variable can be assigned a value of -1. This occurrence will happen when the conditional statements on lines 544 or 562 evaluate to true. The execution of either of these conditional statements allows returnStatus to be set to ERROR and ERROR is defined as -1. The variable, returnStatus, can then be assigned to fm_echo.success_flag on line 580 The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Starting at Line 544 if ((stat(name2, &dFileStat) == OK) && (S_ISDIR(dFileStat.st_mode))) { ... returnStatus = ERROR; } 2. Starting at Line 562 else { ... returnStatus = ERROR; } 3. Line 580 fm_echo.success_flag = returnStatus;",3/25/06
ProjectE - TIM - 1642,Variable (fm_echo.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file file_cmds.c, the variable, fm_echo.success_flag, is defined as an unsigned char. On line 478 in function file_append, the variable can be assigned a value of -1. This occurrence will happen when the conditional statement on line 400 evaluates to true. The execution of this conditional statement allows returnStatus to be set to ERROR and ERROR is defined as -1. The variable, returnStatus, can then be assigned to fm_echo.success_flag on line 478 The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Starting at Line 400 if (sourceFd == ERROR) { ... returnStatus = ERROR; } 2. Line 478 fm_echo.success_flag = returnStatus;",3/25/06
ProjectE - TIM - 1641,Variable (fm_echo.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file file_cmds.c, the variable, fm_echo.success_flag, is defined as an unsigned char. On line 108 in function cmic_ramset the variable can be assigned a value of -1. This occurrence will happen when the conditional statement on line 75 evaluates to true. The execution of this conditional statement allows returnStatus to be set to ERROR and ERROR is defined as -1. The variable, returnStatus, can then be assigned to fm_echo.success_flag on line 108. The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Starting at Line 75 if (start_address > end_address) { ... returnStatus = ERROR; } 2. Line 108 fm_echo.success_flag = returnStatus;",3/25/06
ProjectE - TIM - 1640,Variable (UplFileStat.success_flag) assignment results in underflow in Build 3 FSW,3,"In the file upl_package.c, the variable, UplFileStat.success_flag, is defined as an unsigned char. On line 949 in function upl_package_dwnlink_file_upload_status the variable is assigned a value of -1. This occurrence will happen when this function is called from upl_package_var_add on line 528 of this file. In this particular call, the parameter being passed is ERROR and ERROR is defined as -1. This value is then assigned to the unsigned char, UplFileStat.success_flag, on line 949. The most likely scenario is the compiler will roll this value over to 255. It is not clear if this is the desired implementation. The code segments are listed below. 1. Calling function: upl_package_var_add (line 528) upl_package_dwnlink_file_upload_status(ERROR); 2. Function upl_package_dwnlink_file_upload_status (line 941 an 949) void upl_package_dwnlink_file_upload_status(int8_t success_flag) { ... UplFileStat.success_flag = success_flag;",3/25/06
ProjectE - TIM - 1639,Variable (ParallelIsBusy) assignment results in underflow in Build 3 FSW,3,"In the file paciDrv.c, the variable, ParallelIsBusy, is defined on line 172 as an unsigned short. There are two instances where this variable is assigned a value of -1. The most likely scenario is the compiler will roll this value over to 65535. It is not clear if this is the desired implementation. The code segment along with function and line number are listed below. 1. Function paciReadParallel, line 1557: paciBoardData[SerInfo->Board].ParallelIsBusy = -1; 2. Function paciIoctlEnableRcv, line 3930: paciBoardData[SerInfo->Board].ParallelIsBusy = -1;",3/25/06
ProjectE - TIM - 1638,Accessing array outside of its allocated memory in Build 3 FSW,3,"In function cmd_is_restricted, found in cmd.c there is an array that is accessed one over its bounds in order to terminate a while loop. The code segment is listed below. Implementation (starting on line 895): while (CmdRestrictedBuffer[i].Opcode != 0 && i <= MAX_NUMBER_OF_RESTRICTIONS) In the above segment, CmdRestrictedBuffer is of size 400 and MAX_NUMBER_OF_RESTRICTIONS is of size 400. The variable, i, is incremented each time through the while loop.",3/25/06
ProjectE - TIM - 1637,Possible incorrect implementation of logical statement in Build 3 FSW,4,"In function eps_rpc_sw_validate, found in file eps_rpc_sw.c there is a conditional statement that is not consistent with the associated comment. The comment suggest that the conditional statement be evaluated when two variables are equal. However, the implementation shows that the conditional statement is evaluated when the variables are not equal. The implementation is shown below. Implementation (starting on line 733): /*+++++ * If the state read from the status discrete is the same as the desired -----*/ if (l_rpc_sw_state != l_rpc->desired_state) {",3/25/06
ProjectE - TIM - 1636,Possible incorrect implementation of logical statement in Build 3 FSW,4,"In function eps_rpc_sw_validate, found in file eps_rpc_sw.c there is a conditional statement that is not consistent with the associated comment. The comment suggest that the conditional statement be evaluated when the variable has been marked Failed. However, the implementation shows that the conditional statement is evaluated when the variable has not been marked Failed. The implementation is shown below. Implementation (starting on line 724): * IF RPC switch has been marked Failed. -----*/ if (l_rpc->cond != Failed) {",3/25/06
ProjectE - TIM - 1635,Possible incorrect variable assignment in Build 3 FSW,3,"In function ssaValidate, found in file sun_sensor.c there is a variable assignment that is not consistent with the associated comment. On line 569, the comment in the code states: ** If error's present, call FPU_Counter_Error. ** If response is enabled, set *InError FALSE. However, the implementation does not set *InError to FALSE but assigns a value of TRUE. It is not clear if the current implementation is correct or the comment is incorrect. The implementation is shown below. Implementation (starting on line 576): FPU_Counter_Error(&ssaFpSaneCnt[ii]); /* Record error */ if (mask) { *InError = TRUE; /* no data valid */",3/25/06
ProjectE - TIM - 1634,Possible missing bit shift in Build 3 FSW,3,"In function edl_radar_cmd_dop_ant, found in file edl_radar.c there appears to be a missing bit shift. On line 883, the comment in the code states: ** If the input is between 0 and 4, clear ** the cmd bits, shift the input, OR it in, and return OK. ** If the input is bad, return ERROR. However, the implementation does not have the shift but does include the clear, OR and return. It is not clear if the current implementation is correct or the comment is incorrect. The implementation is shown below. Implementation: if(parm < EDL_RADAR_ANTENNAS) { edl_radar_next_sa16_dw0 &= ~EDL_RADAR_DOP_ANT_MASK; /*clear bits*/ edl_radar_next_sa16_dw0 |= parm; ret = OK; }",3/25/06
ProjectE - TIM - 1633,"Inst4 Test Cases 1.41.4, 1.41.5, and 1.41.6 Contain Possible Errors",3,"There is an error in the specifications of test case 1.41.4 with the Purpose “…eps_id being EPC_COMP_ID_Inst4_MAIN sets the pdModel value to max,” Description “…Inst4_iPowerState being invalid,” and Verification “…sets pdModel with the appropriate value.” It is not obvious or clear from the Inst4 Subsystem Unit Test Descriptions and Inst4 SDD that the test case, setting the pdModel value to max with an invalid Inst4_iPowerState is appropriate or normal. The same applies to 1.41.5 for eps_id being EPC_COMP_ID_Inst4_EGA, and 1.41.6 for eps_id being EPC_COMP_ID_Inst4_REPLACEMENT_HTR. Back-up information for this issue is as follows: Inst4 SDD states “The Inst4_SetPowerState function is used to set the power state bits in Inst4_iPowerState for the individual EPS components. These states represent different power usage modes of the Inst4 instrument, and thus are critical for the Inst4_ReportModelCallback function (Section 5.4.7). The inputs to this function are the EPS_ID and power state to set. The return from this function is either an OK or an ERROR.” Section 5.4.7 of Inst4 SDD states “The Inst4_ReportModelCallback function is used by the EPS to report power usages for the Inst4 switches. The inputs to this function is the EPS id of the switch desired, the actual voltage of the switches bus in volts, and a pointer to the power usage model output, in Watts, for the given switch. The Inst4_ReportModelCallback function obtains the state for the EPS_ID and returns the power usage model from the table read from the configuration file based on the ID and state. If the state value exceeds the maximum value for the ID, the maximum value is used. In the case of the EPS_COMP_ID_Inst4_MAIN, the Inst4_powerCfg.dMain_Watts model table is used. In the case of the EPS_COMP_ID_Inst4_EGA, the Inst4_powerCfg.dEga_Watts model table is used. In the case of the EPS_COMP_ID_Inst4_REPLACMENT_HTR, the the Inst4_powerCfg.dHtr_Watts model table is used. If the EPS_ID is not recognized, then an error is reported.”",3/21/06
ProjectE - TIM - 1632,Inst4 Requirement 5061 is Inconsistent in Inst4 FSW Requirements Verification Matrix,3,"In Inst4 FSW Requirements Verification Matrix, Inst4 SRS 5061 is listed as ""The TEFSW shall provide a callback to the Contractor3 for power consumption data.” In Inst4 SRS, requirement 5061, however, is specified as ""The TEFSW shall provide a callback to the C&DH for power consumption data.” It is not clear if the callback is to “Contractor3” or “C&DH.""",3/21/06
ProjectE - TIM - 1631,Inst4 SRS Requirement 5081-1 is Not Being Verified by Inst4 Test Case 2.12.5,3,"Inst4 Test Case 2.12.5 is stated to cover requirements 5068e and 5081 in the Inst4 Subsystem Unit Test Descriptions, but traced to requirements 5081 and 5081-1 in the Inst4 FSW Requirements Verification Matrix. No test cases in the Inst4 Subsystem Unit Test Descriptions are defined to cover Inst4 SRS requirement 5081-1 verification. Inst4 requirement 5081-1: “TEFSW shall notify 386 of impending power down.”",3/21/06
ProjectE - TIM - 1630,Inst4 Test Case 1.1.7 Contains Possible Error,3,"Inst4 Test Case 1.1.7 is specified with “Purpose: Verify that the Inst4_Init function takes the appropriate action when PACIWRITE returns with an error,” but with “Description: Have PACIWRITE return 0.” It is not clear if “PACIWRITE returns with an error” equates with “PACIWRITE return 0.”",3/21/06
ProjectE - TIM - 1629,"Data Name “svg” is Inconsistently Defined in Inst4 test cases 1.16.1, 1.16.2, 1.16.3 , 1.16.4, and 1.16.5",4,"Inst4 test cases 1.16.1, 1.16.2, 1.16.3 , 1.16.4, and 1.16.5 are specified with “Purpose: Verify that the function Inst4_HandleSetGlobal handles receiving a sgv data set...,” but with “Description: While the Inst4_Tlm_Task is running send an svg data set to set…global variable.” It is not clear if the “svg” may have been mistyped, or that both “sgv” and “sgv” data sets exist for different uses.",3/21/06
ProjectE - TIM - 1628,Inst4 Requirement 5068 is not Being Verified by Tests,3,"The following Inst4 test cases are traced to requirement 5068 but the do not verify it: Inst4 1.31.1 Test Case: [TC_READ_RESULT001], Inst4 1.31.2 Test Case: [TC_READ_RESULT002], Inst4 1.31.3 Test Case: [TC_READ_RESULT003], Inst4 1.31.4 Test Case: [TC_READ_RESULT004], Inst4 1.31.5 Test Case: [TC_READ_RESULT005], Inst4 1.31.6 Test Case: [TC_READ_RESULT006], Inst4 1.34.3 Test Case: [TC_WRITE_SERIAL003], Inst4 1.34.4 Test Case: [TC_WRITE_SERIAL004], Inst4 1.34.5 Test Case: [TC_WRITE_SERIAL005], Inst4 1.34.6 Test Case: [TC_WRITE_SERIAL006], Inst4 1.35.1 Test Case: [TC_DO_PWR_FP001], Inst4 1.60.1 Test Case: [TC_COND_GET001], Inst4 1.61.1 Test Case: [TC_COND_SET001], and Inst4 1.63.1 Test Case: [TC_ON_SET_FP001] Inst4 SRS 5068 states “The TEFSW shall handle the following sequence level messages: a) Inst4_PASS_THRU b) Inst4_FILE_LOAD c) Inst4_MAIN1_POWER d) Inst4_MAIN2_POWER e) Inst4_REPLACEMENT_HEATER_POWER (may be going away) f) Inst4_BOOT_SELECT g) Inst4_APID_SELECT (currently listed as APID_SWITCH).”",3/21/06
ProjectE - TIM - 1627,Verification of Inst4 SRS Requirement 5067 by Inst4 test cases 1.58.2 and 1.59.2 is Unclear,4,"1.58.2 tests if Inst4_DelayCommand correctly reports an EVR for delayed command list full, and 1.59.2 for if Inst4_OnSendDelayedCommands handles an error from Inst4_WriteSerial. It is not clear if they verify Inst4 SRS 5067, as documented in both Inst4 Subsystem Unit Test Descriptions and Inst4 FSW Requirements Verification Matrix. Inst4 SRS 5067 states “System Message handling The TEFSW shall handle the following system level messages: a) SYS_INIT b) SYS_PING c) SYS_FP_ENAB d) EPSO_COMP_STATE e) Inst4_RESET f) Inst4_SAFING g) Inst4_POWER_DOWN.”",3/21/06
ProjectE - TIM - 1626,Inst4 FSW Requirements Verification Matrix contains errors,4,"The following errors exist in the Inst4 FSW verification matrix: Inst4 1.13.1 Test Case: [TC_DATA_READY001] is stated to cover SRS requirement 5002-1 in Inst4 Subsystem Unit Test Descriptions, but incorrectly listed as tracing to SRS requirement 5001-2 Inst4 2.3.2 Test Case: [TC_SR5003.2] is stated to cover only SRS requirement 5003-1.1 in Inst4 Subsystem Unit Test Descriptions. Inst4 2.3.2 Test Case: [TC_SR5003.2], however, is also listed as one of the Inst4 test cases tracing to SRS requirement 5003-1 Inst4 1.20.1 Test Case: [TC_INIT_HEART001] is stated to cover requirement 5050-1 in Inst4 Subsystem Unit Test Descriptions, but not included for SRS requirement 5050-1 Inst4 1.20.2 Test Case: [TC_INIT_HEART002] is stated to cover SRS requirements 5060 and 5062 in Inst4 Subsystem Unit Test Descriptions. Inst4 FSW Requirements Verification Matrix, however, also lists Inst4 1.20.2 Test Case: [TC_INIT_HEART002] as one of the Inst4 test cases tracing to SRS requirement 5050-1 Inst4 1.21.3 Test Case: [TC_ON_HEART003] is stated to cover requirement 5050-1 in Inst4 Subsystem Unit Test Descriptions, but not included for SRS requirement 5050-1 Inst4 1.22.1 Test Case: [TC_ON_HEART_START001] and 1.23.1 Test Case: [TC_ON_HEART_STOP001] are stated to cover requirement 5050-1 in Inst4 Subsystem Unit Test Descriptions, but listed for SRS requirement 5050-1.1 Inst4 1.8.4 Test Case: [TC_ON_FILE_PIECE004] is stated to cover requirements 5060 and 5062 in Inst4 Subsystem Unit Test Descriptions, but listed only for the requirement 5060 Inst4 1.44.2 Test Case: [TC_INIT_DISCRETE002] is stated to cover requirements 5060 and 5062 in Inst4 Subsystem Unit Test Descriptions, but listed for the requirements 5061 and 5062 Inst4 1.60.2 Test Case: [TC_COND_GET002] is stated to cover requirement 5060 in Inst4 Subsystem Unit Test Descriptions, but listed for requirement 5062 Inst4 1.8.2 Test Case: [TC_ON_FILE_PIECE002] is stated to cover requirements 5060 and 5062 in Inst4 Subsystem Unit Test Descriptions, but listed only for SRS requirement 5060 Inst4 1.6.10 Test Case: [TC_HANDLE_CMD010] is stated to cover requirement 5066-1 in Inst4 Subsystem Unit Test Descriptions, but listed for SRS requirement 5066 Inst4 2.12.5 Test Case: [TC_SR5068e] is stated to cover requirements 5068e and 5081 in Inst4 Subsystem Unit Test Descriptions, but listed for the requirement 5081 and 5081-1 Inst4 2.14.1 Test Case: [TC_SR5082] is stated to cover requirement 5082 in Inst4 Subsystem Unit Test Descriptions, but listed for the requirement 5082 and 5082-1 Inst4 2.15.1 Test Case: [TC_SR5083.1], 2.15.2 Test Case: [TC_SR5083.2], and 2.15.3 Test Case: [TC_SR5083.3] are stated to cover requirements 5083.1, 5083.2, and 5083.3 respectively in Inst4 Subsystem Unit Test Descriptions, but listed as tracing to requirements 5083, 5083-1, 5083-2, and 5083-3 Inst4 test case 2.12.5 [TC_SR5068e] is redundantly listed for the Inst4 SRS 5068 trace in Inst4 FSW Requirements Verification Matrix Inst4 2.13.1 Test Case: [TC_SR5081.2] is stated to cover requirement 5081.2 in Inst4 Subsystem Unit Test Descriptions, but listed for the requirement 5081 and 5081-2 traces in Inst4 FSW Requirements Verification Matrix.",3/20/06
ProjectE - TIM - 1625,Inst4 Requirement 5060 is Not Fully Verified by test,3,"Many Inst4 test cases collectively, as listed below, are specified to verify requirement 5060. It is unclear if all specific, representative cases of EVRs handled by TEFSW are covered for the 5060 verification. Additional artifact or documentation is needed for the verification. TC_HANDLE_CMD009, TC_ON_FILE_PIECE002, TC_ON_FILE_PIECE003, TC_HNDL_TLM006, TC_ON_PROC_DATA011, TC_SET_GLOBAL005, TC_TYPE_APID002, TC_DOWNLINK002, TC_INIT_HEART002, TC_ON_HEART_START002, TC_ON_HEART_STOP002, TC_CALC_CHECK002, TC_COPY_CFG002, TC_READ_CFG004, TC_READ_SERIAL002, TC_READ_SERIAL003, TC_ON_HANDSHAKE002, TC_WRITE_SERIAL002, TC_WRITE_SERIAL007, TC_HANDLE_PWR_MSGS006, TC_INIT_PWR002, TC_ON_EPS_COMP004, TC_ON_EPS_COMP011, TC_ON_EPS_COMP012, TC_ON_PWR_NOTE002, TC_RPRT_MDL_CALL007, TC_HANDLE_DISCRETE008, TC_SET_BOOT_SEL002, TC_ON_RESET003, TC_ON_RESET004, TC_ON_SYNC_TIME002, TC_ON_START_SYNC002, TC_ON_START_BOOT_SEL002, TC_ON_STOP_RESET002, TC_ON_STOP_SYNC002, TC_INIT_DELAY_CMDS002, TC_RESET_DELAY_CMDS002, TC_DELAY_CMDS_SEC002, TC_DELAY_CMD002, TC_DELAY_CMD003",3/20/06
ProjectE - TIM - 1624,"Inst4 Requirements 5050-1.3, 5050-1.4, 5050-2, and 5050-3 are not being verified by tests",3,"Inst4 Requirements 5050-1.3, 5050-1.4, 5050-2, and 5050-3 are not being verified by tests. These requirements are not traced to any tests. The requirements are as follows: 5050-1: “The TEFSW shall monitor the Inst4 heartbeat.” 5050-1.3: “TEFSW shall reset the Inst4 heartbeat counter after a power cycle, instrument reset, or Inst4 heartbeat recovery sequence.” 5050-1.4: “In the case of a failed state, TEFSW shall run a Inst4 heartbeat-failure command sequence no more that 10 commands in length.” 5050-2: “The TEFSW shall be able to reset Inst4 electronics board in case that it has not seen a heartbeat from the Inst4 electronics in a configurable period of time.“ 5050-3: “If the Inst4 heartbeat recovery sequence fails, as measured by a second failed state, the flight software shall downlink a notice the Inst4 was powered off, the time of the last Inst4 heartbeat, the current time, and the Inst4 heartbeat count.“",3/20/06
ProjectE - TIM - 1623,Inst4 requirement 5050-1.2 is not being fully verified by Inst4 Test Cases 2.8.2 or 1.21.3,3,"The purpose of Inst4 test case 2.8.2 is to “Verify that the TEFSW declares a failed state when it fails to receive a Inst4 heartbeat,” but this test case does not verify “…when commanded to perform an instrument reset” of the Inst4 requirement 5050-1.2. Neither does Inst4 test case 1.21.3. The purpose of 1.21.3 is to “Verify that the function Inst4_OnHeartCheck handles the case where fault protection is enabled and a heartbeat has not been received properly.” The requirement is as follows: 5050-1.2: “The TEFSW shall define a failed state as when the flight software has failed to receive a Inst4 heartbeat or when commanded to perform an instrument reset.”",3/20/06
ProjectE - TIM - 1622,Inst4 Test Case 1.49.1 Contains Possible Error,3,"The “no error on call to msg_ set_timer” in the test case description will not trigger the intended call to Inst4_DelayComamndsForSeconds as specified in the test case purpose. Inst4 test case 1.49.1 Specifies the following: “Purpose: Verify that the function Inst4_OnStartSyncTimer calls msg_set_timer and Inst4_DelayComamndsForSeconds. Description: While the Inst4_Cmd_Task is running call the Inst4_OnStartSyncTimer function, no error on call to msg_ set_timer. Verification: Verify that the function calls to msg_set_timer and Inst4_DelayCommandsForSeconds are made.” According to Inst4 SDD, an error on the timer not correctly started will result in a call to Inst4_DelayCommandsForSeconds. Inst4 SDD, in Section 5.5.9 Inst4_OnStartSyncTimer, states that “Once the time sync is set, the msg_set_timer function is used to start the timer. If the timer is not correctly started, the function generates an error. Passthrough commands are then delayed for a configurable period to allow for instrument recovery with a call to Inst4_DelayCommandsForSeconds.”",3/20/06
ProjectE - TIM - 1621,Inst4 test case 1.30.1 does not verify Inst4 requirement 5002-1,3,The purpose of Inst4 test case 1.30.1 is to “Verify that the function reads the PACI (with a positive return) and generates the message.” It is not clear that the test case verifies Inst4 SRS 5002-1. Inst4 requirement 5002-1 states “TEFSW shall calculate and add checksums to certain instrument command.”,3/20/06
ProjectE - TIM - 1620,Inst4 test case 1.3.1 contains conflicting instructions,4,"The purpose of Inst4 test case 1.3.1 is to ""Verify that the function Inst4_OpenDevices makes the two calls to PACIOPEN correctly."" The Verification of the test case, however, is to verify that ""the three PACIOPEN calls are properly made.""",3/20/06
ProjectE - TIM - 1619,Unused macros in Build 3 FSW,4,"The following macros are unused in the the Build 3 FSW. There is no indication of the status of these variables for the ProjectE FSW. File sam_Backshell_Sep_Monitor.c 1. Macro I_AM_SAM_SAM_I_AM, line 37 2. Macro SAM_BACKSHELL_SEP_MONITOR_I_AM, line 38 File sam_Heatshield_Sep_Monitor.c 1. Macro I_AM_SAM_SAM_I_AM, line 36 2. Macro SAM_HEATSHIED_SEP_MONITOR_I_AM, line 37 File sam_paci.c 1. Macro ACI_I_AM, line 44 File UldlSim.c 1. Macro SIM_SDST_1_STATUS, line 174 2. Macro IM_SDST_2_STATUS, line 175 3. Macro SIM_SDST_SELECT, line 176 File vml_create.c 1. Macro VML_EXCLUSION, line 36 File vml_messages.c 1. Macro DEFAULT_EXIT_ON_FATAL, line 36 File vml_utils.c 1. Macro REMOVE_FILE_SYSTEM_CALL, line 36 2. Macro SUBTICKS_PER_SECOND, line 59",2/23/06
ProjectE - TIM - 1618,Unused functions in the Build 3 FSW,4,"The following functions are unused in the the Build 3 FSW. There is no indication of the status of these functions for the ProjectE FSW. File SPM.c Function SPM_registerCheckConditionFunc, line 1549 File IocSim.c Function M1553_Int_Status, line 3606 File vml_constant_table.c Function vml_constant_table_initialize, line 228 File vml_create.c Function vml_create_assignment, line 1451 Function vml_create_branch, line 1494 Function vml_create_call_parameter, line 1539 Function vml_create_check_labels_declared, line 1571 Function vml_create_comparison_variable, line 1605 Function vml_create_declare_variable, line 1645 Function vml_create_delay, line 1745 Function vml_create_else, line 1773 Function vml_create_else_if, line 1808 Function vml_create_end_body, line 1854 Function vml_create_end_if, line 1889 Function vml_create_end_of_line, line 1931 Function vml_create_end_while, line 1960 Function vml_create_file_id, line 1996 Function vml_create_if, line 2037 Function vml_create_if_condition, line 2081 Function vml_create_initialize, line 2123 Function vml_create_issue, line 2164 Function vml_create_issue_hex, line 2225 Function vml_create_issue_var, line 2272 Function vml_create_label, line 2316 Function vml_create_noop, line 2343 Function vml_create_parameter, line 2369 Function vml_create_return, line 2411 Function vml_create_simple_expr, line 2435 Function vml_create_spawn, line 2460 Function vml_create_string, line 2488 Function vml_create_string_const, line 2513 Function vml_create_test_and_set, line 2599 Function vml_create_transfer_buffer_to_file, line 2710 Function vml_create_variable, line 2747 Function vml_create_version, line 2774 Function vml_create_wait, line 2811 Function vml_create_wait_compare, line 2863 Function vml_create_while, line 2917 Function vml_create_while_condition, line 2961 Function add_while_branch_to_buffer, line 781 File vml_messages.c Function vml_messages_error_or_fatal_present, line 597 Function vml_messages_initialize, line 631 Function vml_messages_num_warnings, line 651 Function vml_messages_set_exit_on_fatal, line 786 File vml_storage.c Function vml_storage_append_hex_value, line 253 Function vml_storage_increment_instructions, line 431 Function vml_storage_initialize, line 482 File vml_symbol_table.c Function vml_symbol_table_print, line 222 File vml_utils.c Function vml_utils_check_for_keyword, line 725 Fucntion vml_utils_close_outputs, line 833 Function vml_utils_interpret_command_line, line 995",2/23/06
ProjectE - TIM - 1617,Unused functions in the Build 3 FSW,4,"The following functions are unused in the the Build 3 FSW. There is no indication of the status of these functions for the ProjectE FSW. File mcCme.c Function mcCme_ReadDiscrete, line 456 File mcMain.c Function mc_init, line 143 Function mcMain_GetFpCond, line 1980 Function mc_main, line 314 Function mc_hw, line 501 Function mc_telem, line 624 Function mc_nanny, line 775",2/23/06
ProjectE - TIM - 1616,Unused function parameters in Build 3 FSW,4,"The following function parameters are unused in the the Build 3 FSW. There is no indication of the status of these parameters for the ProjectE FSW. File mcAfm.c 1. Parameter 'this', line 1304 in function mcAfm_TestTips_chk 2. Parameter 'this', line 1406 in function mcAfm_TestTips_exe 3. Parameter 'this', line 1792 in function mcAfm_SetDynamic_chk 4. Parameter 'this', line 1833 in function mcAfm_SetDynamic_exe 5. Parameter 'this', line 1917 in function mcAfm_SetStatic_chk 6. Parameter 'this', line 1917 in function mcAfm_SetStatic_exe 7. Parameter 'this', line 2210 in function mcAfm_Raw_chk 8. Parameter 'this', line 2357 in function mcAfm_Boot_chk 9. Parameter 'this', line 2648 in function mcAfm_InitBridge_chk 10. Parameter 'this', line 2851 in function mcAfm_InitPlane_chk 11. Parameter 'this', line 3054 in function mcAfm_InitPll_chk 12. Parameter 'this', line 3395 in function mcAfm_DoLine_chk 13. Parameter 'this', line 4385 in function mcAfm_Enable_exe 14. Parameter 'this', line 4412 in function mcAfm_Disable_exe 15. Parameter 'this', line 4566 in function mcAfm_AutoImage_exe 16. Parameter 'this', line 4586 in function mcAfm_AutoImage_tlm 17. Parameter 'this', line 4606 in function mcAfm_HealthCheck_chk 18. Parameter 'this', line 4647 in function mcAfm_HealthCheck_exe 19. Parameter 'this', line 699 in function mcAfm_FrqTest_chk File mcOm.c 1. Parameter 'this', line 220 in function mcOm_Enable_exe 2. Parameter 'this', line 247 in function mcOm_Disable_exe File mcTable.c 1. Parameter 'this', line 891 in function mcTable_Download_exe 2. Parameter 'this', line 956 in function mcTable_Save_chk 3. Parameter 'this', line 989 in function mcTable_Save_exe File mcTecp.c 1. Parameter 'this', line 491 in function mcTecp_Disable_exe File mcWchem.c 1. Parameter 'this', line 2591 in function mcWchem_Disable_exe",2/23/06
ProjectE - TIM - 1615,Unused local variables in Build 3 FSW,4,"The following local variables are unused in the the Build 3 FSW. There is no indication of the status of these variables for the ProjectE FSW. 1. Variable 'num_args', line 503 in file vml_messages.c 2. Variable 'i', line 599 in file vml_messages.c 3. Variable 'i', line 653 in file vml_messages.c 4. Variable 'result', line 376 in file vml_utils.c 5. Variable 'num_bytes', line 884 in file vml_utils.c 6. Variable 'value_chars', line 247 in file vml_constant_parser.c 7. Variable 'len', line 538 in file vml_constant_parser.c 8. Variable 'i', line 78 in file vml_constant_table.c 9. Variable 'index', line 1998 in vml_create.c 10. Variable 'i', line 2125 in file vml_create.c. 11. Variable 'i', line 2274 in file vml_create.c 12. Variable 'kind', line 599 in file vml_create.c 13. Variable 'max', line 200 in file vml_storage.c 14. Variable 'i', line 484 in file vml_storage.c 15. Variable 'str', line 690 in file vml_storage.c 16. Variable 'len', line 691 in file vml_storage.c 17. Variable 'i', line 72 in file vml_symbol_table.c",2/23/06
ProjectE - TIM - 1614,Unused global variables in Build 3 FSW,4,"The following global variables are unused in the the Build 3 FSW. There is no indication of the status of these variables for the ProjectE FSW. 1. Variable 'assignment_dest', line 53 in file vml_storage.c 2. Variable 'pipe_to_tool', line 201 in file vml_utils.c 3. Variable 'pipe_to_tool', line 202 in file vml_utils.c",2/23/06
ProjectE - TIM - 1613,Uninitialized variable in Build 3 FSW,3,"The variable, 'scTime', declared at line 397 is always used before being set in sam_Separation_Monitor.c function. ‘scTime’ is used on lines: 469, 491 and 514",2/23/06
ProjectE - TIM - 1612,Possible uninitialized variable in Build 3 FSW,3,"The variable, 'num_bytes', declared at line 1536 in vml_utils.c is used before being set in the vml_utils_start_tool function. This is the case when the call to fopen is unsuccessful on line 1554. If unsuccessful, then 'num_bytes' is returned on line 1567 without being initialized. It is not clear if the desired implementation is to allow the compiler to set the initial value.",2/23/06
ProjectE - TIM - 1610,"Inst4 SRS Requirements 5504-7, 5504-8, and 5504-9 Are Inconsistent with Previous SRS Versions",3,"Previous numbering of these L5 Requirements is as follows: 5504-6 The software shall be able to halt Inst4 operation at any time. 5504-7 The software shall be able to resume Inst4 operation from the last halted state. 5504-8 The software shall be able to abort Inst4 operation at any time. 5504-9 The software shall provide a mechanism to correlate the time of a gas-release event detected in the EGA to the time of a phase transition in the TA to within less than 5 seconds. The current number of these L5 Requirements is as listed here: 5504-6 The software shall be able to halt Inst4 operation at any time. 5504-7 The software shall be able to abort Inst4 operation at any time. 5504-8 The software shall provide a mechanism to correlate the time of a gas-release event detected in the EGA to the time of a phase transition in the TA to within less than 5 seconds. Issue: With the current requirements, the software will have the ability to halt without the ability to resume. The precedent for deleting requirements has been to leave a gap in the numbering of the requirements opposed to renumbering the requirements. Artifacts: 1. Inst4 SRS, Ver 2.2, 2-4-05 2. Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",2/9/06
ProjectE - TIM - 1608,Communication Packets Requirements Remain Untested,3,"Artifacts: 1. Inst10 Device Manager Software Test Plan, 8 November 2005, Initial Version, PHX-415-329, JPL D-32317 2. Inst10 Device Manager Software Requirements Document, 22 August 2005, Initial version, PHX-427-327, JPL D-31315 The following requirements remain untested: 3030115 - All PACI serial communication packets shall be a non-zero and even number of bytes, because the PACI transfers 16-bit words (2 bytes) at a time. 3030120 - METDM-to-Inst10 (command) packets shall be 1022 bytes maximum. 3030130 - Inst10-to-METDM (response) packets shall be 4094 bytes maximum.",1/27/06
ProjectE - TIM - 1607,Fault Detection Requirement Remain Untested,3,"Artifacts: 1. Inst10 Device Manager Software Test Plan, 8 November 2005, Initial Version, PHX-415-329, JPL D-32317 2. Inst10 Device Manager Software Requirements Document, 22 August 2005, Initial Version, PHX-427-327, JPL D-31315 Requirement 3020410 ""METDM shall monitor and detect faults, and report them using the FSW-standard fault reporting facility as defined in ProjectE Payload FSW API Guide (PHX-04-0057)."" remains untested.",1/27/06
ProjectE - TIM - 1604,Requirement 3.3.2.1 Traces to Parent Requirement That Is TBD,3,"Requirement 3.3.2.1 traces to parent HSICD requirement that is TBD. 3.3.2.1: The Inst5 FSW shall hold the Inst5 Reset discrete line in ""reset for a minimum of 10ms to force the Inst5 hardware to reset.""",1/24/06
ProjectE - TIM - 1603,Requirement 3.1.2.2 Traces to Parent Requirement That Is TBD,3,"Artifact: Inst5 Flight Software Requirements Document - Rev. Priliminary, Preliminary Release, JPL D-32810, PHX-425-003, 13 September 2005 Requirement 3.1.2.2 traces to a parent requirement in the LMAPI that is TBD. ""3.1.2.2: The Inst5 FSW shall be capable of accepting commands from the command queue of lengths from 2 to 248 bytes.""",1/24/06
ProjectE - TIM - 1602,Inst10 Test Case T7 Traces to Non-Existent Requirements,4,"Artifacts: 1. Inst10 Device Manager Software Test Plan (METDM-STP), 15 November 2005, Initial Version, PHX-415-329, JPL D-32317 2. Inst10 Software Requirements Document (METDM-SRD), 22 August 2005, Initial Version, PHX-425-327, JPL D-32315 The RTVM provided traces for test case T7 with requirements 3020411, 3020412, 3020413, and 3020414. These requirements do not exist in the SRD.",1/15/06
ProjectE - TIM - 1601,Inst10 Requirements are Not Fully Covered and are Not Traced to Test Cases,4,"Artifacts: 1. Inst10 Device Manager Software Test Plan, 8 November 2005, Initial Version, PHX-415-329, JPL D-32317 2. Inst10 Device Manager Software Requirements Document, 22 August 2005, Initial Version, PHX-427-327, JPL D-31315 The RTVM provides the only traces for requirements; however, there are traces that appear to be missing. The following requirements should be included in the RTVM 3020100, 3020200, 3020210, 3020250, 3020260, 3020270, 3020280, 3020310, 3020320, 3050200, 3060300, 3060410, 3060700 and 3060720. Although the requirements can be added to the RTVM and traced to test cases, the test cases do not fully cover the requirements.",1/15/06
ProjectE - TIM - 1600,"Inst10 Test Cases Are Inconsistently Documented, Broad in Scope, and Vague Regarding Results",2,"Artifacts: 1. Inst10 Device Manager Software Test Plan, 8 November 2005, Initial Version, PHX-415-329, JPL D-32317 2. Inst10 Device Manager Software Requirements Document, 22 August 2005, PHX-425-327, JPL D-32315 All the test cases are inconsistently documented, broad in scope, and vague regarding expected results. There is no standard format that indicates the purpose, the description, and the expected results of each test case. In most cases, there is one general test to be performed; however, there are cases where the tests can be broken down into multiple tests. (i.e., ""5.2. Test Case T2: Power On/Off, Enbl/Dsbl LIDAR, Model Estimation"" and ""5.6: Test Case: T6: S1C""). This description applies to all test cases traced to these requirements: 3020330, 3020420, 3030100, 3030135, 3030150, 3040100, 3040110, 3040120, 3040130, 3040140, 3040142, 3040160, 3050110, 3050360, 3050370, 3050390, 3050410, 3050440, 3050450, 3050510, 3050520, 3060100, 3060600, 3060710, 3071000, 3080110, 3080130, 3080140, 3120030, 3120200, 3130210, 3130150, 3130250, 3130350, 3130450, 3140150, 3140350, 3150150, 3150350",1/15/06
ProjectE - TIM - 1599,"Inst10 Test Cases T2, T3, T4, T5, T6, and T7 Trace Requirement 3070100 Which Contains Specifications That Are TBD",3,"Artifacts: 1. Inst10 Device Manager Software Test Plan (METDM-STP), 8 November 2005, Initial Version, PHX-415-329, JPL D-32317 2. Inst10 Device Manager Software Requirements Document, 22 August 2005, Initial Version, PHX-425-327, JPL D-32315 3. Inst10 to ProjectE Lander Software ICD, 26 July 2005, Revision 1.8, MDR-PHX-ICD-7781 Test cases ""T2: Power On/Off, Enbl/Dsbl LIDAR, Model Estimation"", ""T3: Recording and DLSD"", ""T4: ULSW"", ""T5: CCD"", ""T6: S1C"", and ""T7: Fault Protection and Miscellaneous"" trace to requirement 3071000 which contains specifications that are TBD. Requirement 3071000 states that ""For composing commands and parsing responses, METDM shall adhere to MDR-PHX-ICD-7781 for formats, field positions, constants, checksum computation, etc."" Data elements used to describe the overall status of the Inst10 in section ""3.5.3 Inst10 Status"" in the ICD contain Specified Range values that are ""TBD"". Test ranges and expected results are unspecified. Also, ""etc."" does not clarify other types of values that require testing.",1/15/06
ProjectE - TIM - 1597,Inst6 - Test Case TC_Inst6a_INIT011 Does Not Fully Cover SRS 5.1.5,2,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst6a_INIT011 does not fully cover SRS 5.1.5 The Verification text says to ""Verify that the expected amount of heap memory is allocated...” It does not verify that the ""...memory allocation shall not change until the software is restarted or reinitialized."" The Description and Verification text are inconsistent with other test cases that cover configuration files and default values. The traced requirement ""6.7.2 Dynamic Memory Allocation Parameter"" states ""The MIS software shall request dynamic memory at initialization from the S/C FSW on the basis of a configuration parameter. If no valid configuration file is available the MIS SW shall allocate a default amount of memory utilizing a default parameter value."" There may be some confusion during testing regarding the testing with and without a configuration parameter.",1/13/06
ProjectE - TIM - 1596,Inst6 - Unable to Determine Correct Power Procedures for TC_Inst8_OPS115,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst8_OPS115 covers more than the scope of the requirement SRS 7.3.7. The test is to verify power on and power off procedures. The requirement only describes the Shutdown State. It is not possible to determine the correct power procedures for this test.",1/13/06
ProjectE - TIM - 1595,"Inst6 SRS 6.4.1, 7.2.11.6, 7.2.11.7, and 7.2.11.8 Remain Untested and SRS 7.2.11.12 Is Missing A Trace",2,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 According to section ""1.6 Test Coverage"", ""...all functional requirements in the SRS document must be addressed by at least one test case."" There will remain untested with the current test plan: ""6.4.1 Operational Parameters"", ""7.2.11.6 Inst6 Azimuth Park Position"", ""7.2.11.7 Inst6 Shutdown Procedure"", and ""7.2.11.8 Inst6 Shutdown Position"". When the component is parked or shut down there is safing that needs to be done to protect the component. Currently there is no test case to cover the safing involved for the Inst6 Azimuth Park Position, the Inst6 Shutdown Procedure or its Shutdown Position. Requirement ""7.2.11.12 Inst6 Shutdown State Verification"" is missing a trace to test case TC_Inst6_OPS128.",1/13/06
ProjectE - TIM - 1594,Inst6 Test Case TC_Inst8_OPS110 Is Missing A Trace,4,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst8_OPS110 is missing a traces in the Requirements text. SRS 8.5.2 is cross-references with TC_Inst8_OPS110 in Appendix A and is covered by the test case.",1/13/06
ProjectE - TIM - 1593,Inst6 Test Case TC_Inst8_OPS107 Is Inconsistently Documented,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst8_OPS107 is inconsistently documented with other requirements regarding testing with a configuration data file and without a configuration data file. Other test cases provided separate descriptions for testing with and without configuration data files. Not providing individual tests may cause some confusion during testing.",1/13/06
ProjectE - TIM - 1592,Inst6 Test Case TC_Inst8_OPS104 Does Not Trace To SRS 7.2.9.1.7,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst8_OPS104 does not trace to SRS 7.2.9.1.7. Test case TC_Inst8_OPS104 is a Inst8 test case; whereas, SRS 7.2.9.1.7 is an Inst6 Motion Functionality requirement.",1/13/06
ProjectE - TIM - 1591,Inst6 Test Case TC_Inst8_OPS100 Does Not Cover SRS 7.3.2,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars ProjectE Scout Lander, Version 1.5, 20 September 2005 Test case TC_Inst8_OPS100 does not cover SRS 7.3.2. The test is for a Inst8_STOW command; whereas, the requirement 7.3.2 specifices a safe mode command or safe mode signal.",1/13/06
ProjectE - TIM - 1590,Inst6 Test Case TC_Inst6_OPS128 Does Not Trace To SRS 7.3.7 And Is Missing A Trace,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 The only provided trace for TC_Inst6_OPS128 is to SRS 7.3.7; however, TC_Inst6_OPS128 does not trace to requirement SRS 7.3.7 and is missing a trace. SRS 7.3.7 is a Inst8 requirement (""Inst8 Shutdown State Verification). The requirement that this test should trace to is SRS 7.2.11.12 Inst6 Shutdown State Verification.",1/13/06
ProjectE - TIM - 1589,"Inst6 Test Case TC_Inst6_OPS126, TC_Inst8_OPS113, and TC_Inst6a_OPS101 Contain A Typographical Error",5,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst6_OPS126, TC_Inst8_OPS113, and TC_Inst6a_OPS101 traces to SRS 6.4.1.2 in the Requirements text and is cross-references with it in Appendix A. Requirement 6.4.1.2 does not exist in the SRS; however, the Summary and Description in Appendix A match the requirement title and text for requirement 6.4.2.1 in the SRS. (""Commanded Parameter Overrides"", ""The instrument FSW shall have the ability to accept parameter values via a command, which will then remain in effect until the next restart or until new values are sent in a following command."") It appears that 6.4.1.2 is a typographical error.",1/12/06
ProjectE - TIM - 1588,Inst6 Test Case TC_Inst6_OPS124 Is Missing a Trace,4,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst6_OPS124 is missing the trace for SRS 8.5.2 in the Requirements text. It is cross-reference with 8.5.2 in Appendix A and does verify the requirement.",1/12/06
ProjectE - TIM - 1587,Inst6 Test Case TC_Inst6_OPS113 Has a Duplicate Verification and Does Not Fully Cover SRS 7.2.9.1.2.,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test case TC_Inst6_OPS113 does not fully cover requirement SRS 7.2.9.1.2. Requirement 7.2.9.1.2 states that ""All azimuth and elevation motion shall be specified in either an absolute number of steps from the home position, or as a relative number of steps from the current position."" The relative number of steps for the elevation motion remains untested. Test cases of other requirements containing specifications for both absolute positioning and relative positioning provide a test for each type of positioning. The Verification text (""Verify that the elevation axis can be commanded to any position within the end stop bounds in absolute positioning mode."") appears twice in the test case.",1/12/06
ProjectE - TIM - 1586,"Inst6 Test Cases TC_Inst6_OPS109, TC_Inst6_OPS110, and TC_Inst6_OPS111 Do Not Trace to SRS 7.2.6",4,"Artifacts: 1. MAGI Test Cases Definition V2 Software Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_OPS109, TC_Inst6_OPS110, and TC_Inst6_OPS111 do not trace to SRS 7.2.6. TC_Inst6_OPS109 is an Inst6 Azimuth Preheat test, TC_Inst6_OPS110 is an Inst6 Elevation Preheat test, and TC_Inst6_OPS111 is an Inst6 Filter Wheel Preheat test. SRS 7.2.6 is a Inst8 Preheat Activation requirement.",1/12/06
ProjectE - TIM - 1585,"Inst6 Test Case TC_Inst6_OPS109, TC_Inst6_OPS110, and TC_Inst6_OPS111 Are Inconsistently Documented",3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_OPS109, TC_Inst6_OPS110, and TC_Inst6_OPS111 are inconsistently documented with other test cases regarding testing with a configuration data file and without a configuration data file. SRS 7.1 states that ""...motion control parameters shall be utilized by the instrument flight software and obtained from configuration data files or from predefined default values embedded within the software."" Test cases TC_Inst6_INIT004, TC_Inst8_INIT004, and TC_Inst6a_INIT004 provide Description A for the test where there is a configuration data file present and Description B for the test where a configuration data file does not exist. These test cases also provide Verification A and Verification B to indicate what needs to be verified with each test. Test cases TC_Inst6_OPS109, TC_Inst6_OPS110, and TC_Inst6_OPS111 have one test Description: ""Issue an ... command."", which implies that one test is to be performed. The Verification text for each of these test cases contains the instructions: ""Verify that preheating is started or stopped in accordance with the parameters values provided by an ... command."" and ""Verify that preheating is started or stopped in accordance with the parameters values contained in the configuration data file."" The verification instructions indicates that two tests need to be performed.",1/12/06
ProjectE - TIM - 1583,Inst6 Test Case TC_Inst6_OPS100 Contains Typographical Errors,5,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5 20 September 2005 Test case TC_Inst6_OPS100 traces to requirements 7.2.12, 7.2.12.1, and 7.2.12.2 in the Requirements text and cross-references them in Appendix A. Requirements 7.2.12, 7.2.12.1, and 7.2.12.2 do not exists; however the Summary and Description for 7.2.12.1 and 7.2.12.2 match the requirement title and text for 7.2.11.9 and 7.2.11.10 in the SRS. The Summary for 7.2.12 matches the requirement title for 7.2.11.5 in the SRS, and the Description is similar to the requirement text, but not verbatim. It appears that these are typographical errors.",1/12/06
ProjectE - TIM - 1582,"Inst6 Test Cases TC_Inst6_OPS005, TC_Inst8_OPS005, and TC_Inst6a_OPS005 Containt a Typgraphical Error",5,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_OPS005, TC_Inst8_OPS005, and TC_Inst6a_OPS005 trace to SRS 7.2.12.3 in the Requirement text and are cross-referenced with it in Appendix A. Requirement 7.2.12.3 does not exist in the SRS; however the Summary and Description for 7.1.12.3 in Appendix A match the requirement title and text of requirement 7.2.11.11 in the SRS (""Inst6 Shutdown Actuator Position Data"", ""All actuator positions at shutdown shall be saved to persistent memory."") It appears that ""7.2.12.3"" is a typographical error. Additionally, the cross-reference for TC_Inst6a_OPS005 is missing in Appendix A.",1/12/06
ProjectE - TIM - 1581,"Inst6 Test Cases TC_Inst6_OPS004, TC_Inst8_OPS004, and TC_Inst6a_OPS004 Are Missing a Trace",4,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Component of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_OPS004, TC_Inst8_OPS004, and TC_Inst6a_OPS004 are inconsistently documented with other test cases in regards to traced requirements. Requirements 6.6.2.1 and 6.6.2.2 are noted in the Requirements text for all three cases, but the cross-reference for TC_Inst6a_OPS004 is missing in Appendix A. Test cases TC_Inst6_OPS004 and TC_Inst8_OPS004 are cross-referenced with Requirement 6.6.2.3 in Appendix A, but the trace is missing in the Requirements text of the two test cases. Additionally test case TC_Inst6a_OPS004 covers Requirement 6.6.2.3, but the trace is missing in the Requirements text and the cross-reference is missing in Appendix A.",1/12/06
ProjectE - TIM - 1580,Inst6 Test Cases TC_Inst6_SYS004 and TC_Inst8_SYS004 Do Not Fully Cover Requirement LMA PHX-04-0057 3.14,3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. ProjectE Payload FSW API Guide, PHX-04-0057, Rev. Basic, 1 September 2004 Test cases TC_Inst6_SYS004 and TC_Inst8_SYS004 do not fully cover requirement LMA PHX-04-0057 3.14. The test covers ""...the ability to turn power switches on/off"", but does not cover ""...the ability to...register for power switch status notification, and support EPS power utilization and modeling."" The later part of the requirement is covered by test cases TC_Inst6_SYS006 and TC_Inst8_SYS006, whose purposes are to ""Verify that the software monitors runtime status via EPS.""",1/12/06
ProjectE - TIM - 1579,"Inst6 Test Cases TC_Inst6_SYS002, TC_Inst8_SYS003, and TC_Inst6a_SYS003 Are Inconsistently Documented",2,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Coding Conventions, Revision J, 17 June 2003 Test cases TC_Inst6_SYS002, TC_Inst8_SYS002, and TC_Inst6a_SYS002 are inconsistently documented in the Verification text regarding the command received that is to be tested. Test cases TC_Inst6_SYS002 and TC_Inst6a_SYS002 indicate testing of the MSG_SYS_INIT command is to be performed; whereas, test case TC_Inst8_SYS002 indicates testing of the MSG_Inst8_INIT command is to be performed. This has been assigned a Severity 2, since there is a chance the wrong command could be executed.",1/12/06
ProjectE - TIM - 1578,"Inst6 Test Cases TC_Inst6_SYS001, TC_Inst8_SYS001, and TC_Inst6a_SYS001 Do Not Fully Cover SRS 5.1.1",3,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 200 3. ProjectE Payload FSW API Guide, PHX-04-0057, Rev. Basic, 1 September 2004 Test cases TC_Inst6_SYS001, TC_Inst8_SYS001, and TC_Inst6a_SYS001 do not fully cover SRS 5.1.1 and the documented trace is inconsistent with other test cases. The requirement states ""The software shall utilize services provided by the flight software in accordance with the LMA Flight Software API usage guide."" The message services described in the FSW API usage guide are START, STOP, INIT, SAVE, PING and PONG, and FP_ENABLE. PING and PONG are verified by these test cases, and INIT is verified by test cases TC_Inst6_SYS002, TC_Inst8_SYS002, and TC_Inst6a_SYS002. START, STOP, SAVE, and FP_ENABLE are not covered by any test cases. The cross-reference of 5.1.1 with TC_Inst6a_SYS001 is missing in Appendix A.",1/12/06
ProjectE - TIM - 1577,"Inst6 Test Cases TC_Inst6_INIT005, TC_Inst8_INIT005, and TC_Inst6a_INIT005 Contain Typographical Errors",5,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_INIT006, TC_Inst8_INIT006, and TC_Inst6a_INIT006 trace to SRS 6.4.1.3 in the Requirements text and are cross-referenced with it in Appendix A. Requirement 6.4.1.3 does not exist in the SRS; however, the Summary and Description in Appendix A match the requirement title and text of requirement 6.4.2.2 in the SRS. (""Default Parameters"", ""Each instrument shall be implemented with a default set of parameters suitable for general use and derived from pre-launch testing."") It appears that ""6.4.1.3"" is a typographical error.",1/12/06
ProjectE - TIM - 1576,Inst6 Test Cases TC_Inst6_INIT005 and TC_Inst8_INIT005 Are Incorrectly Traced to Requirments,2,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Marsk Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_INIT005 and TC_Inst8_INIT005 provide a trace to requirement requirement 7.2.8 (""The instrument control software shall not command actuator motion if an actuator is below its rated minimum operating temperature.""); however, it is not covered by the tests (""Verify that the software loads the configuration data file.""). The actuator motion may end up being commanded even if the actuator is below its minimum operating temperature, possibly causing the component to break. Test cases TC_Inst6_INIT005 and TC_Inst8_INIT005 are inconsistently documented with other test cases regarding traced requirements. Requirements 7.1.1 and 7.1.7 are cross-referenced with these two cases in Appendix A, but do not appear in the Requirements text for either test case.",1/12/06
ProjectE - TIM - 1575,"Inst6 Test Cases TC_Inst6_INIT005, TC_Inst8_INIT005, and TC_Inst6a_INIT005 Contain Another Typographical Error",5,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_INIT005, and TC_Inst8_INIT005, and TC_Inst6a_INIT005 trace to SRS 6.4.3 in the Requirements text and are cross-referenced with it in Appendix A; however, the Summary and Description in Appendix A match the requirement title and text for requirement 6.4.4 in the SRS. (""Implementing configuration Parameter Data"", ""Configuration parameter data items shall be deemed to be available for readout immediately upon receipt of an initialization command."") The Summary and Description for 6.4.2 in Appendix A match the requirement title and text for requirement 6.4.3 in the SRS (""Flight Configuration Data File Allocations"", ""There shall be one configuration file for each MIS SW task, with auxiliary files as necessary (storage space permitting.)"") Since the actual requirement 6.4.3 lends itself more to an Inspection verification as indicated for 6.4.2 in Appendix A and 6.4.4 is more appropriately tested by TC_Inst6_INIT005, TC_Inst8_INIT005, and TC_Inst6a_INIT005, it appears that 6.4.3 is a typographical error.",1/12/06
ProjectE - TIM - 1574,"Inst6 Test Cases TC_Inst6_INIT005, TC_Inst8_INIT005, and TC_INIT005 Contain a Typographical Error",5,"Artifacts: 1. MAGI Test Cases Definition V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8 and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_INIT005, TC_Inst8_INIT005, and TC_Inst6a_INIT005 trace to SRS 6.4.1.1 in the Requirements text and are cross-referenced with in in Appendix A. Requirement 6.4.1.1 does not eixsts in the SRS; however, the Summary and Description in Appendix A match the requirement title and text of 6.4.2 in the SRS. (""Retrieiving Configuration Data - Flight Configuration"", ""The software shall provide the ability to load configuration parameters from a file stored in the spacecraft's non-volatile memory."") It appears ""6.4.1.1"" is a typographical error.",1/12/06
ProjectE - TIM - 1573,Inst6 Test Cases TC_Inst6_INIT004 and TC_Inst6a_INIT004 Inconsistently Worded With TC_Inst8_INIT004,5,"Artifacts: 1. MAGI Test Cases Defintion V2 Software, Version 2.0, 15 November 2005 2. Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components of the Mars Scout ProjectE Lander, Version 1.5, 20 September 2005 Test cases TC_Inst6_INIT004 and TC_Inst6a_INIT004 are inconsistently worded with their Purpose text and test case TC_Inst8_INIT004. The Purpose text for TC_Inst6_INIT004 is: ""Verify that the global data file is read at initialization."" The Purpose text for TC_Inst6a_INIT004 is: ""Verify that the global variables data file is read at initialization."" These two are worded similarly; however, the Purpose text for TC_Inst8_INIT004 is: ""Verify that the global data file is read, or default values are used, at initialization."" Since all three test describe launching a main task twice, once with a global data file and once without a global data file, the purpose should be consistent regarding the objective of the test. TC_Inst6_INIT004: Description A: Launch the main task (Inst6_MainTask) and check that the init_mode parameter is set to Inst6_BOOT_INIT when Inst6_Init() is invoked and a global data is avaliable. Description B: Launch the main task (Inst6_MainTask) and check that the init_mode parameter is set to Inst6_BOOT_INIT when Inst6_Init() is invoked, and no global data file is available. TC_Inst8_INIT004: Description A: Launch the main task (Inst8_MainTask) and check that the init_mode parameter is set to Inst8_BOOT_INIT when Inst8_Init() is invoked and a global data is available. Description B: Launch the main task (Inst8_MainTask) and check that the init_mode parameter is set to Inst8_BOOT_INIT when Inst8_Init() is invoked, and a global data file is NOT available. TC_Inst6a_INIT004: Description A: Launch the main Inst6a task (Inst6a_MainTask) and check that the init_mode parameter is set to Inst6a_BOOT_INIT when Inst6a_Init() is invoked and a global data is available. Description B: Launch the main Inst6a task (Inst6a_MainTask) and check that the init_mode parameter is set to Inst6a_BOOT_INIT when Inst6a_Init() is invoked, and no global data file is available.",1/12/06
ProjectE - TIM - 1572,Inst5 SRS 4.4.2.3 is listed as “obsolete” in Appendix E of Inst5 STP,3,"Inst5 SRS 4.4.2.3 is listed as “obsolete” in Appendix E of Inst5 STP. The SRS 4.4.2.3 in the Inst5 SRS document states “The Inst5 FSW shall implement a command option to initialize the AFM in either static mode or dynamic mode.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1571,Inst5 SRS 4.2.5.3 is listed as “obsolete” in Appendix E of Inst5 STP,3,"Inst5 SRS 4.2.5.3 is listed as “obsolete” in Appendix E of Inst5 STP. The SRS 4.2.5.3 in the Inst5 SRS document states “If movement fails to result in the triggering of a limit switch within the expected number of steps, based on the software’s understanding of the movement’s starting position, flight software will retreat to the movement’s starting position and reattempt the operation TBD times. If the software continues to fail, software will increase power to a TBD level and continue to reattempt the operation TBD times. If software still fails, it will set the stage’s fault condition to “failed.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1570,Inst5 SRS 4.1.4.8 is listed as “obsolete” in Appendix E of Inst5 STP,3,"Inst5 SRS 4.1.4.8 is listed as “obsolete” in Appendix E of Inst5 STP. The SRS 4.1.4.8 in the Inst5 SRS document states “The Inst5 FSW shall implement a command that performs a multiple sensor read function that reads sensors and runs experiments in the order specified below at a commanded rate for a commanded duration [FRD 2.5.10]: a) Read all ISEs b) Read Pressure and Temperature c) Perform a CV experiment d) Perform an ASV experiment e) Perform a DOX experiment f) Perform a Conductivity experiment g) Perform a Chronopotentiometry experiment h) Read all ISEs ” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1569,Inst5 SRS 4.1.4.7 is listed as “obsolete” in Appendix E of Inst5 STP,3,"Inst5 SRS 4.1.4.7 is listed as “obsolete” in Appendix E of Inst5 STP. The SRS 4.1.4.7 in the Inst5 SRS document states “The Inst5 FSW shall implement a command that heats the beaker until the temperature indicates that the ice is melted, and then initiates data collection.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1568,No test set is provided in the Inst5 STP to trace to Inst5 SRS 3.1.2.2,3,"No test set is provided in the Inst5 STP to trace to SRS 3.1.2.2 ""TheMECA FSW shall be capable of accepting commands from the command queue of lengths from 2 to 248 bytes."" SRS 3.1.2.2 is omitted or not addressed in the Project provided traceability matrix Section 15 Appendix E – Traceability (Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005) ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1567,Inst5 test set 10.2 FP-HEALTH does not verify SRS 5.2.1.5,3,"Inst5 test set 10.2 FP-HEALTH does not verify SRS 5.2.1.5. SRS 5.2.1.5 states “The Inst5 FSW shall automatically increment the last three digits of a data set ID number for successive data reads taken for any one command. A valid data set ID number will contain the following: a) a 1 alpha-character identifer indicating the instrument from which the data was read b) a 2 alpha-character identifier for sub-category identification c) a 2 digit sol identifier d) a 3 digit index identifier” Among the Test Objectives of Inst5 test set 10.2 FP-HEALTH, “Verify that FSW generates valid data products, time-stamped and ID-numbered, to report the results of health checks” is specified. Inst5 STP test set 10.2 FP-HEALTH, however, does not explicitly verify SRS 5.2.1.5 requirement.",1/6/06
ProjectE - TIM - 1566,Inst5 test set 9.1 SUPPORT does not fully verify SRS 4.6.1.3,3,"Inst5 test set 9.1 SUPPORT does not fully verify SRS 4.6.1.3. Inst5 SRS 4.6.1.3 states “The Inst5 FSW shall maintain a table of user-modifiable parameters, which are read at bootup and save at power-down.” Among the Test Objectives of Inst5 test set 9.1 SUPPORT, “Verify that FSW can force table saving and loading across power-downs” is specified, and, in the Test Method, “Verify that tables are downlinked into valid data products, and that the table contents are correct” and “Issue MC_CMD_SAVE_TBL and verify that table contents are saved, and that the contents are correct” are specified. Inst5 STP test set 9.1 SUPPORT, however, does not verify “a table of user-modifiable parameters” is “read at bootup.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1565,Inst5 test set 8.1 TECP-BASIC does not verify SRS 6.2.1.8,3,"Inst5 test set 8.1 TECP-BASIC does not verify SRS 6.2.1.8. The SRS 6.2.1.8 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.8 in the Inst5 SRS states that “Inst5 FSW shall check the data interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.8 provided in the Inst5 STP has no “once per second” specification. Also STP test set 8.1 TECP-BASIC does not verify that FSW checks the data interface with each command, when checking is enabled. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1564,Inst5 test set 8.1 TECP-BASIC does not verify SRS 6.2.1.7,3,"Inst5 test set 8.1 TECP-BASIC does not verify SRS 6.2.1.7. The SRS 6.2.1.7 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.7 in the Inst5 SRS states that “Inst5 FSW shall check the command interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.7 provided in the Inst5 STP has no “once per second” specification. Also, it is not clear if the “when checking is enabled” condition is included in the Inst5 test set 8.1 TECP-BASIC. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1563,Inst5 test set 8.1 TECP-BASIC does not verify SRS 5.2.1.5,3,"Inst5 test set 8.1 TECP-BASIC does not verify SRS 5.2.1.5. SRS 5.2.1.5 states “The Inst5 FSW shall automatically increment the last three digits of a data set ID number for successive data reads taken for any one command. A valid data set ID number will contain the following: a) a 1 alpha-character identifer indicating the instrument from which the data was read b) a 2 alpha-character identifier for sub-category identification c) a 2 digit sol identifier d) a 3 digit index identifier” Among the Test Objectives of Inst5 test set 8.1 TECP-BASIC, “Verify that FSW downlinks valid TECP data products, time-stamped and ID-numbered, using the high-priority APID” is specified. Inst5 STP test set 8.1 TECP-BASIC, however, does not explicitly verify SRS 5.2.1.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1562,Inst5 test set 8.1 TECP-BASIC does not verify SRS 4.5.2.2,3,"Inst5 test set 8.1 TECP-BASIC does not verify SRS 4.5.2.2. SRS 4.5.2.2 states “The Inst5 FSW shall be capable of altering each of the following FPGA controlled values for the TECP instrument: a) 5v power and breaker b) The input mode (single-ended or differential) c) The polarity (bipolar or unipolar) d) The output data bit order e) Auto-shutdown mode f) ADC run option g) Heaters and measurement enables.” Among the Test Objectives of Inst5 test set 8.1 TECP-BASIC, “Verify that FSW validates all FPGA responses, and faults the instrument given an illegal response” is specified. Inst5 STP test set 8.1 TECP-BASIC, however, does not explicitly verify SRS 4.5.2.2 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1561,Inst5 test set 7.5 AFM-FP does not fully verify SRS 4.4.4.1,3,"Inst5 test set 7.5 AFM-FP does not fully verify SRS 4.4.4.1. Inst5 SRS 4.4.4.1 states “If the AFM fails to scan a substrate, FSW shall reapproach TBD times. If scanning continues to fail, FSW will move on to the next substrate. FSW will not set the fault condition to failed.” STP test set 7.5 AFM-FP does not verify “…If scanning continues to fail, FSW will move on to the next substrate.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1560,The SRS 4.4.3.4 provided in the Inst5 STP (for test set 7.4 AFM-AUTOIMG)is inconsistent with that of the Inst5 SRS document,4,"The SRS 4.4.3.4 provided in the Inst5 STP (for test set 7.4 AFM-AUTOIMG)is inconsistent with that of the Inst5 SRS document. The SRS 4.4.3.4 in the Inst5 SRS states that “The Inst5 FSW shall allow acquisition of forward and backward scanning data from both the topography and error channels, or the phase and error channels, as selected by the user.” The SRS 4.4.3.4 provided in the Inst5 STP has “The Inst5 FSW shall implement a command to take forward and backward scanning image data from any two of the three AFM channels” specification, instead. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1559,The SRS 4.4.3.3 provided in the Inst5 STP (for test set 7.4 AFM-AUTOIMG) is inconsistent with that of the Inst5 SRS document,4,"The SRS 4.4.3.3 provided in the Inst5 STP (for test set 7.4 AFM-AUTOIMG) is inconsistent with that of the Inst5 SRS document. The SRS 4.4.3.3 in the Inst5 SRS states that “The Inst5 FSW shall be able to perform the scan-surface-orientation correction based on an initial limited prescan,” without the inclusion of “(algorithm TBD)” requirement specification as in the Inst5 STP. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1558,Inst5 test set 7.4 AFM-AUTOIMG does not completely verify SRS 4.4.3.2,3,"Inst5 test set 7.4 AFM-AUTOIMG does not completely verify SRS 4.4.3.2. The SRS 4.4.3.2 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 4.4.3.2 in the Inst5 SRS states that “The Inst5 FSW shall implement a commandable option to be able to perform a limited prescan on a sample to determine the maximum scan range possible, and determine the correct scan settings for a full scan,” without the inclusion of “(algorithm TBD)” requirement specification as in the Inst5 STP. STP test set 5.1 7.4 AFM-AUTOIMG verifies SRS 4.4.3.2 with slight deviations. STP test set 7.4 AFM-AUTOIMG verifies that “FSW…performs a pre-scan to determine optimal scan settings, corrects for orientation of the scan surface...automatic selection of high-entropy areas for zoomed scans…” The SRS 4.4.3.2 requires “…to determine the maximum scan range possible, and determine the correct scan settings for a full scan.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1557,Inst5 test set 7.3 AFM-RAW does not fully verify SRS 4.4.2.11,3,"Inst5 test set 7.3 AFM-RAW does not fully verify SRS 4.4.2.11. Inst5 SRS 4.4.2.11 states “The Inst5 FSW shall be capable of reading a 32-byte AFM status message and extracting status information for specified parameters.” STP test set 7.3 AFM-RAW does not verify “…reading a 32-byte AFM status message...,” but it covers verification of ""AFM status return."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1556,Inst5 test set 7.3 AFM-RAW does not fully verify SRS 4.4.2.9,3,"Inst5 test set 7.3 AFM-RAW does not fully verify SRS 4.4.2.9. Inst5 SRS 4.4.2.9 states “The Inst5 FSW shall be capable of sending the AFM a pass-through low-level command (32 bytes).” STP test set 7.3 AFM-RAW does not verify “…sending the AFM a pass-through low-level command (32 bytes),” but it verifies “sending raw ASCII commands.” If the “raw ASCII commands” are equivalent to the “pass-through low-level command (32 bytes),” this needs to be explicitly stated in the associated document. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1555,Inst5 test set 7.2 AFM-ATTRIB does not fully verify SRS 4.4.2.11,3,"Inst5 test set 7.2 AFM-ATTRIB does not fully verify SRS 4.4.2.11. Inst5 SRS 4.4.2.11 states “The Inst5 FSW shall be capable of reading a 32-byte AFM status message and extracting status information for specified parameters.” STP test set 7.2 AFM-ATTRIB does not verify “…reading a 32-byte AFM status message...,” but it covers verification of ""AFM status return."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1554,Inst5 test set 7.1 AFM-BASIC does not verify SRS 6.2.1.8,3,"Inst5 test set 7.1 AFM-BASIC does not verify SRS 6.2.1.8. The SRS 6.2.1.8 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.8 in the Inst5 SRS states that “Inst5 FSW shall check the data interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.8 provided in the Inst5 STP has no “once per second” specification. Also STP test set 7.1 AFM-BASIC does not verify that FSW checks the data interface with each command, when checking is enabled. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1553,Inst5 test set 7.1 AFM-BASIC does not verify SRS 5.2.1.5,3,"Inst5 test set 7.1 AFM-BASIC does not verify SRS 5.2.1.5. SRS 5.2.1.5 states “The Inst5 FSW shall automatically increment the last three digits of a data set ID number for successive data reads taken for any one command. A valid data set ID number will contain the following: a) a 1 alpha-character identifer indicating the instrument from which the data was read b) a 2 alpha-character identifier for sub-category identification c) a 2 digit sol identifier d) a 3 digit index identifier” Among the Test Objectives of Inst5 test set 7.1 AFM-BASIC, “Verify that FSW downlinks valid AFM data products, time-stamped and ID-numbered, using the low-priority APID” is specified, and, in the Test Method, “Verify the FSW downlinks a single-line data product, time-stamped and ID-numbered, using the low-priority APID,” “Verify the FSW downlinks four complete frame data products, time-stamped and ID-numbered, using the low-priority APID,”and “Verify that FSW downlinks an ADC data product, time-stamped and ID-numbered, using the low-priority APID” are specified. Inst5 STP test set 7.1 AFM-BASIC, however, does not explicitly verify SRS 5.2.1.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1552,Inst5 test set 7.1 AFM-BASIC does not fully verify SRS 4.4.2.12,3,"Inst5 test set 7.1 AFM-BASIC does not fully verify SRS 4.4.2.12. Inst5 SRS 4.4.2.12 states “The AFM Status data shall consist of the following: a) Time stamp showing when the command prompting the read was issued to the AFM b) The 32 byte response message returned from a non-scanning AFM command. c) A Inst5 FSW-generated data Set ID number.” Among the Test Objectives of Inst5 test set 7.1 AFM-BASIC, “Verify that FSW downlinks valid AFM data products, time-stamped and ID-numbered, using the low-priority APID” is specified, and, in the Test Method, “Verify the FSW downlinks a single-line data product, time-stamped and ID-numbered, using the low-priority APID,” “Verify the FSW downlinks four complete frame data products, time-stamped and ID-numbered, using the low-priority APID,”and “Verify that FSW downlinks an ADC data product, time-stamped and ID-numbered, using the low-priority APID” are specified. Inst5 STP test set 7.1 AFM-BASIC, however, does not explicitly verify “…b) The 32 byte response message returned from a non-scanning AFM command” of the SRS 4.4.2.12 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/6/06
ProjectE - TIM - 1551,Inst5 test set 7.1 AFM-BASIC does not fully verify SRS 4.4.2.11,3,"Inst5 test set 7.1 AFM-BASIC does not fully verify SRS 4.4.2.11. Inst5 SRS 4.4.2.11 states “The Inst5 FSW shall be capable of reading a 32-byte AFM status message and extracting status information for specified parameters.” STP test set 7.1 AFM-BASIC does not verify “…reading a 32-byte AFM status message...” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1550,Inst5 test set 7.1 AFM-BASIC does not fully verify SRS 4.4.2.7,3,"Inst5 test set 7.1 AFM-BASIC does not fully verify SRS 4.4.2.7. Inst5 SRS 4.4.2.7 states “The Inst5 FSW shall be capable of receiving a complete two-channel 512-point scanline from the AFM via the PACI, which is 512 + 10 = 522 bytes.” STP test set 7.1 AFM-BASIC does not verify the scanline size specification of the SRS 4.4.2.7 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1549,Inst5 test set 7.1 AFM-BASIC does not verify SRS 4.4.2.2,3,"Inst5 test set 7.1 AFM-BASIC does not verify SRS 4.4.2.2. Inst5 SRS 4.4.2.2 states “The Inst5 FSW shall be capable of sending the AFM a software load in multiple packets containing a maximum size of 80 bytes.” Among the Test Objectives of Inst5 test set 7.1 AFM-BASIC, “Verify that the FSW can configure the AFM in either static or dynamic mode, with different default parameters” is specified. Inst5 STP test set 7.1 AFM-BASIC, however, does not explicitly verify the SRS 4.4.2.2 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1548,Inst5 test set 7.1 AFM-BASIC does not verify SRS 3.3.2.5,3,"Inst5 test set 7.1 AFM-BASIC does not verify SRS 3.3.2.5. Inst5 SRS 3.3.2.5 states “The Inst5 FSW shall set the AFM/CME discrete line as specified in the Inst5 Hardware Software ICD to swap communications between the AFM instrument and the CME.” Among the Test Objectives of Inst5 test set 7.1 AFM-BASIC, “Verify that the FSW can configure the AFM in either static or dynamic mode, with different default parameters” is specified. Inst5 STP test set 7.1 AFM-BASIC does not explicitly verify the SRS 3.3.2.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1547,Inst5 test set 6.1 OM-BASIC does not verify SRS 6.2.1.8,3,"Inst5 test set 6.1 OM-BASIC does not verify SRS 6.2.1.8. The SRS 6.2.1.8 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.8 in the Inst5 SRS states that “Inst5 FSW shall check the data interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.8 provided in the Inst5 STP has no “once per second” specification. Also STP test set 6.1 OM-BASIC does not verify that FSW checks the data interface with each command, when checking is enabled. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1546,Inst5 test set 6.1 OM-BASIC does not verify SRS 6.2.1.7,3,"Inst5 test set 6.1 OM-BASIC does not verify SRS 6.2.1.7. The SRS 6.2.1.7 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.7 in the Inst5 SRS states that “Inst5 FSW shall check the command interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.7 provided in the Inst5 STP has no “once per second” specification. STP test set 6.1 OM-BASIC does not verify that FSW checks the command interface with each command, when checking is enabled. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1545,Inst5 test set 6.1 OM-BASIC does not verify SRS 4.3.2.3,3,"Inst5 test set 6.1 OM-BASIC does not verify SRS 4.3.2.3. Inst5 SRS 4.3.2.3 states “The Inst5 FSW shall turn off any powered LEDs upon receipt of any of the following: a) Image data has been acquired by an Inst6/Inst6b FSW global variable. b) After a specified time-out delay c) A specific command to turn them off.” In the Test Method of Inst5 test set 6.1 OM-BASIC, “Issue MC_OM_DISABLE. Verify that the LEDs go off, and that FSW sets the OM LEDs to the Disabled state and powers off the OM LEDs” is specified. Inst5 STP test set 6.1 OM-BASIC, however, does not explicitly verify the SRS 4.3.2.3 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1544,Inst5 test set 6.1 OM-BASIC does not verify SRS 4.3.2.1,3,"Inst5 test set 6.1 OM-BASIC does not verify SRS 4.3.2.1. Inst5 SRS 4.3.2.1 states “Inst5 FSW shall initialize all global variables written by Inst5 FSW, which are used to coordinate interoperability of the OM and Inst6/Inst6b software.” STP test set 6.1 OM-BASIC does not verify or trace to the SRS 4.3.2.1 requirement. It verifies “FSW sets the OM-done global variable at the completion of each command,” instead. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1543,Inst5 test set 5.2 STAGE-AFM is inconsistent in the AFM near term,5,"Inst5 test set 5.2 STAGE-AFM is inconsistent in the AFM near term. The Test Objectives of test set 5.2 STAGE-AFM include “Verify that FSW stops translation when AFM-near is asserted” but the Test Method defines “Verify AFM approach.” The “AFM approach” and “AFM-near” seem used interchangeably, and, if so, this needs to be stated. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1542,Inst5 test set 5.1 STAGE-BASIC does not completly verify SRS 6.2.1.8,3,"Inst5 test set 5.1 STAGE-BASIC does not completly verify SRS 6.2.1.8. The SRS 6.2.1.8 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.8 in the Inst5 SRS states that “Inst5 FSW shall check the data interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.8 provided in the Inst5 STP has no “once per second” specification. STP test set 5.1 STAGE-BASIC does not include verification for the ""once per second” requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1541,Inst5 test set 5.1 STAGE-BASIC does not completely verify SRS 6.2.1.7,3,"Inst5 test set 5.1 STAGE-BASIC does not completely verify SRS 6.2.1.7. The SRS 6.2.1.7 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.7 in the Inst5 SRS states that “Inst5 FSW shall check the command interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.7 provided in the Inst5 STP has no “once per second” specification. STP test set 5.1 STAGE-BASIC verifies SRS 6.2.1.7 except for the ""once per second” requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1540,Inst5 test set 5.1 STAGE-BASIC does not verify SRS 5.2.1.5,3,"Inst5 test set 5.1 STAGE-BASIC does not verify SRS 5.2.1.5. SRS 5.2.1.5 states “The Inst5 FSW shall automatically increment the last three digits of a data set ID number for successive data reads taken for any one command. A valid data set ID number will contain the following: a) a 1 alpha-character identifer indicating the instrument from which the data was read b) a 2 alpha-character identifier for sub-category identification c) a 2 digit sol identifier d) a 3 digit index identifier” Among the Test Objectives of Inst5 test set 5.1 STAGE-BASIC, “Verify that FSW downlinks valid stage data products, time-stamped and ID-numbered, using the low-priority APID” is specified. Inst5 STP test set 5.1 STAGE-BASIC, however, does not explicitly verify the SRS 5.2.1.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1539,Inst5 test set 5.1 STAGE-BASIC does not completely verify SRS 4.2.4.1,3,"Inst5 test set 5.1 STAGE-BASIC does not completely verify SRS 4.2.4.1. SRS 4.2.4.1 in the Inst5 SRS states “The Inst5 FSW shall initialize the stage at power-on by verifying commandability to each limit-switch delineated position, and then leaving the stage in the safe-to-rotate position,” but the SRS 4.2.4.1 provided in the Inst5 STP has “…then leaving the stage in a TBD position,” instead. STP test set 5.1 STAGE-BASIC covers “leaving the stage in the safe-to-rotate position,” but it is not clear if “verifying commandability to each limit-switch delineated position” is performed. So STP test set 5.1 STAGE-BASIC does not fully verify or trace to the SRS 4.2.4.1 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1538,Inst5 test set 5.1 STAGE-BASIC does not verify SRS 4.2.2.17,3,"Inst5 test set 5.1 STAGE-BASIC does not verify SRS 4.2.2.17. Inst5 SRS 4.2.2.17 states “The Inst5 FSW will maintain and refer to a look-up table (LUT) of stage positions to accomplish all functions including imaging of each substrate.” STP test set 5.1 STAGE-BASIC has no reference or description of the “look-up table (LUT) of stage positions,” thus does not verify or trace to the SRS 4.2.2.17 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1537,Inst5 test set 5.1 STAGE-BASIC does not verify SRS 4.2.2.8,3,"Inst5 test set 5.1 STAGE-BASIC does not verify SRS 4.2.2.8. The Test Output of STP test set 5.1 STAGE-BASIC includes “Software channelized telemetry showing limit switch states, heater states and actuator states,” however, no explicit specification in the 5.1 STAGE-BASIC test set covers the verification of SRS 4.2.2.8. Inst5 SRS 4.2.2.8 states “The Inst5 FSW shall be capable of distinguishing between two states (on/off) and four transitions of the six Stage limit switches: a) Translational “Out” b) Translational “Safe to Rotate” c) Translational “Alternate Safe to Rotate” d) Translational “Focus Position” e) Rotational f) Rotational “Alternate” The physical position associated with these switches depends on whether a low-high transition is detected, or a high-low transition. In addition, it depends on the direction from which they are approached. Thus, for example, the Inst5 FSW shall distinguish four rotation switch transitions as CW low-high, CW high-low, CCW low-high, and CCW high-low, where CW indicates clockwise rotation and CCW counter-clockwise. The FPGA doesn't support high-low detection, but the number of steps is small enough that we can check a step at a time.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1536,Inst5 test set 5.1 STAGE-BASIC does not verify SRS 4.2.2.7,3,"Inst5 test set 5.1 STAGE-BASIC does not verify SRS 4.2.2.7. SRS 4.2.2.7 in the Inst5 SRS states “The Inst5 FSW shall detect limit switch transitions encountered during the move and verify that they are expected, within a parameterized margin, stopping if not, and setting the fault condition to “failed”,” but the SRS 4.2.2.7 provided in the Inst5 STP has “…within a TBD margin…” specification, instead. Also, STP test set 5.1 STAGE-BASIC does not verify or trace to the SRS 4.2.2.7 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1535,Inst5 test set 4.4 WCHEM-FP does not accurately verify SRS 4.1.5.5,3,"Inst5 test set 4.4 WCHEM-FP does not accurately verify SRS 4.1.5.5. SRS 4.1.5.5 states “Unless specifically overridden, the Inst5 FSW shall heat a wet chemistry water tank to at least +3° C (TBR) before activating the water release actuator.” The test set 4.4 WCHEM-FP has as one of the Test Objectives “Verify that water is heated to 3° C before release.” As part of Test Method, Inst5 test set 4.4 WCHEM-FP includes “Hold temperature value down, so that it never gets above 3° C. Verify that the FSW disables the WCL and reports the command failure.” The test set 4.4 WCHEM-FP in “…so that it never gets above 3° C…” is not in compliance with SRS 4.1.5.5, since at 3° C, water release is possible per requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1534,"Inst5 test set 4.3 WCHEM-CONFIG, without TBD, traces to SRS 4.1.3.4",4,"Inst5 test set 4.3 WCHEM-CONFIG, without TBD, traces to SRS 4.1.3.4. The test set 4.3 WCHEM-CONFIG verifies the SRS 4.1.3.4 requirement, but the SRS 4.1.3.4 requirement text provided in the Appendix E of Inst5 STP needs to have the [TBD] removed from “a) The reference electrode [TBD]” to be consistent with that of the Inst5 SRS. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1533,Inst5 test set 4.2 WCHEM-HL does not verify SRS 4.1.4.6,3,"Inst5 test set 4.2 WCHEM-HL does not verify SRS 4.1.4.6. SRS 4.1.4.6 states “The Inst5 FSW shall implement a command to conduct a default or non-default chronopotentiometry experiment on a specified wet chemistry cell.” Among the Test Objectives of Inst5 test set 4.2 WCHEM-HL, “Verify that FSW can conduct complete conductivity, dissolved oxygen, cyclic voltammetry, chronopotentiometry and anodic stripping experiments without user intervention” is specified. Inst5 STP test set 4.2 WCHEM-HL, however, does not explicitly verify the SRS 4.1.4.6 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1532,Inst5 test set 4.2 WCHEM-HL does not verify SRS 4.1.4.5,3,"Inst5 test set 4.2 WCHEM-HL does not verify SRS 4.1.4.5. SRS 4.1.4.5 states ¡§During an ASV experiment, the Inst5 FSW shall command the FPGA to do the following: a) Apply a specified conditioning voltage to the designated working electrode for a specified time period b) Turn on stirring in the active wet chemistry cell c) Apply a specified deposition voltage to the designated working electrode for a specified time period d) Turn off stirring in the active wet chemistry cell e) Apply a specified stripping waveform and retrieve the current data.¡¨ Among the Test Objectives of Inst5 test set 4.2 WCHEM-HL, ¡§Verify that FSW can conduct complete conductivity, dissolved oxygen, cyclic voltammetry, chronopotentiometry and anodic stripping experiments without user intervention¡¨ is specified. In the Test Method of Inst5 test set 4.2 WCHEM-HL, the following is specified for ASV. ""For each cell: Issue MC_WC_ENABLE. Issue MC_WC_READ for anodic stripping with Default Option. Verify the data product. Issue MC_WC_READ for anodic stripping with Option #1. Verify the data product. Issue MC_WC_READ for anodic stripping with Option #2. Verify the data product. Issue MC_WC_READ for anodic stripping with Option #3. Verify the data product. Issue MC_WC_READ for anodic stripping with Option #4. Verify the data product. Issue MC_WC_READ for anodic stripping with Option #5. Verify the data product. Issue MC_WC_DISABLE. Verify that the cell is disabled and not powered."" Inst5 STP test set 4.2 WCHEM-HL, however, does not explicitly verify the SRS 4.1.4.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1531,Inst5 test set 4.2 WCHEM-HL is unclear for verification of SRS 4.1.4.4,3,"Inst5 test set 4.2 WCHEM-HL is unclear. In the Test Method of Inst5 test set 4.2 WCHEM-HL, the anodic stripping “ Option” specifications of the test set portion “with Option #1,”…, and “with Option #5,” including “Default Option” are not defined in the STP. It is not clear if Inst5 STP test set 4.2 WCHEM-HL verifies “…a default or non-default anodic stripping experiment” of SRS 4.1.4.4. Inst5 SRS 4.1.4.4 states ""The Inst5 FSW shall implement a command to conduct a default or non-default anodic stripping experiment on a specified wet chemistry cell."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1530,Inst5 test set 4.2 WCHEM-HL is unclear for verification of SRS 4.1.4.3,3,"Inst5 test set 4.2 WCHEM-HL is unclear. In the Test Method of Inst5 test set 4.2 WCHEM-HL, the cyclic voltammetry “ Option” specifications of the test set portion “with Option #1,”…, and “with Option #5,” including “Default Option” are not defined in the STP. It is not clear if Inst5 STP test set 4.2 WCHEM-HL verifies “…a default or non-default cyclic voltammetry experiment” of SRS 4.1.4.3. Inst5 SRS 4.1.4.3 states ""The Inst5 FSW shall implement a command to conduct a default or non-default cyclic voltammetry experiment on a specified wet chemistry cell."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1529,Inst5 test set 4.2 WCHEM-HL is unclear for verification of SRS 4.1.4.2,3,"Inst5 test set 4.2 WCHEM-HL is unclear. In the Test Method of Inst5 test set 4.2 WCHEM-HL, the dissolved oxygen “ Option” specifications of the test set portion “with Option #1,”…, and “with Option #5,” including “Default Option” are not defined in the STP. It is not clear if Inst5 STP test set 4.2 WCHEM-HL verifies “…a default or non-default dissolved oxygen experiment” of SRS 4.1.4.2. Inst5 SRS 4.1.4.2 states ""The Inst5 FSW shall implement a command to conduct a default or non-default dissolved oxygen experiment on a specified wet chemistry cell."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1528,Inst5 test set 4.2 WCHEM-HL is unclear for verification of SRS 4.1.4.1,3,"Inst5 test set 4.2 WCHEM-HL is unclear. In the Test Method of Inst5 test set 4.2 WCHEM-HL, the conductivity “ Option” specifications of the test set portion “with Option #1,”…, and “with Option #5,” including “Default Option” are not defined in the STP. It is not clear if Inst5 STP test set 4.2 WCHEM-HL verifies “…a default or non-default conductivity experiment” of SRS 4.1.4.1. Inst5 SRS 4.1.4.1 states ""The Inst5 FSW shall implement a command to conduct a default or non-default conductivity experiment on a specified wet chemistry cell."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1527,Inst5 test set 4.2 WCHEM-HL does not verify SRS 4.1.2.16,3,"Inst5 test set 4.2 WCHEM-HL does not verify SRS 4.1.2.16. SRS 4.1.2.16 states “The Inst5 FSW shall be capable of suppressing stirring on a per-sensor basis during sensor operations.” STP test set 4.2 WCHEM-HL verifies “suppressing stirring” but not “on a per-sensor basis during sensor operations,” thus does not verify or trace to the SRS 4.1.2.16 requirement.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1526,Incomplete trace of Inst5 test set 4.1 WCHEM-BASIC to SRS 6.2.1.8,3,"Incomplete trace of Inst5 test set 4.1 WCHEM-BASIC to SRS 6.2.1.8. The SRS 6.2.1.8 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.8 in the Inst5 SRS states that “Inst5 FSW shall check the data interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.8 provided in the Inst5 STP has no “once per second” specification. Also, it is not clear if the “when checking is enabled” condition is included in the Inst5 test set 4.1 WCHEM-BASIC. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1525,Incomplete trace of Inst5 test set 4.1 WCHEM-BASIC to SRS 6.2.1.7,3,"Incomplete trace of Inst5 test set 4.1 WCHEM-BASIC to SRS 6.2.1.7. The SRS 6.2.1.7 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 6.2.1.7 in the Inst5 SRS states that “Inst5 FSW shall check the command interface once per second, when checking is enabled, per ProjectE Spacecraft to Inst5 ICD.” The SRS 6.2.1.7 provided in the Inst5 STP has no “once per second” specification. Also, it is not clear if the “when checking is enabled” condition is included in the Inst5 test set 4.1 WCHEM-BASIC. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1524,Inst5 test set 4.1 WCHEM-BASIC needs better time specification with SRS 5.2.1.7,4,"Inst5 test set 4.1 WCHEM-BASIC needs better time specification with SRS 5.2.1.7. SRS 5.2.1.7 states that “The Inst5 FSW shall send all collected telemetry data to the lander immediately upon completion of processing.” STP Section 4.1.1 Test Objectives, “…Verify that FSW data products are sent to Lander immediately on end of processing,” and Section 4.1.2 Test Method, “…Verify that data product was downlinked immediately on completion of the MC_WC_READ command.” The STP and SRS are consistent in using the term “immediately,” however, for accurate testing, there should be a time limit specification ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005 ification for the “immediately.”",1/5/06
ProjectE - TIM - 1523,Inst5 test set 4.1 WCHEM-BASIC does not verify SRS 5.2.1.5,3,"Inst5 test set 4.1 WCHEM-BASIC does not verify SRS 5.2.1.5. SRS 5.2.1.5 states “The Inst5 FSW shall automatically increment the last three digits of a data set ID number for successive data reads taken for any one command. A valid data set ID number will contain the following: a) a 1 alpha-character identifer indicating the instrument from which the data was read b) a 2 alpha-character identifier for sub-category identification c) a 2 digit sol identifier d) a 3 digit index identifier” Among the Test Objectives of Inst5 test set 4.1 WCHEM-BASIC, “Verify that FSW downlinks valid wet-chem data products, time-stamped and ID-numbered, using the high-priority APID” is specified. Inst5 STP test set test set 4.1 WCHEM-BASIC, however, does not explicitly verify the SRS 5.2.1.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1522,Inst5 test set 4.1 WCHEM-BASIC does not verify SRS 4.6.1.7,3,"Inst5 test set 4.1 WCHEM-BASIC does not verify SRS 4.6.1.7. SRS 4.6.1.7 states “Command execution progress shall be included in telemetry for all commands requiring more than one second to execute.” STP test set 4.1 WCHEM-BASIC does not verify or trace to the SRS 4.6.1.7 requirement for “all commands requiring more than one second to execute.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1521,Inst5 test set 4.1 WCHEM-BASIC does not completely verify SRS 4.1.2.14,3,"Inst5 test set 4.1 WCHEM-BASIC does not completely verify SRS 4.1.2.14. Test set 4.1 WCHEM-BASIC covers the “capability for repeated reads” verification of SRS 4.1.2.14, “The Inst5 FSW shall provide the capability for repeated reads of any/all of the WCL data,” but not “reads” of “all of the WCL data.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1520,Inst5 test set 4.1 WCHEM-BASIC does not verify SRS 4.1.2.13,3,"Inst5 test set 4.1 WCHEM-BASIC does not verify SRS 4.1.2.13. SRS 4.1.2.13 states ¡§The Inst5 FSW shall raise the drawer temperature to at least -20¢X C before opening or closing the drawer, to prevent damage.¡¨ In the Test Method of Inst5 test set 4.1 WCHEM-BASIC, the following is specified. ¡§For each cell: ¡K ƒá Issue MC_WC_ENABLE. ƒá Verify that the FSW sets WCL to the Enabled state. ƒá Clear the WCHEM-done global variable. ƒá Issue MC_WC_DRWR_OPEN with 30 second open duration and allow to close. ƒá Verify that the drawer opens, holds for 30, then closes. ƒá Verify that FSW sets the WCHEM-done global variable at the completion of the command. ƒá Issue MC_WC_DRWR_OPEN with 2 minute open duration. ƒá After one minute issue MC_WC_DRWR_CLOSE. ƒá Verify that the drawer closes before the full 2 minute duration has expired. ƒá Issue MC_WC_DRWR_OPEN with 2 minute open duration and allow to close automatically after 2 minutes have expired. ƒá Verify that after two minutes the drawer closes.¡¨ Inst5 STP test set 4.1 WCHEM-BASIC, however, does not explicitly verify SRS 4.1.2.13 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/5/06
ProjectE - TIM - 1519,Inst5 test set 4.1 WCHEM-BASIC is incomplete in test for SRS 4.1.2.8,3,"Inst5 test set 4.1 WCHEM-BASIC is incomplete in test for SRS 4.1.2.8. Inst5 test set 4.1 WCHEM-BASIC includes testing of monitoring “temperature sensors” in a single WCL cell, but it has no timing verifications for the “at least one time per minute” requirement of SRS 4.1.2.8. The Inst5 SRS 4.1.2.8 states ""The Inst5 FSW shall be capable of monitoring any or all temperature sensors in a single WCL cell at one time, at least one time per minute."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06
ProjectE - TIM - 1518,Inst5 test set 4.1 WCHEM-BASIC does not trace to SRS 4.1.2.7,3,"Inst5 test set 4.1 WCHEM-BASIC does verify SRS 4.1.2.7 as provided in Appendix E of Inst5 STP. The Inst5 SRS 4.1.2.7 states that ""For voltammetry (ASV, CV, DO), the Inst5 FSW shall provide parameters to the FPGA to enable it to return an array of data without allowing the PACI interface to time out (“trickle mode”)."" Among the Test Objectives of Inst5 test set 4.1 WCHEM-BASIC, “Verify that FSW validates all FPGA responses, and faults the instrument given an illegal response” is specified. Inst5 STP test set 4.1 WCHEM-BASIC, however, does not explicitly verify SRS 4.1.2.7 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06
ProjectE - TIM - 1517,Inst5 test set 4.1 WCHEM-BASIC does not trace to SRS 4.1.2.6,3,"Inst5 test set 4.1 WCHEM-BASIC does not trace to SRS 4.1.2.6 as provided in Appendix E of Inst5 STP. The Inst5 SRS 4.1.2.6 states ""The Inst5 FSW shall set the 1KHz clock in the FPGA to a specified value prior to reading out conductivity data as per the Inst5 Hardware Software Interface Control Document."" Among the Test Objectives of Inst5 test set 4.1 WCHEM-BASIC, “Verify that FSW validates all FPGA responses, and faults the instrument given an illegal response” is specified. Inst5 STP test set 4.1 WCHEM-BASIC, however, does not explicitly verify or trace to the SRS 4.1.2.6 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06
ProjectE - TIM - 1516,Inst5 test set 4.1 WCHEM-BASIC does not cover all “the chemical sensors” of SRS 4.1.2.5,3,"Inst5 test set 4.1 WCHEM-BASIC does not cover all “the chemical sensors” of SRS 4.1.2.5. SRS 4.1.2.5 “The Inst5 FSW shall implement a command to read the chemical sensors in a specified wet chemistry cell at a commanded rate for a commanded duration.” The “chemical sensors” in the SRS seem defined as the “Wet-Chem sensors (ISE, DOX, CON, and MEA) in the Inst5 HW SW ICD of Artifact 3). The test set 4.1 WCHEM-BASIC appears to cover verification for ISE’s only (not DOX, CON, or MEA). ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06
ProjectE - TIM - 1515,Inst5 test set 4.1 WCHEM-BASIC covers minimally SRS 4.1.2.4 verification,3,"Inst5 test set 4.1 WCHEM-BASIC covers minimally SRS 4.1.2.4 verification. SRS 4.1.2.4. states “The Inst5 FSW shall handle the data return of all WCL functions specified in the Inst5 Hardware Software Interface Control Document.” Inst5 test set 4.1 has no test specifications verifying “the data return of all WCL functions” of SRS 4.1.2.4. For example, data return such as CV/SWASV (MEA1/MEA2), dissolved oxygen (DOX), and conductivity (CON) experiments, as in Section 5.2 WCL Return Data Packet Size of Artifact 3) Inst5 HW SW ICD states that “The WCL data includes results from the ISEs, CV/SWASV (MEA1/MEA2), dissolved oxygen (DOX), conductivity (CON) experiments, temperature and pressure sensor reads,” is not verified in the Inst5 test set. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06
ProjectE - TIM - 1514,Inst5 test set 4.1 WCHEM-BASIC is unclear in its test specification,3,"Inst5 test set 4.1 WCHEM-BASIC is unclear in its test specification. The 4.1.2 Test Method specifies for each Wet Chemistry cell “…Issue MC_WC_RLS_RGT. Verify that the actuator works as expected,” then “… Verify that the actuator works as expected and that the software records activities correctly.” It is not clear what is meant by “works as expected.”",1/4/06
ProjectE - TIM - 1513,Inst5 SRS requirement 4.1.2.1 is not specific in using the term “the tank”,5,"Inst5 SRS requirement 4.1.2.1 is not specific in using the term “the tank,” presumably “the tank” refers to the water tank in the wet chemistry cells. The SRS requirement 4.1.2.1 states ""The Inst5 FSW shall implement a command that heats the tank in a specified wet chemistry cell for a commanded duration."" ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06
ProjectE - TIM - 1512,Inst5 test set 4.1 WCHEM-BASIC does not satisfy SRS 3.2.2.3,3,"Inst5 test set 4.1 WCHEM-BASIC does not satisfy SRS 3.2.2.3. It is not apparent with the 4.1 WCHEM-BASIC test set that the SRS 3.2.2.3 requirement of ""...requesting between 2 and 4030 bytes of return data..."" is tested. The SRS 3.2.2.3 requirement states that “The Inst5 FSW shall be capable of requesting between 2 and 4030 bytes of return data from the Inst5 hardware through the low-speed PACI interface.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06
ProjectE - TIM - 1511,Inconsistency in global variable names of the Inst5 STP test set 4.1 WCHEM-BASIC,4,"Inconsistency in global variable names of the Inst5 STP Test Set 4.1 WCHEM-BASIC. The term “wet-chem-done” in the 4.1.1 Test Objectives and “WCHEM-done” in the 4.1.2 Test Method seem refer to the same global variable in test set 4.1 WCHEM-BASIC. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/4/06
ProjectE - TIM - 1510,Inst5 test set 3.1 BOOTUP does not default the data set ID number,3,"Inst5 test set 3.1 BOOTUP does not default the data set ID number. SRS 5.2.1.6 “The Inst5 FSW shall default the data set ID number ‘XXX00000’ unless specified in the data acquisition command” is not tested or traced in the STP. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/3/06
ProjectE - TIM - 1509,Inst5 test set 3.1 BOOTUP does not verify SRS 5.2.1.5.,3,"Inst5 test set 3.1 BOOTUP does not verify SRS 5.2.1.5. SRS 5.2.1.5 states “The Inst5 FSW shall automatically increment the last three digits of a data set ID number for successive data reads taken for any one command. A valid data set ID number will contain the following: a) a 1 alpha-character identifer indicating the instrument from which the data was read b) a 2 alpha-character identifier for sub-category identification c) a 2 digit sol identifier d) a 3 digit index identifier” Among the Test Objectives of Inst5 test set 3.1 BOOTUP, “Verify that software can read CME and AFM status data, and return the data in downlinked science telemetry as time-stamped and ID-numbered data products” is specified. Inst5 STP test set 3.1 BOOTUP, however, does not explicitly verify SRS 5.2.1.5 requirement. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/3/06
ProjectE - TIM - 1508,Inst5 test set 3.1 BOOTUP is not explicit and specific in “time stamp” for traceability to SRS 5.2.1.3,3,"Inst5 test set 3.1 BOOTUP is not explicit and specific in “time stamp” for traceability to SRS 5.2.1.3. The Inst5 test set verifies if the Inst5 data products are “time-stamped,” but includes no specification to test if the time stamp “reflects the time at which the command to acquire the data was issued.” ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/3/06
ProjectE - TIM - 1507,SRS 3.3.2.4 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document,3,"The SRS 3.3.2.4 provided in the Inst5 STP is inconsistent with that of the Inst5 SRS document. The SRS 3.3.2.4 in the Inst5 SRS states that “The Inst5 FSW will send appropriate error messages, and set the fault condition to “failed”, should the Inst5 Alive and Idle discrete lines fail to signal “Ready” and “Idle” within a parameterized amount of time.” The SRS 3.3.2.4 provided in the Inst5 STP has “within a TBD amount of time” specification, instead. Also, the “appropriate error messages” and “failed” fault condition are implicitly addressed in EVR messages of the test output of Inst5 test set 3.1 BOOTUP. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/3/06
ProjectE - TIM - 1506,Inst5 test set 3.1 BOOTUP does not call out the detail of the “CME Status Data” of SRS 5.2.1.4,4,"Inst5 test set 3.1 BOOTUP does not call out the detail of the “CME Status Data” as specified in SRS 5.2.1.4 ""The CME Status Data shall consist of the following: a) A time stamp showing when the status read command was issued to the CME b) The 22 byte status data buffer information from the CME c) The 42 byte command echo from the CME d) A Inst5 FSW-generated data set ID number.” IV&V recommends that the detailed specifications be included in the STP Inst5 test sets. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/3/06
ProjectE - TIM - 1505,Inst5 test set 3.1 BOOTUP has no explicit verification of SRS 3.2.2.1,3,"Inst5 test set 3.1 BOOTUP has no explicit verification of SRS 3.2.2.1. It is not apparent with the BOOTUP test set that the command length ""between 2 and 42 bytes"" as specified in SRS 3.2.2.1 is verified. ------------------ Artifacts Used: 1) Inst5 Flight Software Test Plan, JPL D-29455, ProjectE PHX-415-088, Initial Release, April 8, 2005 (September 13, 2005) 2) Inst5 Flight Software Requirements, JPL D-32810, ProjectE PHX-425-003, Preliminary Release, October 18, 2004 3) Inst5 ProjectE Mission Hardware Software Interface Control Document (ICD), PHX-435-289, June 15, 2005 4) ProjectE Spacecraft to Microscopy, Electrochemistry, and Conductivity Analyzer (Inst5) Interface Control Document, Contract No. 1255879, CDRL/DRD No. TD003, Document Number PHX-98-0019, Rev. A, July 27, 2005",1/3/06
ProjectE - TIM - 1504,Inst8/ICD Analysis Incomplete Due to Lack of Documents,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2004 ProjectE Spacecraft-to-Robotic Arm (Inst9)/ Robotic Arm Camera (Inst8) Interface Control Document, PHX-98-0066, February 10, 2005 Level 5 requirement ""5.1.4 Spacecraft Memory Requests"" trace to the ICD requirement ""3.2.1.2.2.1 DRAM Allocation"": ""The total payload DRAM allocation shall be as shown in the ProjectE Project Exhibit III. ..."" Analysis for this requirement is incomplete due to IV&V not having access to Exhibit III. Level 5 requirement ""6.2.8 APID Definitions"" traces to an ICD requirement, but also states ""The MIS SW shall conform to the APID definitions contained in the MIS Software Command and Telemetry Definitions document."" Analysis for this requirement is incomplete due to IV&V not having access to the MIS Software Command and Telemetry Definitions document.",11/29/05
ProjectE - TIM - 1503,Inst10 Level 5 Requirement Has No Parent,3,"Artifact: CDR-MDR-PHX-7862 Revision 1.0 Level 5 requirements SRSR150 ""3.2.1.4.2 File Transfer Error Handling"" has no trace provided. ""3.2.1.4.2 File Transfer Error Handling Upon detecting a file transfer protocol error, the MPTMS CSCI shall: a) discard the block or ignore the block request, and b) log the error, if, per the protocol, the file transfer is canceled by the Lander or MPTMS CSCI: c) return to the Idle state.""",11/29/05
ProjectE - TIM - 1502,Inst6 Level 5 Requirement Has No Parent,3,"Artifact: Software Requirements Specifications for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Level 5 requirement ""6.4 Instrument Operational Parameters"" does not have a provided trace. ""6.4 Instrument Operational Parameters The software shall be capable of accepting (updating) and retrieving operational parameters for each instrument.""",11/29/05
ProjectE - TIM - 1501,Level 5 Requirement Does Not Fully Address Level 4 Requirements,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional REquirements Document, Draft, September 3, 2004 Level 5 requirement “8.5.1 Exposure Operation Monitoring” does not fully address Level 4 requirements “4.1.6.11 CCD Command Pass-Through” and “4.1.6.12 CCD Command Response Handling.” ""8.5.1 Exposure Operation Monitoring The software shall monitor the operation of the camera control electronics for correct operation during CCD exposures by utilizing the discrete BUSY signal line."" ""4.1.6.11 CCD Command Pass-Through The Inst6 control electronics shall provide the ability to pass through commands from the flight software to the CCD cameras."" ""4.1.6.12 CCD Command Response Handling The Inst6 control electronics shall provide the ability to return command responses from the CCD cameras directly to the flight software.""",11/29/05
ProjectE - TIM - 1500,Level 5 Requirement Is Not As Specific As the Level 4 Requirement,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirement “8.3.3 Image Processing Tables and Models” is not as specific as Level 4 requirement “4.2.3 Inst6 Data and Software Storage”. ""8.3.3 Image Processing Tables and Models The software shall have the capability of utilizing hot pixel tables and bad pixel tables for each CCD."" ""4.2.3 Inst6 Data and Software Storage The Inst6 software will require dynamic memory to allow for the creation of buffers for data processing, and compression. The Inst6 software will also require non-volatile storage for the software program logic, image correction data and the telemetry buffer in the event that the Lander dynamic memory is turned off for any period.""",11/29/05
ProjectE - TIM - 1499,Level 5 Requirement Does Not Address Level 4 Requirements,3,"Artifacts: Software Requirements Specificationf or the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Docuemnt, Draft, September 3, 2004 Level 5 requirement “7.2.11.3 Inst6 Valid Motion Range” does not address Level 4 requirement “4.1.2.1 Azimuth Pointing” or “4.1.2.2 Elevation Pointing.” ""7.2.11.3 Inst6 Valid Motion Range The software shall check the new position value for valid range, and issue an error message for any new position value that exceeds the predeinfed range for a particular actuator."" ""4.1.2.1 Azimuth Pointing The gimbal assembly shall be able to point the camera head in 357 degrees of azimuth"" ""4.1.2.2 Elevation Pointing The gimbal assembly shall be able to point the camera head in 180 degrees of elevation, from the zenith to the nadir.""",11/29/05
ProjectE - TIM - 1498,Inst6 Level 5 Requirements Do Not Fully Satifsy Level 4 Requirement,2,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirements “7.2.10.10SSI Filter Wheel Index Sensor Failure,” “6.5.2 Reset Signal,” “10.1.4.1 Busy Inactive Fault Recovery,” “10.1.4.2 Busy Active Time-Out Fault Recovery,” “10.1.5 Discrete I/O Verification Errors,” “10.1.6 Analog Input Faults,” “10.3 Event Reporting,” and “6.5.2 Reset Signal” do not fully satisfy the Level 4 requirements ""4.3.2 CCD Fault Protection” –“In the event of a failed CCD or its associated electronics in the Inst6 camera head, the camera electronics shall be able to shut off power to the failed CCD under software control and continue to acquire images with the remaining CCD.”",11/29/05
ProjectE - TIM - 1497,Inst6 Level 5 Requirement Does Not Fully Trace to Level 4 Requirement,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirement “7.2.10.9 Filter Wheel Index Sensor Power” – “The filter wheel index position sensor lamp shall be turned off when not being used to detect filter wheel position” specifies a condition not defined in Level 4 requirement “4.1.6.10 Filter Wheel Index Sensor Control” – “The Inst6 control electronics shall have the ability to control of the filter wheel index sensor lamp and detect the output of the index optical sensor.” The condition “to detect filter wheel position” is not covered in ""4.1.6.10"".",11/29/05
ProjectE - TIM - 1496,Inst6 Level 5 Requirements Trace to Non-Existent Level 4 Requirements,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirements ""7.2.7 Preheat Control Mode Assignment"" and ""7.2.8 Motion Constraint"" each trace to non-existent requirements ""Inst6 FRD 4.1.4.6"" and ""Inst6 FRD 4.1.4.9"". ""7.2.7 Preheat Control Mode Assignment Each actuator shall have independent control with regards to preheat (On/Off), preheat mode and timing parameters."" ""7.2.8 Motion Constraint The instrument control software shall not command actuator motion if an actuator is below its rated minimum operating temperature.""",11/29/05
ProjectE - TIM - 1495,Inst6 Level 5 Requirement Traces to Level 4 Requirement with TBD Specifications,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirements ""7.1.1 Global Actuator Thermal Control Parameters"", ""7.2 Actuator Preheat"", and ""7.2.5 Overtermperature Monitor"" all trace to ""4.1.4.3 Actuator Heating Characteristics"" which contains specifications that are TBD Level 5 requirements ""7.1.1 Global Actuator Thermal Control Parameters"" and ""7.2"" Actuator Preheat"" also trace to ""4.1.4.5 Actuator Heating Control"" which contains specifications that are TBD. ""7.1.1 Global Actuator Thermal Control The following configurable thermal control parameters shall be utilized for all instrument actuators: Actuator Preheat Time The maximum time in seconds to heat an actuator when it is below the preheat set point. 16-bit Integer (unsigned) Actuator Preheat Minimum Temperature The temperature, in non-fractional degrees C, below which the motor heating activity shall be invoked when in automatic mode. 16-bit Integer (signed) Actuator Preheat Nominal Temperature The target temperature, in non-fractional degrees C, for preheat activities. 16-bit Integer (signed) Actuator Preheat Maximum Temperature The maximum temperature, in non-fractional degrees C, for preheat activities. 16-bit Integer (signed)"" ""7.2 Actuator Preheat The MIS software shall support the use of a preheat mode for each rotary motion actuator in the Inst6 and Inst8 instruments. The intent of the preheat mode is to allow a particular actuator to reach and maintain a predefined safe operating temperature range prior to the issuance of motion control commands."" ""7.2.5 Overtemperature Monitor The MIS software shall support the capability to detect a real or potential actuator overheat condition regardless of control mode and discontinue motion or motor heating until the overtemperature condition is resolved."" ""4.1.4.3 Actuator Heating Characteristics Each actuator heater shall be capable of bringing the motor to a minimum operating temperature of -50¢ª C within (TBD) minutes from a starting temperature of (TBD) degrees."" ""4.1.4.5 Actuator Heating Control Software shall not command motor operation unless the motor is at the minimum operating temperature.""",11/29/05
ProjectE - TIM - 1494,Level 5 Requirement Is Not As Specific And Does Not Fully Satisify Level 4 Requirements,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirement ""7.1.2 Inst6 Azimuth Axis Parameters"" is not as specific as Level 4 requirement ""4.1.3.4 Azimuth Motion"" and when combined with “7.1.3 Inst6 Elevation Axis Parameters,” and “7.1.4 Inst6 Filter Wheel Parameters” does not fully satisfy the Level 4 requirements: “4.1.6.2 Stepper Motor Step Rate” and “4.1.6.5 Stepper Motor Step Count”. The Level 5 requirements define the configurable motion control parameters, but do not specify any acceptable parameter/range values. ""7.1.2 Azimuth Axis Parameters The following configurable motion control parameters shall be utilized for the azimuth axis of the Inst6: Table 2 - Inst6 Azimuth Axis Parameters Parameter Usage Type Azimuth Step Range The total step range of the azimuth axis actuator from CCW stop to CW stop. 16-bit Integer (unsigned) Azimuth Stop Phase The stepper motor rotor phase position when at the CW hard stop. 16-bit Integer (unsigned) Azimuth Step Rate The maximum rate, in steps/second, at which the azimuth actuator shall be operated. 16-bit Integer (unsigned) Azimuth Stop Oversteps The number of additional steps to be performed when moving the azimuth into the hard stop. 16-bit Integer (unsigned) Last Step Power Hold Time The amount of time, in milliseconds, to hold power to the last activated step phase at the completion of an azimuth movement. 16-bit Integer (unsigned) Step Direction Transition Point The step number above which steps should be approached from the alternate direction. 16-bit Integer (unsigned)"" ""7.1.3 Inst6 Elevation Axis Paramters The following configurable motion control parameters shall be utilized for the elevation axis of the Inst6: Table 3 - Inst6 Elevation Axis Parameters Parameter Usage Type Elevation Step Range The total step range of the elevation axis actuator from parked position (full down rotation) stop to the maximum elevation stop. 16-bit Integer (unsigned) Elevation Step Rate The maximum rate, in steps/second, at which the elevation actuator shall be operated. 16-bit Integer (unsigned) Elevation Stop Oversteps The number of additional steps to be performed when moving the elevation into the nadir hard stop. 16-bit Integer (unsigned)"" ""7.1.4 Inst6 Filter Wheel Parameters The following configurable motion control parameters shall be utilized for the filter wheel of the Inst6: Table 4 - Inst6 Elevation Axis Parameters Parameter Usage Type Filter Wheel Step Rate The maximum rate, in steps/second, at which the filter wheel shall be operated. 16-bit Integer (unsigned)"" ""4.1.3.4 Azimuth Motion Azimuth motion shall be commanded under software control at 0.288 degrees/step, with a maximum backlash of ± 5.7 mrad."" ""4.1.6.2 Stepper Motor Rate The Inst6 control electronics shall provide the ability to define the step rate for each actuator independently."" ""4.1.6.5 Stepper Motor Count The Inst6 control electronics shall provide the ability to operate each stepper motor actuator for a specific number of steps, and in a specified direction (CCW or CW) as defined by software commands.""",11/29/05
ProjectE - TIM - 1493,Inst4: Discrepancy between SDD Inst4_WriteSerial and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.9.9 Inst4_WriteSerial, and Page 28 of Artifact 2). Section 5.9.9 The Inst4_WriteSerial function and the ""Handle Write to PACI"" code flow chart are not consistent and cannot be verified in the “good,” “suspect, ” or “failed” Inst4 condition setting, or in the ""if fault response is enabled.""",11/28/05
ProjectE - TIM - 1492,Inst4: Clarification on Inst4_WriteSerial is needed.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 Section 5.9.9 Inst4_WriteSerial Section 5.9.9 The Inst4_WriteSerial function specifies that “The function attempts to write the information in the buffer to the PACI. If the write fails on the first write, another attempt to make the write is made. Succesive attempts are made to make the write until the write is tried the configurable number of times, stored in Inst4_maxPaciRetry. If the write still fails, the write status is set to ERROR. If the write to the PACI is sucessful, the write status is set to number of bytes written. The PACI must have enough time to process the write, so to give the PACI time to process the information, a delay porportional to the number of bytes written is used as input to the Inst4_DelayForSeconds function (Section 5.8.3) which is called between writes.” It is not clear what sets the Inst4_maxPaciRetry.",11/28/05
ProjectE - TIM - 1491,Inst4: Clarification on Inst4_OnReadResult is needed.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.9.6 Inst4_OnReadResult, and Page 35 of Artifact 2). Section 5.9.6 Though the Inst4_OnReadResult function seems to define a “fault” from “error,” the “error counter” and “fault counter” are used interchangeably in the “Handle Read From PACI” code flow chart and this Section.",11/28/05
ProjectE - TIM - 1490,Inst4: Discrepancy between SDD Inst4_DelayCommand and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.8.5 Inst4_DelayCommand, and Page 21 of Artifact 2). Section 5.8.5 The Inst4_DelayCommand function states “the command is copied to the end of the queue, the count is incremented, and OK is returned.” The “Delayed Commands 2” code flow chart under “Add” does not reflect “the count is incremented.”",11/28/05
ProjectE - TIM - 1489,Inst4: Clarification on Inst4_StopHeartCheck is needed.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 Section 5.7.5 Inst4_StopHeartCheck Section 5.7.5 states “The Inst4_StopHeartCheck function stops the heartbeat timer, and looking for a heartbeat in response to a message sent from the Inst4 FSW.” It is not clear what “looking for a heartbeat in response to a message sent from the Inst4 FSW” is.",11/28/05
ProjectE - TIM - 1488,Inst4: Discrepancy between SDD Inst4_StartHeartCheck and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.7.4 The Inst4_StartHeartCheck, and Page 33 of Artifact 2). Section 5.7.4 The Inst4_StartHeartCheck function “resets the heartbeat counters, states and timers with the Inst4_ResetHeartSettings function (Section 5.7.7). The timer is then set to be cyclic by setting the check heartbeat value and interval with values from the configuration file.” The “Handle Heartbeat Check Start” code flow chart on Page initializes “Heartbeat Settings” then “Reset detection counter.”",11/28/05
ProjectE - TIM - 1487,Inst4: Discrepancy between SDD Inst4_OnHeartCheck and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.7.3 The Inst4_OnHeartCheck, and Page 32 of Artifact 2). Section 5.7.3 The Inst4_OnHeartCheck function checks in the order of “If the heartbeat is found” first, then if “fault protection detection is enabled.” The “Handle Heartbeat Check” code flow chart has the check order in reverse. Moreover, the flow chart is not consistent with or does not reflect the Section in the “good,” “suspect, ” or “failed” Inst4 condition setting, or in the ""if fault response is enabled.""",11/28/05
ProjectE - TIM - 1486,Inst4: Documentation clarification on Inst4_ResetDiscreteSettings is needed.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.5.12 Inst4_ResetDiscreteSettings, and Page 13 of Artifact 2). It is not clear if Section 5.5.12 Inst4_ResetDiscreteSettings function is depicted as “Setup Discrete structure” in the “Handle Reset” code flow chart on Page 13. The Inst4_ResetDiscreteSettings function or its design does not seem reflected in any code flow charts, otherwise.",11/28/05
ProjectE - TIM - 1485,Inst4: Documentation clarification on Inst4_OnStartBootSelTimer is needed.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 Section 5.5.11 The Inst4_OnStartBootSelTimer function defines that the “Inst4_OnStartBootSelTimer function starts the timer that returns the boot select discrete to its default state,” and that “The function begins by setting the boot select timer to the current boot select active value.” It is not clear whether the “boot select discrete to its default state” is equivalent to or consistent with “boot select timer to the current boot select active value”?",11/28/05
ProjectE - TIM - 1484,Inst4: Documentation clarification on Inst4_OnStopSyncTimer is needed.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.5.10 The Inst4_OnStopSyncTimer, and Page 25 of Artifact 2). Section 5.5.10 The Inst4_OnStopSyncTimer function states that “If the timer is not correctly set, the function generates an error.” This is not explicit in the “Handle Stop Time SYNC Timer” code flow chart on Page 25.",11/28/05
ProjectE - TIM - 1483,Inst4 Design: Level 5 Requirement 5081-2 Traceability,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18, 2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. Section 5.4.3 Inst4_HandlePwrMsgs, Section 5.4.5 Inst4_OnEpsCompState, and the associated code flow charts do not fully satisfy the Level 5 Requirement 5081-2 “TEFSW shall not allow Inst4_MAIN2 to be ON if Inst4_MAIN1 is OFF.”",11/28/05
ProjectE - TIM - 1482,Inst4 Design: Level 5 Requirement 5067 Traceability,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18, 2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. The Level 5 Requirement 5067 “System Message handling The TEFSW shall handle the following system level messages: a) SYS_INIT b) SYS_PING c) SYS_FP_ENAB d) EPSO_COMP_STATE e) Inst4_RESET f) Inst4_SAFING g) Inst4_POWER_DOWN” is not fully traceable in the Inst4 design document.",11/28/05
ProjectE - TIM - 1481,Inst4 Design: Level 5 Requirement 5063Traceability,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18, 2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. The traceability to the Level 5 Requirement 5063 “Invalid Command Handling Invalid commands (incomplete, invalid or corrupted) shall cause the software to issue an error message via the LMA FSW EVR facility, increment a fault protection error counter for interrogation by the LMA FSW and cease processing the current command” seems incomplete and needs clear documentation in the Inst4 design document.",11/28/05
ProjectE - TIM - 1480,Inst4 Design: Level 5 Requirement 5050-1.4 Traceability,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18, 2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. Level 5 Requirement 5050-1.4 “In the case of a failed state, TEFSW shall run a Inst4 heartbeat-failure command sequence no more that 10 commands in length” is not traceable in the Inst4 design document.",11/28/05
ProjectE - TIM - 1479,Inst4 Design: Level 5 Requirement 5050-1.2 Traceability,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18, 2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. Section 5.7.3 Inst4_OnHeartCheck and Section 5.9.6 Inst4_OnReadResult do not fully satisfy the Level 5 Requirement 5050-1.2 “The TEFSW shall define a failed state as when the flight software has failed to receive a Inst4 heartbeat or when commanded to perform an instrument reset.”",11/28/05
ProjectE - TIM - 1478,Inst4 Design: Level 5 Requirement 5030-1 Traceability,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. Level 5 Requirement 5030-1 “The science data received from the Inst4 instrument shall be passed to the Lander for downlink” seems implied and needs clear documentation in the Inst4 design document.",11/28/05
ProjectE - TIM - 1477,Inst4 Design: Level 5 Requirement 5020-1 Traceability,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. Level 5 Requirement 5020-1 “The engineering data received from the Inst4 instrument shall be passed to the Lander for downlink” seems implied and needs clear documentation in the Inst4 design document.",11/28/05
ProjectE - TIM - 1476,Inst4 Design: Level 5 Requirement 5003-1.1 Traceability,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) Inst4 Subsystem Software Requirements Specification, JPL D-29448, PHX-475-367, Initial, August 15, 2005 3) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) The SDD did not provide a trace from the requirements to the design. Key word searches as well as design evaluation was used to perform an independent trace from requirements to the design. Level 5 Requirement 5003-1.1 ""Time update intervals shall be configurable"" is not traceable in the Inst4 design document.",11/28/05
ProjectE - TIM - 1475,Inst4: Discrepancy between SDD Inst4_OnStartSyncTimer and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.5.9 The Inst4_OnStartSyncTimer, and Page 24 of Artifact 2). Section 5.5.9 The Inst4_OnStartSyncTimer function defines “If the timer is not correctly started, the function generates an error. Passthrough commands are then delayed for a configurable period to allow for instrument recovery with a call to Inst4_DelayCommandsForSeconds (Section 5.8.3).” The “Handle Start Time SYNC Timer” code flow chart on Page 24 does not specify such error generation.",11/28/05
ProjectE - TIM - 1474,Inst4: Clarification on Inst4_OnSyncTime is needed.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.5.8 The Inst4_OnSyncTime, and Page 23 of Artifact 2). Section 5.5.8 The Inst4_OnSyncTime function states that the function return is “either an OK or an ERROR,” the design description in this Section, however, does not define any return value. In addition, the “Handle Time Sync” code flow chart on Page 23 shows error reporting and no “time synch time and counters” downlink.",11/28/05
ProjectE - TIM - 1473,Inst4: Discrepancy between SDD Inst4_OnStopResetPulse and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.5.7 The Inst4_OnStopResetPulse, and Page 14 of Artifact 2). Section 5.5.7 The Inst4_OnStopResetPulse function states that “The boot select timer is then started with a call to Inst4_OnStartBootSelTimer (Section 5.5.11) and, if MAIN1 power is on, time synchs are started with a call to Inst4_OnStartSyncTimer (Section 5.5.9).” The “Handle Stop Reset Pulse” code flow chart on Page 14 starts “Sync Timer” without any Main1 power on check.",11/28/05
ProjectE - TIM - 1472,Inst4: Discrepancy between SDD Inst4_OnReset and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.5.6 Inst4_OnReset, and Page 13 of Artifact 2). Section 5.5.6 The Inst4_OnReset function defines that “If the write is sucessful, then the pulse reset timer is set to the correct duration and stored. If the pulse reset timer fails to be reset for some reason, an error is generated. The reset counter is then incremented, and the reset time and counter are stored.” The “Handle Reset” code flow chart, on Page 13, after the failed or successful pulse reset timer process, sets “Channelized Telemetry” before return. There is no error generation or reset time or reset counter depicted.",11/28/05
ProjectE - TIM - 1471,Inst4: Documentation error on Inst4_HandleDiscreteMsgs.,5,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 Section 5.5.2 Inst4_HandleDiscreteMsgs In Section 5.5.2 Inst4_HandleDiscreteMsgs, the Section reference to the Inst4_OnReset function should be Section 5.5.6, not Section 5.5.5.",11/28/05
ProjectE - TIM - 1470,Discrepancy between SDD Inst4_OnEpsCompState and CDR code flow chart,3,"Section 5.4.5 Inst4_OnEpsCompState, and Page 11 of Artifact 2). Section 5.4.5 specifies that “In the case of an EPS_COMP_OFF message, Inst4_iPowerState is set to on for the component with a call to Inst4_SetPowerState (Section 5.4.8). If the component is MAIN1, timers are stopped with the Inst4_OnStopSyncTimer function (Section 5.5.10), and heartbeat checks are stopped with the Inst4_StopHeartCheck function (Section 5.7.5), and any current file load is stopped with the Inst4_AbortFileLoad function (Section 5.2.7).” The “Inst4_AbortFileLoad” is not in the “Handle EPS Response” code flow chart on Page 11. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05
ProjectE - TIM - 1469,Inst4: Discrepancy between SDD Inst4_OnEpsCompState and CDR code flow chart,3,"Section 5.4.5 Inst4_OnEpsCompState, and Page 11 of Artifact 2). Section 5.4.5 specifies that “In the case of an EPS_COMP_ON message, Inst4_iPowerState is set to on for the component with a call to Inst4_SetPowerState (Section 5.4.8). If the component is MAIN1 power, start the heartbeat check timer with a call to Inst4_StartHeartCheck (Section 5.7.4), the time sync timer with a call to Inst4_OnStartSyncTimer (Section 5.5.9) [which also starts to command delay timer for power on/reset], and the timer to deassert the Inst4_BOOT_SELECT discrete with a call to Inst4_OnStartBootSelTimer (Section 5.5.11). Then, downlink power information along with heartbeat and discrete information.” The “Handle EPS Response” code flow chart on Page 11 defines “Start Time Sync Timer” first then “Start Heartbeat Check,” instead. Also, “the timer to deassert the Inst4_BOOT_SELECT discrete with a call to Inst4_OnStartBootSelTimer” is not in the code flow chart design. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05
ProjectE - TIM - 1468,Inst4: Discrepancy between SDD Inst4_HandlePwrMsgs and CDR code flow chart.,3,"Section 5.4.3 Inst4_HandlePwrMsgs, and Pages 7 and 11 of Artifact 2). Section 5.4.3 Inst4_HandlePwrMsgs states “If the message is the MSG_ID_Inst4_REPLACEMENT_HEATER_POWER, the power to the replacement heaters is turned on or off in the same manner as the Inst4 powers by calling the eps_comp_set_state LMA function.,” is not defined in the “Handle Power Messages” code flow chart on Page 7. Additionally, there is a ""If Heater"" process in the “Handle EPS Response” code flow chart of Page 11 that is not traceable to the SDD. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05
ProjectE - TIM - 1467,Inst4: Discrepancy between SDD Inst4_OnEpsCompState and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.4.5 Inst4_OnEpsCompState, and Page 11 of Artifact 2). Section 5.4.5 provides no design specifications for “If the component is MAIN2 power” for either “In the case of an EPS_COMP_ON message” or “In the case of an EPS_COMP_OFF message.” The “Handle EPS Response” code flow chart depicts flow logic for this.",11/28/05
ProjectE - TIM - 1466,Inst4: Discrepancy between SDD Inst4_HandleDownlink and CDR code flow chart,3,"Section 5.3.5 Inst4_HandleDownlink, and Page 31 of Artifact 2). Section 5.3.5 Inst4_HandleDownlink function states that ""If there are problems with Downlink_CreateAndBufferM, an error is generated."" The Handle Data code flow chart, on Page 31, does not specify the error generation. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05
ProjectE - TIM - 1465,Inst4: Discrepancy between SDD Inst4_OnEpsCompState and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.4.5 Inst4_OnEpsCompState, and Page 11 of Artifact 2). Section 5.4.5 specifies that “If the message is EPS_COMP_FAILED, then the EPS change state request failed, and, if the component was MAIN1 and MAIN2, then fault protection is performed (Inst4_DoPowerFP function Section 5.4.1). Additionally, if MAIN1 failed, then MAIN2 is switched off.” The design flow logic of the “Handle EPS Response” code flow chart does not include “if MAIN1 failed, then MAIN2 is switched off.”",11/28/05
ProjectE - TIM - 1464,Inst4: Discrepancy between SDD Inst4_HandleSetGlobal and CDR code flow chart,3,"Section 5.3.4 Inst4_HandleSetGlobal, and Page 31 of Artifact 2). Section 5.3.4 Inst4_HandleSetGlobal in decoding a VML data packet states that “if the id is unrecognized, an error is generated.” The Handle Data code flow chart, on Page 31, does not specify the error generation. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05
ProjectE - TIM - 1463,Inst4: Discrepancy between SDD Inst4_OnProcessData and CDR code flow chart - Unknown Message Type Error,3,"Section 5.3.3 Inst4_OnProcessData, and Page 31 of Artifact 2). Paragraph 5 of Section 5.3.3 Inst4_OnProcessData states that “If the data is neither heartbeat nor VML data, the Inst4_HandleDownlink function (Section 5.3.5) is called to downlink it as non-channelized data with a type appropriate APID.” The logic flow in the Handle Data code flow chart, on Page 31, is discrepant from that of the above Inst4_OnProcessData Section. From the discrepancy, the design in Section 5.3.3 can possibly downlink an unknown message type error as a non-channelized data, and not generate an error EVR. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05
ProjectE - TIM - 1462,Inst4: Discrepancy between SDD Inst4_OnProcessData and CDR code flow chart - Handshake,3,"Section 5.3.3 Inst4_OnProcessData, and Page 31 of Artifact 2). The Handle Data code flow chart on Page 31, before checking for the type of a received data packet, sends “Msg To Command Task to Send Handshake.” In Section 5.3.3 Inst4_OnProcessData, no such “handshake” is in the design. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05
ProjectE - TIM - 1461,Inst4: Documentation error in Inst4_OnProcessData,5,"In Section 5.3.3 Inst4_OnProcessData, the reference to the Inst4_ReadSerial function should be Section 5.9.5, not Section 5.9.4.",11/28/05
ProjectE - TIM - 1460,Inst4: Discrepancy between SDD Inst4_HandleTlmMsg and CDR code flow chart,3,"Section 5.3.2 Inst4_HandleTlmMsg has design information that is not flowed to the associated code charts (Pages 29 and 30 of Artifact 2). In Section 5.3.2 Inst4_HandleTlmMsg, the Inst4_SendBadMessageCount function is specified “to send a count of the total number of bad or unrecognized messages.” This is not reflected in the Inst4 Telemetry Task (Page 29) or the Handle Telemetry (Page 30) code flow chart. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05
ProjectE - TIM - 1459,Inst4: Documentation error in Inst4_HandleTlmMsg,5,"In Section 5.3.2 Inst4_HandleTlmMsg, the reference to The Inst4_SendBadMessageCount function should be Section 5.9.8, not Section 5.9.7.",11/28/05
ProjectE - TIM - 1458,Inst4: Clarification on Inst4_OnApidSelect is needed,4,"In section, 5.2.5 Inst4_OnApidSelect, to set the global variable that selects the APID set that the telemetry task uses to downlink the non-channelized data from the Inst4 instrument Section 5.2.5 Inst4_OnApidSelect states that ""An invalid set selection causes the low priority set to be used."" It is not clear what defines an “invalid set selection” or which “low priority set” is referred to. -------------------- Artifacts used: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package)",11/28/05
ProjectE - TIM - 1457,Inst6 Level 5 Requirements Are Not As Specific as Level 4 Requirements,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Imager Functional Requirements Document, Draft, September 3, 2004 Level 5 requirements ""7.1.1 Global Actuator Thermal Control Parameters"", ""7.2 Actuator Preheat"", and ""7.2.2 Automatic Preheat"" are not compositely as specific as Level 4 requirement ""4.1.4.1 Operating Temperature Range"" and ""4.1.4.3 Actuator Heating Characteristics"". ""7.1.1 Global Actuator Thermal Control The following configurable thermal control parameters shall be utilized for all instrument actuators: Table 1 - Global Motion Control Parameters Actuator Preheat Time The maximum time in seconds to heat an actuator when it is below the preheat set point. 16-bit Integer (unsigned) Actuator Preheat Minimum Temperature The temperature, in non-fractional degrees C, below which the motor heating activity shall be invoked when in automatic mode. 16-bit Integer (signed) Actuator Preheat Nominal Temperature The target temperature, in non-fractional degrees C, for preheat activities. 16-bit Integer (signed) Actuator Preheat Maximum Temperature The maximum temperature, in non-fractional degrees C, for preheat activities. 16-bit Integer (signed)"" ""7.2 Actuator Preheat The MIS software shall support the use of a preheat mode for each rotary motion actuator in the Inst6 and Inst8 instruments. The intent of the preheat mode is to allow a particular actuator to reach and maintain a predefined safe operating temperature range prior to the issuance of motion control commands."" ""7.2.2 Automatic Preheat The MIS software shall support the ability to automatically perform a closed-loop actuator preheat in accordance with operational temperature requirements established in the Inst6 and Inst8 functional requirements documents."" ""4.1.4.1 Operating Temperature Range The Inst6 stepper motor actuators shall be capable of operation from -50¢ª C to +30¢ª C."" ""4.1.4.3 Actuator Heating Characteristics Each actuator heater shall be capable of bringing the motor to a minimum operating temperature of -50¢ª C within (TBD) minutes from a starting temperature of (TBD) degrees.""",11/28/05
ProjectE - TIM - 1456,Inst6 Level 5 Requirements do not satisfy Level 4 Requirement,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Surface Stereo Image Functional Requirements Document, Draft, September 3, 2004 Level 5 requirement ""6.5.2 Reset Signal"" states ""The reset line shall be used by the software to reset the PEB electronics ..."". Level 5 requirement ""10.1.4.1 Busy Inactive Fault Recovery"" states ""...the software shall activate the reset line to reset the electronics..."". Level 5 requirement ""10.1.5 Discrete I/O Verification Errors"" states ""...the software shall reset the hardware using the reset signal..."". Each of these requirements trace to Level 4 requirement ""4.3.2 CCD Fault Protection"" which states ""...the camera electronics shall be able to shut off power to the failed CCD under software control and continue to acquire images through the remaining CCD"". The Level 5 requirements do not satisfy the Level 4 requirement.",11/28/05
ProjectE - TIM - 1455,Inst6 Level 5 Requirements 10.1.4.1 and 10.1.4.2 Are Duplicates,3,"Artifact: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components for the Mars Scout ProjectE Lander, Version 1.5, September 20, 2005 Level 5 Requirements ""10.1.4.1 Busy Inactive Fault Recovery"" and ""10.1.4.2 Busy Active Time-Out Fault Recovery"" have the same text: ""If the busy signal does not become inactive in the parameter specified time then the software will activate the reset line to reset the electronics and issue an EVR."" They are also traced to the same Level 4 requirements and sections in the LMA ProjectE Payload FSW API Guide.",11/28/05
ProjectE - TIM - 1454,Level 5 Requirements Aggregately Are Not As Specific As Level 4 Requirement,3,"Artifacts: Software Requirements Specification for the Inst6a, Inst8, and Inst6 Components, Version 1.5, September 20, 2005 Surface Stereo Imager Functinoal Requirements Document, Draft, September 3, 2004 Level 4 requirement ""4.2.4.3 Image Data Description"" states that ""One Inst6 image is 1024x1024x12 bits, uncompressed, not including headers or CCD dark/reference pixels."" The Level 5 requirements ""6.2.1 Science Data Return"", ""6.2.2 Downlink Data Processing"", ""6.2.3 Downlink Data Interfaces"", ""6.2.4 Downlink Data Formats"", ""6.6.2 Analog Inputs"", and ""6.6.2.2"" Analog Input Periodic Acquisition"" all trace to the referenced Level 4 requirement, but none are detailed to the the same extent. ""6.2.1 Science Data Return The MIS SW shall provide the ability to acquire and pass on science data to the C&DH FSW from the Inst6, Inst8 or Inst5/OM CCD imagers onboard the spacecraft."" ""6.2.2 Downlink Data Processing All data (telemetry, science and errors) shall be processed via spacecraft C&DH FSW facilities providing downlink communications services. Downlink processing refers to all data generated for return to Earth by the MIS SW."" ""6.2.3 Downlink Data Interfaces The MIS SW downlink functionality shall conform to the interface definitions contained in the LMA FSW Interfaces documents."" ""6.2.4 Downlink Data Formats The MIS SW downlink functionality shall conform to the data format definitions contained in the MIS SW Command and Telemetry Definitions documents."" ""6.6.2 Analog Inputs Analog input functionality shall be provided by the CCD control logic in the PEB. The software shall be capable of reading specific analog input signals via the instrument control electronics."" ""6.6.2.2 Analog Input Periodic Acquisition The software shall read all analog inputs at a configurable rate and pass the results to channelized telemetry.""",11/28/05
ProjectE - TIM - 1453,No trace of Inst5 Req 4.2.5.2 (marking switches as bad) to the Stage component algorithms,4,"There is no trace of the requirement (4.2.5.2) to Stage Component design that would mark as bad any limit switch that is passed without detection. The requirement is as follows: Requirement 4.2.5.2: If stepper movement goes past a sought-for limit switch, the missed limit switch shall be marked bad for future reference and movement will back up to the limit switch’s position.",11/27/05
ProjectE - TIM - 1452,Inst4: Documentation error in Inst4_OnSysInit,4,"In Section 5.2.2 Inst4_OnSysInit of the Inst4 Subsystem Software Design Description, the reference to Inst4_ReadConfigFile should be Section 5.9.4, not Section 5.9.3.",11/27/05
ProjectE - TIM - 1451,Inst4: Discrepancy between SDD Inst4_Handle CmdMsgs and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.2.1 Inst4_Handle CmdMsgs, and Page 9 of Artifact 2). There is an incosistency between the SDD and the CDR flow chart. 5.2.1 Inst4_HandleCmdMsgs is described to handle system and generic Inst4 spacecraft commands and related messages, including MSG_ID_Inst4_CHECK_HB and MSG_ID_Inst4_REGISTER_HB messages. The Handle Command Message code flow chart on Page 9 shows no MSG_ID_Inst4_CHECK_HB or MSG_ID_Inst4_REGISTER_HB messages handled. In fact, according to the data flow chart, they are handled under “Report Bad Message.”",11/27/05
ProjectE - TIM - 1450,Inst4: Documentation errors in Inst4_Handle CmdMsgs.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 Section 5.2.1 Inst4_Handle CmdMsgs. Paragraph 3 of Section 5.2.1 states ""MSG_ID_Inst4_FILE_LOAD calls the Inst4_OnFileLoad function (Section 5.2.2) and loads a file,"" ""MSG_ID_Inst4_PASS_THROUGH calls the Inst4_OnPassThrough function (Section 5.2.6) to pass commands from the Land FSW to the Inst4 instrument."" The reference to the Inst4_OnFileLoad function should be Section 5.2.3, not Section 5.2.2. The reference to the Inst4_OnPassThrough function should be Section 5.2.4, not Section 5.2.6.",11/26/05
ProjectE - TIM - 1449,Inst4: Documentation clarification on Inst4_Handle CmdMsgs is needed,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 Section 5.2.1 Inst4_Handle CmdMsgs. Section 5.2.1 Inst4_Handle CmdMsgs states ""It does not deal with messages related to telemetry, data processing, heartbeat monitoring, power, safing, or discrete messages."" The ""Safing"" message is not defined or handled, but referred to in this Section/document. This seems to be a heritage terminology that is part of the ""fault protection"" in this document.",11/26/05
ProjectE - TIM - 1448,Inst4: Inconsistency between SDD Inst4_InitDelayCommands and CDR code flow chart.,4,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.1.4 Inst4_Cmd_Task, and Page 6 of Artifact 2). In Section 5.1.4, the Inst4_InitDelayCommands function “handles messages by dividing them into four classes: fault protection, power, discrete-related, and command related. If the message is a fault protection message, it is handled by a call to the LMA Lander fault protection function."" Code flow chart Inst4 Command Task on Page 6 shows no message class of fault protection. It, however, handles a class of ""Safing Msg."" It appears the “Safing Msg” is either a subset of or used interchangeably with the “fault protection message.” However, this is unclear from the artifacts.",11/23/05
ProjectE - TIM - 1447,Inst4: Documentation clarification on Errors and EVR’s is needed,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.1.4 Inst4_Cmd_Task, and Pages 37 and 69 of Artifact 2). Section 5.1.4 states ""If the message is a fault protection message, it is handled by a call to the LMA Lander fault protection function."" Of Artifact 2), the ""TEFSW-EVRs"" on Page 37 lists a set of EVR's, and the ""386 - message dictionary"" on Page 69 displays a set of ""errors."" It is not clear if all the fault protection messages and errors handled by TEFSW are identified and documented.",11/23/05
ProjectE - TIM - 1446,Inst4: Inconsistency between SDD Inst4_Init - ReadConfigFile and CDR code flow chart.,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW ¡V code flow charts, May 19&20, 2005 (Inst4 CDR Package) Section 5.1.1 Inst4_Init of Artifact 1) and Page 5 of Artifact 2). Section 5.1.1 Inst4_Init states that after setting the Inst4_Boot_Select to default, “The next major step in the initialization process is to set the fault protection condition and reset the counters initialized from the default Inst4 configuration file. The Inst4_ReadConfigFile function (Section 5.9.3) is called to read the configuration file.” The sequence of this, however, is inconsistent with the code flow chart of Inst4 Initialize task on Page 5 where “Read Config File” is executed before (error check and) “Initialize Power.”",11/23/05
ProjectE - TIM - 1445,Inst4: Inconsistency between SDD Inst4_Init – Boot_Select and CDR code flow chart,3,"Artifacts: 1) Inst4 Subsystem Software Design Description, JPL D-29447, PHX-475-366, Initial, August 18,2005 2) TEFSW - code flow charts, 386 FSW – code flow charts, May 19&20, 2005 (Inst4 CDR Package) Second paragraph of Section 5.1.1 Inst4_Init of Artifact 1) and Page 5 of Artifact 2). Section 5.1.1 Inst4_Init states that ""When the PACI connections are open, the Inst4_Boot_Select discrete used to identify the EEPROM to boot from is set to the default value (low)."" The code flow chart of Inst4 Task Initialize on Page 5 shows the Inst4_Boot_Select is set after the ""Initialize PACI,"" not after ""Open Devices"" (when the PACI connections are open). It is not clear if these functions are different or if different terminology between the two artifacts is being used to mean the same thing.",11/22/05
ProjectE - TIM - 1443,Lack of waiver/documentation for Reuse/Heritage Payload Software,3,"Per discussions with Contractor3 at the FS Review (Oct 24-26, 2005), IV&V was informed that any code in the payloads that is reuse or heritage is not required to follow the guidelines provided in either the LMA ProjectE Payload FSW API Guide or LMA Software Coding Conventions. However, this exception is not documented in associated requirements documents, design documents, ICDs, etc.",11/16/05
ProjectE - TIM - 1442,"Inst5 Req 6.2.1.6 (Limit Switch, Retraction) is not included (traced) in Inst5 Design Elements",3,"While there are numerous design elements for enabling and turning on Inst5 components, requirement 6.2.1.6 (limit switch other than NEAR) does not trace to any design element for safing the Inst5 instrument when limit switches are not set. The Design document traces the requirement to the Error Detection and Handling Component of Inst5. The requirement is as follows: 6.2.1.6: On startup in an unknown state, the Inst5 FSW shall check that at least one translation limit switch is set other than AFM NEAR. If not, the Stage shall be retracted until a limit switch is encountered.",11/11/05
ProjectE - TIM - 1441,Inst5 Req 6.2.1.4 does not trace to any specific Inst5 Design Element,3,"The requirement 6.2.1.4 does not trace to a specific design element. It traces only generally to the error detection section of the design document. The requirement is as follows: 6.2.1.4: If the CME interface fails to respond to a command with a command echo within the expected FPGA response time, the Inst5 FSW shall toggle the AFM/CME discrete line and attempt to reissue the failed command up to a specified number of retries.",11/11/05
ProjectE - TIM - 1440,Inst5 requirement 6.2.1.2 does not trace to design,3,"The requirement 6.2.1.2 does not trace to a specific design element in the Error Detection and Handling section of the design document. The requirement is as follows: 6.2.1.2: The Inst5 FSW shall assume the following hardware configuration following a lander power loss, Inst5 power failure, Inst5 reset: a) All FPGA registers will be set to 0 b) Any executing FPGA command will be lost c) Any FPGA DAC parameters will be lost d) All heaters, actuators and LEDs will be powered off",11/11/05
ProjectE - TIM - 1439,"Inst5 Req 6.2.1.1 (<Dis>Enabling, Shutdown) do not trace to Inst5 Design",2,"Requirement 6.2.1.1 does not trace to design element in Error Detection and Handling section of the Inst5 document. Enabling, disabling and shutdown are fundamental processes for any instrument. The requirement is as follows: 6.2.1.1: The Inst5 FSW shall save the following information in the event of an unscheduled power shutdown: a) What hardware operations are in progress. b) Which components are enabled. c) Current command statistics d) Any currently executing commands.",11/11/05
ProjectE - TIM - 1438,Incomplete Trace of MEAC Req 5.2.1.7 to the CME Design Elements,5,Requirement 5.2.1.7 is compatible with the Inst5 design but does not trace to a specific design element. Immediate sending of telemetry to the lander from the instrument is not explicitly represented in the 'read' algorithms for each component of the Inst5 instrument. The requirement is as follows: 5.2.1.7: The Inst5 FSW shall send all collected telemetry data to the lander immediately upon completion of processing.,11/11/05
ProjectE - TIM - 1437,Incomplete Trace of Inst5 Req 5.2.1.4 to the CME Design,4,"Requirement 5.2.1.4 traces to Appendix C and C.2.5 CME_STATUS. The time stamp [a)] and 22 byte buffer are declared; however, the 42 byte command echo and ID number are not included in the declaration. This might be because of the difference between what is delivered and then returned from the FPGA(42 byte echo) and how or where the information is stored. The requirement is as follows: 5.2.1.4: The CME Status Data shall consist of the following: a) A time stamp showing when the status read command was issued to the CME b) The 22 byte status data buffer information from the CME c) The 42 byte command echo from the CME d) A Inst5 FSW-generated data set ID number",11/11/05
ProjectE - TIM - 1436,No Trace of Inst5 Req 4.5.3.1 to the TECP Design Algorithm 1.42.1(TECP Reading),3,"Requirement 4.5.3.1 does not trace to the TECP design elements. Specifically, the algorithm 1.42.1 TECP Reading does not include a condition to verify that TECP is enabled. The requirement is as follows: 4.5.3.1: The Inst5 FSW shall only collect data from the TECP if it has been previously enabled.",11/11/05
ProjectE - TIM - 1435,No Trace of Req 4.5.2.3 to the TECP Design Elements,3,"There is no trace of the requirement 4.5.2.3 to TECP design elements- algorithms, public routines or commands. The requirement is as follows: 4.5.2.3: The Inst5 FSW shall be capable of querying the following information from the Robotic Arm control software: a) The position of the TECP b) The orientation of the TECP",11/11/05
ProjectE - TIM - 1434,No Trace of the Inst5 Req 4.5.2.2 to the TECP Design Element,3,Requirement 4.5.2.2 does not trace to a TECP design element (algorithm). It does not trace to a public routine for TECP or a TECP command. The requirement is as follows: 4.5.2.2: The Inst5 FSW shall be capable of altering each of the following FPGA controlled values for the TECP instrument: a) 5v power and breaker b) The input mode (single-ended or differential) c) The polarity (bipolar or unipolar) d) The output data bit order e) Auto-shutdown mode f) ADC run option g) Heaters and measurement enables,11/11/05
ProjectE - TIM - 1433,No Trace of Inst5 Req 4.5.2.1 to the TECP design elements,3,"Requirement 4.5.2.1 is not traceable to any TECP design element (algorithm), public routine or command. There is no command to set the rate or the duration for reading TECP sensors. The requirement is as follows: 4.5.2.1: The Inst5 FSW shall implement a command to read all TECP sensors at a commanded rate for a commanded duration.",11/11/05
ProjectE - TIM - 1432,No Trace of Inst5 Req 4.4.5.2 to the AFM Design Elements,3,The AFM component design elements do not have a condition that a command only be executed if AFM is confirmed as enabled. Requirement 4.4.5.2 (confirming enabled before commanding) does not trace to any algorithm or statement that within the design to the same effect. The requirement is as follows: 4.4.5.2: The Inst5 FSW shall only command the AFM if it has been previously enabled.,11/11/05
ProjectE - TIM - 1431,No Trace of Inst5 Req 4.4.4.1 to the AFM Design,3,"Requirement 4.4.4.1 does not trace to any AFM design element. There is an imaging algorithm which includes a test for completion. It is unclear whether this is the same as failing to scan a substrate. The requirement has left the number of reapproachs as TBD. The requirement is as follows: 4.4.4.1: If the AFM fails to scan a substrate, FSW shall reapproach TBD times. If scanning continues to fail, FSW will move on to the next substrate. FSW will not set the fault condition to failed.",11/11/05
ProjectE - TIM - 1430,Health Check (Req 4.1.3.6) of current-draw does not trace to Inst5 Design,3,"The current-draw verification test of requirement 4.4.3.6 cannot be traced to the Inst5 design. The requirement overall traces to the frequency test, tip test and a test of the current (related to the tip test). The requirement is as follows: 4.4.3.6: The health check of the AFM shall include the following: a) a tip-test function b) a frequency test function c) current-draw verification",11/11/05
ProjectE - TIM - 1429,Inst5 AFM Design does not trace to Req 4.4.3.5,3,There is no command defined in the Inst5 design that would accomplish the action defined in requirement 4.4.3.5. The requirement is as follows: 4.4.3.5: The Inst5 FSW shall implement a command to zoom into 1 of 16 image segments on the basis of a simple entropy analysis of the sub-areas.,11/11/05
ProjectE - TIM - 1428,Inst5 AFM Design does not trace to Req 4.4.3.4,3,"There is no command defined in the Inst5 design that would accomplish the action defined in requirement 4.4.3.4. The requirement is as follows: 4.4.3.4: The Inst5 FSW shall acquisition of forward and backward scanning data from both the topography and error channels, or the phase and error channels, as selected by the user.",11/11/05
ProjectE - TIM - 1427,Inst5 Design incorporating Req 4.4.3.3 is TBD,3,There is no trace to design of the requirement 4.4.3.3. The requirement is as follows: 4.4.3.3: The Inst5 FSW shall be able to perform the scan-surface-orientation correction based on an initial limited prescan.,11/11/05
ProjectE - TIM - 1426,Inst5 Design incorporating Req 4.4.3.2 is TBD,3,"There is no trace to design of the requirement 4.4.3.2. The requirement is as follows: 4.4.3.2: The Inst5 FSW shall implement a commandable option to be able to perform a limited prescan on a sample to determine the maximum scan range possible, and determine the correct scan settings for a full scan.",11/11/05
ProjectE - TIM - 1425,Inconsistent trace of Inst5 Req 4.4.2.9 to the AFM Design,3,"It is not clear whether a command has been defined to execute requirement 4.4.2.9- sending low-level 32 byte commands. The closest match to requirement 4.4.2.9 is the command B.17 Inst5_AFM_RAW. This command sends raw commands (32 bits in length) and a list of 32 parameters is provided. Nothing defines the difference between a low-level command and a command of ""RAW"" command. The requirement is as follows: 4.4.2.9: The Inst5 FSW shall be capable of sending the AFM a pass-through low-level command (32 bytes).",11/11/05
ProjectE - TIM - 1424,"Command ""Init lever sensor bridge"" does not trace to Inst5 AFM Design",3,"Requirement 5.5.2.6 states, ""The Inst5 FSW shall implement commands to perform the following low-level AFM operations, per EasyScan User’s Manual:"" and of the 8 low-level operations, one (lever sensor bridge) does not trace to the command list for AFM: h) Init lever sensor bridge The requirement is as follows: 4.4.2.6: The Inst5 FSW shall implement commands to perform the following low-level AFM operations, per EasyScan User’s Manual: a) Do Approach b) Do Frame c) Do Line d) Init Plane e) Move to Start f) Init Phase Locked Loop g) Read ADC h) Init lever sensor bridge",11/11/05
ProjectE - TIM - 1423,No Trace of 17 Parameters defined in Inst5 Req 4.4.2.5 to AFM Design,3,"The following parameters of the requirement 4.4.2.5 do not trace to the parameter table (those with a parameter shown in parentheses are possibly a match): d) Inputs to measure e) Auto z-offset enable (AUTO_Z_MODE) f) Input channel for subsequent parameter reads/writes g) DC offset (CHANNEL_OFFSET) i) Setpoint of the z-axis distance controller (REG_SET_POINT) j) Integration speed of z-feedback controller k) Error amplification, working mode and output mode of z-feedback loop l) In and out polarity of feedback signals m) Input signal type n) Gap voltage output o) Z-DAC limit p) Center frequency q) PLL loop P-gain r) Active lever s) Level oscillator amplitude t) Negative voltage and offset voltage of lever sensor bridge u) PLL integral speed, phase, frequency scan start point, frequency increment, repeat The requirement is as follows: 4.4.2.5: The Inst5 FSW shall implement one or more commands to set the following AFM attributes, per the limits and units defined in EasyScan User’s Manual: a) Scan axis for subsequent parameter reads/writes b) Axis scan vector (x/y/z), range and offset (x/y/z) c) Time per unit d) Inputs to measure e) Auto z-offset enable f) Input channel for subsequent parameter reads/writes g) DC offset i)Setpoint of the z-axis distance controller j)Integration speed of z-feedback controller k) Error amplification, working mode and output mode of z-feedback loop l)In and out polarity of feedback signals m)Input signal type o) Z-DAC limit s) Level oscillator amplitude t) Negative voltage and offset voltage of lever sensor bridge u) PLL integral speed, phase, frequency scan start point, frequency increment, repeat",11/11/05
ProjectE - TIM - 1422,No Trace of Inst5 Req 4.4.2.12 to the AFM Component Design,3,Requirement 4.4.2.12 does not trace to any of the AFM design algorithms. There is no public routine that apparently would retrieve or set the status data defined by this requirement. The requirement is as follows: 4.4.2.12: The AFM Status data shall consist of the following: a) Time stamp showing when the command prompting the read was issued to the AFM b) The 32 byte response message returned from a non-scanning AFM command. c) A Inst5 FSW-generated data Set ID number,11/11/05
ProjectE - TIM - 1421,Partial Trace of Inst5 Req 4.4.2.1 to the AFM Component,4,"Requirement 4.4.2.1 traces only partially to the design algorithms for the AFM component of Inst5. No action exists for resetting back the discrete to ""Inst5."" The requirement is as follows: 4.4.2.1: The Inst5 FSW shall set the AFM/Inst5 discrete to “AFM” prior to issuing commands to the AFM and reset it to “Inst5” afterward.",11/11/05
ProjectE - TIM - 1420,Incomplete trace of Inst5 Req 4.1.5.6 (Set Timer) to the Inst5 Reagent Release Algorithm,4,"The Reagent Release algorithm includes a ""Set Timer"" action and this traces to requirement 4.1.5.6. However, the algorithm does not utilize the timer later in the process to control the start of an action. 4.1.5.6: The Inst5 FSW shall power the reagent addition actuator for no more than 2 minutes.",11/11/05
ProjectE - TIM - 1419,No trace of Inst5 Req 4.1.5.5 (temp control) to the WCL component,4,"Requirement 4.1.5.5 traces to the WCL design element 1.30.3 Water Release however this design algorithm does not include any condition involving temperature. The requirement is as follows: 4.1.5.5: Unless specifically overridden, the Inst5 FSW shall heat a wet chemistry water tank to at least +3° C (TBR) before activating the water release actuator.",11/11/05
ProjectE - TIM - 1418,Incomplete trace of Inst5 Req 4.1.5.4 (only one cell enabled) to the WCL Design,4,Requirement 4.1.5.4 traces partially to the enable actions within the WCL design elements (algorithms). The trace is incomplete to WCL design because of the lack of a design element for enabling a cell. The requirement is as follows: 4.1.5.4: The Inst5 FSW shall ensure that only one wet chemistry cell is enabled at a time.,11/11/05
ProjectE - TIM - 1417,"No trace of Inst5 Req 4.1.5.1 (Power On, Enabling) to the WCL component",3,Requirement 4.1.5.1 does not trace to the design. There is no design element for power-on or for enabling the WCL. Enabling is a required action within the design elements but enabling itself (and power on) are not defined. The requirement is as follows: 4.1.5.1: The Inst5 FSW shall only power the actuators and/or heaters for wet chemistry cells that have previously been enabled.,11/11/05
ProjectE - TIM - 1416,No trace of Req 4.1.4.6 to the WCL component,3,Requirement 4.1.4.6 does not trace to a Wet Chemistry component algorithm and there is no external public routine declared to execute this experiment. The requirement is as follows: 4.1.4.6: The Inst5 FSW shall implement a command to conduct a default or non-default chronopotentiometry experiment on a specified wet chemistry cell.,11/11/05
ProjectE - TIM - 1415,No trace Inst5 Req 4.1.4.5 (FPGA commands) to the WCL Design,3,"The ASV requirement 4.1.4.5 requirement a) and c) apply a voltage. However, the requirement does not trace to a Wet Chemistry algorithm or public routine and does not trace to any defined design element to apply a specified stripping waveform and retrieval of current data. The requirement is as follows: 4.1.4.5: During an ASV experiment, the Inst5 FSW shall command the FPGA to do the following: a) Apply a specified conditioning voltage to the designated working electrode for a specified time period b) Turn on stirring in the active wet chemistry cell c) Apply a specified deposition voltage to the designated working electrode for a specified time period d) Turn off stirring in the active wet chemistry cell e) Apply a specified stripping waveform and retrieve the current data",11/11/05
ProjectE - TIM - 1414,Inst5 Design does not trace to the Req 4.1.4.4,3,"There is no design element in the Wet Chemistry component section of the Inst5 FSW Design Document that traces to requirement 4.1.4.4, specifically to the anodic stripping experiment. The requirement is as follows: 4.1.4.4: The Inst5 FSW shall implement a command to conduct a default or non-default anodic stripping experiment on a specified wet chemistry cell.",11/11/05
ProjectE - TIM - 1413,Inst5 Design does not trace to the Req 4.1.4.3,3,"There is no design element in the Wet Chemistry component section of the Inst5 FSW Design Document that traces to requirement 4.1.4.3, specifically to the cyclic voltammetry experiment. By its name, the public routine mcWchem_Read_exe(mcMsgObject_t *msgObj); would likely generate data packets from the experiment. The requirement is as follows: 4.1.4.3: The Inst5 FSW shall implement a command to conduct a default or non-default cyclic voltammetry experiment on a specified wet chemistry cell.",11/11/05
ProjectE - TIM - 1412,No trace of Inst5 Req 4.1.4.2 to the WCL Component Design,3,Requirement 4.1.4.2 does not trace to the WCL design. The WCL design does not include a algorithm or declaration of a public routine that would command a DOX experiment. The requirement is as follows: 4.1.4.2: The Inst5 FSW shall implement a command to conduct a default or non-default dissolved oxygen experiment on a specified wet chemistry cell.,11/11/05
ProjectE - TIM - 1411,Health Check (Req 4.1.4.10) does not trace to any WCL Design,3,"A Health Check (requirement 4.1.4.10) is not integrated into any design algorithm of the Wet Chemistry Component nor to any other section of the design. The requirement is as follows: 4.1.4.10: A health check of WCL shall include measuring temperatures, pressure, dissolved gases (CO2 and oxygen), and measuring power draw.",11/11/05
ProjectE - TIM - 1410,No trace of Inst5 Req 4.1.4.1 to the WCL Component Design,3,Requirement 4.1.4.1 does not trace to any algorithm for the Wet Chemistry Component.The requirement fails a consistency check; it does not represent a level 5 requirement in detail. The requirement is as follows: 4.1.4.1: The Inst5 FSW shall implement a command to conduct a default or non-default conductivity experiment on a specified wet chemistry cell.,11/11/05
ProjectE - TIM - 1409,No trace of the Inst5 Req 4.1.3.4 to the WCL Component Design,3,"Requirement 4.1.3.4 does not trace to any design algorithm or external function declaration for the Wet Chemistry Component. The requirement is as follows: 4.1.3.4: The Inst5 FSW shall supply the ability to adjust the following DOX experiment control parameters: a) The reference electrode [TBD] b) The gain setting c) The waveform parameters including starting voltage, min/max voltages, and ramp rate.",11/11/05
ProjectE - TIM - 1408,No trace of the Req 4.1.3.3 to the WCL Component Design,3,"Requirement 4.1.3.3 does not trace to any design algorithm or external function declaration for the Wet Chemistry Component. The requirement is as follows: 4.1.3.3: The Inst5 FSW shall supply the ability to adjust the following chronopotentiometry experiment control parameters: a) The reference electrode b) The gain setting c) The waveform parameters including starting voltage, min/max voltages, and ramp rate.",11/11/05
ProjectE - TIM - 1407,No trace of the Req 4.1.3.2 to the WCL Component Design,3,"Requirement 4.1.3.2 does not trace to any design algorithm or external function declaration for the Wet Chemistry Component. The requirement is as follows: 4.1.3.2: The Inst5 FSW shall supply the ability to adjust the following CV experiment control parameters: a) The reference electrode b) The gain setting c) The waveform parameters including starting voltage, min/max voltages, and ramp rate.",11/11/05
ProjectE - TIM - 1406,No trace of the Req 4.1.3.1 to the WCL Component Design,3,Requirement 4.1.3.1 does not trace to any design algorithm or external function declaration for the Wet Chemistry Component. The requirement is as follows: 4.1.3.1: The Inst5 FSW shall supply the ability to adjust the following ASV experiment control parameters: a) The reference electrode b) The gain setting c) The waveform parameters including starting voltage and step height.,11/11/05
ProjectE - TIM - 1405,No trace of Inst5 Req 4.1.2.7 to the WCL Component Design,3,"Requirement 4.1.2.7 does not trace to any algorithm within the Wet Chemsitry component of the design document. No additional details are provided in the ICD. The requirement is as follows: 4.1.2.7: For voltammetry (ASV, CV, DO), the Inst5 FSW shall provide parameters to the FPGA to enable it to return an array of data without allowing the PACI interface to time out (“trickle mode”).",11/11/05
ProjectE - TIM - 1404,Inst5 Req 4.1.2.4 does not trace to HW/SW ICD,4,"Requirement 4.1.2.4 does not trace to any functions in the HW/SW ICD. Requirement is not at the same level of detail (Inconsistency). Level of detail represents a level 3 requirement, not L5. The requirement is as follows: 4.1.2.4: The Inst5 FSW shall handle the data return of all WCL functions specified in the Inst5 Hardware Software Interface Control Document.",11/11/05
ProjectE - TIM - 1403,"WCL design (1.30.1, 1.30.2) does not trace to requirement 4.1.2.13",3,"Requirement 4.1.2.13 does not trace to the WCL design. The Design elements (algorithms) 1.30.1 Drawer Opening and 1.30.2 Drawer Closing do not include the action of raising the temperature to >-20C or considering the temperature at all. The requirement is as follows: 4.1.2.13: The Inst5 FSW shall raise the drawer temperature to at least -20° C before opening or closing the drawer, to prevent damage.",11/11/05
ProjectE - TIM - 1402,Stage Component Rotate Init does not trace to requirement 4.2.6.2,4,"The absolute rotation algorithm initially checks if it is safe to rotate. Requirement 4.2.6.2 traces reasonably to this element but does not trace to the Rotate Init algorithm which simply begins rotating to reach an initial ""ready"" state. The requirement is as follows: 4.2.6.2: No Stage rotation shall take place when the AFM is powered and enabled AND the AFM NEAR signal is engaged.",11/11/05
ProjectE - TIM - 1401,Inconsistent trace of Inst5 requirement 4.2.6.1 to the Stage Component. State A undefined.,4,There is reference to a state A when beginning a stage movement in the design algorithms but this state is not defined. The translate and rotate init commands are defined but their relation to the movement commands are not clear. Initialization is assumed to be equivalent to enabled but the tie to the state A is not made. The requirement related to this issue is as follows: 4.2.6.1: The Inst5 FSW shall only command the Stage if it has been previously enabled.,11/11/05
ProjectE - TIM - 1400,No trace of Inst5 requirement 4.2.5.1 (and vagueness) to Stage Component,2,"Requirement 4.2.5.1 does not trace to the design elements. The movement algorithms never refer to ""too early"" or an unexpected limit switch. This requirement should likely be a logical part of the motion algorithms. The requirement is as follows: 4.2.5.1: If stepper movement arrives at a limit switch too early, or if movement stops at a limit switch which flight software didn’t expect to encounter, based on the software’s understanding of the movement’s starting position, it will issue an error and stop.",11/11/05
ProjectE - TIM - 1399,No trace of requirement 4.2.4.2 to the Stage Component Algorithms,3,"There are no Stage Component design elements defined for the radiant heater (Requirement 4.2.4.2) or a heater in general. Use of the heater is not included in the design. There are no public routines for heater control. Only the overview mentions that the Stage component provides access control to the radiant heater. The requirement is as follows: 4.2.4.2: The Inst5 FSW shall implement a command to turn on the radiant heater, for up to 20 (TBR) seconds.",11/11/05
ProjectE - TIM - 1398,Inconsistency check fails for Inst5 requirement 4.2.4.1 due to TBD,4,"Requirement 4.2.4.1 traces to the Initialization Stage design elements; however, the consistency of the requirement fails because of the remaining TBD. The level 5 requirement does not specify where the stage is left after power-on. The requirement is as follows: 4.2.4.1: The Inst5 FSW shall initialize the stage at power-on by verifying commandability to each limit-switch delineated position, and then leaving the stage in a TBD position.",11/11/05
ProjectE - TIM - 1397,Inconsistent trace of Inst5 requirement 4.2.3.1 to the Stage Component,3,There is not a clear trace of requirement 4.2.3.1 to any of the Stage component design. Only design element 1.26.5 Absolute Translation refers to sample position (or to sample). No design element refers to sample wheel. The requirement is as follows: 4.2.3.1: Inst5 FSW shall support movement relative to a specific sample wheel fiducial.,11/11/05
ProjectE - TIM - 1395,Inconsistent trace of Inst5 requirement 4.2.2.6 to the Stage Component,4,Requirement 4.2.2.6 traces to the translate and rotate init algorithms in that they both add the position to telemetry. There is no indication in the design that the position would be saved by the FSW. All other designs including those for motion after initialization for the Stage do not refer to sending or saving the position. The requirement is as follows: 4.2.2.6: The Inst5 FSW shall maintain knowledge of the current position of the Stage in both the rotational and translational directions.,11/11/05
ProjectE - TIM - 1394,No trace of the Inst5 requirement 4.2.2.5 to the Stage Component,3,Requirement 4.2.2.5 (Pulse width modulation) is not traceable to any specific algorithm in the Stage Component of the Design document. Power is not a factor in any of the algorithms of the design. The requirement is as follows: 4.2.2.5: Power used by the Stage shall be selectable through commandable pulse width modulation.,11/11/05
ProjectE - TIM - 1393,Incomplete trace of Inst5 requirement 4.2.2.4 to the Stage Component,3,"Requirement 4.2.2.4 traces to some of the algorithms of the Stage Component design. Motor command parameter d)stepper motor directions can be traced to the translate and rotate algorithms. The remaining parameters are not referenced or linked directly to the design of the Stage. Further details in other documents such as the FRD (level 4s) do not provide a link and additional detail. The requirement is as follows: 4.2.2.4: The Inst5 FSW shall be capable of controlling each of the following stepper motor command parameters separately: a) Stepper motor pulse width b) Limit switch overrides c) Alternate limit switch selection d) Stepper motor direction (in/out, clockwise/counterclockwise) e) Motor duty cycle f) Motor step type g) Motor steps",11/11/05
ProjectE - TIM - 1392,Inst5 requirement 4.2.2.18 does not trace to the design,3,"Requirement 4.2.2.18 does not trace to a design algorithm. The requirement traces to a level 4 requirment 2.1.1.12 and 2.2.1.16 in the FRD only in the sense that both level 4s refer to limit switches. Review of the Level 3 to 5 requirements for limit switches reveals inadequate detail in the implementation and use of the limit switches. The FRD reference to a parent states only ""S"" meaning ""Specification"" which seems to imply no direct trace. The requirement is as follows: 4.2.2.18: The positions of the individual limit switch transitions shall be configurable.",11/11/05
ProjectE - TIM - 1391,Incomplete trace of Inst5 requirement 4.2.2.17 to the Stage Component,3,Requirement 4.2.2.17 traces in general to the Stage Component section however there is no statement that discrete stage positions exist for each instrument function. The design document provides algorithms for basic actions but the lack of a trace and reference to these discrete stage positions and the LUT is a gap in the level of detail from design to level 5 requirements and this requirement does not trace to the FRD (level 4) requirements either. The requirement is as follows: 4.2.2.17: The Inst5 FSW will maintain and refer to a look-up table (LUT) of stage positions to accomplish all functions including imaging of each substrate.,11/11/05
ProjectE - TIM - 1390,Inconsistent level of detail of a requirement traced to the Stage Component,3,"Requirement 4.2.2.16 traces to the Stage Component. However, the statement to ""take into account the hysterisis"" does not provide the level of detail expected of a level 5 requirment. How exactly the hysterisis is taken in account should be provided. This issue represents a lack of consistency in the level of detail. The requirement is as follows: 4.2.2.16: The Inst5 FSW will take into account the hysteresis in the Stage mechanism through appropriate commanding of a final motion.",11/11/05
ProjectE - TIM - 1389,Inconsistent naming convention of commands in the Inst5 Design,4,"An inconsistency exists in the naming convention of Inst5 commands. Examples are: Inst5_CMD_FLUSH and CMD_FLUSH Inst5_AFM_STATIC and AFM_STATIC Inst5_WC_READ and WC_READ If the inconsistency reached the implementation phase, unit tests should likely uncover an error. If defined in enumerators, potentially re-use code could be mixed with new code causing misinterpretation but simple tests should quickly uncover it. The requirement associated with this issue is as follows: 4.6.1.1: All Inst5 commands shall follow the command format specified in Command Flight Software User's Guide, Revision A, 12/4/98.",11/11/05
ProjectE - TIM - 1388,Partial trace of Inst5 requirement 3.1.2.5 to the Telemetry Component,3,"Requirement 3.1.2.5 only partially traces to the Telemetry component. All system level commands trace to the design algorithms except ""RESET"". There is no clear process defined in the design for resetting the SW or HW. The requirement is as follows: 3.1.2.5: The Inst5 FSW shall respond to the following system level commands: a) SYS_INIT b) SYS_PING c) SYS_FP_ENAB d) EPSO_COMP_STATE e) RESET f) SAVE",11/11/05
ProjectE - TIM - 1387,Inconsistent inclusion of a health check in the HW Interface Component,3,"Requirement 7.2.1.1 does trace in general to the HW Interface Component, however there are no design elements within this component that trace to the health check for the Analog Board. The requirement effectively fails the consistency check because 1)the design provides no guidelines for applying a health check, the frequency at which it is checked or how the software would implement the check. The requirement is as follows: 7.2.1.1: A health check of the Analog board consists of the following: a) Applying power b) Reading temperatures c) Verifying current draw",11/11/05
ProjectE - TIM - 1386,No trace of Inst5 requirement 3.3.2.4 to Command Processing Algorithms,3,"Requirement 3.3.2.4 does not trace to any design algorithm. The requirement fails to define the event after which Ready and Idle is expected after a parameterized amount of time. Completeness. Requirement fails to define the related event after which it must wait for Ready and Idle signals. The requirement is as follows: 3.3.2.4: The Inst5 FSW will send appropriate error messages, and set the fault condition to “failed”, should the Inst5 Alive and Idle discrete lines fail to signal “Ready” and “Idle” within a parmeterized amount of time.",11/11/05
ProjectE - TIM - 1385,No trace of Inst5 requirement 3.3.2.3 to Command Processing Algorithms,3,"There is not a direct trace of Requirement 3.3.2.3 to design. The requirement traces indirectly to Power On and to PaciWrite. No algorithm defines process following reset. The requirement is as follows: 3.3.2.3: Following a commanded reset of the Inst5 hardware, the Inst5 FSW shall wait for the Inst5 Alive and Idle discrete lines to signal “Ready” and “Idle” before sending commands.",11/11/05
ProjectE - TIM - 1384,Incomplete trace of Inst5 requirement 3.3.2.2 to design,3,There is no design specifying a wait for Alive and Idle before sending command (per requirement 3.3.2.2). The Device Enable design element includes power-on. Traces to 1.18.2 FPGA Commanding. FPGA commanding does not include wait-for state. The requirement is as follows: 3.3.2.2: At Inst5 Power On the Inst5 FSW shall wait for the Inst5 Alive and Idle discrete lines to signal “Ready” and “Idle” before sending commands to the CME.,11/11/05
ProjectE - TIM - 1383,Insufficient trace of requirement to Inst5 CME Component,4,"Requirement 3.3.2.1 traces to a public routine ""extern int mcCme_Reset(void)"" in the Inst5 CME design but does not trace to any algorithm. The routine is only declared in the design document and no further details are provided except the trace to the level 5 requirement. Importance of reset in general warrants more detail in the design document. There is no consideration of a reset hold in any of the Inst5 design elements. The requirement is as follows: 3.3.2.1: The Inst5 FSW shall hold the Inst5 Reset discrete line in reset for a minimum of 10ms to force the Inst5 hardware to reset.",11/11/05
ProjectE - TIM - 1382,Logical Fault in Inst5 design algorithm 1.18.4 PACI Ops,3,There is a logic fault in the flow chart of the PACI Ops design(Design Element 1.18.4 PACI Ops). A condition has two paths marked YES. Both PACIWRITE and PACIREAD have the condition where the response is to the state of YES twice. It is uncertain which should be NO.,11/11/05
ProjectE - TIM - 1380,Level 5 Requirement SRSR224 is Unrelated to Level 4 Requirement,4,"Artifacts: CD-MDR-PHX-SG-SG-7862 Revision 1.0 ProjectE Inst10 System Requirements Document Revision B Level 5 requirement SRSR224 says ""shall a) enable power to Lidar sensor head ... b) disable power to the lidar sensor head"" and Level 4 requirement SYSR272 says ""shall be capable of transferring data to the Lander while the lidar transmitter and receiver are off ..."". The requirements are not directly related.",10/12/05
ProjectE - TIM - 1379,Level 5 Requirement SRSR116 Is Not As Specific As the Level 4 Requirement,3,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 ProjectE Inst10 System Requirements Document Revision B Level 5 requirement SRSR116 is not as specific as its parent requirement SYSR30. SRSR116 says ""...a) after every accumulation period,...""; whereas, SYSR30 says ""...counting data over a specified number of shots (where each is specified independently by an integer n where n is between 0 and 17 and the number of shots is given by 2 to the power of n).""",10/12/05
ProjectE - TIM - 1378,Level 5 Requirement SRSR125 Should Be a Pressure/Temperature Requirement,3,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 Level 5 requirement SRSR125 says the ""MPTMS CSCI shall set the configuration for the Lidar ..."" The MPTMS CSCI is the Pressure/Temperature Manager and has its own SRS (CD-MDR-PHX-SG-7927). The action to be taken is not to be done by the Lidar Manager but to be done by the Pressure Temperature Manager; therefore, this requirement should be placed in the PT (Pressure/Temperature) SRS, CD-MDR-PHX-SG-7927. ""3.2.4.2.2 Default Lidar Configuration On power up, the MPTMS CSCI shall set the configuration for the Lidar as specified in the default value of each data element in the Inst10 to Lander Software ICD.""",10/12/05
ProjectE - TIM - 1377,Level 5 Requirement SRSR223 Is Unrelated to Level 4 Requirement,4,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 ProjectE Inst10 System REquirements Document Revision B Level 5 requirement SRSR223 says ""shall be capable of controlling the power"", whereas the Level 4 requirement SYSR272 says ""shall be capable of transferring data"".",10/12/05
ProjectE - TIM - 1376,Level 5 Requirement SRSR20 Traces to Non-Existent Level 4 Requirement,3,Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Level 5 requirement SRSR20 traces to non-existent Level 4 requirement DATA25.24 in the ICD.,10/12/05
ProjectE - TIM - 1375,Inst9 Test Plan is Missing Tests,4,"The Inst9 Test Plan references the following tests in the Verification Matrix in Appendix B for Requirements 4, 8, 44, 51, 53, 54: Inst9-MV_CART_FLT Inst9-MV_GRD_FLT These tests are not in the test plan. The requirements are as follows: 4 The RAFSW shall produce the following task-level channelized telemetry: a) actuator command opcode, b) fault status and c) task command opcode. 8 The RAFSW shall report command completion by setting a sequence global variable. 44 The RAFSW shall provide a functionality to perform a guarded move. The algorithm will move the Inst9 the designated amount until the move is completed or contact is made where contact is sensed by monitoring joint torques via motor currents. Contact occurs when the specified joint torque threshold is reached for at least one joint. 51 The RAFSW shall produce the following actuator-level channelized telemetry: a) actuator status (power, direction, brake and heater status), b) joint angles from potentiometers and encoders, c) energy used, d) joint temperatures, e) sum of joint heater currents, and f) positive and negative voltage reference, and g) analog ground. 53 The RAFSW shall implement the capability to save the following Inst9 data to file in DRAM at the specified rates: a) parameter table anytime a parameter is changed, b) Inst9 status data upon actuator command completion. 54 The RAFSW shall provide a command to move the Inst9 in Cartesian space using absolute coordinates wrt the Inst9 base frame, relative coordinates wrt the Inst9 base frame, or relative coordinates wrt the chosen tool frame.",10/6/05
ProjectE - TIM - 1374,Inst9 Requirement #49 Not Verified by Tests,3,"It is not clear that Inst9 requirement #49 is verified by the test it is traced to. This requirement is traced to the following test: Inst9-MV_CART_NOM Inst9 FSW Requirement #49: The number of via points generated by the RAFSW Cartesian path generator shall satisfy two conditions: 1) the deviation from the Cartesian straight-line path is less than the specified error bound, åp, and 2) the Cartesian distance between via points is less than the specified allowable distance, äd.",10/6/05
ProjectE - TIM - 1373,Inst9 Requirement #32 Not Verified by Tests,3,It is not clear that Inst9 requirement #32 isverified by the test it is traced to. This requirement is traced to the following test: Inst9-MV_CART_NOM Inst9 FSW Requirement #32: The RAFSW shall provide the functionality for external software to query the current position and orientation of each tool on the Inst9.,10/6/05
ProjectE - TIM - 1372,Inst9 Requirement #25 Not Verified by Tests,3,"It is not clear that Inst9 requirement #25 is verified by the test it is traced to. This requirement is traced to the following test: Inst9-MV_CART_NOM Inst9 FSW Requirement #25: The RAFSW shall implement the inverse kinematics such that if the selected tool is the Inst8 the function will compute the joint position that will point the Inst8 focal axis at a desired target (x, y, z) at a specified distance, d, along the Inst8 focal axis.",10/6/05
ProjectE - TIM - 1371,Inst9 Requirement #24 Not Verified by Tests,3,"It is not clear that Inst9 requirement #24 is verified by the test it is traced to. This requirement is traced to the following test: Inst9-MV_CART_NOM Inst9 FSW Requirement #24: The RAFSW shall implement the inverse kinematics such that the function will compute the joint position that will locate a selected tool frame at the desired Cartesian pose (x, y, z, pitch) if the tool is not the Inst8.",10/6/05
ProjectE - TIM - 1370,Inst9 Requirement #21 Not Verified by Tests,3,It is not clear that Inst9 requirement #21 is verified by the test it is traced to. This requirement is traced to the following test: Inst9-MV_CART_NOM Inst9 FSW Requirement #21: The RAFSW shall provide a functionality to select the tool whose location the Cartesian and orientation coordinates in subsequent commands describe.,10/6/05
ProjectE - TIM - 1369,Inst9 Test Plan does not contain enough information to determine verification of requirements,3,"IV&V concludes that the Inst9 test desciptions do not present sufficieint detail to verify coverage of Inst9 requirements. For most of the test cases, there was not enough detailed information in the test steps to determine verification of the traced requirements. If there is a corresponding test procedure document that will be released, this is not an issue. However, if this is the only test documentation for Inst9, there is a concern regarding the lack of detail in the test plan to determine requirements verification. Also, the introduction of the test plan states that each test will have the following information/format: 1. Purpose of Test 2. Test Configuration 3. Required Inputs 4. Initial Conditions 5. Expected Results 6. Sucess Criteria. However, the tests are not organized this way. The general format is 1. Description 2. Objectives 3. Configuration 4. Method 5. Test Output 6. Post Test Analysis 7. Success. Required inputs and Initial conditions are not presented in the test steps. Additional detail in the test steps themselves that would clearly indicate how the traced requirement is tested could have made verifying the requirements more straightforward. Individual requirements are mapped to multiple tests. This mapping can cause confusion during the testing and verification phases and may lead to requirements not being properly verified and could potentially cause a loss of functionality to the instrument. The test steps did not provide enough detailed information to determine where, when, and how each requirement was being tested.",10/4/05
ProjectE - TIM - 1368,Inst9 tests not traced to requirements,3,The following tests are not traced to any requirements: Inst9-TIME Inst9-SEND_DATA Inst9-APPLY_BRK Inst9-HEAP Inst9-SURF_FOLLOW,10/4/05
ProjectE - TIM - 1367,Inst9 Requirement #4 Not Verified by Tests,3,"It is not clear that Inst9 requirement #4 is verified by any of the tests it is traced to. This requirement is traced to the following tests: Inst9-STOP, Inst9-SHTDWN, Inst9-CALIB, Inst9_MV_JNT_NOM, Inst9_MV_CART_NOM, Inst9_MV_GRD_NOM, Inst9_DIG_TRENCH_NOM, Inst9_SCRAPE_NOM, Inst9_ACQ_SMPL_NOM, Inst9_MV_CART_FLT, Inst9_MV_GRD_FLT, Inst9_DIG_TRENCH_FLT, Inst9_SCRAPE_FLT, Inst9_HEAT, Inst9-STRESS, Inst9-JNT_FLT, Inst9-MISC_FLT Inst9 FSW Requirements #4: The RAFSW shall produce the following task-level channelized telemetry: a) actuator command opcode, b) fault status and c) task command opcode.",10/4/05
ProjectE - TIM - 1366,Inst9 Requirement #17 is Not Verified by Tests,3,"It is not clear that Inst9 requirement #17 is completely verified by the tests it is traced to. This requirement is traced to the following tests: Inst9-JNT_FLT, Inst9-MISC_FLT The Inst9-JNT_FLT test performs partial verification of #17 (motor, encoder, heater, and potentiometer). The Inst9-MISC_FLT test performs partial verification of #17 (motor, encoder, heater, and potentiometer).PACI-RAE communications failure, joint runaway, and temperature sensor failure are not verified. Inst9 FSW Requirement #17: The RAFSW shall support detection of the following faults by monitoring engineering data and safing the arm in response: encoder failure, temperature sensor failure, heater failure, motor failure, potentiometer failure, PACI-RAE communications failure, joint runaway.",10/3/05
ProjectE - TIM - 1365,Inst9 Requirement #18 Not Verified by Tests,3,"It is not clear that Inst9 requirement #18 is completely verified by the tests it is traced to. This requirement is traced to the following tests: Inst9-JNT_FLT, Inst9-MISC_FLT Only the enable part of requirement #18 is tested in both of these tests. Inst9 FSW Requirement #18: The RAFSW shall provide the functionality to enable/disable fault detection using a bit mask.",10/3/05
ProjectE - TIM - 1364,Inst9 tests are ambiguous,4,"The following Inst9 test contain ambiguous wording: Test Inst9-DIG_TRENCH_FLT does verify requirements #30 and #37. However, the test states that it will verify that the Inst9_DIG_TRENCH algorithm responds properly to faults and events during execution. It is not clear what is meant by ""properly."" Neither requirement that this test is traced to identifies proper responses. Also the test refers to ""proper event recovery"" and ""proper trench digging"" but does not indicate what is meant by this. The test does appear to verify the requirements but some additional information would be helpful to better understand the test. Test Inst9-ACQ_SMPL_FLT does verify requirement #36. However, the test states that it will verify that the Inst9_ACQUIRE_SAMPL algorithm responds properly to faults and events during execution. It is not clear what is meant by ""properly.""",10/3/05
ProjectE - TIM - 1363,Inst9 Requirement #8 Not Verified by Tests,3,"It is not clear that Inst9 requirement #8 is verified by any of the tests it is traced to. This requirement is traced to the following tests: Inst9-STOP, Inst9-SHTDWN, Inst9-CALIB, Inst9_MV_JNT_NOM, Inst9_MV_CART_NOM, Inst9_MV_GRD_NOM, Inst9_DIG_TRENCH_NOM, Inst9_SCRAPE_NOM, Inst9_ACQ_SMPL_NOM, Inst9_MV_CART_FLT, Inst9_MV_GRD_FLT, Inst9_DIG_TRENCH_FLT, Inst9_SCRAPE_FLT, Inst9_HEAT, Inst9-STRESS, Inst9-JNT_FLT, Inst9-MISC_FLT Inst9 FSW Requirement #8: The RAFSW shall report command completion by setting a sequence global variable.",10/3/05
ProjectE - TIM - 1362,Inst9-MV_JNT_NOM test does not provide enough information to determine verification of requirements,3,"The Inst9-MV_JNT_NOM test does not provide enough information to verify that requirements #47 and #48 are being verified. This is the only test these requirements are traced to. The requirements are as follows: Inst9 FSW Requirement #47: The number of via points generated by the RAFSW joint-interpolated path generator shall satisfy the following condition: the distance between via points is less than the specified allowable distance, äd, for spatial joint moves. Inst9 FSW Requirement #48: The number of via points generated by the RAFSW joint-interpolated path generator shall satisfy the following condition: the time between via points is less than the specified allowable time, ät, for timed moves.",10/3/05
ProjectE - TIM - 1361,Inst9 Requirement #13 Not Verified by Tests,3,"It is not clear that Inst9 requirement #13 is completely verified by the tests it is traced to. This requirement is traced to the following tests: Inst9-STRESS, Inst9-CMD_OVRN The Inst9-CMD_OVRN test is only verifying the first part of requirement #13, ""The RAFSW shall abort both commands if a command is issued while another command is executing unless the second command is a stop or shutdown command."" This requirement is also traced to the Inst9-STRESS test, however, there is not enough information in that test to determine if #13 is being verified. These are the only tests traced to this requirement. Inst9 FSW Requirements #13: The RAFSW shall abort both commands if a command is issued while another command is executing unless the second command is a stop or shutdown command. This is defined as a command overrun state. If this occurs the RAE will be shutdown if it is powered.",10/3/05
ProjectE - TIM - 1360,Inst9 Requirement #14 Not Verified by Tests,2,"It is not clear that Inst9 requirement #14 is completely verified by the tests it is traced to. This requirement is traced to the following tests: Inst9-INIT, Inst9-PHASE The Inst9-INIT test is only clearly testing the parameter table initialization and arm status initialization indicated in requirement #14. Inst9-PHASE only testing requirement RAE is on before executing any move heat command. The following parts of the requirement do not appear to be verified by either tests: PACI driver is open, science heap is allocated, RAE firmare is initialized. Inst9 FSW Requirements #14: The RAFSW shall verify that the software is in an initialized state (parameter table is initialized, arm status is initialized, PACI driver is open, science heap is allocated, RAE firmare is initialized, RAE is on) before executing any move/heat command (or any command that communicates with the RAE). It is the incompleteness around the INIT test that no workaround is known, therefore this is a Sev 2 TIM.",10/3/05
ProjectE - TIM - 1359,Inst9-PARAM test does not provide parameter information,3,"The description of test Inst9-PARAM provides insufficient details to verify implementation of requirements 5a and 40. Inst9-PARAM indicates parameters are set but does not specify which ones are set (e.g. actuator control loop period, joint torque thresholds). This is the only test traced to verify these requirements. The requirements are as follows: Inst9 FSW Requirement#5a: The RAFSW shall implement a parameter to specify the actuator control loop period. RAFSW Requirement #40: The RAFSW shall be capable of setting the joint torque thresholds for accommodation, free-space, contact and absolute maximum.",10/3/05
ProjectE - TIM - 1358,Inst9 Requirement #7 Not Verified by Tests,2,"It is not clear that Inst9 requirement #7 is completely verified by the tests it is traced to. This requirement is traced to the following tests: Inst9-INIT Inst9-STRESS Inst9-INIT (and Inst9-STRESS) partially tests Inst9 requirement #7. No other tests will complete the testing of the requirements. Inst9-INIT verifies only part 7c and 7d (Inst9-STRESS tests only 7c). Inst9 FSW SRS #7: The RAFSW shall produce EVRs in response to the following anomalous conditions: a) Error in opening, reading and writing Inst9 files (status, history, parameter) b) EPS power-errors c) initialization errors d) Unrecognized messages and e) command queue overrun. It is the incompleteness around the INIT test that no workaround is known, therefore this is a Sev 2 TIM.",10/3/05
ProjectE - TIM - 1357,Requirement 5087 is insufficiently specified,3,"Requirement 5087 : The TEFSW shall have a telemetry task running within the C&DH Issue : Inst4 requirement 5087 is an L4 requirement. There is insufficient detail to implement and verify the requirement. e.g. How is the telemetry task run, how frequently? What is the purpose of the ""telemetry task""?",9/30/05
ProjectE - TIM - 1356,Requirement 5086 is insufficiently specified,3,"Requirement 5086 : TEFSW shall have a commanding task running within the C&DH. Issue : Inst4 requirement 5086 is an L4 requirement. There is insufficient detail to implement the requirement. The current requirement as written is not testable with quantitative criteria. e.g. How is it run, how frequently? What is the purpose of the ""commanding task""?",9/30/05
ProjectE - TIM - 1355,"Requirement 5084 does not state the purpose of using ""sequence global variables.""",4,"Requirement 5084 : TEFSW shall use sequence global variables Issue : The Inst4 L5 requirement 5084 does not state the purpose for using ""sequence global variables.""",9/30/05
ProjectE - TIM - 1354,Requirement 5065 is insufficiently specified.,4,"Requirement 5065 : The TEFSW shall support the creation of prioritized (APID designated) science data packets containing instrument status and data. Issue: This requirement has no link to a L4 requirement and appears to be an L4 requirement. The term ""support"" requires clarification and added specificity. The requirement can be traced to the Inst4 Telemetry Dictionary, Section 3.5.1 Data Segmentation.",9/30/05
ProjectE - TIM - 1353,Requirement 5064 is insufficiently specified.,4,"Issue: The Inst4 requirement # 5064 has no link to a L4 requirement and appears to be an L4 requirement. The meaning of the word 'specific' is unclear. Is there a ""specific"" subset of health/eng/state data that can be submitted or does ""specific"" mean ""preselected"" health/eng/state data that will be routinely submitted to the telemetry stream from Inst4? Also, the ""periodic interval"" is undefined? Requirement 5064 : The TEFSW shall be capable of submitting specific instrument health, engineering and state data to the LMA FSW channelized telemetry services at periodic intervals.",9/30/05
ProjectE - TIM - 1352,"No entry in the ""Change History"" log when sections 5.2 and 5.3 were deleted.",4,The deletion of requirements in sections 5.2 and 5.3 are not documented in the change log of Inst4 Subsystem SRS Version 3.0.,9/29/05
ProjectE - TIM - 1349,Missing reference in Inst4 Subsystem SRS,5,"In the MPS Inst4 SRS (Version 3) document there are various references to the the Contractor3 ProjectE Payload FSW API Guide. However, neither the Contractor3 ProjectE Payload FSW API Guide or the Contractor3 Software Coding Conventions (Rev. J) are listed in the reference section of the MPS Inst4 Inst4 SRS (Version 3). Artifacts: 1. MPS Inst4 SRS Version 3 (16 August 2005) 2. ProjectE Payload FSW API Guide Revision Basic (PHX-04-0057 Date: 9/1/2004) 3. Contractor3 Software Coding Conventions Revision J (17 June 2003)",9/29/05
ProjectE - TIM - 1348,Inst4 Subsystem Requirement not consistent with Payload FSW API,3,"In the MPS Inst4 SRS (Version 3) the requirement, #5060 Event Reporting (Section 5.1.6), states: ""The TEFSW shall generate EVR (Event Report) messages in response to specific warning or fault conditions. Predefined warning or fault conditions shall be documented in the TEFSW ICD and implemented in accordance with referenced LMA FSW requirements documents. [LMA ProjectE Payload FSW API Guide, Section 3.5]"" In Section 3.5 of the Contractor3 ProjectE Payload FSW API Guide states that the Payload software will have two specific EVRs avaliable to the Payload software. The two EVRs avaliable are Information and Warning. In the MPS Inst4 SRS (Version 3) the requirement, #5060 Event Reporting (Section 5.1.6), does not provide the guidance necessary from a level 5 requirement to implement the design. The type of EVR reporting remains undefined for specific warning or fault conditions. 5060 Event Reporting: The TEFSW shall generate EVR (Event Report) messages in response to specific warning or fault conditions. Predefined warning or fault conditions shall be documented in the TEFSW ICD and implemented in accordance with referenced LMA FSW requirements documents. Artifacts: 1. MPS Inst4 SRS (Version 3) 16 August 2005 2. ProjectE Payload FSW API Guide Revision Basic (PHX-04-0057 Date: 9/1/2004)",9/29/05
ProjectE - TIM - 1347,Improve clarity in RAFSW L5 Requirements,4,"In the Inst9 L5 Flight SRS Initial Document, Requirements #57 and #58 are listed below. 57 states- ""The RAFSW shall implement a command to clear faults set by the RAFSW."" 58 states- ""The RAFSW shall clear faults by command only."" Inst9 requirement #57 and #58 are rephrasing the same requirement. Together they not complementary and could more clearly describe the requirement if combined. Artifact 1. ProjectE Project Inst9 Level 5 FSW Requirements Initial. ProjectE-425-262. August 26, 2005",9/29/05
ProjectE - TIM - 1346,Unclear rate in RAFSW L5 Requirement,3,"In the Inst9 L5 Flight SRS Initial Document, Requirement 53 states the following: ""The RAFSW shall implement the capability to save the following Inst9 data to file in DRAM at the specified rates: a) parameter table anytime a parameter is changed, b) Inst9 status data upon actuator command completion."" There is no indication as to the constraints applied to the 'specified rates' or to how the rates are specified (software, ground, predetermined, etc…). There is also the possibility that the word 'rates' may not be the correct wording for this requirement. Artifact 1. ProjectE Project Inst9 Level 5 FSW Requirements Initial. ProjectE-425-262. August 26, 2005",9/29/05
ProjectE - TIM - 1345,Level 4 FSW requirement is missing 'shall' statement,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR presentation (page C1-9). The following requirement is missing a shall statement. ""The ProjectE flight software will comply with the ProjectE Payload ICDs."" It is suggested that the word 'will' be replaced with 'shall'. This is requirement 3.1.1b in the SC SRS Rev B.",9/23/05
ProjectE - TIM - 1344,"Incorrect Use of ""Shall"" Statements in FPDD HLFP",3,"The FPDD does not use ""shall"" statement in a correct manner. The incorrect use includes both not using ""shall"" where it should be used as part of a requirement, and also where ""shall"" is used in the document, where it should not be. Chart FP-164 of the FPDD CDR Package, the FPVT approach indicates an explicit reference to FPDD Requirements Flowdown, and further addresses specific test cases that will be developed to verify the FPDD requirements. Upon review of the HLFP, there are only 5 ""shall"" statements in the system level fault protection; and 10 ""shall"" statements in the performance level fault protection. Evaluation of the shall statements indicates an incorrect use of the shall statements in the FPDD from a software standpiont. In the Fault Protection Description Document (PHX-98-0081 Rev: New Feb 16, 2005), there is no reference to software application where there should be 'shall' statements. Conversely, 'shall' statements are used inappropriately in other areas of the FPDD.",9/23/05
ProjectE - TIM - 1343,Level 5 Lidar Requirements Incorrectly trace to PT parents,4,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 CD-MDR-PHX-SG-7927 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 According to the Inst10 to Lander ICD, the Lidar device and the PT (Pressure/Temperature) device are independently operating components of the Inst10. Each device has its own set of Level 5 requirements in its own SRS. There are a number of Lidar Level 5 requirements which incorrectly trace to parents that are PT Level 5 requirements. For a complete list of those requirements see the attachment in ""Relationships"".",9/23/05
ProjectE - TIM - 1342,Level 5 Requirements TBD/TBC or Trace to Parents That Are TBD/TBC,3,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 ProjectE Inst10 System Requirements Document Revision B MDR-PHX-ICD-7781 Revision 1.8 There are a number of Level 5 requirements that are either in whole or in part TBD or TBC. Additionally, there are two requirements that have parent requirements that are either in whole or in part TBD or TBC. For a complete list of those requirements and their TBD or TBD parents, see the Relationships attachment.",9/23/05
ProjectE - TIM - 1341,Level 5 Requirement Does Not Completely Address Level 4 Requirement,3,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Level 5 requirements SRSR7 ""3.2.1.2.1 DeviceId"", SRSR18 ""3.2.2.2.2 State Consistency"", SRSR123 ""3.2.1.2.3 LanderCmdId"", and SRSR124 ""3.2.1.2.4 LanderCmdCnt"" trace upwards to SWICD8 ""3.4.1.1 Inst10 Command Validation"". Item b) in SWICD8 does not appear to be addressed by any of these requirements.",9/23/05
ProjectE - TIM - 1339,Level 5 Requirement Inconsistent With Level 4 Requirement,3,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Level 5 requirement SRSR9 is inconsistent with Level 4 requirement SWICD13. The level 5 requirement is not specific with the number of bytes the message shall contain. ""3.2.1.3.1 Word Alignment The MLMS CSCI shall transmit messages with an even number of bytes. Note: - For file transfer commands the ICD shows single byte characters but clearly states that they are repeated for word alignment.""",9/22/05
ProjectE - TIM - 1338,Level 5 Requirement SRSR13 Traces to Non-Existent Level 4 Requirements,4,Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Level 5 requirement SRSR13 traces to non-existent Level 4 requirements SWICD12 and SWICD36. There is no indication that the Level 4 requirements have been deleted; they simply do not exist.,9/22/05
ProjectE - TIM - 1337,L5 SRSR184 Has a Specification That Is TBC,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR184 has a specification that is TBC. ""3.2.3.5.2 Update Sequence Upon successfully receiving the complete software update file, the MPTMS CSCI shall: a) verify the (TBC) CRC-16 checkword of the softwre image, and if successful, b) write the image to flash. Note: - The new software configuration only takes effect after power cycling.",9/22/05
ProjectE - TIM - 1336,Level 5 Requirement SRSR13 Contains A Typographical Error,5,"Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Items e) and f) in Level 5 requirement SRSR13 refer to sections ""3.4.2.5"" and ""3.4.2.6"" as ""Block Start (Ts)"" and ""Block Timeout (Tb)"" The sections are ""Inst10 File Transfer Timing"" and ""Lander File Transfer Timing"". There is enough information in the sections to infer the relationship between the sections. Therefore, it has been concluded that a typographical error has occurred. ""3.2.1.4.1 File Transfers The MLMS CSCI shall be capable of sending/receiving files to/from the Lander per Inst10 to Lander Software ICD sections: a) 3.4.2.1 Cancelling a Transfer, b) 3.4.2.2 Transfer Complete, c) 3.4.2.3 Block Data Size, d) 3.4.2.4 Initiation of File Transfers, e) 3.4.2.5 Block Start (Ts), f) 3.4.2.6 Block Timeout (Tb).""",9/22/05
ProjectE - TIM - 1335,Level 4 Requirement SYSR105 Doesn't Trace Down to Level 5 Requirement SRSR15,3,Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 ProjectE Inst10 System Requirements Revision B Level 4 requirement SYSR105 doesn't trace down to level 5 requirement SRSR15.,9/22/05
ProjectE - TIM - 1334,L5 SRSR172 is TBC,3,"Artifact: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR172 is TBC. ""3.2.3.1.2 Block Level CRC-16 (TBC) The MPTMS CSCI shall append a CRC-16 word with each block when written tot he flash. The purpose of this CRC is to validate the correct operation of each flash block with each read and write.""",9/22/05
ProjectE - TIM - 1333,L5 SRSR148 Refers to Inaccurately Named or Non-Existent L4 Sections,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ID-7781_Rev_1-1.8_1.doc Level 4 refers to sections ""e) 3.4.2.5 Block Start (Ts), f) 3.4.2.6 Block Timeout (Tb)"". These sections don't exist as named in this requirement. Sections ""3.4.2.5"" and ""3.2.4.6"" are ""Inst10 File Transfer Timing"" and ""Lander File Transfer Timing."" ""3.2.1.4.1 File Transfers The MPTMS CSCI shall be capable of sending/receiving files to/rom the Lander per Inst10 to Lander Software ICD sections: a) 3.4.2.1 Cancelling a Transfer, b) 3.4.2.2 Transfer Complete c) 3.4.2.3 Block data Size, d) 3.4.2.4 Initiation of File Transfers, e) 3.4.2.5 Block Start (Ts), f) 3.4.2.6 Block Timeout (Tb).""",9/22/05
ProjectE - TIM - 1332,Missing requirement in the Flight SRS,3,"In the ProjectE Flight SRS Rev A., the requirement, 3.6.2.2 p., is referenced in requirements 3.6.2.2 i, and 3.6.2.2 j. However, there is no requirement listed in 3.6.2.2 p. and it is not clear if the requirement has been deleted or is TBD. 3.6.2.2 i. states: “The flight software shall accept commands to change a mode transition between the states “allowed” and “autonomous”. See requirements k, l, m, n, o, p, and q.” 3.6.2.2 j. states: “The flight software shall autonomously change modes only if the mode transition is marked “autonomous”. See requirements k, l, m, n, o, p, and q.”",9/21/05
ProjectE - TIM - 1331,No ACS mode listing for initialization function in the Flight SRS,3,"In the ProjectE Flight SRS Rev A., the requirement 3.6.2.2 g. states: ""When an ACS mode or actuator suite change is commanded, the flight software shall call a mode specific initialization function, if the new mode requires one."" However, there is no listing showing which modes require the specific initialization function.",9/21/05
ProjectE - TIM - 1330,Inconsistent ACS modes within the Flight SRS,3,"In the ProjectE Flight SRS Rev A., Section 3.6.2.2, there are two tables that concern ACS Modes. The ACS modes listed in Table 3.6.2.2-I are not consistent with the ACS modes listed in Table 3.6.2.2-II. Table 3.6.2.2-I appears to only be a sub-set of Table 3.6.2.2-II. Table 3.6.2.2-I deals with ACS PIID Objects (Controllers) for Modes and Actuator Suites and lists the Idle mode as not having a PIID Object. What is not clear is if the ACS modes missing from Table 3.6.2.2-I can be treated the same as the Idle mode (no PIID Object). Furthermore, the naming conventions between the two tables are not consistent. Table 3.6.2.2-I lists the ACS Modes as: Idle, Absolute Slew, Relative Slew, Sun Target, Earth Target, Rate Damping, Sun Search, Sun Cone, Delta Velocity TCM, Autoreference Sun Point, Autoreference Earth Point, Inertial Hold Table 3.6.2.2-II lists the ACS Modes as: Idle, Absolute Slew, Relative Slew, Sun Target, Earth Target, Rate Damp, Sun Search, Sun Cone, TCM/OTM, Sun Pointing, Earth Pointing, Inertial Hold, Hypersonic_1, Hypersonic_2, Hypersonic_3, Hypersonic_4, Hypersonic_5, Prechute, Parachute, Tip Up, Gravity Turn, Constant Velocity",9/21/05
ProjectE - TIM - 1329,Incorrect Table reference in Flight SRS,4,"In the ProjectE Flight SRS Rev A., the requirement 3.6.2.2 b. makes an incorrect reference to Table 3.6.2.2-I. The correct table that shows the allowed mode transitions is Table 3.6.2.2-II ACS Mode Transitions. The requirement is listed below: “The flight software shall reject ACS mode change commands and request safe mode entry if the mode change from the current mode to the new mode is not allowed. See table 3.6.2.2-I for allowed transitions.”",9/21/05
ProjectE - TIM - 1328,ACS Mode Transition Discrepancies,3,"The ACS Mode Transitions listed in Section 3.6.2.2, Table 3.6.2.2-II of the ProjectE Flight SRS are not consistent with the ACS Mode/Sub-Mode Table found in the GN&C Subsystem Description and Requirements Rev A Document or the ProjectE GN&C CDR Presentation Slide B5-3. The discrepancies fall within the EDL Modes. The GN&C Spec./CDR has the sub-modes of Hypersonic, Prechute, Parachute, Final Descent and Landed Ops. The Flight SRS shows 5 distinct Hypersonic modes, Prechute, Parachute, Tip-Up, Gravity Turn and Constant Velocity. It is understood that Gravity Turn and Constant Velocity fall within the GN&C Final Descent sub-mode, but is not reflected as such within the Flight SRS. Another discrepancy also falls within the functional description of the ACS Mode/Sub-Mode that is provided in both the GN&C Spec. and CDR Slide B5 presentation. The GN&C Spec provides a Function overview for each ACS Mode/Sub-Mode within its table. The CDR Slide B5 presentation includes that same Function overview, but also supplements the table with a detailed description of each ACS Mode. The SRS is missing the Functional overview along with a more clear-cut detailed description.",9/21/05
ProjectE - TIM - 1327,Level 4 Requirement SYSR105 Doesn't Trace Down to Level 5 Requirement SRSR16,3,Artifacts: CD-MDR-PHX-SG-7862 Revision 1.0 ProjectE Inst10 System Requirements Document Revision B Level 4 requirement SYSR105 doesn't trace down to level 5 requirement SRSR16.,9/21/05
ProjectE - TIM - 1326,L5 Requirement SRSR202 Has Specifications That Is TBC,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR202 has specifications that is TBC. ""3.2.5.3.3 Temperature Error Handling The MPTMS CSCI shall: a) read from the hardware the Temperature sensor health data (TBC) every two seconds, b) send or store health data every 256 samples, c) detect faults in Temperature sensor health as described in the Inst10 Internal ICD section (TBC), d) log any errors.""",9/21/05
ProjectE - TIM - 1325,L5 Requirement SRSR168 Time Specifications Conflict With L5 Requirement SYSR108,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Inst10 System REquirements Document.doc Level 5 Requirement SRSR167 timing specifications conflicts with Level 4 requirement SYSR108. Level 4 requirement is TBC. SRSR167 - ""3.2.2.4.2 DeviceFrameCnt The MPTMS CSCI shall count the number of 2 second frames from the time it first reaches the Idle state until power is removed."" SYSR108 - ""3.3.1.5.3.2 Timing Accuracy The Inst10 shall be capable of executing timed commands with an accuracy of TBC (10) ms +/- TBC (10) ms for the Lidar and TBC (2) s +/- TBC (2) s for Pressure and Temperature.""",9/21/05
ProjectE - TIM - 1324,L5 Requirement SRSR159 Traces to a Non-Existent Requirement,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ICD-7781_Rev_1-1.8_1.doc Level 5 requirement SRSR159 traces to DATA25.33, a non-existent ICD requirement. ""3.2.2.2.3 Safe Command Upon receiving the Safe command from the Lander, the MPTMS CSCI shall perform the following (if applicable): a) disable the sensors, b) save science data, error log and flash pointers into Flash, c) cancel the file transfers, and d) return to the Idle state (the Lander can remove power safely). Exception, sudden power loss could occur at any point after receiving the Safe command. In that case the above might not be performed.""",9/21/05
ProjectE - TIM - 1323,L5 Requirement SRSR155 Has a Specification That Is TBC,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR155 has a specification that is TBC. Additionally, the Level 4 requirement specifies 10 seconds opposed to 8 seconds. ""3.2.2.1.2 POST Completion/Results The MPTMS CSCI shall: a) complete the POST within (TBC) 8 seconds, b) make the results available ot the Lander in the PTHealthMsg, and c) go to the Idle state regardless of the POST results.""",9/21/05
ProjectE - TIM - 1322,L5 Requirement SRSR148 Traces to Non-Existent Parents,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ICD-7781_Rev_1-1.8_1.doc Level 5 requirement SRSR148 traces to non-existent ICD requirements - (SWICD12 and SWICD36). ""3.2.1.4.1 File Transfers The MPTMS CSCI shall be capable of sending/receiving files to/from the Lander per Inst10 to Lander Software ICD sections: a) 3.4.2.1 Cancelling a Transfer, b) 3.4.2.2 Transfer Complete, c) 3.4.2.3 Block Data Size, d) 3.4.2.4 Initiation of File Transfers, e) 3.4.2.5 Block Start (Ts), f) 3.4.2.6 Block Timeout (Tb).""",9/21/05
ProjectE - TIM - 1321,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR presentation (page C1-10). The following requirement is vaguely worded: ""The FSW shall be capable of running 8 concurrent sequence engines."" The use of ""be capable"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall allow the running 8 concurrent sequence engines."" Note that this requirement from the CDR package is similar to SRS Rev A Requirement 3.1.1.v",9/20/05
ProjectE - TIM - 1320,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR presentation (page C1-13). The following requirement is vaguely worded: ""The FSW shall provide the ability for mission operations to disable software heater control and operate heaters directly by ground command."" The use of ""provide the ability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall allow mission operations to disable software heater control and operate heaters directly by ground command."" This requirement is equivalent to 3.1.1bu in the SRS Rev A",9/20/05
ProjectE - TIM - 1319,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR presentation (page C1-13). The following requirement is vaguely worded: ""The FSW shall provide autonomous on-board temperature control."" The use of ""provide"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall perform autonomous on-board temperature control."" This requirement is equivalent to SRS Rev A requirement 3.1.1bt",9/20/05
ProjectE - TIM - 1318,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-13) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to deadface separated power connections."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall perform deadface separated power connections."" note that this requirement is the same as SRS Rev A 3.1.1bo",9/20/05
ProjectE - TIM - 1317,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-12) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to store data into non-volatile, flash memory."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall store data into non-volatile, flash memory."" This requirement is comparable to SRS Rev A -- 3.1.1bj",9/20/05
ProjectE - TIM - 1316,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-12) presentation. The following requirement is vaguely worded: ""The FSW shall have the capability to store code and data updates in CMIC memory for retrieval upon FPC reboot."" The use of ""have the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall store code and data updates in CMIC memory for retrieval upon FPC reboot."" This requirement is 3.1.1.bd in the FSW SRS Rev A",9/20/05
ProjectE - TIM - 1315,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-12) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to support the following multiple, selectable UHF band return link rates: 8, 32, and 128 kbps."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall support the following multiple, selectable UHF band return link rates: 8, 32, and 128 kbps."" This requirement is 3.1.1au in the FSW SRS Rev A",9/20/05
ProjectE - TIM - 1314,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (Page C1-12) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to support the following UHF Band forward link rates: 8 and 32 kbps."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall support the following UHF Band forward link rates: 8 and 32 kbps."" This requirement is 3.1.1at in the FSW SRS Rev A",9/20/05
ProjectE - TIM - 1313,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-11) presentation. The following requirement is vaguely worded: ""The FSW shall have the capability to transmit UHF data to the MGS spacecraft."" The use of ""have the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall transmit UHF data to the MGS spacecraft."" This is requirement 3.1.1ap in the FSW SRS Rev A",9/20/05
ProjectE - TIM - 1312,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-11) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to support the following X-band downlink rates: 10, 40, 100, 395, 700, 1400 and 2100 bps."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall support the following X-band downlink rates: 10, 40, 100, 395, 700, 1400 and 2100 bps."" This is requirement 3.1.1al in the SC FSW SRS Rev A",9/20/05
ProjectE - TIM - 1311,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-11) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to support the following X-band uplink rates: 7.8125, 15.625, 31.25, 62.5, 125, 250, 500, 1000 and 2000 bps."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall support the following X-band uplink rates: 7.8125, 15.625, 31.25, 62.5, 125, 250, 500, 1000 and 2000 bps."" This requirement is 3.1.1ak in the FSW SRS Rev A",9/20/05
ProjectE - TIM - 1310,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (C1-11) presentation. The following requirement is vaguely worded: ""The FSW shall provide a capability to switch between 10 MHz or 20Mhz cpu processing rates."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall switch between 10 MHz or 20Mhz cpu processing rates."" This is requirement 3.1.1ah in the SC FSW SRS Rev A",9/20/05
ProjectE - TIM - 1309,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-11) presentation. The following requirement is vaguely worded: ""The FSW shall provide the capability to re-transmit data packets that have already been transmitted."" The use of ""provide the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall re-transmit data packets that have already been transmitted."" This is requirement 3.1.1ag in the SC FSW SRS Rev A",9/20/05
ProjectE - TIM - 1308,Level 4 FSW requirement is vaguely worded,3,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-11) presentation. The following requirement is vaguely worded: ""The FSW shall attempt to log events and commands as they are executed for later transmission to the ground."" The use of ""attempt"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall log events and commands as they are executed for later transmission to the ground."" This is requirement 3.1.1af in the SC FSW SRS Rev A",9/20/05
ProjectE - TIM - 1307,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-10) presentation. The following requirement is vaguely worded: ""The FSW shall have the capability to configure the selection and ordering of data packets for downlink transmission using Downlink Priority Tables (DPTs)."" The use of ""have the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall configure the selection and ordering of data packets for downlink transmission using Downlink Priority Tables (DPTs)."" This is requirement 3.1.1ae in the SC FSW SRS Rev A",9/20/05
ProjectE - TIM - 1306,Inst4 SRS Requirement 5500-4 Is Incomplete,3,"Inst4 SRS Requirement 5500-4. The software shall be capable of storing up to 200 command sequences. Each command sequence can contain up to 10 commands. Issue: The requirement for delayed commanding is missing. Page 50 in the CDR Software backup slides shows this functionality. Artifacts: 1. Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0 2. Inst4 CDR, Software Backup Slides, May 19-20, 2005",9/20/05
ProjectE - TIM - 1305,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-10) presentation. The following requirement is vaguely worded: ""The FSW shall have the capability to store spacecraft engineering and health data for subsequent playback."" The use of ""have the capability"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall store spacecraft engineering and health data for subsequent playback."" This is requirement 3.1.1ab in the SC FSW SRS Rev A",9/20/05
ProjectE - TIM - 1304,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-9) presentation. The following requirement is vaguely worded: ""The FSW shall be capable of detecting separation from the launch vehicle third stage."" The use of ""be capable"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall detect separation from the launch vehicle third stage."" This is requirement 3.1.1j in the SC FSW SRS Rev A",9/20/05
ProjectE - TIM - 1303,Level 4 FSW requirement is vaguely worded,4,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-9) presentation. The following requirement is vaguely worded: ""The FSW shall be capable of detecting launch vehicle liftoff."" The use of ""be capable"" does not lean itself toward verification. The current wording allows for interpretation that the FSW may or may not be exclusively responsible for the aforementioned capability. It is suggested that the requirement contain the following wording or similar wording: ""The FSW shall detect launch vehicle liftoff."" This is requirement 3.1.1i in the SC FSW SRS Rev A",9/20/05
ProjectE - TIM - 1302,Level 4 FSW requirement is vaguely worded,3,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-9) presentation. The following requirement is vaguely worded and possibly missing a document number: ""The ProjectE FSW design shall be consistent with the ACS Control Algorithms Notebook ."" The use of ""be consistent"" does not lean itself toward verification. It is suggested that the word, ""comply"", be substituted in its place. It is also suggested that a document number be included if one exists for the ACS Control Algorithms Notebook. This is requirement 3.1.1f in the SC FSW SRS Rev A",9/20/05
ProjectE - TIM - 1301,Level 4 FSW requirement is vaguely worded,3,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-9) presentation. The following requirement is vaguely worded: ""The ProjectE FSW design shall be consistent with the Fault Protection Description Document PHX-98-0081."" The use of ""be consistent"" does not lean itself toward verification. It is suggested that the word, ""comply"", be substituted in its place. This is requirement 3.1.1e in the SC FSW SRS Rev A",9/20/05
ProjectE - TIM - 1300,Level 4 FSW requirement is vaguely worded,3,"The Level 4 driving FSW requirements were presented during the ProjectE SW CDR (page C1-9) presentation. The following requirement is vaguely worded: ""The ProjectE FSW interface between software and hardware shall be consistent with the Software/Hardware ICD PHX-99-0179."" The use of ""be consistent"" does not lean itself toward verification. It is suggested that the word, ""comply"", be substituted in its place. This is requirement 3.1.1c in the SC FSW SRS Rev A",9/20/05
ProjectE - TIM - 1298,Level 5 Requirement SRSR17 Contains a Typographical Error,5,"Artifact: CD-MDR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Level 5 requirement SRSR17 refers to section ""3.4.2.5"" as ""Initiation of File Transfers"". The section ""Initiation of File Transfers"" is ""3.4.2.4"". ""3.2.2.2.1 Command Response Protocol The MLMS CSCI shall implement the command response protocol specified in the Inst10 to Lander Software ICD sections: a) 3.4.1.3 Inst10 Command Response, b) 3.4.1.4 Inst10 Command Response Timing, c) 3.4.1.5 Inst10 Command Rate, d) 3.4.1.6 Additional Inst10 Status Messages and e) 3.4.2.5 Initiation of File Transfers.""",9/19/05
ProjectE - TIM - 1297,Level 5 Requirement SRSR24 Traces to a Non-Existent Level 4 Requirement,3,Artifact: CD-MCR-PHX-SG-7862 Revision 1.0 MDR-PHX-ICD-7781 Revision 1.8 Level 5 requirement SRSR24 traces to non-existent DATA25.33 requirement in the ICD. There is no indicatation that the requirement has been deleted; it simply does not exist.,9/19/05
ProjectE - TIM - 1296,L5 Requirements Are Anemometer and Humidty Sensor Requirements,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Inst10 System Requirements Document.doc MDR-PHX-ICD-7781_Rev_1-1.8_1.doc ProjectE_Inst10-CDR_Presentation_master.ppt These Level 5 requirements are Anemometer and Humidity sensor requirements: SRSR213, SRSR212, SRSR211, SRSR208, SRSR207, SRSR210, SRSR206, and SRSR205. These Level 5 requirements refer to the Anemometer and Humidity sensor: SRSR181 and SRSR176. Level 5 requirement SRSR209 refers to wind direction, wind speed, and humidity telemetry. The Anemometer and Humidity sensor requirements have been deleted from the ICD and SRD. The Anemometer and Humidity sensor is called the WSA in the CDR presentation and has been ""descoped.""",9/19/05
ProjectE - TIM - 1295,L5 Requirement SRSR196 Has a Specification That Is TBD,3,"Artifact: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR196 has a specification that is TBD and refers to a section of the ICD that is TBD. ""3.2.5.1.2 Temperature Health The MPTMS CSCI shall be capable of reading Temperature health data including: a) (TBD) PRT current, As specified in the Inst10 Internal ICD section (TBD).""",9/19/05
ProjectE - TIM - 1294,L5 Requirement SRSR195 Refers to a Section of the ICD That Is TBD,3,"Artifact: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR195 refers to a section of the ICD that is TBD. ""3.2.5.1 Temperature Data The MPTMS CSCI shall be capable of reading at 0.5 Hz the: a) three thermocouple sensors, b) the isothermal block PRT, and c) the isothermal block thermocouple sensorstored in the hardware as specified in the Inst10 Internal ICD section (TBD).""",9/19/05
ProjectE - TIM - 1293,L5 Requirement SRSR192 Refers to a Section of the ICD That Is TBD,3,"Artifact: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR192 refers to a section of the ICD that is TBD. ""3.2.4.3.3 Pressure Error Handling The MPTMS CSCI shall: a) read from the hardware the Pressure sensor health data (TBD) every two seconds, b ) send or store health data every 256 samples, c) detect faults in Pressure sensor health as described in the Inst10 Internal ICD section (TBD), d) log the errors.""",9/19/05
ProjectE - TIM - 1292,L5 Requirement SRSR190 refers to sections of the MDR-PHX-TM-TBD that are TBD.,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR190 refers to sections of MDR-PHX-TM-TBD that are TBD. ""3.2.4.3.1 Science Data Product The MPTMS CSCI shall be capable of: a) converting data received from the hardware interface into a pressure value, if configured for averaging: b) perform average, variance, maximum and minimum calculation for averaging intervals of 256 samples, c) detect a pressure event, if a pressure event is detected in a given averaging interval: d) output the data product from (a) for that interval. if a temperature event is detected in a given averaging interval: e) output the data product from (a) for that interval. Note: - Conversion from sensor values to pressure is specified in the MDR-PHX-TM-TBD section TBD. - Pressure events are defined as difference in maximum and minmum in a 256 sample block greater than the PressureEventThreshold.""",9/19/05
ProjectE - TIM - 1291,L5 Requirement SRSR186 Contains Specifications That Are TBD,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement contains specifications that are TBD. ""3.2.4.1.2 Pressure Health The MPTMS CSCI shall be capable of reading Pressure health data including: a) (TBD) pressure voltage, b) (TBD) pressure reference frequency, as specified in the Inst10 Internal ICD section (TBD).""",9/19/05
ProjectE - TIM - 1290,L5 Requirement SRSR185 Refers to Sections of the ICD That Are TBD,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 Requirement SRSR185 refers to sections of the ICD that are TBD. ""3.2.4.1.1 Pressure Data The MPTMS CSCI shall be capable of reading at 0.5 Hz the: a) frequency of the three BaroCap sensor, b) frequency of the two 0 pF reference capacitor, and c) frequency of the 10pF reference capatictor d) frequency of the temperature sensor stored in the hardware as specified in the Inst10 Internal ICD section (TBD).""",9/19/05
ProjectE - TIM - 1289,L5 Requirement SRSR175 Refers to a Section of the ICD That Is TBD,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ICD-7781_Rev_1-1.8_1.doc Level 5 requirement SRSR175 refers to section 3.6.4.1 of the ICD describing the StoredDataFile whose contents are TBD. ""3.2.3.2.2 File Format The MPTMS CSCI shall format compressed data as specified in the Inst10 to Lander Software ICD section 3.6.4.1.""",9/19/05
ProjectE - TIM - 1288,L5 Requirement SRSR171 Refers to Sections of the ICD That Are TBD,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR171 references sections of the ICD that are TBD. ""3.2.3.1.1 Flash Interface The MPTMS CSCI shall be capable of reading and writing to the non-volatile flash interface as described in the Inst10 Internal ICD section (TBD).""",9/19/05
ProjectE - TIM - 1287,L5 Requirement SRSR169 Has Specifications That Are TBC,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requiremnt SRSR169 has specifications that are TBC and refers to a section of the ICD that is TBD. ""3.2.2.5.1 Watchdog The MPTMS CSCI shall interface with a (hardware) watchdog function as follows: a) computer a (TBC) 32-bit checkword (see note) every (TBC) 100 frames, and b) send the checkword to the watchdog. Note: - The checkword is defined in the Inst10 Internal ICD section (TBD).""",9/19/05
ProjectE - TIM - 1286,L5 Requirement SRSR167 Has Timing Accuracy Specifications That Are TBC,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Inst10 System Requirements Document.doc Level 5 requirement SRSR167 timing accuracy specification needs to be confirmed. ""3.2.2.4.1 Timing The MPTMS CSCI shall be capable of executing timed commands with an accuracy of (TBC) 2 seconds +/- (TBC) 2 seconds.""",9/19/05
ProjectE - TIM - 1285,L5 Requirement SRSR165 Has a Specification That Is TBD.,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 requirement SRSR165 needs has a specification that is TBD. ""3.2.2.3.2 Error Log The MPTMS CSCI shall: a) keep a circular buffer containing the last (TBD) 32 errors that have occurred, b) for a persistent error, log the first and last occurrence, c) store the log in non-volatile memory (in idle or transition to idle), d) sending the Error Log to the Lander when requested, e) continue the circular buffer after power cycling.""",9/19/05
ProjectE - TIM - 1284,L5 Requirement SRSR164 Refers to a Section of the ICD That Is TBC,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-IDC-7781_Rev_1-1.8_1.doc Level 5 requirement SRSR164 refers to a section of the ICD that is TBC. ""3.2.2.3.1 Fault Classification The MPTMS CSCI shall be capable of: a) Classifying errors in Category-1 or Category-2 (Cat-1, Cat-2), b) Transition to the Idle state if a Cat-1 fault occurs (Cat-2 faults do not stop the Inst10). c) Updating the classification (see note) via a command from the Lander. Note: - The Inst10 internal ICD section (TBC) shall have a list of errors which can have their classifications changed.""",9/19/05
ProjectE - TIM - 1283,"L5 Requirement SRSR157 should read ""3.4.2.4""",5,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ICD-7781_Rev_1-1.8_1.doc Level 5 Requirement SRSR157 should read ""3.4.2.4 Initiation of File Transfers"" to match the Level 4 requirement SWICD17 ""3.2.2.2.1 Command Response Protocol The MPTMS CSCI shall implement the command response protocol specified in the Inst10 to Lander Software ICD sections: a) 3.4.1.3 Inst10 Command Response, b) 3.4.1.4 Inst10 Command Response Timing, c) 3.4.1.5 Inst10 Command Rate and d) 3.4.1.6 Additional Inst10 Status Messages and e) 3.4.2.5 Initiation of File Transfers""",9/19/05
ProjectE - TIM - 1282,L5 Requirement SRSR154 Has a Specification That Is TBD,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ICD-7781_Rev_1-1.8_1.doc Level 5 requirement SRSR154 has a specification that is TBC and refers to a section of the ICD that is TBD. ""3.2.2.1.1 Power-On-Self-Test (POST) The MPTMS CSCI shall perform a Power-On-Self-Test (POST) that includes (TBC): a) RAM read/write check, b) Flash read/write check, and c) Sensor data path check. Note: - The specification for each test is documented in the Inst10 Internal ICD section (TBD).""",9/19/05
ProjectE - TIM - 1281,L5 SRSR146 traces to Delete L4 Requirement,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf MDR-PHX-ICD-7781_1-1.8_1.doc Level 5 requirement SRSR146 traces to deleted Level 4 requirement SWICD7. ""3.2.1.3.3 Message Format The MPTMS CSCI shall conform to the message format described in the Inst10 to Lander Software ICD section 3.6.2.""",9/19/05
ProjectE - TIM - 1280,L5 Requirement SRSR138 Refers to Sections in the ICD that are TBC and TBD,3,"Artifacts: CD-MDR-PHX-7927 Rev1.pdf Level 5 requirement SRSR138 refers to sections of the ICD that are TBC and are TBD. ""3.2.1.1.2 Inst10 Serial Link Error Handling If the serial interface hardware (see note), when receiving data from the Lander, indicates an error the MPTMS shall: a) ignore the message, and b) log the error. Note: - Errors raised by the hardware (e.g. parity, framing) are defined in the Inst10 Internal ICD section (TBD). - (TBC) No hardware level errors have been identified for transmitting data.""",9/19/05
ProjectE - TIM - 1279,L5 Requirement SRSR137 Refers to a Section of the ICD That is TBD.,3,"Artifact: CD-MDR-PHX-SG-7927 Rev1.pdf Level 5 Requirement refers to a section of the ICD that is TBD. ""3.2.1.1.1 Inst10 Serial Link The MPTMS CSCI transmits and receives data to the Lander via a low speed (9600 bps) asynchronous serial link. The MPTMS CSCI shall interface with the asynchronous serial link hardware as specified in the Inst10 Internal ICD section (TBD).""",9/14/05
ProjectE - TIM - 1278,L5 SRSR134 Traces to Deleted L4 SYSR139,3,"Artifacts: CD-MDR-PHX-SG-7927 Rev1.pdf Inst10 System Requirements Document.doc The L5 requirement SRSR134 listed here traces to deleted L4 requirement SYSR139 [Inst10 to Anemometer/Humidity Sensor] ""3.1.2 Hardware Interfaces The MPTMS CSCI shall interface with the following hardware: a) Asynchronous Serial Receiver/Transmitter, b) RAM and PROM, c) Pressure Sensor control, data and status registers d) Temperature Sensor control, data and status registers, e) Anemometer and Humidity Sensor power control, f) Anemometer and Humidity Sensor control, data and status registers, g) Flash non-volatile memory. Note: -The Inst10 Internal ICD describes interfaces from the host processor to the hardware.""",9/14/05
ProjectE - TIM - 1277,"Inconsistencies between PHX SRS and the ""ProjectE Software Inheritance Review Findings and Implementation"" power point presentation",3,"Split from TIM 1212 for ease of issue tracking management. ------------------------------------------------------------------------------ There are several Inconsistencies between the inheritance review (IR) and the PHX SRS. Most of them are found between the ""Flight Software Subsystem Description"" diagram in page 14 of the IR and the requirements of various components. 1) The Attitude Control component (3.6.4) is depicted in the IR as requiring new development, but no new requirements were identified in the PHX SRS. 2) The Guidance component (3.6.6) is TBD and does not inherit any requirement from the MSP'01 SRS therefore it is inconsistent with the IR diagram.",8/30/05
ProjectE - TIM - 1276,"Inconsistencies between PHX SRS and the ""ProjectE Software Inheritance Review Findings and Implementation"" power point presentation",3,"Split from TIM 1212 for ease of issue tracking management. ------------------------------------------------------------------------------ There are several Inconsistencies between the inheritance review (IR) and the PHX SRS. Most of them are found between the ""Flight Software Subsystem Description"" diagram in page 14 of the IR and the requirements of various components. 1) The Downlink component(3.5.2) is depicted in the IR as requiring new development, but no new requirements were identified in the PHX SRS. 2) The Telecom component (3.5.5) is depicted in the IR as requiring new development, but no new requirements were identified in the PHX SRS.",8/30/05
ProjectE - TIM - 1275,"Inconsistencies between PHX SRS and the ""ProjectE Software Inheritance Review Findings and Implementation"" power point presentation",3,"Split from TIM 1212 for ease of issue tracking management. ------------------------------------------------------------------------------ There are several Inconsistencies between the inheritance review (IR) and the PHX SRS. Most of them are found between the ""Flight Software Subsystem Description"" diagram in page 14 of the IR and the requirements of various components. 1) The I/O PACI driver component (3.4.2) is depicted in the IR as requiring new development, but no new requirements were identified in the PHX SRS. 2) The CIO component (3.4.7) is depicted in the IR as requiring new development, but no new requirements were identified in the PHX SRS. 4)",8/30/05
ProjectE - TIM - 1273,L3 Science and Payload Requirement 3G2124-1 Is Not Consistent with the Linked Inst9 L4 Requirements,2,"L3 Requirement: 3G2124-1. The Payload shall be capable of excavating a trench that is at least 3 times the width of the scoop at the bottom of a 0.5 m deep trench under the following assumptions: • a lander parallel to the surface • an angle of repose of the material of 60 degrees from the horizontal • material strength equivalent to MER, MPF, VL1 and 2 (<0.1 MPa) • a 50% scoop fill factor • 36 sols of digging at 3.5 hours/sol. L4 Requirements: 3. The Inst9 workspace is divided into 3 surface workspaces and 1 deck workspace. The Inst9 shall be capable of performing the following within each workspace: 1) Surface workspace 1: A swept volume of outer radius 1.65 m and inner radius of 0.50 m, from z = 0.850 m to z = 1.571 m, from qaz = -3.178 to -1.956 radians. For a radial distance between 0.55 to 1.65 m, the Inst9 shall be capable of orienting the scoop in the range of at least 2p/3 to p. For a radial distance between 0.5 to 1.3 m, the Inst9 shall be capable of orienting the scoop in the range of at least -2p/3 to p. The Inst9 shall be capable of orienting the secondary blades and tines in the range of at least -5p/6 to 5p/6 radians and position the Inst8 within 0.5 m of a specified target. 2) Surface workspace 2: A swept volume of outer radius 1.8 m and inner radius of 0.5 m, from z = 0.850 m to z = 1.4 m, from qaz = -3.178 to -1.956 radians. For a radial distance between 0.55 to 1.8 m, the Inst9 shall be capable of orienting the scoop to at least 2p/3 to p. For a radial distance between 0.50 to 1.55 m, the Inst9 shall be capable of orienting the scoop to at least -2p/3 to p. For a radial distance between 1.2 to 1.8 m, the Inst9 shall be capable of orienting the TECP to at least 2p/3 to 5p/6. For a radial distance between 0.85 to 1.8 m, the Inst9 shall be capable of orienting the TECP to a range of at least 3p/4 to 5p/6. 4. The Inst9 shall be capable of excavating 0.0021 m^3 per hour of soil with a compressive strength of < 0.1 MPa. 6. The Inst9 shall be capable of moving the end-effector tools except the Inst8 in straight-line Cartesian motion in 4 degrees of freedom (x, y, z, and pitch) with a deviation of less than 1 cm in translation and 0.08 radians in pitch over a distance of 0.2 m. 7. The Inst9 shall be capable of joint-interpolated motion. 12. The Inst9 shall be capable of positioning the scoop such that a sample in it can be imaged by the Inst8. 17. The Inst9 shall be capable of protecting itself from damage due to excessive joint torques. 18. The Inst9 shall be capable of digging a trench with one command. 20. The Inst9 shall be capable of responding to obstructions while digging/scraping and autonomously continue digging/scraping operations. 30. The Inst9 shall be capable of operating for [373 464 763 3380] joint output revolutions and for 90 Martian sols. 35. The Inst9 shall be capable of monitoring resource use (energy and time) and gracefully terminating the currently executing command during digging/scraping operations. Issue: None of the linked L4 requirements address the intent of the L3 which is, ""The Payload shall be capable of excavating a trench that is at least 3 times the width of the scoop at the bottom of a 0.5 m deep trench"".",8/1/05
ProjectE - TIM - 1270,L3 Science and Payload Requirement 3A2115-4 Is Not Fully Addressed by the Linked Instrument L4 Requirement,3,"L3 Requirement: 3A2115-4. The Payload shall have the capability to take a 12 filter multispectral spot anywhere in the Inst6 view area and another 12 filter calibration set of the cal target within 30 minutes. L4 Requirements: 4.5. The filters shall meet the center wavelengths, bandwidths and transmissions as shown in Table 2. The filters shown are preliminary placeholders. The special filters are for water vapor measurement, stereo imaging, lander deck imaging, and atmospheric polarization measurement. 4.1.3.6. Filter wheel motion shall be commanded under software control at 1 degree/step. 4.1.3.7. The center position of each filter position shall be at 30 step intervals. 4.1.3.8. An optical index sensor shall be provided to allow position initialization of the FW assembly. Issue: The linked L4 requirements do not address the parent L3 requirement for, ""taking the two sets of measurements within a 30 minute period"". Artifacts: L3 Science and Payload Requirements, PHX-324-031, Rev A. Inst6_FRD DL 2005-6-07.",8/1/05
ProjectE - TIM - 1269,L3 Science and Payload Requirement 3G2123-2 Is Not Fully Addressed by the Linked Instrument L4 Requirement,3,"L3 Requirement: 3G2123-2. The Payload shall determine the reflectance of surface features to a relative accuracy of 3% for reflectances from 5-50%. L4 Requirement: 4.5 The filters shall meet the center wavelengths, bandwidths and transmissions as shown in Table 2. The filters shown are preliminary placeholders. The special filters are for water vapor measurement, stereo imaging, lander deck imaging, and atmospheric polarization measurement. Issue: The linked L4 requirement does not address the parent L3 requirement for, ""relative accuracy of 3% for reflectances from 5-50%"". Artifacts: L3 Science and Payload Requirements, PHX-324-031, Rev A. Inst6_FRD DL 2005-6-07.",8/1/05
ProjectE - TIM - 1268,L3 Science and Payload Requirement 3A21114-1 Is Not Fully Addressed by the Linked Instrument L4 Requirement,3,"L3 Requirement: 3A21114-1The Payload shall be capable of measuring changes in the surface reflectance of 10% with an accuracy of 10%. L4 Requirement: 4.5 The filters shall meet the center wavelengths, bandwidths and transmissions as shown in Table 2. The filters shown are preliminary placeholders. The special filters are for water vapor measurement, stereo imaging, lander deck imaging, and atmospheric polarization measurement. Issue: The linked L4 requirement does not address the L3 requirement for ""measuring changes in the surface reflectance of 10% with an accuracy of 10%"". Artifacts: L3 Science and Payload Requirements, PHX-324-031, Rev A. Inst6_FRD DL 2005-6-07.",8/1/05
ProjectE - TIM - 1267,L3 Science and Payload Requirement 3A2116-1 Is Not Fully Addressed by the Linked Instrument L4 Requirements,3,"L3 Requirement: 3A2116-1The Payload shall be capable of measuring the atmospheric optical depth for at least 4 wavelengths over the 445-1001 nm range. L4 Requirements: 4.6 The camera shall have depth of focus to cover the Robotic Arm workspace to infinity, (2 meters to infinity). For two filters, a diopter filter will be used to give best possible focus for the Inst4 and Inst5 instruments (1.0 to 1.44 m). 5.1 The Inst6 shall generate flatfields with an uncertainty of < ± 1%.. Issue: The target instrument is the Inst6 yet the linked L4 requirements seem to be associated with the Inst8, Inst4 and Inst5 instruments. The two linked L4 requirements do not address the L3 requirement for ""measuring the atmospheric optical depth for at least 4 wavelengths over the 445-1001 nm range"". Artifacts: L3 Science and Payload Requirements, PHX-324-031, Rev A. Inst6_FRD DL 2005-6-07.",8/1/05
ProjectE - TIM - 1266,L3 Science and Payload Requirement 3A2115-2 contains implied TBD requirements,3,"L3 Requirement: 3A2115-2. The Payload shall be capable of measuring column water vapor abundance with an accuracy of 4 pr microns. L4 Requirements: 4.1.2.8. The camera shall be able to image a vertical slice of the landing site before deployment, from 0 to 42 degrees with no azimuth motion (limited by mechanical restraints and mast cable harness constraints in the stowed configuration). 4.5 The filters shall meet the center wavelengths, bandwidths and transmissions as shown in Table 2. The filters shown are preliminary placeholders. The special filters are for water vapor measurement, stereo imaging, lander deck imaging, and atmospheric polarization measurement. 5.1 The Inst6 shall generate flatfields with an uncertainty of < ± 1%. Issue: The preliminary filters are implied TBDs. Artifacts: L3 Science and Payload Requirements, PHX-324-031, Rev A. Inst6_FRD DL 2005-6-07.",8/1/05
ProjectE - TIM - 1265,Inst5 FSW SRS - 4.2.2.14 does not specify type of Stage of motion (rotate/translate),3,"4.2.2.14 states: The Inst5 FSW shall implement a command to move the Stage to break off a specified AFM tip [FRD 2.2.1.5, FRD 2.2.4.5]. Issue: The requirement does not specify the type of motion to be performed by the Stage (rotation or translation)",8/1/05
ProjectE - TIM - 1264,"L3# 3C21214-7 - ""observing"" is vaguely worded and no verification method is proposed",3,"Requirement 3C212214-7 is vaguely worded and does not propose a verification method. Specifically, what is required in order to ""observing a depth of 5 microns"".",7/31/05
ProjectE - TIM - 1263,"L3# 3C21214-9 - ""Observing deliverd samples"" is vaguely worded",3,"Requirement 3C212214-9 is vaguely worded and does not propose a verification method. Specifically, what is required in order to ""observe"" the saample.",7/31/05
ProjectE - TIM - 1262,L3# 3SN1-20 - no rationale provided; intended use of spare cell not stated,3,"Requirement 3SN1-20 has no rationale. The requirement states that at least 3 samples be analyzed, allowing for one spare. Based on the Inst5 CDR of 16-17 Jun, 2005, the spare Wet Chemistry Cell is to be used as a ""canary,"" and will be expended in the process of calibration. The requirement should specify this intended use clearly.",7/31/05
ProjectE - TIM - 1261,Inst5 FSW SRS - 4.4.2.9 Implied command processing is missing,3,"Inst5 FRD 2.5.3 states: The MFSW shall be able to command and receive all instructions and data modes allowed by the ESFS (Easy Scan Flight Software). Inst5 SRS 4.4.2.9 answers one aspect of the parent requirement with: The Inst5 FSW shall be capable of sending the AFM a pass through low-level command (32 bytes) Issue: The software requirement is unclear regarding the implied capability to recognize and process incoming low-level command to be forwarded directly to the AFM. That is, it is unclear whether this low-level command is under software control, or is relayed from an external source (sequence engine, ground, immediate command, etc.)",7/31/05
ProjectE - TIM - 1260,L3 Science and Payload Requirement 3C2136-1 Is Not Addressed by the Linked Inst4 L4 Specification Requirements,3,"L3 Requirement: 3C2136-1. The Payload shall be capable of measuring reaction enthalpy and temperature of CO2 evolution from carbonates during heating of the surface and subsurface materials such that the amount of carbonates can be measured to an abundance of 3% and to an accuracy of 10% of the amount present. L4 Requirements: 4022. When the oven assembly is being heated, the leakage into or out of the mated oven assemblies other than through the input and output frits shall be no more than 10% of the carrier gas flow.  4025. The TA shall be capable of heating a sample over the range -53 ºC to 930 ºC.  During high temperature runs goal shall be to reach maximum oven temperature attainable( approximately 1100 ºC. ). 4028. The Inst4 control electronics shall provide a means to measure and downlink the housekeeping parameters to the indicated range, resolution, and accuracy as defined in the Inst4 Housekeeping Definition Document. Issue: The linked L4 requirements do not address the intent of the parent L3 requirement.",7/29/05
ProjectE - TIM - 1259,L3 Science and Payload Requirement 3C2135-1 Is Not Addressed by the Linked Inst4 L4 Specification Requirements,3,"L3 Requirement: 3C2135-1. The Payload shall be capable of detecting SO2 evolved from sulfate-bearing phases to an abundance of 1% and to an accuracy of 10% of the amount evolved. L4 Requirements: 4022. When the oven assembly is being heated, the leakage into or out of the mated oven assemblies other than through the input and output frits shall be no more than 10% of the carrier gas flow.  4025. The TA shall be capable of heating a sample over the range -53 ºC to 930 ºC.  During high temperature runs goal shall be to reach maximum oven temperature attainable( approximately 1100 ºC. ). Issue: The linked L4 requirements do not address the intent of the parent L3 requirement in that they focus on ""heating"" not detecting SO2.",7/29/05
ProjectE - TIM - 1258,L3 Science and Payload Requirement 3C2132-5 Is Not Addressed by the Linked Inst4 L4 Specification Requirements,3,L3 Requirement: 3C2132-5. The Payload shall be capable of detecting gaseous species and organic molecules with masses ranging from 2 to 140 Da. L4 Requirement: 4006. The GEC shall consist of a volume suitably sized to provide up to 10000s of analysis containing a non-evaporable getter to remove 99% of the CO2 and N2. The GEC shall provide a minimum sample enrichment of the rare atmospheric constituents of 40. Issue: The linked L4 requirement does not address the intent of the parent L3 requirement as it focuses on the GEC and removal of CO2 and N2.,7/29/05
ProjectE - TIM - 1257,L3 requirements L3Sci-238 through L3Sci-246 Have Not Been Been Targeted To Any Instrument,2,L3 requirements L3Sci-238 through L3Sci-246 Have Not Been Been Targeted To Any Instrument.,7/29/05
ProjectE - TIM - 1256,L3 Science and Payload Requirement 3SN1-21 Is Not Fully Addressed by the Linked Inst4 L4 Requirement,4,"L3 Requirement: 3SN1-21. The Payload shall be capable of analyzing 8 regolith samples via thermal and evolved gas- analysis. L4 requirement: 4055. Provide ability to analyze up to 8 samples. Issue: The L4 requirement does not capture the requirement for ""regolith samples. As it stands, any 8 samples would suffice. The",7/29/05
ProjectE - TIM - 1255,L3 Science and Payload Requirement 3SN18-1 Is Not Addressed by the Linked Inst4 L4 Specification,4,"L3 Requirement: 3SN18-1. The Payload shall support surface phase health checks and calibrations of science instruments. Issue: Although Inst4 is the target instrument for this requirement, there are no linked L4 requirements.",7/29/05
ProjectE - TIM - 1254,L3 Science and Payload Requirement 3SN9-1 Is Not Addressed by the Inst4 L4 Specification,3,"L3 Requirement: 3SN9-1. The Payload shall be capable of acquiring LIDAR/Inst4 atmospheric measurements within 15 minutes of one another. Issue: Although Inst4 is the target instrument for this requirement, there are no linked L4 requirements.",7/29/05
ProjectE - TIM - 1253,L3 Science and Payload Requirement 3B11-1 Is Not Fully Addressed by the Linked Inst4 L4 Specification Requirements,4,"L3 Requirement: 3B11-1. The Payload shall be capable of measuring the heat flux to an accuracy of 0.3 mW and temperatures of the sample in the T range 265-273.5 K with a precision 0.1 K. L4 Requirements: 4028. The Inst4 control electronics shall provide a means to measure and downlink the housekeeping parameters to the indicated range, resolution, and accuracy as defined in the Inst4 Housekeeping Definition Document. 4003. The Inst4 instrument shall be capable of sensing the Current, Voltage, and Pulse Width such that the power on any single measurement can be calculated to an absolute accuracy of 10% or better. The noise on any single power measurement shall be less than 0.5mW over a region where the baseline is stable and well characterized. Issue: The linked L4 requirements do not reflect the L3 requirement to measure over the T range of 265-273.5K.",7/29/05
ProjectE - TIM - 1252,L3 Science and Payload Requirement 3C2131-3 Is Not Addressed by the Linked Inst4 L4 Specification Requirements,3,"L3 Requirement: 3C2131-3. The Payload shall be capable of measuring the heat flow to the sample every 3K in the T range 220-400K and every 20K in the T range 400-1200K. L4 Requirements: 4023. The Inst4 shall be able to ramp the oven assemblies at variable rates. A zero ramp rate ( Hold ) shall maintain the oven at the setpoint +- 0.5 ºC. 4023.2. Inst4 shall be able to heat a sample at rates between 1 to 25 ºC/minute in the range -53 ºC to 930 ºC. Rate Parameter shall be settable in approximately 1 ºC steps. 4023.3. Inst4 shall be able to maintain a sample at a steady temperature in the range -53 ºC to 930 ºC. 4025. The TA shall be capable of heating a sample over the range -53 ºC to 930 ºC.  During high temperature runs goal shall be to reach maximum oven temperature attainable( approximately 1100 ºC. ). Issue: None of the linked L4 requirements appear to address the requirement to ""measure heat flow to the sample.",7/29/05
ProjectE - TIM - 1251,L3 Science and Payload Requirement 3A21111-3 Is Not Consistent With the Linked Inst4 L4 Specification Requirement,3,"L3 Requirement: 3A21111-3. The Payload shall be capable of measuring Ne, Kr, and Xe in the atmosphere with the following accuracies (relative to the amount present): Ne to 5% expected value 2.5 ppmv Kr to 20% expected value 0.3 ppmv Xe to 20% expected value 0.08 ppmv. L4 Requirement: 4054. The dominant peak of a sample (N2 for evolved gas and CO2 for an atmospheric measurement) shall be maximized at 10mB for the atmospheric case and 15 mB for the evolved gas sample case by adjusting the controlled leak. Issue: The linked L4 requirement does not reflect the intent of the parent L3 requirement.",7/29/05
ProjectE - TIM - 1250,L3 Science and Payload Requirement 3A2114-2 Is Not Completely Addressed by the Linked Inst4 L4 Specification Requirements,3,L3 Requirement: 3A2114-2. The Payload shall be capable of measuring the water content of the Mars atmosphere at a frequency of at least once per hour over diurnal cycle. L4 Requirements: 4005. The EGA shall have the capability of sampling the atmosphere with and without the use of a Gas Enrichment Cell (GEC). 4008. The direct atmospheric sampling configuration shall allow a measurement within 2% of the final value within 30 minutes of opening the sampling valves to the atmosphere. Issue: The L4 requirement to measure water content and to sample at least once per hour over diurnal cycle have not been reflected in the Inst4 L4.,7/29/05
ProjectE - TIM - 1249,L3 Science and Payload Requirement 3A2114-1 Is Not Completely Addressed by the Linked Inst4 L4 Specification Requirements,3,"L3 Requirement: 3A2114-1. The Payload shall be capable of measuring the water content of the Mars atmosphere over the expected mixing ratios of 50-3000 ppm to an accuracy of 10% of the value. L4 Requirement: 4011.The Mass Spectrometer Assembly shall be assembled and baked to allow the minimum background to be achieved. The maximum allowable background shall be 600 counts per second integrated from peak 2 to 48 Da .  Issue: The L4 focuses on the ""minimum background"" and does not capture part of the intent of the parent L3 which is, ""measuring the water content of the Mars atmosphere over the expected mixing ratios of 50-3000 ppm"".",7/29/05
ProjectE - TIM - 1247,Inst9 L4 FRD Does Not Fully Capture All L3 Science & Payload Requirements,3,"Artifacts: L3_Sci_Payload_RQMT_RevA_4-14-05.pdf Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Issue: The following L3 Science & Payload Requirements have no linked children in the Inst9 Functional Requirements Document (FRD). These requirements can impact both hardware and software requirements and therefore should be linked to L4 and L5 requirements. L3 Requirement 3B14-2: The payload shall be capable of positioning a humidity sensor at any height from 50 cm below the top surface of the deck to 125 cm above the top surface of the deck to an accuracy of +/- 5 cm, not necessarily in a vertical line. L3 Requirement 3C2133-26: The Payload shall be capable of acquiring and delivering up to 3 samples from a volume that is less than 10 cm (scoop width direction) x 20 cm (trenching direction) x 1.5 cm (vertical direction). L3 Requirement 3G2124-11: The Payload shall be capable of acquiring (scraping, scooping, and delivering) an icy sample within 1 operational sol. L3 Requirement 3SN1-2: The Payload shall be capable of placing the TECP instrument at 10 cm intervals from surface through 1.5 m above surface. L3 Requirement 3SN18-1: The Payload shall support surface phase health checks and calibrations of science instruments.",7/29/05
ProjectE - TIM - 1246,No Inst6 L4 and L5 Requirements for L3 Science & Payload requirement 243,4,"Artifacts: L3_Sci_Payload_RQMT_RevA_4-14-05.pdf Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Inst9_L5_FSW_rqmts_draft_4 DL 2005-6-01.xls L3 Requirement 243: The ProjectE instruments shall be able to survive power cycling at any time during their operation. Issue: The L3 parent requirement has no linked children in the Inst6 FRD or the Inst6 SRS. This requirement can impact both hardware and software requirements; therefore, there should be companion (children) requirements in the Inst6 L4 and L5 specifications.",7/29/05
ProjectE - TIM - 1244,Inst5 FSW SRS - 7.3.1.1 Missing reference to HSICD,4,The requirement refers to the power board attributes but does not reference the relevant ICD.,7/25/05
ProjectE - TIM - 1243,Inst9 L4 Requirement 30 is Incomplete,4,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Inst9_L5_FSW_rqmts_draft_4 DL 2005-6-01.xls L4 Requirement 30: The Inst9 shall be capable of operating for [373 464 763 3380] joint output revolutions and for 90 Martian sols. Issue: The number of joint output revolutions (373 464 763 3380) stated in the L4 is ambiguous in that it does not relate the operating requirement output revolutions to specific joints (e.g., 373 applies to which joint) and that it does not state if these four numbers are minimum values, values where the specification accuracy can be met before degrading, etc). This leads to an incomplete and untestable requirement.",7/25/05
ProjectE - TIM - 1242,"Lack of Traceability Artifacts (PIP 11.1, PSMP 4.1)",3,An RTM was not available to trace the FSW SRS (L4) to the the DPD (L3) and Exhibit III artifacts (or higher). The traceability data between the DPD and Exhibit III artifacts were not complete and contain some errors. This made the traceability to its parents difficult/impractical.,7/25/05
ProjectE - TIM - 1241,"Lack of Detail for FSW Single Point Failure (SRS 3.1.1-au, ...)",3,"The PDR material (Q1 - Flight System Engineering) has some details as to how the hardware intends to meet the single-point failure requirement, but there is little information and vague requirements on how software will meet this in the SRS.",7/25/05
ProjectE - TIM - 1240,Single Point Failure Circular Reference (PIP 11.4.1 & L2PSR-85),3,"The current PIP references the L2PSR and the L2PSR references the PIP for a list single-point failure exceptions, but neither provide this list. There is a list of exceptions in the PDR material (D - Project System Engineering), but the PDR material is generally not considered a governing artifact (i.e., requirements specification).",7/25/05
ProjectE - TIM - 1239,Inst5 FSW SRS - 8.1.1.1 Requirement is in conflict with itself and contains TBD reference,4,"Requirement is in conflict with itself. The requirement states constraints, but notes indicate these are estimates. The actual constraints should be specified, and the relevant ICD cited.",7/24/05
ProjectE - TIM - 1238,Inst5 FSW SRS - 7.1.1.1 Missing reference to HSICD,4,The requirement refers to CME attributes but does not reference the relevant ICD.,7/24/05
ProjectE - TIM - 1237,Inst5 FSW SRS - 7.2.1.1 Missing reference to HSICD,4,The requirement refers to the Analog Board attributes but does not reference the relevant ICD.,7/24/05
ProjectE - TIM - 1236,Inst5 FSW SRS - 6.2.1.4 Missing reference to HSICD,4,"The requirement refers to the FPGA's expected response time, but does not reference the relevant ICD.",7/24/05
ProjectE - TIM - 1235,Inst5 FSW SRS - 6.2.1.3 Missing requirement to identify HW intitialization limitations,3,The requirement implies that there are cases where HW initialization is not possible or applicable.,7/24/05
ProjectE - TIM - 1234,Inst5 FSW SRS - 6.2.1.1 Requirement implies a non-viable scenario of performing actions prior to unscheduled power loss,3,"This appears to be an nonviable scenario; in the case of unscheduled power-down, it’s too late to save anything.",7/24/05
ProjectE - TIM - 1233,Inst5 FSW SRS - 5.2.1.7 Ambiguous and untestable requirement,4,Inst5 FSW SRS - 5.2.1.7 is ambiguous and untestable as written.,7/24/05
ProjectE - TIM - 1232,Inst5 FSW SRS - 4.6.1.4 Missing requirement to downlink instrument parameters,4,Missing requirement to downlink instrument parameters in addition to software parameters.,7/24/05
ProjectE - TIM - 1231,Inst5 FSW SRS - 4.5.2.3 Missing reference to Inst9 ICD,5,Inst5 FSW SRS - 4.5.2.3 is missing a reference to the related (Inst9) ICD.,7/24/05
ProjectE - TIM - 1230,Inst5 FSW SRS - 4.4.5.1 TBD reference to ES manual,5,Inst5 FSW SRS - 4.4.5.1 contains a TBD reference to the Easy Scan manual.,7/24/05
ProjectE - TIM - 1229,"Inst5 FSW SRS - 4.4.4.1 ""reapproach"" value is TBD",4,Inst5 FSW SRS - 4.4.4.1 contains a TBD reference to the number of times FSW will reapproach the AFM.,7/24/05
ProjectE - TIM - 1228,"Inst5 FSW SRS - 4.4.3.6 ""tip-test function"" is TBD",3,Inst5 FSW SRS - 4.4.3.6 contains a TBD reference to a tip-test function.,7/24/05
ProjectE - TIM - 1227,"Inst5 FSW SRS - 4.3.2.2 contains TBD ""algorithm""",4,"4.4.3.2 states: The Inst5 FSW shall implement a commandable option to be able to perform a limited prescan on a sample to determine the maximum scan range possible, and determine the correct scan settings for a full scan (algorithm TBD) [FRD 2.5.3]. Issue - The algorithm for determining the correct scan settings is TBD.",7/24/05
ProjectE - TIM - 1226,Inst5 FSW SRS - 4.3.2.1 requirement is at too high level,3,Requirement refers to undefined global variables.,7/24/05
ProjectE - TIM - 1225,Inst5 FSW SRS - 4.2.6.2 in conflict with 4.2.2.15,3,"4.2.6.2 states: No Stage rotation shall take place when the AFM is powered and enabled AND the AFM NEAR signal is engaged [FRD 2.2.4.6, FRD 2.5.1] 4.2.2.15 states: The Inst5 FSW shall override the AFM proximity limit switch when executing an AFM tip breaking operation [FRD 2.2.1.16, FRD 2.2.4.5] Issue: These might be in conflict, depending on how 4.2.2.14 is implemented (see TIM 1265). Also, 4.2.6.2 is negatively-stated.",7/24/05
ProjectE - TIM - 1224,Inst5 FSW SRS - 4.2.5.3 Multiple TBD values,4,This requirement has multiple TBD values and no shall statements.,7/24/05
ProjectE - TIM - 1223,Inst5 FSW SRS - 4.2.5.2 - missing shall statement(s),4,The requirement is missing one or more shall statements.,7/22/05
ProjectE - TIM - 1222,Inst5 FSW SRS - 4.2.5.1 - missing shall statement(s),4,The requirement is missing one or more shall statements.,7/22/05
ProjectE - TIM - 1221,"Inst5 FSW SRS - 4.2.4.1 - stage ""position"" is TBD",4,The requirement refers to leaving the stage in a TBD position.,7/22/05
ProjectE - TIM - 1220,Inst5 FSW SRS - 4.2.2.16 TBD reference to related HSICD paragraph,4,4.2.2.16 states: The Inst5 FSW will take into account the hysteresis in the Stage mechanism through appropriate commanding of a final motion [HSICD TBD]. Issue: The reference to the relevant ICD (HSICD) is TBD.,7/22/05
ProjectE - TIM - 1219,Inst5 FSW SRS - 4.2.2.7 Limit switch transition margin is TBD,4,The margin for the the expected limit switch transitions is TBD.,7/22/05
ProjectE - TIM - 1218,Inst5 FSW SRS - 4.1.5.5 - TBR value in requirement,4,The temperature of the wet chemistry cell water tank is TBR,7/22/05
ProjectE - TIM - 1217,"Inst5 FSW SRS - 4.1.5.3 Ambiguous wording ""previously enabled""",4,"The requirement refers to a cell that has ""previously been enabled."" This wording could be confusing as it implies the software has knowledge of previously enabled, versus what is the currently (and mutually exclusive to other cells) enabled cell.",7/22/05
ProjectE - TIM - 1216,Inst5 - Missing flow-down to SRS from Inst5 FRD 2.5.11,2,"FRD 2.5.11 specifies that the experiment components are to be disabled when not in use, and also specifies that they be enabled prior to executing any other commands (for the component). The functional requirements stating the conditions/events/states under which the listed instruments (each WCL cell, the TECP, the AFM, the SWTS, and the OM) are ENABLED, have not been flowed down to the SRS.",7/22/05
ProjectE - TIM - 1215,Inst5 FSW SRS 4.1.2.16 - Incorrect requirement refers to sensors instead of WCL cell,4,"Requirement 4.1.2.16 states: The Inst5 FSW shall be capable of suppressing stirring on a per sensor basis during sensor operations [HSICD 4.3, FRD 2.5.9]. Issue: The requirement is incorrect. Stirring applies to cells, not individual sensors.",7/21/05
ProjectE - TIM - 1214,"Inst5 FSW SRS 4.1.2.15 - Ambiguous requirement regarding interleaved stirring, heating, etc.",3,Unclear if this is commanded or controlled by software.,7/21/05
ProjectE - TIM - 1213,High Level Fault Protection (SRS 3.7.5) refers to deleted subcomponents (ARPM & MCPM),4,"The High Level Fault Protection component (3.7.5) is decomposed in 16 subcomponents according to the SRS, but 2 of them do not have any requirements: the Articulation Performance Monitor (ARPM) (3.7.5.7) and the Momentum Control Performance Monitor (MCPM) (3.7.5.10).",7/21/05
ProjectE - TIM - 1212,"Inconsistencies between PHX SRS and the ""ProjectE Software Inheritance Review Findings and Implementation"" power point presentation",3,"There are several Inconsistencies between the inheritance review (IR) and the PHX SRS. Most of them are found between the ""Flight Software Subsystem Description"" diagram in page 14 of the IR and the requirements of various components. 1) The OS Boot S/W (3.3.2) requires a CPU speed of 10MHz (3.2.2.b) instead of the 20MHz required for the inherited S/W; this component cannot be fully credited as reuse and will require full testing.",7/21/05
ProjectE - TIM - 1211,Inst9 L5 Requirement 13 is Unclear,4,"Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L5 Requirement 13: The RAFSW shall abort both commands if a command is issued while another command is executing unless the second command is a stop or shutdown command. This is defined as a command overrun state. If this occurs the RAE will be shutdown if it is powered. Issue: The L5 states that the Inst9 will be ""shutdown"" if certain conditions are met. It is unclear if ""shutdown"" means to stop Inst9 motion, to safe the Inst9 above the ground (if scraping or digging) and then stop Inst9 motion, or to power off the Inst9 and its associated electronics.",7/21/05
ProjectE - TIM - 1210,Inst9 L5 Requirement 12 is Incomplete,3,Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L5 Requirement 12: The RAFSW shall provide the capability to update parameters by command. Issue: The specific parameters (or tables) to be updated by command are not defined. This results in an incomplete and untestable requirement.,7/21/05
ProjectE - TIM - 1209,Inst9 L5 Requirement 9 is Incomplete,3,Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L5 Requirement 9: The RAFSW shall verify the size of the message received from the low-speed PACI serial interface. Issue: The L5 requirement does not state the criteria or parameters to be used for verifying the message size nor the software's response should the message size fail these criteria.,7/21/05
ProjectE - TIM - 1208,Inst9 L4 Requirement 59 Has No Linked SRS Requirements,3,Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Inst9_L5_FSW_rqmts_draft_4 DL 2005-6-01.xls L4 Requirement 59: The Inst9 subsystem shall be capable of performing a health check of the Inst9 actuators and sensors after the Inst9 is enclosed in the microbial barrier and mounted on the Lander. Issue: The Inst9 L4 parent requirement has no linked children in the SRS. The L4 appears to be software related and therefore should be linked to L5 requirements in the Inst9 SRS.,7/21/05
ProjectE - TIM - 1207,Inst9 L5 Requirement 17 is not Linked to Parent L4 Requirement 34.,5,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 34: The Inst9 shall be capable of detecting the following faults and safing the arm in response: encoder failure, temperature sensor failure, heater failure, motor failure, potentionmeter failure, PACI-RAE communications failure, joint runaway. Issue: L5 requirement 17 captures the full intent of this L4, but is not linked to the L4 in the SRS. L5 Requirement 17: The RAFSW shall support detection of the following faults by monitoring engineering data and safing the arm in response: encoder failure, temperature sensor failure, heater failure, motor failure, potentionmeter failure, PACI-RAE communications failure, joint runaway.",7/21/05
ProjectE - TIM - 1206,Inst9 L4 Requirement 33 is Unclear,3,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Inst9_L5_FSW_rqmts_draft_4 DL 2005-6-01.xls L4 Requirement 33: The Inst9 shall ensure no single failure shall impact the rest of the payload or the spacecraft. Issue: The term ""impact"" is not sufficiently defined. Without a better definition of impact, it will be difficult to verify compliance with this requirement.",7/21/05
ProjectE - TIM - 1205,Inst9 L5 Requirements Do Not Capture the Intent of the Linked L4 Parent Requirement 26,3,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 26: The Inst9 shall be capable of being stowed in and releasing itself from its launch restraints. L5 Requirement 26: The RAFSW shall implement a joint-interpolated path generator. L5 Requirement 46: The RAFSW joint-interpolated path generator shall provide the capability to specify move arguments in absolute joint angles, incremental moves relative to the current joint angles, or time-based moves. L5 Requirement 47: The number of via points generated by the RAFSW joint-interpolated path generator shall satisfy the following condition: the distance between via points is less than the specified allowable distance, ä_d, for spatial joint moves. L5 Requirement 48: The number of via points generated by the RAFSW joint-interpolated path generator shall satisfy the following condition: the time between via points is less than the specified allowable time, ä_t, for timed moves. Issue: None of the L5 requirements (26, 46, 47 & 48) linked to this L4 captures the intent of this requirement. While they may provide for the motion needed to reach the launch restraints there is no mention of the need to ""stow in and release from"" such restraints.",7/21/05
ProjectE - TIM - 1204,Inst9 L5 Requirement 41 Does Not Capture the Full Intent of Parent L4 Requirements 22 and 23,3,"Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 22: The Inst9 shall be capable of limiting compressive loading on the TECP during insertion to 150 Newtons. L4 Requirement 23: The Inst9 shall be capable of limiting the side loading on the TECP during insertion to 50 Newtons. L5 Requirement 41: The RAFSW shall stop all motion if any joint torque exceeds its absolute threshold. Issue: L4 Requirements 22 & 23 refer to limiting compressive loading and side loading on the TECP, respectively; however, the linked SRS requirement does not distinguish between compressive loading and side loading. It simply states that Inst9 motion will cease if the computed joint torque exceeds a threshold. This will be a problem if the insertion and side loads cannot be translated into joint torque thresholds.",7/21/05
ProjectE - TIM - 1203,Inst9 L5 Requirement 8 Does Not Capture the Full Intent of the L4 Parent Requirement 21,3,Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 21: The Inst9 shall be capable of reporting that the sample was delivered to the Inst4 within 60 seconds. L5 Requirement 8: The RAFSW shall report command completion by setting a sequence global variable. Issue: The L4 requires sample delivery status within 60 seconds of completion. The linked L5 does not acknowledge the 60 second time requirement.,7/21/05
ProjectE - TIM - 1202,Inst9 L4 Requirement 18 Has No Linked SRS Requirements,5,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Inst9_L5_FSW_rqmts_draft_4 DL 2005-6-01.xls L4 Requirement 18: The Inst9 shall be capable of digging a trench with one command. Issue: The Inst9 L4 parent requirement has no linked children in the SRS. There is a possible linkage between this parent requirement and SRS requirement 37, which is given below. L5 Requirement 37: The RAFSW shall implement a single command to dig a trench with the following arguments: (x,y,z) - starting location to dig; (depth,length, width) - trench depth, length and width; angle - angle from the Inst9 x-y plane to the bottom plane of the trench; (angle_1, angle_2) - entry and exit ramp angles; and (x,y,z) - dump location.",7/21/05
ProjectE - TIM - 1201,Inst9 L5 Requirement 40 is Incomplete,4,"Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L5 Requirement 40: The RAFSW shall be capable of setting the joint torque thresholds for accommodation, free-space, contact and absolute maximum. Issue: The SRS requirement is incomplete in that it does not define the difference between the various threshold parameters: accommodation, free-space, contact and absolute maximum. In the absence of these definitions there is a potential for incorrect software implementation.",7/21/05
ProjectE - TIM - 1200,Inst9 L5 Requirement 37 is incorrectly mapped to Inst9 L4 Requirement 17,5,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 17: The Inst9 shall be capable of protecting itself from damage due to excessive joint torques. L5 Requirement 37: The RAFSW shall implement a single command to dig a trench with the following arguments: (x,y,z) - starting location to dig; (depth,length, width) - trench depth, length and width; angle - angle from the Inst9 x-y plane to the bottom plane of the trench; (angle_1, angle_2) - entry and exit ramp angles; and (x,y,z) - dump location. Issue: Inst9 L5 requirement 37 is incorrectly mapped/linked to the L4 requirement.",7/21/05
ProjectE - TIM - 1199,Inst9 L4 Requirement 16 Has No Linked SRS Requirements,3,Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls Inst9_L5_FSW_rqmts_draft_4 DL 2005-6-01.xls L4 Requirement 16: The Inst9 shall be capable of delivering a sample from the sample pile location to the instrument input port within 10 min. Issue: The Inst9 L4 parent requirement has no linked children in the SRS. The L4 appears to have software impact (in that software needs to support the 10 minute requirement) and therefore should be linked to L5 requirements in the Inst9 SRS.,7/21/05
ProjectE - TIM - 1198,Inst9 L5 Requirements Do Not Capture the Intent of the Linked L4 Parent Requirement 13,3,"Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 13: The Inst9 shall be capable of incremental relative motion of the end-effector tools less than or equal to 1.5 cm. L5 Requirement 21: The RAFSW shall provide a functionality to select the tool whose location the Cartesian and orientation coordinates in subsequent commands describe. L5 Requirement 22: The RAFSW shall derive and implement the forward kinematics of the Inst9 using homogeneous coordinates and homogeneous transformations from the Inst9 base frame to the tool frame based on Denavit-Hartenberg conventions. L5 Requirement 23: The RAFSW shall derive and implement the inverse kinematics of the Inst9 using closed-form solutions based on Denavit-Hartenberg conventions. L5 Requirement 24: The RAFSW shall implement the inverse kinematics such that the function will compute the joint position that will locate a selected tool frame at the desired Cartesian pose (x,y,z,pitch) if the tool is not the Inst8. L5 Requirement 26: The RAFSW shall implement a joint-interpolated path generator. L5 Requirement 27: The RAFSW shall implement a Cartesian path generator such that the currently selected tool moves in a straight line. L5 Requirement 28: The RAFSW shall implement PID control of the Inst9 joints. L5 Requirement 46: The RAFSW joint-interpolated path generator shall provide the capability to specify move arguments in absolute joint angles, incremental moves relative to the current joint angles, or time-based moves. L5 Requirement 47: The number of via points generated by the RAFSW joint-interpolated path generator shall satisfy the following condition: the distance between via points is less than the specified allowable distance, ä_d, for spatial joint moves. L5 Requirement 48: The number of via points generated by the RAFSW joint-interpolated path generator shall satisfy the following condition: the time between via points is less than the specified allowable time, ä_t, for timed moves. L5 Requirement 49: The number of via points generated by the RAFSW Cartesian path generator shall satisfy two conditions: 1) the deviation from the Cartesian straight-line path is less than the specified error bound, å_p, and 2) the Cartesian distance between via points is less than the specified allowable distance, ä_d. L5 Requirement 50: The RAFSW Cartesian path generator shall provide the capability to specify move arguments in absolute coordinates with respect to the Inst9 base frame, relative coordinates with respect to the Inst9 base frame, or relative coordinates with respect to the chosen tool frame. Issue: L5 requirements 21, 22, 23, 24, 26, 27, 28, 46, 47, 48, 49 & 50 are linked to L4 Requirement 13; however, none of these L5 requirements state that the Inst9 software will support controlling incremental motion of the end-effector tools to less than or equal to 1.5 cm.",7/21/05
ProjectE - TIM - 1196,Inst9 L5 Requirements 40 and 43 do not capture the full intent of their parent Inst9 L4 Requirement 10,3,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 10: The Inst9 shall be capable of moving the end-effector scraping, digging, and brushing tools over a surface that undulates with an amplitude of 25 cm at 50 cm depth with a period of 35 cm. L5 Requirement 40: The RAFSW shall be capable of setting the joint torque thresholds for accommodation, free-space, contact and absolute maximum. L5 Requirement 43: The RAFSW shall implement a scheme to limit the torques on each joint by modifying the arm trajectory when accommodation torque thresholds are reached. Issue: Both of these L5 requirements do not capture the full intent of their parent L4 requirement.",7/21/05
ProjectE - TIM - 1195,Full Intent of Inst9 L4 Requirement 6 Not Captured in the Linked L5 Requirements,4,"..................................................................................................................................Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 6: The Inst9 shall be capable of moving the end-effector tools except the Inst8 in straight-line Cartesian motion in 4 degrees of freedom (x, y, z, and pitch) with a deviation of less than 1 cm in translation and 0.08 radians in pitch over a distance of 0.2 m. Linked L5 Requirements: L5 Requirement 27: The RAFSW shall implement a Cartesian path generator such that the currently selected tool moves in a straight line. L5 Requirement 49: The number of via points generated by the RAFSW Cartesian path generator shall satisfy two conditions: 1) the deviation from the Cartesian straight-line path is less than the specified error bound, å_p, and 2) the Cartesian distance between via points is less than the specified allowable distance, ä_d. L5 Requirement 50: The RAFSW Cartesian path generator shall provide the capability to specify move arguments in absolute coordinates with respect to the Inst9 base frame, relative coordinates with respect to the Inst9 base frame, or relative coordinates with respect to the chosen tool frame. Issue: The full intent of the L4 Requirement has not been captured by these linked L5 requirements, in particular the deviation requirement of less than 1 cm in translation and 0.08 radians in pitch over a distance of 0.2 m.",7/21/05
ProjectE - TIM - 1194,Inst9 L5 Requirement 39 is Incomplete and Does Not Capture the Full Intent of Inst9 L4 Requirement 5,4,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L4 Requirement 5: The Inst9 shall be capable of scraping 3 cc of material per hour from icy soil with a compressive strength up to 8 MPa at a depth of at least 50 cm. L5 Requirement 39: The RAFSW shall implement a single command to scrape the surface at a specified location. Issue: The command arguments for the ""scraping"" command is missing from the L5 requirement (e.g., L5 requirement 37 gives a good description of the command arguments for digging. For reference, L5 requirement 37 is given at the end of this TIM description). In addition, the full intent of the L4 has not been captured by the L5, in particular supporting the scraping rate of 3 cc of material per hour. L5 Requirement 37 (For Reference Only): The RAFSW shall implement a single command to dig a trench with the following arguments: (x,y,z) - starting location to dig; (depth,length, width) - trench depth, length and width; angle - angle from the Inst9 x-y plane to the bottom plane of the trench; (angle_1, angle_2) - entry and exit ramp angles; and (x,y,z) - dump location.",7/21/05
ProjectE - TIM - 1193,Inst9 L5 Requirement 37 is Incomplete,4,"Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L5 Requirement 37: The RAFSW shall implement a single command to dig a trench with the following arguments: (x,y,z) - starting location to dig; (depth,length, width) - trench depth, length and width; angle - angle from the Inst9 x-y plane to the bottom plane of the trench; (angle_1, angle_2) - entry and exit ramp angles; and (x,y,z) - dump location. Issue: A description of the reference frame and coordinate system is missing from the L5 requirement. In the absence of specific coordinate definitions there is the potential for incorrect software implementation.The full intent of the L4 has not been captured by the L5, in particular support for the excavation rate of 0.0021 m^3 of soil per hour.",7/21/05
ProjectE - TIM - 1191,Inst9 L4 Requirement 3 is Unclear,4,"Artifacts: Inst9_L4_rqmts_draft_4_1-8-05 DL 2005-6-01.xls L4 Requirement 3: The Inst9 workspace is divided into 3 surface workspaces and 1 deck workspace. The Inst9 shall be capable of performing the following within each workspace: 1) Surface workspace 1: A swept volume of outer radius 1.65 m and inner radius of 0.50 m, from z = 0.850 m to z = 1.571 m, from THETAaz = -3.178 to -1.956 radians. For a radial distance between 0.55 to 1.65 m, the Inst9 shall be capable of orienting the scoop in the range of at least 2PI/3 to PI. For a radial distance between 0.5 to 1.3 m, the Inst9 shall be capable of orienting the scoop in the range of at least -2PI/3 to PI. The Inst9 shall be capable of orienting the secondary blades and tines in the range of at least -5PI/6 to 5PI/6 radians and position the Inst8 within 0.5 m of a specified target. 2) Surface workspace 2: A swept volume of outer radius 1.8 m and inner radius of 0.5 m, from z = 0.850 m to z = 1.4 m, from THETAaz = -3.178 to -1.956 radians. For a radial distance between 0.55 to 1.8 m, the Inst9 shall be capable of orienting the scoop to at least 2PI/3 to PI. For a radial distance between 0.50 to 1.55 m, the Inst9 shall be capable of orienting the scoop to at least -2PI/3 to PI. For a radial distance between 1.2 to 1.8 m, the Inst9 shall be capable of orienting the TECP to at least 2PI/3 to 5PI/6. For a radial distance between 0.85 to 1.8 m, the Inst9 shall be capable of orienting the TECP to a range of at least 3PI/4 to 5PI/6. 3) Surface workspace 3: A swept volume of outer radius 1.4 m and inner radius of 0.85 m, from z = 1.071 m to z = -0.65 m, THETAaz = -3.178 to -1.956 radians. The Inst9 shall be capable of positioning the TECP in the air at some orientation. 4) Deck workspace: A swept volume of outer radius 1.55 m and inner radius of 0.4 m from z = -0.05 m to z = -0.6 m, from THETAaz = -1.571 to -2.967 radians. The Inst9 shall be capable of orienting the scoop in the range of at least -3PI/4 to PI/2 radians. Issue: The textual description of workspace, in the absence of a diagram showing the coordinate systems and angle references, can lead to implementation errors.",7/21/05
ProjectE - TIM - 1190,Inst9 L5 Requirement 50 is Incomplete,3,"Artifacts: ProjectE Project Robotic Arm Level 5 FSW Requirements Initial 8/26/2005 L5 Requirement 50: The RAFSW Cartesian path generator shall provide the capability to specify move arguments in absolute coordinates with respect to the Inst9 base frame, relative coordinates with respect to the Inst9 base frame, or relative coordinates with respect to the chosen tool frame. Issue: A description of absolute/relative coordinates and base/tool frames is missing from this L5 requirement. In the absence of specific coordinate definitions there is the potential for incorrect software implementation.",7/21/05
ProjectE - TIM - 1189,Inst5 FSW SRS 4.1.2.13 - Verification method is TBD,3,"Requirement 4.1.2.13 has a specification that is TBD. 4.1.2.13: Inst5 FSW shall raise the drawer temperature to at least -20°C before opening or closing the drawer, to prevent damage (verification TBD).",7/21/05
ProjectE - TIM - 1188,Inst5 FSW SRS 4.1.2.12 - Missing requirement to specify expected fault responses,3,"The requirements to handle time-outs, limit switch failure, etc., are missing. A design to handle this fault tree has been developed, but there are no FP requirements for it.",7/21/05
ProjectE - TIM - 1187,Inst5 FSW SRS 4.1.2.10 - Events/Conditions to trigger automatic cycling of heaters are missing,3,The events/conditions that trigger the automatic cycling are missing.,7/21/05
ProjectE - TIM - 1186,Inst5 FSW SRS 4.1.2.9 - Command(s) to begin temperature monitoring and software response are unclear,3,The requirement as-written is ambiguous. It seems the intent is to send a command that starts the software to monitor and control temp. The commands to be implemented and the required software responses are unclear.,7/20/05
ProjectE - TIM - 1185,Inst5 FSW SRS 4.1.2.8 - Intent unclear for monitoring 'any or all' temperature sensors in a single WCL,4,"The intent of the wording, “any or all,” is unclear. It could be interpreted that the FSW reads any single sensor, and also all the sensors. Conversely, the intent could be for the FSW to read any number, up to and including all of them.",7/20/05
ProjectE - TIM - 1184,Inst5 FSW SRS 4.1.2.7 - Negatively-stated requirement,4,Requirement 4.1.2.7 is a negatively-stated requirement.,7/20/05
ProjectE - TIM - 1183,"Inst5 FSW SRS 3.3.2.4 - time-out value for Alive/Idle discrete lines set ""failed"" is TBD",4,Requirement 3.3.2.4 does not yet have a value for the Alive/Idle discrete lines time-out,7/20/05
ProjectE - TIM - 1182,Missing FSW Power To TCM Cat Bed Heater Requirements (DPD 2.6.14),3,The Power To TCM Cat Bed Heater requirement is missing in the SRS. The DPD allocates this requirement to the FSW.,7/19/05
ProjectE - TIM - 1181,Missing FSW Power To RCS Cat Bed Heaters Requirement (DPD 2.6.4),3,The Power To RCS Cat Bed Heater requirement is missing in the SRS. The DPD allocates this requirement to the FSW.,7/19/05
ProjectE - TIM - 1178,Clock Format Requirement Excludes Epoch Time (SRS 3.1.1-dh & DPD 2.3.7.3),3,The SRS requirement does not include the epoch requirement contained in the DPD.,7/19/05
ProjectE - TIM - 1177,Missing FSW Frames Requirement (DPD 2.3.5.14),3,"The Frames requirement is missing in the SRS. The requirement is allocated to the FSW by the DPD. The term ""long frames"" is not specified.",7/19/05
ProjectE - TIM - 1176,"Inconsistent X-Band Downlink Data Rates (SRS 3.1.1-cu, DPD 2.3.5.3, Exhibit III 3.1.4 & 3.3.11)",3,"The X-Band downlink data rates are not consistently listed in the SRS, DPD, and Exhibit III specifications.",7/19/05
ProjectE - TIM - 1175,"Inconsistent X-Band Uplink Data Rates (SRS 3.1.1-ct, DPD 2.3.5.2, Exhibit III 3.1.3 & 3.3.10)",3,"The X-Band uplink data rates are not consistently listed in the SRS, DPD, and Exhibit III specifications.",7/19/05
ProjectE - TIM - 1173,Missing FSW Payload Packet Time Tag and Accuracy Requirement (DPD 2.3.3.3),3,The Payload Packet Time Tag and Accuracy requirement is not accounted for in the SRS. This requirement is allocated to FSW in the DPD.,7/19/05
ProjectE - TIM - 1172,Execution Sequence Requirements Inconsistent (SRS 3.1.1-ca & DPD 2.3.1.2),3,The SRS and DPD requirements are not consistent.,7/19/05
ProjectE - TIM - 1171,"Inconsistent Wording for Emergency Downlink Rate Requirement (SRS 3.11-bt, DPD 2.2.1.12, Exhibit III 3.4.3) - Entry into Safe Mode vs Fault Detection",3,"The SRS wording of the requirement for the Emergency Downlink Rate is not consistent with the DPD and Exhibit III. Entering into ""safe mode"" and detecting when a fault occurs can be two very different times that could prevent the intent of the requirement.",7/19/05
ProjectE - TIM - 1170,"Inconsistent Wording for Emergency Uplink Rate Requirement (SRS 3.11-br, DPD 2.2.1.10, Exhibit III 3.4.2",3,"The SRS wording of the requirement for the Emergency Uplink Rate is not consistent with the DPD and Exhibit III. Entering into ""safe mode"" and detecting when a fault occurs can be two very different times that could prevent the intent of the requirement.",7/19/05
ProjectE - TIM - 1168,"Inconsistent Safe Commandable State Requirement in the SRS (3.1.1-bj, DPD 2.2.1.2, Exhibit III 3.4.1 & 3.4.6)",3,The SRS requirement does not include the EDL exception as do the DPD and Exhibit III requirement.,7/19/05
ProjectE - TIM - 1167,Inconsistent Failed Spacecraft Clock Requirement (SRS 3.1.1-bg & DPD 2.2.0.7),3,The SRS and DPD requirements are not consistent. The SRS requirement does not have the swap requirement.,7/19/05
ProjectE - TIM - 1163,Missing FSW Requirement for Backshell Jettison (DPD 1.4.33),3,There is no requirement in the SRS for this capability as allocated by the DPD. The rational for the backshell jettison indicates this capability will be triggered by software.,7/19/05
ProjectE - TIM - 1162,Missing FSW Requirement for Heatshield Jettison (DPD 1.4.29),3,There is no requirement in the SRS for this capability as allocated by the DPD. The rational for the heatshield jettison indicates this capability will be triggered by software.,7/19/05
ProjectE - TIM - 1161,Missing & Inconsistent FSW Requirements (DPD 1.4.15 & Exhibit III 4.3),3,There is a requirement allocated to FSW in the DPD (1.4.15) that is not accounted for in the SRS. The details of the requirement in the DPD and Exhibit III are also not consistent.,7/19/05
ProjectE - TIM - 1158,"Inconsistent Autonomous Survival Exception Requirements (SRS 3.1.1-s, DPD 1.3.16, & Exhibit III 3.4.1)",3,The requirements are not consistent between the three specifications. The SRS does not include the EDL exception. The Exhibit III requirement specifies all mission phases (excluding EDL) where the DPD only includes the cruise phase.,7/19/05
ProjectE - TIM - 1152,"Table Referenced Incorrect (SRS 3.1.1-l, DPD 1.3.4)",4,The table in the requirement is not consistent with the table referenced in the DPD.,7/19/05
ProjectE - TIM - 1151,Science Performance Monitor (3.7.5.16) is TBD,3,The Science Performance Monitor requirements in section 3.7.5.16.2 are TBD.,7/15/05
ProjectE - TIM - 1149,Inst4 SRS Requirement 5081 Is Incomplete,3,"L5 Requirement: 5081 Inst4 electronics Power. TEFSW shall be capable of controlling Inst4 electronics power. 5081-1 Shall notify 386 of impending power down 5081-2 MAIN2 shall not be ON if MAIN1 is OFF. Issue: Given page 7 in the Inst4 CDR Software Backup Briefing, it is unclear if this requirement completely states the requirements for TEFSW power control.",7/14/05
ProjectE - TIM - 1148,Inst4 SRS Requirement 5068 is Incomplete,3,"L5 Requirement: 5068 Sequence Message handling. The TEFSW shall handle the following sequence level messages: a) PASS_THRU b) FILE_LOAD c) MAIN1_POWER d) MAIN2_POWER e) REPLACEMENT_HEATER_POWER (may be going away) f) BOOT_SELECT g) APID_SELECT (currently listed as APID_SWITCH Issue: The term ""handle"" does not specify what actions are to be performed by the software. A such, this requirement is incomplete and untestable. Also, the ""(may be going away)"" under e) is effectively a TBD.",7/14/05
ProjectE - TIM - 1147,Inst4 SRS Requirement 5845 Is Incomplete and Is Inconsistent with the Linked Parent L4 Requirement,3,"L4 Requirement: 4050 Inst4 shall be able to recover from an unexpected loss of Lander power. L5 Requirement: 5845 At periodic times, the condition of an experiment will be saved in EEPROM for the restart of the experiment, in case a shutdown is received. Issue: The parent requirement requires recovery from an ""unexpected"" loss of Lander power while the SRS requirement expects a ""shutdown notice"". Requirement 5845 does not identify what data is to be save, how often the save should be scheduled, or any requirements for restarting.",7/14/05
ProjectE - TIM - 1146,Inst4 SRS Requirement 5840 Is Incomplete,3,"L5 Requirement: 5840 The software will perform a CRC on all memory devices that contain a resident program (PROM, EEPROM). If a CRC fault is found within the PROM, an error will be reported to the ground, and the EEPROM will be used as a download source. If a CRC fault is found on the EEPROM, an error report will be sent to the ground; this would require a search to determine the bad memory location, and a new load generated relocating the code segment around the bad memory location, to be uploaded to the EGA. Issue: The requirement does not state how often a CRC is to be performed. Also, the search to determine ""the bad memory location"" appears to be allocated to the ground. If the EGA software is to perform this function, the requirement is incomplete.",7/14/05
ProjectE - TIM - 1145,Inst4 SRS Section 5.3.6 Is Does Not Address the Intended L4 Parents,3,"Issue: The section shows that there are intended links to L4 requirements 4045 and 4052 but no SRS children are actually linked to these parents. Also, all four L5 requirements within this section use the term ""will"" instead of ""shall"".",7/14/05
ProjectE - TIM - 1144,Inst4 SRS Requirement 5841 Is Incomplete,4,L5 Requirement: 5841. The software shall provide a table defined scheme to identify up to TBD engineering items to be output for health and status telemetry reporting. Issue: The requirement contains a TBD.,7/14/05
ProjectE - TIM - 1143,Inst4 SRS Requirement 5840-1 Is Incorrect and Incomplete,3,"L5 Requirement: 5840-1 The software shall not downlink lower priority packetized data until all higher priority packetized data has been downlinked. The following is the priority for downlink: Highest priority: Science data, Engineering data, Messages. Lowest priority: Memory dump data. Issue: The priority seems to be incorrect as there is no distinction between engineering and science data in terms of priority. Normally, engineering data (particularly health, EVRs, etc.) is given priority over science data. The parent reference in this requirement should be to 4057, not 4046.",7/14/05
ProjectE - TIM - 1142,Inst4 SRS Requirement 5830-4 Does Not Fully Address the Linked Parent L4 Requirement,3,L4 Requirement: 4045 The time bases within the Inst4 PEB electronics and EGA subsystems shall be correlatable to within 5 seconds. L5 Requirement: 5830-4 The software shall put a time tag on each data set. Issue: The SRS requirement does not state that the software will support the 5 second time correlation requirement.,7/14/05
ProjectE - TIM - 1141,Inst4 SRS Requirement 5830 Does Not Fully Address the Linked Parent L4 requirement,3,"L4 Requirement: 4056 The Inst4 control system shall transmit all selected science data in all operating modes. L5 Requirement: 5830 The Inst4 shall detect, measure, and telemeter concentration data of gases evolved from heated soil. The concentrations of gases released by the soil sample are measured as a function of time (temperature). Issue: The SRS requirement does not include the requirement to transmit science data in all modes.",7/14/05
ProjectE - TIM - 1140,Inst4 SRS Section 5.3.4 Is Incomplete,4,L5 Requirements: 5830-1 The software shall collect evolved gas measurements from MS to be telemetered. 5830-2 The temperatures of each heater shall be measured and telemetered. 5830-3 The software shall also collect and telemeter calibration gas measurements. Issue: It is unclear if the three sub-requirements under 5830 identify all science data to be collected and downlinked. It is noted that Requirement 5820 identified the engineering data through a reference to the Telemetry List.,7/14/05
ProjectE - TIM - 1139,Inst4 SRS Requirement 5820-3 Does Not Fully Address the Linked Parent L4 Requirement,3,L4 Requirement: 4045 The time bases within the Inst4 PEB electronics and EGA subsystems shall be correlatable to within 5 seconds. L5 Requirement: 5820-3 An engineering packet shall be followed by a time sync packet. Issue: The SRS requirement does not state that the software will support the 5 second time correlation requirement.,7/14/05
ProjectE - TIM - 1138,Inst4 SRS Requirement 5820-1 Does Not Fully Address the Linked Parent L4 Requirement,3,"L4 Requirement: 4047 The Inst4 control system shall packetize and transmit all selected engineering data in all operating modes. L5 Requirement: 5820-1 The software shall telemeter the items identified in the Engineering Data Telemetry List (See Appendix B). One engineering data set shall down linked by the EGA flight software every time unit, which is a configurable amount. Issue: The SRS requirement does not include the requirement to transmit engineering data in all modes.",7/14/05
ProjectE - TIM - 1135,Inst4 SRS Requirement 5801 Is Incomplete,4,"L5 Requirement: 5801 Command Verification and Acknowledgement. The software is responsible for receiving, verifying, and executing commands for the EGA instrument. Command data is placed into an input buffer queue for interrogation and verification. All information packets (command, requests, and status) exchanged in either direction between the TA and EGA will be transmitted twice. This is to resolve any communications errors. Issue: This section appears to contain software requirements that are not captured by shall statements in the sub-requirements.",7/13/05
ProjectE - TIM - 1134,Inst4 SRS Requirement 5800-1 Does Not Fully Address the Linked L4 Parent Requirement,3,"L4 Requirement: 4004. The EGA subsystem shall provide up to 256 programmable modes with the following minimum modes preprogrammed for analysis. Mass ranges, specific mass numbers, dwell, and scan times shall be programmable where possible. L5 Requirement: 5800-1 The software is responsible for implementing seven modes of analysis as provided in the FRD requirement 4004. Issue: Requirement 4004 requires 256 programmable modes with certain specific ones stated. The SRS does not require 256 programmable modes. The L4 does not define a """"programmable mode"""". How a mode is initiated is not defined.",7/13/05
ProjectE - TIM - 1133,Inst4 SRS Requirement 5554 Is Incomplete and Inconsistent with the Linked Parent L4 Requirement,3,"L4 Requirement: 4052 The following conditions shall be defined as a nominal Experiment Halt or Quick Shutdown state (QS). This state shall be achievable within 5 seconds (TBR) after notification from the spacecraft of an impending shutdown. 4052.1 The instrument shall place all valves and mechanisms in a safe or closed state. 4052.2 The instrument shall not heat the Oven sample more than 20 ºC above the last controlled temperature point after notification of an impending power loss. 4052.3 All data and control parameters not previously transmitted to the S/C will be transferred to S/C before power is lost. L5 Requirement: 5554 Upon receipt of a shutdown command, the FSW shall close all valves, forward the command on the EGA, abort any in progress thermal analysis, and transmit all telemetry. Issue: The SRS does not address L4 requirement 4052-2 and for supporting the 5 second time limit. The L5 does not fully specify the state of the system at completion of the shutdown. It is unclear if 5554 fully identifies all actions the software must take in performing a ""quick"" shutdown. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/13/05
ProjectE - TIM - 1132,Inst4 SRS Requirement 5551 Is Incomplete,3,"L5 Requirement: 5551 The software shall check the Inst4's RAM upon application of power to the instrument and before using the RAM for data storage. Issue: The requirement does not state the software's response should the RAM check fail. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/13/05
ProjectE - TIM - 1131,Inst4 SRS Requirement 5550-2 Is Incomplete,4,"L5 Requirement: 5550-2 During program execution a checksum shall be run in the background. In the event of a failed checksum, an error message shall be sent to the C&DH. Issue: The code or sequence that the checksum is applied to is not defined. Just sending an error message seems to be an incomplete response to such a failure. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/13/05
ProjectE - TIM - 1130,Inst4 SRS Requirement 5550-1 Is Incomplete,4,"L5 Requirement: 5550-1 At instrument start, when commands or command sequences are copied form EEPROM to RAM, a checksum shall be calculated to ensure data integrity. In the event of a failed checksum, an error message shall be sent to the C&DH. Issue: Just sending an error message seems to be an incomplete response to such a failure. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/13/05
ProjectE - TIM - 1129,Inst4 SRS Requirement 5541 Is Misplaced and Incomplete,4,"L5 Requirement: 5541 The software shall provide a table defined scheme to identify up to TBD engineering items to be output for health and status reporting. Issue: It is unclear why this requirement is found in Section 5.2.5 as it deals with engineering data which is the subject of Section 5.2.3. Also, the requirement contains a TBD.",7/13/05
ProjectE - TIM - 1128,Inst4 SRS Requirement 5540-1 Is Incomplete,3,"L5 Requirement: 5540-1 The software shall not downlink lower priority packetized data until all higher priority packetized data has been downlinked. The following is the priority for downlink:Highest priority: Science data, Engineering data, Messages. Lowest priority: Memory dump data. Issue: The priority seems to be incompletely and/or incorrectly defined as there is no specific distinction between engineering and science data in terms of priority. Normally, engineering data (e.g., health, EVRs) is given priority over science data.",7/13/05
ProjectE - TIM - 1126,Inst4 SRS Section 5.2.4 Is Incomplete,3,"Section 5.2.4. Inst4 Electronics Board Science Data Processing and Telemetry Requirements. This section delineates the functional and detail level requirements for the processing and down linking of science data. It describes what science data the software is responsible for gathering and down linking and how often this information should be placed into the telemetry stream. The Inst4 science data consists primarily of ovens power, ramp value, and pressure. Issue: The requirements in this section are focused on specific science data. It is unclear if these few requirements address all the science data to be processed and sent for downlink. The L5 requirements do not state ""how often"" the data is sent. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/13/05
ProjectE - TIM - 1125,Inst4 SRS Requirements 5020-1 and 5020-2 Are Incorrect,4,L5 Requirements: 5020-1 The software shall telemeter the items identified in the Engineering Data Telemetry List (See Inst4_Engieering_dict.doc). One engineering data set shall be down linked by the Inst4 flight software a configurable amount of time. 5020-2 The collected engineering data shall be sent by the software to the Lander C&DH for down linking. The software shall transmit raw binary data without converting the data into engineering units. Issue: These two requirements seem to address the TEFSW software rather than the 386 software. The latter sends engineering data to the TEFSW which then sends it on to the Lander C&DH for downlink.,7/13/05
ProjectE - TIM - 1123,Inst4 SRS Section 5.2.2 Does Not Adequately Specify the Electronics Board Hardware Control Requirements.,3,"Section 5.2.2. Inst4 Electronics Board Hardware Control Requirements. This section delineates the functional and detail level hardware control requirements for FSW in the Inst4 electronics board. Issue: All the requirements in this section are of the form ""accept -- execute commands"" as such they are more associated with Section 5.2.1 rather than Section 5.2.2 and therefore do not fully ""delineate the functional and detailed level hardware control requirements"".",7/13/05
ProjectE - TIM - 1122,"Inconsistent DSN Initial Acquisition Requirement (DPD 1.2.16, SRS 3.1.1-j, Exhibit III 3.1.6)",3,The DPD and SRS requirements do not include the 1.5 hour requirement necessary to support tracking for subsequent DSN acquisitions as specified in the Exhibit III spec.,7/13/05
ProjectE - TIM - 1121,"Inst4 SRS Requirements 5504-6, 5504-7 and 5504-8 Are Incomplete",3,"L5 Requirements: 5504-6 The software shall be able to halt Inst4 operation at any time. 5504-7 The software shall be able to resume Inst4 operation from the last halted state. 5504-8 The software shall be able to abort Inst4 operation at any time. Issue: It is unclear if these actions are directed by the ground (e.g., by command or sequence) or autonomously by the 386 software. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0.",7/12/05
ProjectE - TIM - 1120,Inst4 SRS Requirements 5504-3 and 5004-4 Are Inconsistent with the Linked L4 Parent Requirement,3,"L4 Requirement: 4043 Inst4 shall be able to continue a Thermal/Evolved Gas run based on preprogrammed criteria if nominal starting conditions are not met. An example would be to continue a run after one, several or zero additional attempts as getting additional sample to fill an oven not indicating “full.” L5 Requirements: 5504-3 The software shall be capable of checking status of the oven full sensor. If the oven full sensor does not indicate full after sample dumped from Robotic Arm, the software may ask for another delivery. 5504-4 The number of refills shall be able to be changed before running a sample. If the oven full sensor is still not turned on after a pre-set number of delivery attempts, the software shall be programmed to run the sample or wait for further commands. Issue: The parent L4 seems to state a general requirement for ""continue a Thermal/Evolved Gas run based on preprogrammed criteria if nominal starting conditions are not met"". The parent contains an example concerning ""oven refills"". However, the linked SRS requirements are entirely focused on this example and do not state a general requirement to ""continue a run based on preprogrammed criteria"". Artifacts: 1. Inst4 L4 5-14-05_CDR_ECRBaseline for DOORS. 2. Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/12/05
ProjectE - TIM - 1119,Inst4 SRS Requirement 5504-4 Is Incomplete.,4,"L5 Requirement: 5504-4 The number of refills shall be able to be changed before running a sample. If the oven full sensor is still not turned on after a pre-set number of delivery attempts, the software shall be programmed to run the sample or wait for further commands. Issue: 5504-4 does not specify how it communicates that ""further commands"" will be needed. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/12/05
ProjectE - TIM - 1118,Inst4 SRS Requirement 5504 Contains Sub-Requirements That Are Not Operating Commands,4,"L5 Requirements: 5504-2 The software shall receive and store all data from the C&DH before starting an experiment. 5504-3 The software shall be capable of checking status of the oven full sensor. If the oven full sensor does not indicate full after sample dumped from Robotic Arm, the software may ask for another delivery. 5504-4 The number of refills shall be able to be changed before running a sample. If the oven full sensor is still not turned on after a pre-set number of delivery attempts, the software shall be programmed to run the sample or wait for further commands. 5504-9 The software shall provide a mechanism to correlate the time of a gas-release event detected in the EGA to the time of a phase transition in the TA to within less than 5 seconds. Issue: Sub-requirements 5504-2, 5504-3, 5504-4 and 5504-9 appear to be function type requirements, not operating commands. Also, there is no reference in this section to the Spacecraft to Inst4 ICD or to the Command List/Dictionary for definition of Operating Commands. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/12/05
ProjectE - TIM - 1115,Inst4 SRS Requirement 5081 Is Incomplete,3,"L5 Requirement: 5081 Inst4 electronics Power. TEFSW shall be capable of controlling Inst4 electronics power. 5081-1 Shall notify 386 of inpending power down. 5081-2 MAIN2 shall not be ON if MAIN1 is OFF. Issue: Although this requirement was changed in Ver 2.3 it still appears to be incomplete considering the material on Page 7 of the CDR Software Backup Slides. As such, the requirement does not completely specify the actions and outputs for controlling power. Artifacts: Inst4 CDR Software Backup Slides, May 19-20 2005 Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005",7/12/05
ProjectE - TIM - 1114,Inst4 SRS Structure is Fractured Across Topics,4,"Issue: Like requirements (e.g., fault response) are distributed across the document. Specific requirements are identified in the Corrective Action field. Artifacts: Inst4 Software Requirements Specifications, Ver. 3.0, August 16, 2005",7/12/05
ProjectE - TIM - 1113,Inst4 SRS Section 5.1 Is Incomplete,2,"Section 5.1 provides requirements for the Inst4 software that resides in the Lander. This software interfaces with the C&DH in the Lander and with the 386 software in the Inst4 electronics board. Based on the Inst4 CDR material and on statements made in the Inst4 SRS, requirements for the following functionality appears to be missing from this section: (1) produce specific commands for the 386 (in addition to passing commands), (2) perform task initialization, (3) handle the four types of commands (power, safing, discrete, command) and (4) handle file load. In addition, the Inst4 to Spacecraft ICD contains software requirements in Section 3.2 that should be referenced to fully specify TEFSW functionality. The intent of this issue is not to suggest that design type material be placed in the SRS but rather that all functional and performance requirements be captured. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005",7/12/05
ProjectE - TIM - 1112,Thermal Differential Control Requirements (3.7.3.3) are not defined,3,There are no requirements for Thermal Differential Control in section 3.7.3.3.,7/7/05
ProjectE - TIM - 1111,No L5 Requirement for Inst6 L4 Requirement 5.21 - Tilt Uncertainty,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to Inst6 L4 requirement 5.21, which states ""The Inst6 shall be capable of determining its tilt with an uncertainty of no more than ± 1 degree relative to the lander deck within the first week of surface operations."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05
ProjectE - TIM - 1110,No L5 Requirement for Inst6 L4 Requirement 5.20 - Azimuth Uncertainty,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to Inst6 L4 requirement 5.20, which states ""The Inst6 shall be capable of determining its azimuth with an uncertainty of no more than ± 1 degree relative to the lander deck within the first week of surface operations."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05
ProjectE - TIM - 1109,No L5 Requirement for Inst6 L4 Requirement 5.13 - Digital Elevation Models,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to Inst6 L4 requirement 5.13, which states ""The Inst6 shall be capable of measuring distance to an object at 3 m to an accuracy of 1 cm. The Inst6 shall be capable of measuring position of the lander deck fiducials to within 3 mrad in an image."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05
ProjectE - TIM - 1108,No L5 Requirement for Inst6 L4 Requirement 4.10 - EMC/EMI Compatibility,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to Inst6 L4 requirement 4.10, which states ""The Inst6 instrument shall be designed to meet the EMC/EMI requirements specified in the ProjectE Payload ERD. The instrument shall not be required to operate when the UHF antenna is transmitting or receiving."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05
ProjectE - TIM - 1107,No L5 Requirement for Inst6 L4 Requirement 4.3 - Fault Protection,4,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) In the given artifacts there is no Inst6 L5 requirement that links to Inst6 L4 requirement 4.3. However, there is a possible link between this L4 requirement and Inst6 L5 requirements 9.1 (Fault Modes), 9.1.1 (Fault Mode Notification) and 9.1.2 (Fault Mode Reset).",7/7/05
ProjectE - TIM - 1106,Ambiguous Inst6 L4 Requirement 4.2.8.4 - CCD Image Data Processing Coordination,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) The intent of Inst6 L4 requirement 4.2.8.4 is unclear. The L4 simply states ""Coordination of image data acquisition, processing and downlink activities.""",7/7/05
ProjectE - TIM - 1105,No L5 Requirement for Inst6 L4 Requirement 4.2.8.1 - CCD Camera Control,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that links to Inst6 L4 requirement 4.2.8.1, which states ""The Inst6 instrument control software shall provide for full control of the MER CCD cameras via the Inst6 control electronics."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05
ProjectE - TIM - 1104,No L5 Requirement for Inst6 L4 Requirement 4.2.5 - Software Initialization,4,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) In the given artifacts there is no Inst6 L5 requirement that links to Inst6 L4 requirement 4.2.5. However, there is a possible link between this L4 requirement and Inst6 L5 requirement 5.6 Inst6 L4 requirement 4.2.5 states ""Upon initialization of the Inst6 flight software by the lander FSW the Inst6 software shall allocate dynamic memory needed and set constant value parameters as required."" Inst6 L5 requirement 5.6 states that the software shall request dynamic memory at initialization from the S/C FSW to allow for the creation of buffers for data processing and compression.",7/7/05
ProjectE - TIM - 1103,No L5 Requirement for Inst6 L4 Requirement 4.1.8.3 - DC Power Control,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to L4 requirement 4.1.8.3 which states ""DC power shall be controlled by the lander under command by the Inst6 flight software."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05
ProjectE - TIM - 1102,No L5 Requirement for Inst6 L4 Requirement 4.1.6.17 - Data Rate Requirements,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to L4 requirement 4.1.6.17, which states ""The Inst6 electronics shall be capable of transferring image and housekeeping data between the PEB and the lander control computer through a 2 MHz synchronous interface."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05
ProjectE - TIM - 1100,No L5 Requirement for Inst6 L4 Requirement 4.1.6.14 - CCD Exposure Control,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to Inst6 L4 requirement 4.1.6.14, which states ""The Inst6 control electronics shall provide the ability to start exposures from both CCD cameras for stereo imaging within 1 millisecond of each other."" The parent L4 requirement seems to require software implementation and therefore should be addressed in the SRS.",7/7/05
ProjectE - TIM - 1099,No L5 Requirement for Inst6 L4 Requirement 4.1.2.3 - Pointing Accuracy,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement linked to L4 requirement 4.1.2.3, which states ""The pointing shall be accurate to ± 17.5 mrad at any position and temperature."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/7/05
ProjectE - TIM - 1098,Incomplete Inst6 L5 Requirement 6.3.2.12 - Inst6 Valid Motion Range,3,Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.3.2.12 requirement does not capture the full intent of Inst6 L4 requirements 4.1.2.1 and 4.1.2.2. L4 requirement 4.1.2.1 addresses pointing the camera in 354 degrees of azimuth and L4 requirement 4.1.2.2 addresses pointing the camera in 180 degrees of elevation . The L5 (which is mapped to both of these L4s) refers to checking the new position value for valid range and issuing an error message if the position exceeds a threshold.,7/7/05
ProjectE - TIM - 1097,Incomplete Inst6 L5 Requirement 7.7.3.2 - Inst6 Stereo Pair Acquisition,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirement 4.1.1.9 states ""the Inst6 shall have the capability of taking either stereo pairs or separate images from each CCD"". However, Inst6 L5 requirement 7.7.3.2 (which is directly mapped to this L4) addresses the ability to take stereo images only. It makes no mention of taking separate images from each CCD.",7/7/05
ProjectE - TIM - 1096,Inst4 SRS Requirement 5504-2 Is Ambiguous,3,"Inst4 SRS Requirement 5504-2. The software shall receive and store all data from the C&DH before starting an experiment. Issue: This statement gives the impression that the software somehow has the knowledge to check ""all data"" to ensure completeness before starting an experiment. It is unclear if the software or the ground has the responsibility for ""checking data completeness"". In either case, this requirement does not completely state the requirement. Artifacts: Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/6/05
ProjectE - TIM - 1095,Inst4 SRS Requirement 5500-4 Is Incomplete,3,"Inst4 SRS Requirement 5500-4. The software shall be capable of storing up to 50 command sequences. Each command sequence can contain unto 20 commands. Issue: The requirement for delayed commanding is missing. Page 50 in the CDR Software backup slides shows this functionality. Artifacts: Inst4 SRS, Ver. 2.2, 2-4-05. Inst4 CDR, Software Backup Slides, May 19-20, 2005",7/6/05
ProjectE - TIM - 1094,L5 Requirements not mapped to Inst6 L4 Requirement 4.1.6.9 - Heater Fall-Back Method,5,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) The Inst6 SRS document does not map any L5 requirements to Inst6 L4 requirement 4.1.6.9. However, L5 requirements 6.2.3 and 9.4 should be mapped to this L4 requirement. Inst6 L4 requirement 4.1.6.9 states ""The Inst6 control electronics shall provide the ability to utilize a fall-back capability to preheat a particular motor under software control by energizing only a single phase winding, or opposite phase windings, without inducing motion by software command."" Inst6 L5 requirement 6.2.3 states ""Each Inst8 actuator shall be capable of utilizing a preheat mode wherein one coil of a selected actuator is energized without inducing motion."" Inst6 L5 requirement 9.4 states ""In the event that an Inst6 actuator heater element should fail the Inst6 software shall attempt to utilize a back-up mode wherein at least one of the stepper motor phase windings is energized without causing motor operation.""",7/6/05
ProjectE - TIM - 1093,No L5 Requirement for Inst6 L4 Requirement 4.1.6.8 - Heater Current Consumption,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that addresses Inst6 L4 requirement 4.1.6.8 which states ""The Inst6 control electronics shall provide the ability to detect the current consumed during heater activity and return the data back to the instrument control computer when commanded to do so."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/6/05
ProjectE - TIM - 1092,No L5 Requirement for Inst6 L4 Requirement 4.1.6.6 - Stepper Motor Current Limiting,3,Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that addresses Inst6 L4 4.1.6.6 that requires providing the ability to limit the maximum current to any actuator to 0.7 Amperes over the nominal operating temperature range.The parent L4 requirement potentially requires software implementation and therefore should be addressed in the SRS.,7/6/05
ProjectE - TIM - 1091,No L5 Requirement for Inst6 L4 Requirement 4.1.6.3 - Stepper Motor Current Sense,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that addresses Inst6 L4 requirement 4.1.6.3, which states that the Inst6 control electronics shall provide the ability to sense the current consumed during motor operation and return the data back to the instrument control computer when commanded to do so.",7/6/05
ProjectE - TIM - 1090,No L5 Requirement for Inst6 L4 Requirement 4.1.5.2 - Mast Deployment Control,3,Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that addresses Inst6 L4 requirement 4.1.5.2 stating that the redundant pyro devices be controlled by the lander computer.,7/6/05
ProjectE - TIM - 1089,Incomplete Inst6 L5 Requirement 6.1.1 - Global Motion Control Parameters,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirement 4.1.4 states: 4.1.4.1 The Inst6 stepper motor actuators shall be capable of operation from -60 C to 50 C. 4.1.4.2 Each Inst6 stepper motor actuator shall have a heater element attached to the body of the motor. 4.1.4.3 Each actuator heater shall be capable of bringing the motor to a minimum operating temperature of -65 C within 30 minutes from a starting temperature of -90 C degrees. 4.1.4.4 Each actuator heater shall be current limited to 0.7 Amperes. 4.1.4.5 Software shall not command motor operation unless the motor is at the minimum operating temperature. However, Inst6 L5 requirement 6.1.1 (which is mapped to 4.1.4) does not directly address this requirement. Inst6 L5 requirement 6.1.1 states ""The following configurable motion control parameters shall be utilized for all instrument actuators: Actuator Preheat Time: The maximum time in seconds to heat an actuator when it is below the preheat set point: 16-bit Integer (unsigned) Actuator Preheat Set Temperature: The temperature, in non-fractional degrees C, below which the motor heating activity shall be invoked when in automatic mode: 16-bit Integer (signed)""",7/6/05
ProjectE - TIM - 1088,No L5 Requirement for Inst6 L4 Requirement 4.1.3.9 - Filter Wheel Index Illumination Source Control,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that addresses Inst6 L4 requirement 4.1.3.9 that states ""The illumination source for the filter wheel optical index sensor shall be controllable by software command."" The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.",7/6/05
ProjectE - TIM - 1087,No L5 Requirement for Inst6 L4 Requirement 4.1.3.7 - Filter Wheel Filter Spacing,3,Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) There is no Inst6 L5 requirement that addresses Inst6 L4 requirement 4.1.3.7 of defining the center position of each filter position to be at 30 step intervals. The parent L4 requirement requires software implementation and therefore should be addressed in the SRS.,7/6/05
ProjectE - TIM - 1086,Inst4 SRS Requirement 5500-3 Is Incomplete and Inconsistent with the Linked L4 Parent Requirement,3,"Inst4 SRS Requirement 4041. Inst4 shall be capable upon power up of determining compliance with certain starting criteria and beginning the execution of a preprogrammed analysis covering both thermal and mass spectrometry without requiring up linked commands. Inst4 SRS Requirement 5500-3. The software shall check Mars environmental conditions before starting an experiment. If the condition is not in the pre-set operation condition allowance range, the experiment will be scrubbed and a message will be sent to the ground. Issue: The L4 requirement for ""covering both thermal and mass spectrometry"" is not addressed in the linked SRS requirement. The SRS requirement does not identify the Mars environmental conditions to be checked, the pre-set conditions (probably table values) nor the message(s) to be sent to the ground. Artifacts: 1. Inst4 L4 5-14-05_CDR_ECRBaseline for DOORS. 2. Inst4 Electronics Board (386) Flight Software Requirements Specification, 28 December 2005, Version 1.0",7/6/05
ProjectE - TIM - 1085,Process Speed Requirement Conflicts Between Several SRS and DPD Requirements,4,Their are several processor speed requirements that are in conflict with each other.,7/6/05
ProjectE - TIM - 1084,Requirement 3.1.1-en Referencing Wrong DPD Figure Number,5,The SRS requirement in 3.1.1-en is referencing an incorrect figure in the DPD.,7/6/05
ProjectE - TIM - 1083,Requirement 3.1.1-em Referencing Wrong DPD Figure Number,5,The SRS requirement in 3.1.1-em is referencing an incorrect figure number in the DPD.,7/6/05
ProjectE - TIM - 1082,Conflicting Inst6 L4 Requirement 5.22 - Inst4 Imaging,4,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) Inst6 L4 Requirement 4.12 states that the camera and mast shall be mounted such that it can view the Inst4 without obstructions from other components. However, Inst6 L4 Requirement 5.22 states that IF VISIBLE TO THE Inst6, the Inst6 shall be capable of imaging each of the Inst4 Thermal Analyzer screens and doors. These two requirements seem to be in conflict with each other with regards to the requirement of the Inst4 instrument being obstructed from the Inst6 field of view.",7/6/05
ProjectE - TIM - 1081,Incomplete L5 Requirements Mapped to L4 Requirement 4.3.2 (CCD Fault Protection),3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirements (5.5.1.2, 5.5.1.3, 9.5, 9.6, 9.7, 9.9) have been mapped to Inst6 L4 requirement 4.3.2 (CCD Fault Protection). However, none of these L5 requirements fully capture the intent of the L4. The requirements in question are given below. Inst6 L4 requirement 4.3.2: In the event of a failed CCD or its associated electronics in the Inst6 camera head, the camera electronics shall be able to shut off power to the failed CCD under software control and continue to acquire images with the remaining CCD. Inst6 L5 requirement 5.5.1.2: The software shall incorporate the capability to command the CCD control logic to read and return the values of commanded discrete outputs (discrete state read-back). Inst6 L5 requirement 5.5.1.3: The software shall utilize the internal discrete read-back capabilities of the CCD control logic (where applicable) to verify commanded discrete output functions. Inst6 L5 requirement 9.5: If the busy signal does not become inactive in the parameter specified time then the software will activate the reset line to reset the electronics and issue an EVR (Event Report). Inst6 L5 requirement 9.6: If there is a mismatch between the commanded output and the internal CCD control electronic discrete state read-back, the software shall reset the hardware using the reset signal and generate an EVR (Event Report) to note the event. Inst6 L5 requirement 9.7: The software shall have the capability of declaring an error condition when an analog input is outside of predefined operational parameters for a configurable period of time. Inst6 L5 requirement 9.9: The MIS SW shall generate EVR (Event Report) messages in response to specific warning or fault conditions. Predefined warning or fault conditions shall be documented in the MIS SW ICD and implemented in accordance with referenced LMA FSW requirements documents.",7/6/05
ProjectE - TIM - 1080,Incomplete Inst6 L5 Requirement 7.7.1 - Exposure Operation Monitoring,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirement 4.2.8 states ""The Inst6 instrument control software shall be capable of commanding every operational mode provided by the MER CCD electronics and by the Inst6 control electronics."" Inst6 L5 requirement 7.7.1 (which is mapped to 4.2.8) states ""The software shall monitor the operation of the camera control electronics for correct operation during CCD exposures by utilizing the discrete BUSY signal line."" Inst6 L5 requirement 7.7.1 does not address Inst6 L4 4.2.8. The L5 mentions monitoring the operation of the camera control electronics for correct operation, but it never addresses commanding.",7/6/05
ProjectE - TIM - 1079,Incomplete Inst6 L5 Requirement 7.7.1 - Exposure Operation Monitoring,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirement 4.1.6.11 states ""The Inst6 control electronics shall provide the ability to pass through commands from the flight software to the CCD cameras."" Inst6 L4 requirement 4.1.6.12 states ""The Inst6 control electronics shall provide the ability to return command responses from the CCD cameras directly to the flight software."" Inst6 L5 requirement 7.7.1 (which is directly mapped to both of these L4 requirements) states ""The software shall monitor the operation of the camera control electronics for correct operation during CCD exposures by utilizing the discrete BUSY signal line."" The L5 does not specifically address the L4 requirements of passing commands between the FSW and CCD cameras. The L5 requirement only addresses monitoring the discrete busy signal line.",7/6/05
ProjectE - TIM - 1078,Incomplete Inst6 L5 Requirement 6.1.4 - Inst6 Filter Wheel Parameters,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Although the capability to control the filter wheel motion has been addressed in Inst6 L5 requirement 6.1.4, it is unclear if the L4 requirement of 1 degree/step has been captured. The allocation of data types for the control function have been captured but the L5 does not specifically address the slew rate.",7/6/05
ProjectE - TIM - 1077,Incomplete Inst6 L5 Requirement 6.1.2 - Inst6 Azimuth Axis Parameters,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Although the capability to control the azimuth motion has been addressed in Inst6 L5 requirement 6.1.2, it is unclear if the L4 requirement of 0.288 degrees/step, with a maximum backlash of +/- 5.7 mrads has been captured. The allocation of data types for the control function have been captured but the L5 does not specifically address the slew rate.",7/6/05
ProjectE - TIM - 1076,Incomplete Inst6 L5 Requirement 6.1.3 - Inst6 Elevation Axis Parameters,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Although the capability to control the evelation motion has been addressed in Inst6 L5 requirement 6.1.3, it is unclear if the L4 requirement of 0.288 degrees/step, with a maximum backlash of +/- 5.7 mrads has been captured. The allocation of data types for the control function have been captured but the L5 does not specifically address the slew rate.",7/6/05
ProjectE - TIM - 1075,"The term ""Partially Blocked"" is undefined for Inst6 L4 Requirements 4.1.2.5 and 4.1.2.6",4,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirements 4.1.2.5 and 4.1.2.6 deem it acceptable for the view from the Inst6 to be ""partially blocked"" by the lander gimbal and the deployable boom assembly tip plate at certain azimuth and elevation angles. However, the term ""partially blocked"" is not sufficiently defined.",7/6/05
ProjectE - TIM - 1074,Unlinked Inst6 L5 Requirement 9.4 - Inst6 Heater Element Failure,5,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) At present this L5 requirement (Inst6 9.4) is not linked to any L4 requirement, but should be linked to Inst6 L4 requirement 4.1.6.9. Inst6 L4 requirement 4.1.6.9 states ""The Inst6 control electronics shall provide the ability to utilize a fall-back capability to preheat a particular motor under software control by energizing only a single phase winding, or opposite phase windings, without inducing motion by software command."" Inst6 L5 requirement 9.4 states ""In the event that an Inst6 actuator heater element should fail the Inst6 software shall attempt to utilize a back-up mode wherein at least one of the stepper motor phase windings is energized without causing motor operation.""",7/6/05
ProjectE - TIM - 1073,Incomplete Inst6 L5 Requirement 9.1 - Fault Modes,3,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 9.1 states that the MIS software shall incorporate backup modes of operation to provide an equivalent functionality in the event of a failure of a primary mode of functionality. However, a description of these backup modes have been omitted.",7/6/05
ProjectE - TIM - 1072,Ambiguous Inst6 L5 Requirement 6.3.1.1.5 - Motion Direction (Elevation),3,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 reqirement 6.3.1.1.5 states that motion direction for the elevation axis shall be automatically determined from the value and sign of the step count parameter. However, the direction of motion for positive values and negative values of step count is missing from this requirement (e.g. positive step counts correspond to an increase in elevation angle).",7/6/05
ProjectE - TIM - 1070,Inst4 SRS 5080 Is Incomplete in Stating Requirements for Safing,3,"Inst4 SRS Requirement 5080. Safing. TEFSW shall be capable of safing the Inst4 electronics. Issue: This statement does not define the ""safe state"" in terms of the states/status of the Inst4 components (e.g., e.g., power control, valve positions, thermal control, tasks executing, etc.). Artifacts: Inst4 Subsystem Software Requirements Specification",7/6/05
ProjectE - TIM - 1069,Missing Requirements for EDL Kalman Filter (EDL-2) in section 3.6.6,3,The Kalman Filter requirements for the EDL phase are not defined.,7/6/05
ProjectE - TIM - 1068,Inst4 SRS Requirement 5063 is Inconsistent with the Spacecraft to Inst4 ICD,3,"Inst4 SRS Requirement 5063. Invalid Command Handling. Invalid commands (incomplete, invalid or corrupted) shall cause the software to issue an error message via the LMA FSW EVR facility, increment a fault protection error counter for interrogation by the LMA FSW and cease processing the current command. Spacecraft to Inst4 ICD, Section 3.2.4.8.1.1. Perform Command Interface Error Checking. Once per command sent the TEFSW will execute the following steps: If the Command Interface detection is enabled and an error is returned on a command sent to Inst4, the TEFSW shall increment the Command Interface error counter and set the fault protection condition to Suspect. If the Command Interface response is enabled, and this is the first fault, (exceeded configurable number of consecutive Command Interface errors), the TEFSW shall record Command Interface in fault in the Fault History Table (FHT) and set its condition to Failed. Note – this Failed condition “latches” and can only be reset via TEFSW initialization. Else, (no error was returned from the command sent or detection is disabled), the TEFSW shall reset the Command Interface error counter and set its condition to Good. Issue: The two requirements for command interfacing error checking appear to be inconsistent. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005 ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/6/05
ProjectE - TIM - 1067,Inst4 SRS Requirerment 5067 is Incomplete,3,"Inst4 SRS Requirement 5067. The TEFSW shall handle the following system level messages: a)SYS_INIT b)SYS_PING c)SYS_FP_ENAB d)EPSO_COMP_STATE e)Inst4_RESET f)Inst4_SAFING g)Inst4_POWER_DOWN Issue: Requirement 5067 does not state what the response to these messages should be. It is noted that the Spacecraft to Inst4 ICD defines several of them; however, the ICD definitions also appear incomplete. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005 ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/6/05
ProjectE - TIM - 1066,Inst4 SRS Requirement 5062 Is Incomplete and Potentially Incorrect,3,"Inst4 SRS Requirement 5062. Error Detection. Error detection and handling shall be in accordance with referenced Contractor3 FSW requirements documents: LMA ProjectE Payload FSW API Guide, Section 3.5 and LMA ProjectE Payload FSW API Guide, Section 3.9. Issue: It is unclear why the SRS only points to the LMA document for error detection and handling as the Spacecraft to Inst4 ICD also contains such requirements. Also, IV&V understands that the Project will develop a Fault Protection Performance Specification that will document error detection and handling requirements and design. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005 ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/6/05
ProjectE - TIM - 1065,Inst4 SRS Requirement 5061 is Inconsistent with the Spacecraft to Inst4 ICD,4,"Inst4 SRS Requirement 5061. The TEFSW shall provide a callback to the Contractor3 for power consumption data. ICD 3.2.4.3 Modeled Power. Upon request, the TEFSW shall return its parameterized value for power consumption. This value will be different for each distinct power state of the Inst4 instrument. Issue: The SRS and ICD requirements are not completely consistent in stating the requirement for returning power consumption data. Artifacts: Inst4 SRS, Ver. 2.2, 2-4-05. ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/6/05
ProjectE - TIM - 1064,Inst4 SRS Requirement 5060 Is Incomplete and Potentially Incorrect,4,"Inst4 SRS Requirement 5060. The TESW shall generate EVR (Event Report) messages in response to specific warning or fault conditions. Predefined warning or fault conditions shall be documented in the TESW ICD and implemented in accordance with referenced LMA FSW requirements documents. Issue: The definition of the two referenced documents is incomplete and incorrect in that the specific document and revision numbers are not stated and the TESW ICD is unknown to IV&V (possibly this is the Spacecraft to Inst4 ICD). Moreover, neither document is found in the SRS, Section 3.0. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005 ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/6/05
ProjectE - TIM - 1063,Inst4 SRS Requirement 5050-4 Is Inconsistent with the Linked Parent FRD Requirement,3,"Inst4 L4 Requirement 4040. The control system shall be able to boot and run from at least two code sources stored in EEPROM. The designated bank shall be externally selectable using a S/C driven control line. Inst4 SRS Requirement 5050-4. During initialization of the TEFSW, the BOOT_SELECT discrete shall be set low. Issue: The SRS requirement does not state that the TEFSW shall be able to drive the discrete line to select one of the two 386 code sources in EEPROM, if this is the intent of 4040. If the default is ""low"" then this fact should be stated. Artifacts: Inst4 L4 5-14-05_CDR_ECRBaseline for DOORS. Inst4 SRS, Ver. 2.2, 2-4-05.",7/6/05
ProjectE - TIM - 1062,Inst4 Requirement 5050-3 Is Unclear in Stating the Response to a Failed State,4,"Inst4 Requirement 5050-3. If the Inst4 heartbeat recovery sequence fails, as measured by a second failed state, the flight software shall downlink a notice the Inst4 was powered off, the time of the last Inst4 heartbeat, the current time, and the Inst4 heartbeat count. Issue: This requirement seem to imply that the response to a second failed state is """"power off Inst4""""; however, the text does not directly state this. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver 3.0, August 16, 2005",7/6/05
ProjectE - TIM - 1061,Incomplete Inst6 L4 Requirement 7.0 - Investigation / Operations,5,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirement 7.0 claims compliance to the Level 3 Science Requirements document; however, the version and date of the Science Requirements document that it references is marked as TBD.",7/6/05
ProjectE - TIM - 1060,Incomplete Inst6 L5 Requirements,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) The Inst6 L5 requirements (5.2.1, 5.2.2, 5.2.3, 5.2.4, 5.2.5, 5.2.6, 5.2.7, 5.5.2.1, 5.5.2.2, 8.1, 8.3, 8.4) are directly mapped to Inst6 L4 requirement 4.2.4, which includes 4.2.4.1, 4.2.4.2, and 4.2.4.3. However, it is unclear from these L5 requirements if the full intent of L4 requirement 4.2.4 has been captured. In particular, L4 requirement 4.2.4.3 (calling for 1024x1024x12 bit uncompressed images) and L4 requirement 4.2.4.2 (imposing that all packetized data contain enough information so that the packets can arrive to the flight computer in any order) have not been addressed by the linked L5 requirements.",7/6/05
ProjectE - TIM - 1059,Incorrect Mapping of L5 Requirement 7.6 - Image Processing Tables and Models,5,Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 7.6 is incorrectly mapped to Inst6 L4 requirement 4.2.3. Instead it should be mapped to Inst6 L4 requirements 4.2.9.2 (Hot Pixel Corrections) and 4.2.9.3 (Bad Pixel Corrections).,7/6/05
ProjectE - TIM - 1058,Incomplete Inst6 L5 Requirement 5.6 - Memory Functions,3,Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 5.6 does not address the non-volatile storage requirements of Inst6 L4 requirement 4.2.3.,7/6/05
ProjectE - TIM - 1057,Ambiguous Inst6 L5 Requirement 6.4.3 - Inst8 Shutdown Procedure (Focus),4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.4.3 states that the Inst8 shutdown procedure shall be to move the focus motor to near the switch position to minimize the focus travel to detect the switch. The term ""near the swith position"" is ambiguous",7/6/05
ProjectE - TIM - 1056,Incomplete Inst6 L5 Requirement 6.4.1 - Inst8 Focus Motor Park Position,4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) L5 Requirement 6.4.1: The Inst8 focus motor shall be left in a parked position that is not within 3 steps of either end of travel. This is to prevent the thermal contraction of the case from jamming the focus leadscrew. Issue: A description of ""parked position"" is missing from this SRS requirement. It is not clear from this requirement what position the Inst8 focus motor must be in to be considered ""parked"". Without a clear definition there is the potential for incorrect software implementation.",7/6/05
ProjectE - TIM - 1055,Ambiguous L5 Requirement 6.3.2.20 - Inst6 Shutdown State Verification,4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) L5 Requirement 6.3.2.20 (Inst6 Shutdown State Verification): In order to reduce the overall time required for shutdown the software shall check that each axis of the Inst6 is in the safe position before powering off the electronics and shutting down the software. If the Inst6 is already in a safe mode (position-wise), then no motion is necessary. Issue: The last sentence of this L5 requirement (if the Inst6 is already in a safe mode, then no motion is necessary) leads one to believe that the nominal Inst6 shutdown procedure will leave the Inst6 in the same position as the safe mode shutdown procedure. This assumption, if true, is contradictory to the following L5 requirements which capture nominal shutdown and safemode shutdown procedures: L5 Requirement 6.3.2.14 (Inst6 Safe Mode): Upon receipt of a safe mode command or safe mode signal from the lander FSW the Inst6 shall be rotated into the stowed (down) position and power to the actuators and CCD sensors disabled. The azimuth shall remain at its last position. L5 Requirement 6.3.2.16 (Inst6 Shutdown Position): The shutdown position for the Inst6 shall be with the AZ axis driven into the hard stop pin and EL axis driven to the down (nadir) position hard stop.",7/6/05
ProjectE - TIM - 1054,Incomplete Inst6 L5 Requirement 6.3.2.13 - Filter Wheel Positions,4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) L5 Requirement 6.3.2.13 (Filter Wheel Positions): Each filter position shall be counted in the CW direction from the index home position. Issue: A definition of ""home position"" and a coordinate system defining the CW direction are missing from the SRS requirement. In the absence of specific coordinate definition there is the potential for incorrect software implementation.",7/6/05
ProjectE - TIM - 1052,Incomplete Inst6 L5 Requirement 6.3.1.1.7 - Motion Sequence Order,3,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) L5 Requirement 6.3.1.1.7 (Motion Sequence Order): A motion sequence shall consist of either azimuth, elevation, and filter wheel, or filter wheel, azimuth, and elevation. Issue: It is assumed that the sequence order to be used is determined on the ground and not by the flight software. However, the requirement does not state how the flight software determines which motion sequence is currently being used by the ground.",7/6/05
ProjectE - TIM - 1051,Incomplete Inst6 L5 Requirement 6.3.1.1.3 - Motion Target Position (Filter Wheel),4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.3.1.1.3 states that all filter wheel motion shall be specified as either an absolute number of steps or as a filter number. However, there is no mention of any position feedback into the control laws (e.g. determining the current position of the filter wheel).",7/6/05
ProjectE - TIM - 1050,Ambiguous Inst6 L5 Requirement 5.3.1.3 - Modification of Configuration Files,4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 5.3.1.3 states ""Normal instrument operation shall not directly alter uploaded configuration files"". It is unclear what is meant by ""normal instrument operation"" and ""directly alter"". The commands and/or states under which configuration files can be altered are missing.",7/6/05
ProjectE - TIM - 1049,Inst4 SRS Requirements 5050-1.4 and 5050-2 Are Unclear,4,"Inst4 SRS Requirements: 5050-1.2 The TEFSW shall define a failed state as when the flight software has failed to receive a Inst4 heartbeat or when commanded to perform an instrument reset. 5050-1.4 In the case of a failed state, TEFSW shall run a Inst4 heartbeat-failure command sequence no more that 10 commands in length. 5050-2 The TEFSW shall be able to reset Inst4 electronics board in case that it has not seen a heartbeat from the Inst4 electronics in a configurable period of time. Issue: Based on these requirements it is unclear if the software is to run a heartbeat failure command sequence or reset the Inst4 electronics. Artifacts: Inst4 SRS, Ver. 2.2, 2-4-05",7/6/05
ProjectE - TIM - 1048,Missing Requirements 3.6.5.2 Terminal Descent Guidance Controller (EDL-3),3,The Terminal Descent Guidance Controller (EDL-3) section is TBD.,7/6/05
ProjectE - TIM - 1047,Missing Requirements 3.6.5.1 Aeromaneuvering Guidance,3,The Aeromaneuvering Guidance section 3.6.5.1 is TBD.,7/6/05
ProjectE - TIM - 1046,Inst4 L4 FRD Missing Definition of Nominal Recoverable State,3,"L4 FRD. 4048 Inst4 shall be able to recover from reasonably anticipated failure modes by achieving the specification of a Nominal Recoverable State. Issue: The L4 does not define this state in terms of Inst4 component states/status, e.g., power control, valve positions, thermal control, etc. Artifacts: Inst4 L4 5-14-05_CDR_ECRBaseline for DOORS.",7/6/05
ProjectE - TIM - 1045,Unclear requirement for maximum change in roll command during terminal descent (section 3.1.1 aa.),3,"Paragraph 3.1.1 aa states ""The FSW shall control the maximum change in commanded roll orientation less than 20 degrees during terminal descent."" It is unclear whether aa refers to maximum change in commanded roll from one cycle to another or from the start to the end of terminal descent, or something else. Additionally, 3.1.1 aa appears to be missing the word ""to"" between ""orientation"" and ""less"".",7/6/05
ProjectE - TIM - 1044,"Inst4 SRS Section 5.1.5, Fault Recovery Requirments, is Splintered, Inconsistent and Potentially Incomplete",3,"Apparently, there are five sources for Inst4 fault recovery requirements: (1) the Inst4 SRS, (2) the Spacecraft to Inst4 ICD,(3) the LMA ProjectE Payload FSW API Guide Sections 3.5 and 3.9,(4) a ProjectE fault recovery document and (5) the Inst4 L4 FRD. It is noted that: (1) the IV&V Team did not receive a copy of document 4; therefore, the types of fault recovery requirements in these document are unknown to IV&V, (2) fault recovery requirements in the ICD are similar in format and scope as those found in the SRS and it appears that all of them apply to the TEFSW and (3) the SRS references the L4 FRD but the FRD made available to IV&V does not reference the ICD. It is also noted that ICD Section 3.2.4.8.3 identifies requirements for the Aliveness Check. If this check is the same as the Heartbeat Check, then the SRS is inconsistent with the ICD. For example: (1) the SRS does not require being ""disabled for a configurable period of time after power up or reset"", (2) the error checking steps defined in ICD section 3.2.4.8.3.1 are not consistent with requirements 5050-1, 5050-2 and 5050-3 and (3) ICD section 3.2.8 defines error checking for commanding and telemetry. Paragraph 5.1.5 refers to a ""ProjectE recovery document"" but this document is not specifically defined and therefore could not be located by the IV&V team. Given this situation, there is no single place (or a consistent linking of fault recovery requirements across documents) where the TEFSW fault recovery requirements are completely and consistently defined. Artifacts: Inst4 L4 5-14-05_CDR_ECRBaseline for DOORS. Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005 ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/5/05
ProjectE - TIM - 1043,Inst4 SRS Requirement 5004-1 Is Inconsistent with the Linked Parent L4 Requirement 4039,3,"L4 requirement 4039. Inst4 electronics shall be capable of being reset by a command directly from the TEFSW. SRS Requirement 5004-1. TEFSW shall reset its operating parameters upon command. Issue: The L4 requirement deals with resetting the Inst4 electronics based on a TEFSW command; however, 5004-1 addresses resetting the TEFSW operating parameters. The two requirements are inconsistent. Artifacts: Inst4 L4 5-14-05_CDR_ECRBaseline for DOORS. Inst4 SRS, Ver. 2.2, 2-4-05.",7/5/05
ProjectE - TIM - 1042,Inst4 SRS Requirement 5003-1 Does Not Fully Address the Linked Parent L4 Requirement,3,"Inst4 L4 Requirement 4046. The time base between the Inst4 PEB electronics and S/C system clock shall be correlatable to within 1 second. Inst4 SRS Requirement 5003-1. TEFSW shall send the spacecraft time to the Inst4 instrument. Issue: The L4 requires that the time be correlated to within 1 second. The SRS requirement only requires that time be sent to the Inst4. It is likely that the software has a role in ensuring that the one second correlation is met. It is noted that the Spacecraft to Inst4 ICD , Section 3.2.3, addresses time requirements but is not linked to the SRS.",7/5/05
ProjectE - TIM - 1041,Inst4 SRS Requirement 5002-1 is Incomplete,3,"Inst4 SRS Requirement 5002-1. TEFSW shall calculate and add checksums to certain instrument commands. Issue: The specific commands requiring checksums are not defined. This results in an incomplete and untestable requirment. Artifacts: Inst4 Subsystem Software Requirements Specification, Ver. 3.0, August 16, 2005",7/5/05
ProjectE - TIM - 1040,Ambiguous Inst6 L5 Requirement 6.3.1.1.4 - Motion Direction (Azimuth),4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.3.1.1.4 states that the azimuth axis shall be specified by a command parameter (clockwise or counter-clockwise). However, it is not clear what is meant by clockwise or counter-clockwise without defining a reference frame.",7/5/05
ProjectE - TIM - 1039,Incomplete Inst6 L5 Requirement 6.3.1.1.2 - Motion Target Position,3,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.3.1.1.2 states that all azimuth/elevation motion shall be specified in either an absolute number of steps from the home position, or as a relative number of steps from the current position. However, there is no mention of position feedback into the control laws (e.g. determining the current position) or the method of determining direction (e.g. clockwise or counter-clockwise motion).",7/5/05
ProjectE - TIM - 1038,Indistinct Inst6 L5 Requirement 6.3.1.1 - Motion Commanding,4,"Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.3.1.1 does not clarify what is meant by the term composite, when referring to the software supporting the use of a composite command to define the motion parameters for all three axes.",7/5/05
ProjectE - TIM - 1037,"Unlinked Inst6 L5 Requirement 6.2.3 - Preheat Activation, Inst8",5,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) At present this L5 requirement (Inst6 6.2.3) is not linked to any L4 requirement, but should be linked to Inst6 L4 requirement 4.1.6.9. Inst6 L4 requirement 4.1.6.9 states the Inst6 control electronics shall provide the ability to utilize a fall-back capability to preheat a particular motor under software control by energizing only a single phase winding, or opposite phase windings, without inducing motion by software command. Inst6 L5 requirement 6.2.3 states each Inst8 actuator shall be capable of utilizing a preheat mode wherein one coil of a selected actuator is energized without inducing motion.",7/5/05
ProjectE - TIM - 1036,Ambiguous Inst6 L5 Requirement 6.2.1 - Automatic Preheat,4,Artifacts: 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L5 requirement 6.2.1 states that the MIS software shall support the ability to automatically perform a closed-loop actuator preheat. It is unclear from this requirement if the actuator preheat is obtained from a heater or obtained from energizing a single coil. (Heater Fall-Back Method),7/5/05
ProjectE - TIM - 1035,Inst4 SRS Requirments 5001 and 5002 Do Not Fully Address the Linked Parent L4 Requirement,4,"Inst4 SRS Requirements: 5001 TEFSW Command and Command Sequence 5002 TEFSW Command Verification and Acknowledgement Inst4 L4 FRD Requirement: 4036 The Inst4 electronics shall communicate to the ProjectE Lander through a low speed bi-directional interface specified in the Instrument Interface Control Document. Issue: The two referenced SRS requirements (including their sub-requirements) do not refer to the Instrument ICD (presumably this is the same as the Spacecraft to Inst4 ICD) for commanding and telemetry related requirements as does the linked parent FRD requirement 4036. It is noted that the Spacecraft to Inst4 ICD, section 3.2.5, contains ground commanding type requirements and a reference to the Command Dictionary; therefore, the specific definition of commands to be handled is not addressed in the SRS. Artifacts: Inst4 L4, 5-14-05, CDR-ECRBaseline for DOORS Inst4 SRS, Ver. 2.2, 2-4-05 ProjectE Spacecraft to Inst4 ICD, PHX_04_0026, Rev. New, 2-10-05",7/5/05
ProjectE - TIM - 1034,Inst5 - Software Configuration Management of AFM Microcode,3,"At the Inst5 CDR held on 16/17 Jun 2005, the project disclosed that instrument testing anomalies were attributed to different software versions being run on the Atomic Force Microscope (AFM). Tests were not run using Inst5 FSW. No configuration management of the AFM software was identified during the review. An RFA (# TBD) was submitted by IV&V during the CDR.",7/5/05
ProjectE - TIM - 1033,Incomplete Inst6 L5 Requirement 6.3.2.6 - Inst6 Elevation Position Reset,3,"Artifacts: Inst6_FRD DL 2005-6-07.xls (Inst6 L4 Rqmts) 04_MPS_MIS_SRS DL 2005-6-01.doc (Inst6 L5 Rqmts) Inst6 L4 requirement 4.1.2.4 mentions zero degrees elevation reference being at the midpoint of the elevation range of motion. However, Inst6 L5 requirement 6.3.2.6 (which is directly mapped to the L4) states an initialization of -90 degrees.",7/2/05
ProjectE - TIM - 1032,"Requirements 3.1.1-eb, 3.3.4.6.2-a, & 3.6.4.4.2-d Have Inconsistent Jitter Requirements",3,"There are three jitter requirements that are in conflict with each other. The first requirement (3.1.1-eb) is in conflict with itself. The second requirement (3.3.4.6.2-a) is the O/S requirement and may be too loose to meet the Propulsion/Gas Jet requirement. The third requirement (3.6.4.4.2-d) looks like it contains the intent. 3.5.6.1 Telemetry Layout e. Attitude control encounters no greater than 5 milliseconds of jitter when providing telemetry data measurements. Requirement 3.3.4.6.2 The flight software shall provide the capability to perform discrete operations at precise interval execution with jitter less than 2 milliseconds. Requirement 3.6.4.4.2 d. The Propulsion/Gas Jet processing flight software shall invoke the PVDM card execute command once every 10 Hz cycle with 100 Hz precision (as specified by the minor frame offset) with no greater than 1 millisecond jitter 3-sigma, and not to exceed 2 milliseconds jitter, when there are active PVDM card clients.",7/1/05
ProjectE - TIM - 1031,Inconsistent Identification of Global Variables in Input/Output List (sections 3.6 and 3.7),4,"In paragraphs 3.6 and 3.7 the Global Variables are sometimes identified as an input/output in the modules where they are used, but not always. For example: In sections 3.6.6.1, 3.6.6.3, 3.7.2.3.2, 3.7.5.3 and 3.7.5.12 the global varables used are identified in the input/output list. In sections 3.7.2.2.1.3, 3.7.2.2.2 and 3.7.2.2.4 global variables used are not identified in the input/output list.",7/1/05
ProjectE - TIM - 1030,Inst4 L5 SRS Does Not Fully Capture All Software Related L4 FRD Requirements,3,"The following Inst4 L4 parent requirements have no linked children in the Inst4 SRS: 4020.1, 4023, 4025, 4028, 4031, 4033, 4034, 4037, 4049, 4051. These requirements appear to be software related and therefore should have children in the Inst4 SRS. Artifacts: Inst4 L4, 5-14-05, CDR-ECRBaseline for DOORS Inst4 SRS, Ver. 2.2, 2-4-05",6/30/05
ProjectE - TIM - 1025,Requirements 3.4.2.9.2 a & b Are Conflicting - With or Without Parallel I/F,3,The pair of requirements listed below conflict with each other: 3.4.2.9.2 a & b. The first requirement says the software needs to configure itself with or without an interface. The second requirement says it needs to configure itself without the interface.,6/30/05
ProjectE - TIM - 1024,Requirements 3.4.2.8.2 a & b Are Conflicting - With or Without SASI I/F,3,The pair of requirements listed below either appear to conflict with each other or redundant: 3.4.2.8.2 a & b. The first requirement says the software needs to configure itself with and without an interface. The second requirement says it needs to configure itself without the interface.,6/30/05
ProjectE - TIM - 1022,Requirements 3.4.1.14.2 a & b Are Redundant - 1553 support,4,The pair of requirements listed are redundant: 3.4.1.14.2 a & b. Both requirements say the same thing in slightly different ways.,6/30/05
ProjectE - TIM - 1021,Unclear PDC I/F Requirements (SRS 3.4.1.12.2 a & b),3,"The pair of requirements listed below either appear to conflict with each other or redundant: 3.4.1.12.2 a & b. The first requirement says the software needs to support zero, one, or two interfaces. The second requirement says it only needs to support one requirement. It is unclear why both requirements are needed.",6/30/05
ProjectE - TIM - 1020,Unclear PIM I/F Requirements (SRS 3.4.1.11.2 a & b),3,"The pair of requirements listed appear to conflict with each other or redundant: 3.4.1.11.2 a & b. The first requirement says it needs to support zero, one, or two interfaces. The second requirement says it only needs to support two interfaces. It is unclear why both requirements are needed. 3.4.1.11.2 a) The flight software IOC driver shall support interfacing to zero, one, or two PIMs. 3.4.1.11.2 b) The flight software IOC driver shall support interfacing to two PIMs.",6/30/05
ProjectE - TIM - 1019,Unclear Requirements for EMIC Switches (SRS 3.4.1.9.2 c & d),3,"The pair of requirements listed below are in conflict with each other: 3.4.1.9.2 c & d. The first requirement says the software needs to command type 2 and 3 switch (assumption is being made that ""2/3"" is not in itself a unique type). The second requirement says it needs to command a type 1, 2, and 3 switch. It is not clear why both requirements are needed.",6/30/05
ProjectE - TIM - 1018,Requirements 3.4.1.9.2 a & b Are Conflicting - Number of EMICs,3,"The following requirements conflict with each other: 3.4.1.9.2 a & b. The first requirement (a) has at least two interpretations and therefore ambiguous (See Excerpt): 1) provide any one of the three capabilities listed 2) provide all three capabilities listed If item 2) was the intent, then the requirement should have specified the list as ""A, B, and C"" rather than ""A, B, or C"". The second requirement (b) is not ambiguous by specifying only one capability. If the coder implements (b), then there is a chance that the first requirement may conflict depending on how its interpreted.",6/30/05
ProjectE - TIM - 1017,Night Time Mode In Requirement 3.4.1.3.2-b Not Specified,3,"The ""Night Time Mode"" functionality is not specified.",6/30/05
ProjectE - TIM - 1015,Requirements 3.3.4.4.2-a & 3.3.4.4.2-b Are In Conflict - Floating Point Exceptions,3,The requirements listed in 3.3.4.4.2-a conflicts with the requirement in 3.3.4.4.2-b. The first requirement specifies the exceptions have to be disabled. The second requirement specifies that exceptions have to be monitored. It is unclear what has to be monitored considering the exceptions are disabled.,6/30/05
ProjectE - TIM - 1013,Requirements 3.3.2.2-b & 3.3.2.2-l-1-c Are Redundant - 10MHz,4,The requirements in 3.3.2.2-b. are duplicated in the requirement in 3.3.2.2-l-1-c.,6/30/05
ProjectE - TIM - 1012,Requirements 3.3.2.2-g & 3.3.3.2-g Are Redundant - OS Init To Copy Files,4,"The requirements in 3.3.2.2-g are duplicated in 3.3.3.2-g. 3.3.2.2-g. The OS Init software shall copy files contained in the Flash file system into the DRAM file system after copying files contained in the EEPROM file system, overwriting any existing files in the DRAM file system. 3.3.3.2-g. The OS Init software shall copy files contained in the Flash file system into the DRAM file system after copying files contained in the EEPROM file system, overwriting any existing files in the DRAM file system.",6/30/05
ProjectE - TIM - 1011,Requirements 3.3.2.2-a & c Are Redundant - Establish and Initalize FSW,4,The requirement in 3.3.2.2-a is duplicated in requirement 3.3.2.2-c.,6/30/05
ProjectE - TIM - 1008,Missing Requirement for generating Reaction Wheel Commands in section 3.6.4,3,"Refer to paragraphs 3.6.4.1 PIID Controller, 3.6.4.2 Actuater Suite Reaction wheels are mentioned in the reference documents (section 2.2) and in the following sections: 3.6.1 GN&C Exec, 3.6.3.3 All Stellar Attitude Determination, and 3.7.5.12 Safe Mode Executive. However there is no attitude control requirement identified in section 3.6.4 to convert torque commands to the reaction wheel commands required to achieve that torque.",6/29/05
ProjectE - TIM - 1007,Inconsistent Terminology in section 3.6.4.3,3,"Refer to Paragraph 3.6.4.3, Thruster Suite. In 3.6.4.3.2 d 1) the torque null vector[0] is used in the following equation: K = pwCmd[0]/torque null vector[0], In d2) the following loop exists: Loop through indx equal to 1 through 3 performing the following: If pwCmd[indx]/torque null vector[indx] is greater than K, then set K equal to pwCmd[indx]/torque null vector[indx]. In d3) pwCmd = pwCmd - K*torque null vector d1 through d3 implies that both pwCmd and the torque null vector have 4 elements (0-3). The name ""torque null vector"" implies a vector with 3 elements.",6/29/05
ProjectE - TIM - 1006,Possible use an unnormalized vector as a row in a direction cosine matrix (DCM) in section 3.6.7.5.2,3,Refer to Paragraph: 3.6.7.5.2 Vector Tracking Reference Requirements In b. the first row of the Body to Target frame direction cosine matrix (DCM) is set to the configurable body frame aligned vector. In c. the first row of the Inertial to Target frame DCM is set to the inertial frame aligned target vector. The DCM row is not normalized.,6/29/05
ProjectE - TIM - 1005,Use of an undefined parameter in slew_cmd (section 3.6.7.2.2),3,"In paragraph 3.6.7.2.2 the slew_cmd is determined in step m as the omega vector multiplied by slew_timer/t1. Slew_timer is not defined. It should be the cycle timer mentioned in step k (Each cycle, the absolute slew reference software shall increment the cycle timer by the cycle period.)",6/29/05
ProjectE - TIM - 1004,Error in slew acceleration time (sections 3.6.7.2.2 & 3.6.7.4.2),3,"Paragraph: 3.6.7.2.2 & 3.6.7.4.2 In the Absolute Slew Requirements and the Relative Slew Requirements the equation for acc_time in 3.6.7.2.2f and 3.6.7.4.2c is give as follows: ""accel_time = (slew_dur - sqrt(slew_dur2 - 4*abs(rot_ang) / accel_cmd)) / 2"" The parameter slew_dur2 in the square root should be slew_dur ^2 (squared). A check of the SRS revealed that slew_dur2 only shows up twice in the SRS and is never defined as slew_dur^2.",6/29/05
ProjectE - TIM - 1003,Inconsistent Quaternion Convention in section 3.6,3,"Most quaternions in section 3.6 appear to contain the vector part in the first three elements and the scalar in the last element. For example 3.6.7.7.2 q_offpoint(0), (1), (2) contain the vector part of the quaternion. q_offpoint(3) contains the scalar part. However in 3.6.3.2.1 - 1)b the test ""or imu_Qi2b[0] > 1 when in all stellar state"" implies that the scalar is in the first element.",6/29/05
ProjectE - TIM - 1002,Inconsistent definition of units for input and outputs in section 3.6,4,Units are not consistently defined for GN&C SW input and output parameters. Example: 3.6.4.1.1 Inputs Current attitude quaternion. Current rate vector. Reference attitude quaternion. Reference rate vector. Feedforward torque per axis (may be a dynamic input or a configurable parameter).,6/29/05
ProjectE - TIM - 1001,Vague Configurable Parameters in section 3.6,3,"Throughout section 3.6 configurable parameters are used to specify constants, flags, gains, coefficients, limits, etc. However, the configurable parameters are mentioned with vague references which do not specifically identify the parameter. There is insufficient information given in the SRS to enable the definition of the complete set of configurable parameters. Examples of vague references to configurable parameters: --The addition of each torque contribution may be disabled or enabled by configurable parameters (3.6.3.3.2e), --Feedforward torque per axis (may be a dynamic input or a configurable parameter) (3.6.4.1.1 2), --If the zero position error flag (configurable parameter) is true, then set the position error vector equal to zero (3.6.4.1.2f).",6/29/05
